/* Code to decode the gimple tree flags. 

   Copyright (C) 2006 Free Software Foundation, Inc.
   Contributed by Kenneth Zadeck <zadeck@naturalbridge.com>

   This file is part of GCC.

   GCC is free software; you can redistribute it and/or modify it under
   the terms of the GNU General Public License as published by the Free
   Software Foundation; either version 2, or (at your option) any later
   version.

   GCC is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
   License for more details.

   You should have received a copy of the GNU General Public License
   along with GCC; see the file COPYING.  If not, write to the Free
   Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA
   02110-1301, USA.  */

/* This file is designed to be inlined into both the writing and the
   reading of the lto information.  What it does depends on the glue
   that put in front and at the end of this and how ADD_BASE_FLAG is
   defined. 

   For those interested in extra credit, this could also be used as
   the checking code to see if each flag is used correctly.  10 extra
   credit points will be given for the intrepid programmer who does
   this and is able to removes the comment that this was generated
   from in tree.h.  */

  START_CLASS_SWITCH ()
    START_CLASS_CASE (tcc_binary)
      ADD_CLASS_EXPR_FLAG (side_effects_flag)
      ADD_CLASS_EXPR_FLAG (volatile_flag)
      ADD_CLASS_EXPR_FLAG (readonly_flag)
      ADD_CLASS_EXPR_FLAG (constant_flag)
      ADD_CLASS_EXPR_FLAG (used_flag)
      ADD_CLASS_EXPR_FLAG (nowarning_flag)
    END_CLASS_CASE (tcc_binary)

    START_CLASS_CASE (tcc_comparison)
      ADD_CLASS_EXPR_FLAG (side_effects_flag)
      ADD_CLASS_EXPR_FLAG (volatile_flag)
      ADD_CLASS_EXPR_FLAG (readonly_flag)
      ADD_CLASS_EXPR_FLAG (constant_flag)
      ADD_CLASS_EXPR_FLAG (used_flag)
      ADD_CLASS_EXPR_FLAG (nowarning_flag)
    END_CLASS_CASE (tcc_comparison)

    START_CLASS_CASE (tcc_constant)
      ADD_CLASS_EXPR_FLAG (side_effects_flag)
      ADD_CLASS_EXPR_FLAG (static_flag)
      ADD_CLASS_EXPR_FLAG (readonly_flag)
      ADD_CLASS_EXPR_FLAG (constant_flag)
    END_CLASS_CASE (tcc_constant)

    START_CLASS_CASE (tcc_declaration)
      ADD_CLASS_DECL_FLAG (ignored_flag)
      ADD_CLASS_EXPR_FLAG (private_flag)
      ADD_CLASS_EXPR_FLAG (protected_flag)
      ADD_CLASS_EXPR_FLAG (side_effects_flag)
      ADD_CLASS_EXPR_FLAG (volatile_flag)
      ADD_CLASS_EXPR_FLAG (readonly_flag)
      ADD_CLASS_EXPR_FLAG (constant_flag)
      ADD_CLASS_EXPR_FLAG (unsigned_flag)
      ADD_CLASS_EXPR_FLAG (deprecated_flag)
      ADD_CLASS_EXPR_FLAG (used_flag)
    END_CLASS_CASE (tcc_declaration)

    START_CLASS_CASE (tcc_exceptional)
    END_CLASS_CASE (tcc_exceptional)

    START_CLASS_CASE (tcc_expression)
      ADD_CLASS_EXPR_FLAG (asm_written_flag)
      ADD_CLASS_EXPR_FLAG (side_effects_flag)
      ADD_CLASS_EXPR_FLAG (volatile_flag)
      ADD_CLASS_EXPR_FLAG (readonly_flag)
      ADD_CLASS_EXPR_FLAG (constant_flag)
      ADD_CLASS_EXPR_FLAG (used_flag)
      ADD_CLASS_EXPR_FLAG (nowarning_flag)
    END_CLASS_CASE (tcc_expression)

    START_CLASS_CASE (tcc_gimple_stmt)
      ADD_CLASS_EXPR_FLAG (asm_written_flag)
      ADD_CLASS_EXPR_FLAG (side_effects_flag)
      ADD_CLASS_EXPR_FLAG (volatile_flag)
      ADD_CLASS_EXPR_FLAG (readonly_flag)
      ADD_CLASS_EXPR_FLAG (constant_flag)
      ADD_CLASS_EXPR_FLAG (used_flag)
      ADD_CLASS_EXPR_FLAG (nowarning_flag)
    END_CLASS_CASE (tcc_gimple_stmt)

    START_CLASS_CASE (tcc_reference)
      ADD_CLASS_EXPR_FLAG (side_effects_flag)
      ADD_CLASS_EXPR_FLAG (volatile_flag)
      ADD_CLASS_EXPR_FLAG (readonly_flag)
      ADD_CLASS_EXPR_FLAG (constant_flag)
      ADD_CLASS_EXPR_FLAG (used_flag)
      ADD_CLASS_EXPR_FLAG (nowarning_flag)
    END_CLASS_CASE (tcc_reference)

    START_CLASS_CASE (tcc_statement)
      ADD_CLASS_EXPR_FLAG (asm_written_flag)
      ADD_CLASS_EXPR_FLAG (side_effects_flag)
      ADD_CLASS_EXPR_FLAG (volatile_flag)
      ADD_CLASS_EXPR_FLAG (readonly_flag)
      ADD_CLASS_EXPR_FLAG (constant_flag)
      ADD_CLASS_EXPR_FLAG (used_flag)
      ADD_CLASS_EXPR_FLAG (nowarning_flag)
    END_CLASS_CASE (tcc_statement)

    START_CLASS_CASE (tcc_type)
      ADD_CLASS_EXPR_FLAG (addressable_flag)
     /* We do not emit public_flag, which is
	overloaded here as TYPE_CACHED_VALUES_P.
	We do not stream the values cache, but
	instead reconstruct it as constants
	are internalized.  */
      ADD_CLASS_EXPR_FLAG (volatile_flag)
      ADD_CLASS_EXPR_FLAG (readonly_flag)
      ADD_CLASS_EXPR_FLAG (constant_flag)
      ADD_CLASS_EXPR_FLAG (unsigned_flag)
      ADD_CLASS_EXPR_FLAG (nothrow_flag)
      ADD_CLASS_EXPR_FLAG (saturating_flag)
      ADD_CLASS_TYPE_FLAG (needs_constructing_flag)
      ADD_CLASS_TYPE_FLAG (packed_flag)
      ADD_CLASS_TYPE_FLAG (restrict_flag)
      ADD_CLASS_TYPE_FLAG (user_align)
    END_CLASS_CASE (tcc_type)

    START_CLASS_CASE (tcc_unary)
      ADD_CLASS_EXPR_FLAG (side_effects_flag)
      ADD_CLASS_EXPR_FLAG (volatile_flag)
      ADD_CLASS_EXPR_FLAG (readonly_flag)
      ADD_CLASS_EXPR_FLAG (constant_flag)
      ADD_CLASS_EXPR_FLAG (used_flag)
      ADD_CLASS_EXPR_FLAG (nowarning_flag)
    END_CLASS_CASE (tcc_unary)

    START_CLASS_CASE (tcc_vl_exp)
      ADD_CLASS_EXPR_FLAG (asm_written_flag)
      ADD_CLASS_EXPR_FLAG (side_effects_flag)
      ADD_CLASS_EXPR_FLAG (volatile_flag)
      ADD_CLASS_EXPR_FLAG (readonly_flag)
      ADD_CLASS_EXPR_FLAG (constant_flag)
      ADD_CLASS_EXPR_FLAG (used_flag)
      ADD_CLASS_EXPR_FLAG (nowarning_flag)
    END_CLASS_CASE (tcc_vl_exp)
  END_CLASS_SWITCH ()

  START_EXPR_SWITCH ()
    START_EXPR_CASE (ABS_EXPR)
    END_EXPR_CASE (ABS_EXPR)
      
    START_EXPR_CASE (ADDR_EXPR)
      ADD_EXPR_FLAG (static_flag)
    END_EXPR_CASE (ADDR_EXPR)
      
    START_EXPR_CASE (ALIGN_INDIRECT_REF)
      ADD_EXPR_FLAG (nothrow_flag)
    END_EXPR_CASE (ALIGN_INDIRECT_REF)
      
    START_EXPR_CASE (ARRAY_RANGE_REF)
      ADD_EXPR_FLAG (nothrow_flag)
    END_EXPR_CASE (ARRAY_RANGE_REF)
      
    START_EXPR_CASE (ARRAY_REF)
      ADD_EXPR_FLAG (nothrow_flag)
    END_EXPR_CASE (ARRAY_REF)
      
    START_EXPR_CASE (ARRAY_TYPE)
      ADD_TYPE_FLAG (string_flag)
    END_EXPR_CASE (ARRAY_TYPE)
      
    START_EXPR_CASE (ASM_EXPR)
      ADD_EXPR_FLAG (static_flag)
      ADD_EXPR_FLAG (public_flag)
    END_EXPR_CASE (ASM_EXPR)
      
    START_EXPR_CASE (ASSERT_EXPR)
    END_EXPR_CASE (ASSERT_EXPR)
      
    START_EXPR_CASE (BIND_EXPR)
    END_EXPR_CASE (BIND_EXPR)
      
    START_EXPR_CASE (BIT_AND_EXPR)
    END_EXPR_CASE (BIT_AND_EXPR)
      
    START_EXPR_CASE (BIT_FIELD_REF)
      ADD_EXPR_FLAG (unsigned_flag)
    END_EXPR_CASE (BIT_FIELD_REF)
      
    START_EXPR_CASE (BIT_IOR_EXPR)
    END_EXPR_CASE (BIT_IOR_EXPR)
      
    START_EXPR_CASE (BIT_NOT_EXPR)
    END_EXPR_CASE (BIT_NOT_EXPR)
      
    START_EXPR_CASE (BIT_XOR_EXPR)
    END_EXPR_CASE (BIT_XOR_EXPR)
      
    START_EXPR_CASE (BLOCK)
      ADD_EXPR_FLAG (asm_written_flag)
    END_EXPR_CASE (BLOCK)
      
    START_EXPR_CASE (BOOLEAN_TYPE)
    END_EXPR_CASE (BOOLEAN_TYPE)
      
    START_EXPR_CASE (CALL_EXPR)
      ADD_EXPR_FLAG (addressable_flag)
      ADD_EXPR_FLAG (private_flag)
      ADD_EXPR_FLAG (protected_flag)
      ADD_EXPR_FLAG (nothrow_flag)
    END_EXPR_CASE (CALL_EXPR)
      
    START_EXPR_CASE (CASE_LABEL_EXPR)
    END_EXPR_CASE (CASE_LABEL_EXPR)
      
    START_EXPR_CASE (CATCH_EXPR)
    END_EXPR_CASE (CATCH_EXPR)
      
    START_EXPR_CASE (CEIL_DIV_EXPR)
    END_EXPR_CASE (CEIL_DIV_EXPR)
      
    START_EXPR_CASE (CEIL_MOD_EXPR)
    END_EXPR_CASE (CEIL_MOD_EXPR)
      
    START_EXPR_CASE (CHANGE_DYNAMIC_TYPE_EXPR)
    END_EXPR_CASE (CHANGE_DYNAMIC_TYPE_EXPR)

    START_EXPR_CASE (CLEANUP_POINT_EXPR)
    END_EXPR_CASE (CLEANUP_POINT_EXPR)
      
    START_EXPR_CASE (COMPLEX_CST)
      ADD_EXPR_FLAG (static_flag)
      ADD_EXPR_FLAG (public_flag)
    END_EXPR_CASE (COMPLEX_CST)

    START_EXPR_CASE (COMPLEX_EXPR)
    END_EXPR_CASE (COMPLEX_EXPR)
      
    START_EXPR_CASE (COMPLEX_TYPE)
    END_EXPR_CASE (COMPLEX_TYPE)
      
    START_EXPR_CASE (COMPONENT_REF)
    END_EXPR_CASE (COMPONENT_REF)
      
    START_EXPR_CASE (COMPOUND_EXPR)
    END_EXPR_CASE (COMPOUND_EXPR)
      
    START_EXPR_CASE (COND_EXPR)
    END_EXPR_CASE (COND_EXPR)
      
    START_EXPR_CASE (CONJ_EXPR)
    END_EXPR_CASE (CONJ_EXPR)
      
    START_EXPR_CASE (CONST_DECL)
    END_EXPR_CASE (CONST_DECL)
      
    START_EXPR_CASE (CONSTRUCTOR)
      ADD_EXPR_FLAG (addressable_flag)
      ADD_EXPR_FLAG (static_flag)
    END_EXPR_CASE (CONSTRUCTOR)

    START_EXPR_CASE (CONVERT_EXPR)
    END_EXPR_CASE (CONVERT_EXPR)
      
    START_EXPR_CASE (DECL_EXPR)
    END_EXPR_CASE (DECL_EXPR)
      
    START_EXPR_CASE (DOT_PROD_EXPR)
    END_EXPR_CASE (DOT_PROD_EXPR)
      
    START_EXPR_CASE (EH_FILTER_EXPR)
      ADD_EXPR_FLAG (static_flag)
    END_EXPR_CASE (EH_FILTER_EXPR)

    START_EXPR_CASE (ENUMERAL_TYPE)
    END_EXPR_CASE (EH_FILTER_EXPR)
      
    START_EXPR_CASE (EQ_EXPR)
    END_EXPR_CASE (EQ_EXPR)
      
    START_EXPR_CASE (ERROR_MARK)
    END_EXPR_CASE (ERROR_MARK)
      
    START_EXPR_CASE (EXACT_DIV_EXPR)
    END_EXPR_CASE (EXACT_DIV_EXPR)
      
    START_EXPR_CASE (EXC_PTR_EXPR)
    END_EXPR_CASE (EXC_PTR_EXPR)
      
    START_EXPR_CASE (EXIT_EXPR)
    END_EXPR_CASE (EXIT_EXPR)
      
    START_EXPR_CASE (FDESC_EXPR)
    END_EXPR_CASE (FDESC_EXPR)
      
    START_EXPR_CASE (FIELD_DECL)
      ADD_EXPR_FLAG (addressable_flag)
      ADD_DECL_FLAG (nonlocal_flag)		/* ??? */
      ADD_DECL_FLAG (virtual_flag)
      ADD_DECL_FLAG (ignored_flag)
      ADD_DECL_FLAG (abstract_flag)
      ADD_DECL_FLAG (artificial_flag)
      ADD_DECL_FLAG (user_align)
      ADD_DECL_FLAG (preserve_flag)		/* ??? */
      ADD_DECL_FLAG (debug_expr_is_from)	/* ??? */
      ADD_DECL_FLAG (decl_flag_1)
      ADD_DECL_FLAG (decl_flag_2) 
      ADD_DECL_FLAG (decl_flag_3)
      ADD_DECL_FLAG (no_tbaa_flag)		/* ??? */
    END_EXPR_CASE (FIELD_DECL)
      
    START_EXPR_CASE (FILTER_EXPR)
    END_EXPR_CASE (FILTER_EXPR)
      
    START_EXPR_CASE (FIXED_CONVERT_EXPR)
    END_EXPR_CASE (FIXED_CONVERT_EXPR)
      
    START_EXPR_CASE (FIXED_CST)
      ADD_EXPR_FLAG (static_flag)
      ADD_EXPR_FLAG (public_flag)
    END_EXPR_CASE (FIXED_CST)

    START_EXPR_CASE (FIXED_POINT_TYPE)
    END_EXPR_CASE (FIXED_POINT_TYPE)
      
    START_EXPR_CASE (FIX_TRUNC_EXPR)
    END_EXPR_CASE (FIX_TRUNC_EXPR)
      
    START_EXPR_CASE (FLOAT_EXPR)
    END_EXPR_CASE (FLOAT_EXPR)
      
    START_EXPR_CASE (FLOOR_DIV_EXPR)
    END_EXPR_CASE (FLOOR_DIV_EXPR)
      
    START_EXPR_CASE (FLOOR_MOD_EXPR)
    END_EXPR_CASE (FLOOR_MOD_EXPR)
      
    START_EXPR_CASE (FUNCTION_DECL)
      ADD_EXPR_FLAG (addressable_flag)
      ADD_EXPR_FLAG (static_flag)
      ADD_EXPR_FLAG (public_flag)
      ADD_EXPR_FLAG (asm_written_flag)
      ADD_EXPR_FLAG (nothrow_flag)
      ADD_DECL_FLAG (nonlocal_flag)
      ADD_DECL_FLAG (virtual_flag)
      ADD_DECL_FLAG (ignored_flag)
      ADD_DECL_FLAG (abstract_flag)
      ADD_DECL_FLAG (artificial_flag)
      ADD_DECL_FLAG (user_align)
      ADD_DECL_FLAG (preserve_flag)
      ADD_DECL_FLAG (debug_expr_is_from)  	/* ??? */
      ADD_DECL_FLAG (decl_flag_2)
      ADD_DECL_FLAG (no_tbaa_flag)		/* ??? */
      ADD_VIS_FLAG (in_system_header_flag)
      ADD_VIS_FLAG (weak_flag)
      ADD_VIS_FLAG (comdat_flag)
      ADD_VIS_FLAG_SIZE (visibility, 2);
      ADD_VIS_FLAG (visibility_specified)
      ADD_VIS_FLAG (one_only)
      /* #### FIXME
	The init priority itself appears to be
	stored external to the tree.  We appear
	to be dropping it on the floor.  */
      ADD_VIS_FLAG (init_priority_p)
      ADD_FUN_FLAG (static_ctor_flag)
      ADD_FUN_FLAG (static_dtor_flag)
      ADD_FUN_FLAG (uninlinable)
      ADD_FUN_FLAG (possibly_inlined)
      ADD_FUN_FLAG (novops_flag)
      ADD_FUN_FLAG (returns_twice_flag)
      ADD_FUN_FLAG (malloc_flag)
      ADD_FUN_FLAG (operator_new_flag)
      ADD_FUN_FLAG (pure_flag)
      ADD_FUN_FLAG (declared_inline_flag)
      ADD_FUN_FLAG (regdecl_flag)
      ADD_FUN_FLAG (inline_flag)
      ADD_FUN_FLAG (no_instrument_function_entry_exit)
      ADD_FUN_FLAG (no_limit_stack)
      ADD_FUN_FLAG(disregard_inline_limits)
    END_EXPR_CASE (FUNCTION_DECL)
      
    START_EXPR_CASE (FUNCTION_TYPE)
    END_EXPR_CASE (FUNCTION_TYPE)
      
    START_EXPR_CASE (GE_EXPR)
    END_EXPR_CASE (GE_EXPR)
      
    START_EXPR_CASE (GIMPLE_MODIFY_STMT)
    END_EXPR_CASE (GIMPLE_MODIFY_STMT)

    START_EXPR_CASE (GOTO_EXPR)
    END_EXPR_CASE (GOTO_EXPR)
      
    START_EXPR_CASE (GT_EXPR)
    END_EXPR_CASE (GT_EXPR)
      
    START_EXPR_CASE (IDENTIFIER_NODE)
      ADD_EXPR_FLAG (addressable_flag)
      ADD_EXPR_FLAG (static_flag)
      ADD_EXPR_FLAG (public_flag)
      ADD_EXPR_FLAG (used_flag)
      ADD_EXPR_FLAG (deprecated_flag)
    END_EXPR_CASE (IDENTIFIER_NODE)
      
    START_EXPR_CASE (IMAGPART_EXPR)
    END_EXPR_CASE (IMAGPART_EXPR)
      
    START_EXPR_CASE (INDIRECT_REF)
    END_EXPR_CASE (INDIRECT_REF)
      
    START_EXPR_CASE (INIT_EXPR)
    END_EXPR_CASE (INIT_EXPR)
      
    START_EXPR_CASE (INTEGER_CST)
      ADD_EXPR_FLAG (static_flag)
      ADD_EXPR_FLAG (public_flag)
    END_EXPR_CASE (INTEGER_CST)
      
    START_EXPR_CASE (INTEGER_TYPE)
      ADD_TYPE_FLAG (string_flag)
      ADD_TYPE_FLAG (no_force_blk_flag)
    END_EXPR_CASE (INTEGER_TYPE)
      
    START_EXPR_CASE (LABEL_DECL)
      ADD_EXPR_FLAG (addressable_flag)		/* TREE_ADDRESSABLE */
      ADD_EXPR_FLAG (side_effects_flag)		/* FORCED_LABEL */
      ADD_DECL_FLAG (nonlocal_flag)		/* DECL_NONLOCAL */
      ADD_DECL_FLAG (decl_flag_0)		/* DECL_ERROR_ISSUED */
    END_EXPR_CASE (LABEL_DECL)
      
    START_EXPR_CASE (LABEL_EXPR)
    END_EXPR_CASE (LABEL_EXPR)
      
    START_EXPR_CASE (LANG_TYPE)
    END_EXPR_CASE (LANG_TYPE)
      
    START_EXPR_CASE (LE_EXPR)
    END_EXPR_CASE (LE_EXPR)
      
    START_EXPR_CASE (LOOP_EXPR)
    END_EXPR_CASE (LOOP_EXPR)
      
    START_EXPR_CASE (LROTATE_EXPR)
    END_EXPR_CASE (LROTATE_EXPR)
      
    START_EXPR_CASE (LSHIFT_EXPR)
    END_EXPR_CASE (LSHIFT_EXPR)
      
    START_EXPR_CASE (LT_EXPR)
    END_EXPR_CASE (LT_EXPR)
      
    START_EXPR_CASE (LTGT_EXPR)
    END_EXPR_CASE (LTGT_EXPR)
      
    START_EXPR_CASE (MAX_EXPR)
    END_EXPR_CASE (MAX_EXPR)
      
    START_EXPR_CASE (MEMORY_PARTITION_TAG)
    END_EXPR_CASE (MEMORY_PARTITION_TAG)

    START_EXPR_CASE (METHOD_TYPE)
    END_EXPR_CASE (METHOD_TYPE)
      
    START_EXPR_CASE (MIN_EXPR)
    END_EXPR_CASE (MIN_EXPR)
      
    START_EXPR_CASE (MINUS_EXPR)
    END_EXPR_CASE (MINUS_EXPR)
      
    START_EXPR_CASE (MISALIGNED_INDIRECT_REF)
      ADD_EXPR_FLAG (nothrow_flag)
    END_EXPR_CASE (MISALIGNED_INDIRECT_REF)
      
    START_EXPR_CASE (MODIFY_EXPR)
    END_EXPR_CASE (MODIFY_EXPR)
      
    START_EXPR_CASE (MULT_EXPR)
    END_EXPR_CASE (MULT_EXPR)
      
    START_EXPR_CASE (NAME_MEMORY_TAG)
    END_EXPR_CASE (NAME_MEMORY_TAG)
      
    START_EXPR_CASE (NAMESPACE_DECL)
      ADD_EXPR_FLAG (public_flag)
      ADD_DECL_FLAG (nonlocal_flag)
      ADD_DECL_FLAG (ignored_flag)
      ADD_DECL_FLAG (abstract_flag)
      ADD_DECL_FLAG (artificial_flag)
      ADD_DECL_FLAG (preserve_flag)
      ADD_VIS_FLAG (in_system_header_flag)
      ADD_VIS_FLAG (weak_flag)				/* ??? */
      ADD_VIS_FLAG (comdat_flag)			/* ??? */
      ADD_VIS_FLAG_SIZE (visibility, 2);		/* ??? */
      ADD_VIS_FLAG (visibility_specified)		/* ??? */
    END_EXPR_CASE (NAMESPACE_DECL)
      
    START_EXPR_CASE (NE_EXPR)
    END_EXPR_CASE (NE_EXPR)
      
    START_EXPR_CASE (NEGATE_EXPR)
    END_EXPR_CASE (NEGATE_EXPR)
      
    START_EXPR_CASE (NON_LVALUE_EXPR)
    END_EXPR_CASE (NON_LVALUE_EXPR)
      
    START_EXPR_CASE (NOP_EXPR)
    END_EXPR_CASE (NOP_EXPR)
      
    START_EXPR_CASE (OBJ_TYPE_REF)
    END_EXPR_CASE (OBJ_TYPE_REF)
      
    START_EXPR_CASE (OFFSET_TYPE)
    END_EXPR_CASE (OFFSET_TYPE)
      
    START_EXPR_CASE (OMP_ATOMIC)
    END_EXPR_CASE (OMP_ATOMIC)
      
    START_EXPR_CASE (OMP_ATOMIC_LOAD)
    END_EXPR_CASE (OMP_ATOMIC_LOAD)
      
    START_EXPR_CASE (OMP_ATOMIC_STORE)
    END_EXPR_CASE (OMP_ATOMIC_STORE)
      
    START_EXPR_CASE (OMP_CLAUSE)
      ADD_EXPR_FLAG (public_flag)
    END_EXPR_CASE (OMP_CLAUSE)
      
    START_EXPR_CASE (OMP_CONTINUE)
    END_EXPR_CASE (OMP_CONTINUE)
      
    START_EXPR_CASE (OMP_CRITICAL)
    END_EXPR_CASE (OMP_CRITICAL)
      
    START_EXPR_CASE (OMP_FOR)
    END_EXPR_CASE (OMP_FOR)
      
    START_EXPR_CASE (OMP_MASTER)
    END_EXPR_CASE (OMP_MASTER)
      
    START_EXPR_CASE (OMP_ORDERED)
    END_EXPR_CASE (OMP_ORDERED)
      
    START_EXPR_CASE (OMP_PARALLEL)
      ADD_EXPR_FLAG (private_flag)
    END_EXPR_CASE (OMP_PARALLEL)
      
    START_EXPR_CASE (OMP_RETURN)
      ADD_EXPR_FLAG (private_flag)
    END_EXPR_CASE (OMP_RETURN)
      
    START_EXPR_CASE (OMP_SECTION)
      ADD_EXPR_FLAG (private_flag)
    END_EXPR_CASE (OMP_SECTION)
      
    START_EXPR_CASE (OMP_SECTIONS)
    END_EXPR_CASE (OMP_SECTIONS)
      
    START_EXPR_CASE (OMP_SECTIONS_SWITCH)
      ADD_EXPR_FLAG (private_flag)
    END_EXPR_CASE (OMP_SECTIONS_SWITCH)
      
    START_EXPR_CASE (OMP_SINGLE)
    END_EXPR_CASE (OMP_SINGLE)
      
    START_EXPR_CASE (OMP_TASK)
    END_EXPR_CASE (OMP_TASK)
      
    START_EXPR_CASE (ORDERED_EXPR)
    END_EXPR_CASE (ORDERED_EXPR)
      
    START_EXPR_CASE (PARM_DECL)
      ADD_EXPR_FLAG (addressable_flag)
      ADD_DECL_FLAG (nonlocal_flag)
      ADD_DECL_FLAG (virtual_flag)
      ADD_DECL_FLAG (abstract_flag)
      ADD_DECL_FLAG (artificial_flag)
      ADD_DECL_FLAG (decl_flag_0)
      ADD_DECL_FLAG (decl_flag_2)
      ADD_DECL_FLAG (decl_flag_3)
      ADD_DECL_FLAG (gimple_reg_flag)
    END_EXPR_CASE (PARM_DECL)
      
    START_EXPR_CASE (PHI_NODE)
      ADD_EXPR_FLAG (asm_written_flag)
    END_EXPR_CASE (PHI_NODE)
      
    START_EXPR_CASE (PLACEHOLDER_EXPR)
    END_EXPR_CASE (PLACEHOLDER_EXPR)
      
    START_EXPR_CASE (PAREN_EXPR)
    END_EXPR_CASE (PAREN_EXPR)

    START_EXPR_CASE (PLUS_EXPR)
    END_EXPR_CASE (PLUS_EXPR)

    START_EXPR_CASE (POINTER_PLUS_EXPR)
    END_EXPR_CASE (POINTER_PLUS_EXPR)
      
    START_EXPR_CASE (POINTER_TYPE)
      ADD_EXPR_FLAG (static_flag)
    END_EXPR_CASE (POINTER_TYPE)
      
    START_EXPR_CASE (POLYNOMIAL_CHREC)
    END_EXPR_CASE (POLYNOMIAL_CHREC)
      
    START_EXPR_CASE (POSTDECREMENT_EXPR)
    END_EXPR_CASE (POSTDECREMENT_EXPR)
      
    START_EXPR_CASE (POSTINCREMENT_EXPR)
    END_EXPR_CASE (POSTINCREMENT_EXPR)
      
    START_EXPR_CASE (PREDECREMENT_EXPR)
    END_EXPR_CASE (PREDECREMENT_EXPR)
      
    START_EXPR_CASE (PREDICT_EXPR)
    END_EXPR_CASE (PREDICT_EXPR)

    START_EXPR_CASE (PREINCREMENT_EXPR)
    END_EXPR_CASE (PREINCREMENT_EXPR)
      
    START_EXPR_CASE (QUAL_UNION_TYPE)
      ADD_EXPR_FLAG (asm_written_flag)
      ADD_TYPE_FLAG (no_force_blk_flag)
    END_EXPR_CASE (QUAL_UNION_TYPE)
      
    START_EXPR_CASE (RANGE_EXPR)
    END_EXPR_CASE (RANGE_EXPR)
      
    START_EXPR_CASE (RDIV_EXPR)
    END_EXPR_CASE (RDIV_EXPR)
      
    START_EXPR_CASE (REAL_CST)
      ADD_EXPR_FLAG (static_flag)
      ADD_EXPR_FLAG (public_flag)
    END_EXPR_CASE (REAL_CST)
      
    START_EXPR_CASE (REALIGN_LOAD_EXPR)
    END_EXPR_CASE (REALIGN_LOAD_EXPR)
      
    START_EXPR_CASE (REALPART_EXPR)
    END_EXPR_CASE (REALPART_EXPR)
      
    START_EXPR_CASE (REAL_TYPE)
    END_EXPR_CASE (REAL_TYPE)
      
    START_EXPR_CASE (RECORD_TYPE)
      ADD_EXPR_FLAG (asm_written_flag)
      ADD_TYPE_FLAG (no_force_blk_flag)
    END_EXPR_CASE (RECORD_TYPE)
      
    START_EXPR_CASE (REDUC_MAX_EXPR)
    END_EXPR_CASE (REDUC_MAX_EXPR)
      
    START_EXPR_CASE (REDUC_MIN_EXPR)
    END_EXPR_CASE (REDUC_MIN_EXPR)
      
    START_EXPR_CASE (REDUC_PLUS_EXPR)
    END_EXPR_CASE (REDUC_PLUS_EXPR)
      
    START_EXPR_CASE (REFERENCE_TYPE)
      ADD_EXPR_FLAG (static_flag)
    END_EXPR_CASE (REFERENCE_TYPE)
      
    START_EXPR_CASE (RESULT_DECL)
      /* ### Missing flags when used as declaration, not expression. */
      ADD_DECL_FLAG (gimple_reg_flag)

    END_EXPR_CASE (RESULT_DECL)
      
    START_EXPR_CASE (RESX_EXPR)
    END_EXPR_CASE (RESX_EXPR)
      
    START_EXPR_CASE (RETURN_EXPR)
    END_EXPR_CASE (RETURN_EXPR)
      
    START_EXPR_CASE (ROUND_DIV_EXPR)
    END_EXPR_CASE (ROUND_DIV_EXPR)
      
    START_EXPR_CASE (ROUND_MOD_EXPR)
    END_EXPR_CASE (ROUND_MOD_EXPR)
      
    START_EXPR_CASE (RROTATE_EXPR)
    END_EXPR_CASE (RROTATE_EXPR)
      
    START_EXPR_CASE (RSHIFT_EXPR)
    END_EXPR_CASE (RSHIFT_EXPR)
      
    START_EXPR_CASE (SAVE_EXPR)
      ADD_EXPR_FLAG (public_flag)
    END_EXPR_CASE (SAVE_EXPR)
      
    START_EXPR_CASE (SCEV_KNOWN)
    END_EXPR_CASE (SCEV_KNOWN)
      
    START_EXPR_CASE (SCEV_NOT_KNOWN)
    END_EXPR_CASE (SCEV_NOT_KNOWN)
      
    START_EXPR_CASE (SSA_NAME)
      ADD_EXPR_FLAG (asm_written_flag)
      ADD_EXPR_FLAG (nothrow_flag)
      ADD_EXPR_FLAG (volatile_flag)
      ADD_EXPR_FLAG (default_def_flag)
    END_EXPR_CASE (SSA_NAME)
      
    START_EXPR_CASE (STATEMENT_LIST)
    END_EXPR_CASE (STATEMENT_LIST)
      
    START_EXPR_CASE (STRING_CST)
    END_EXPR_CASE (STRING_CST)
      
    START_EXPR_CASE (SWITCH_EXPR)
    END_EXPR_CASE (SWITCH_EXPR)
      
    START_EXPR_CASE (SYMBOL_MEMORY_TAG)
    END_EXPR_CASE (SYMBOL_MEMORY_TAG)
      
    START_EXPR_CASE (TARGET_EXPR)
      ADD_EXPR_FLAG (static_flag)
    END_EXPR_CASE (TARGET_EXPR)
      
    START_EXPR_CASE (TARGET_MEM_REF)
    END_EXPR_CASE (TARGET_MEM_REF)
      
    /* ### The necessity of most of these flags is questionable.  */
    START_EXPR_CASE (TRANSLATION_UNIT_DECL)
      ADD_EXPR_FLAG (public_flag)
      ADD_DECL_FLAG (nonlocal_flag)
      ADD_DECL_FLAG (ignored_flag)
      ADD_DECL_FLAG (abstract_flag)
      ADD_DECL_FLAG (artificial_flag)
      ADD_DECL_FLAG (preserve_flag)
      ADD_VIS_FLAG (in_system_header_flag)
      ADD_VIS_FLAG (weak_flag)
      ADD_VIS_FLAG (comdat_flag)
      ADD_VIS_FLAG_SIZE (visibility, 2);
      ADD_VIS_FLAG (visibility_specified)
    END_EXPR_CASE (TRANSLATION_UNIT_DECL)
      
    START_EXPR_CASE (TREE_BINFO)
      ADD_EXPR_FLAG (static_flag)
    END_EXPR_CASE (TREE_BINFO)
      
    START_EXPR_CASE (TREE_LIST)
    END_EXPR_CASE (TREE_LIST)
      
    START_EXPR_CASE (TREE_VEC)
    END_EXPR_CASE (TREE_VEC)
      
    START_EXPR_CASE (TRUNC_DIV_EXPR)
    END_EXPR_CASE (TRUNC_DIV_EXPR)
      
    START_EXPR_CASE (TRUNC_MOD_EXPR)
    END_EXPR_CASE (TRUNC_MOD_EXPR)
      
    START_EXPR_CASE (TRUTH_AND_EXPR)
    END_EXPR_CASE (TRUTH_AND_EXPR)
      
    START_EXPR_CASE (TRUTH_ANDIF_EXPR)
    END_EXPR_CASE (TRUTH_ANDIF_EXPR)
      
    START_EXPR_CASE (TRUTH_NOT_EXPR)
    END_EXPR_CASE (TRUTH_NOT_EXPR)
      
    START_EXPR_CASE (TRUTH_OR_EXPR)
    END_EXPR_CASE (TRUTH_OR_EXPR)
      
    START_EXPR_CASE (TRUTH_ORIF_EXPR)
    END_EXPR_CASE (TRUTH_ORIF_EXPR)
      
    START_EXPR_CASE (TRUTH_XOR_EXPR)
    END_EXPR_CASE (TRUTH_XOR_EXPR)
      
    START_EXPR_CASE (TRY_CATCH_EXPR)
    END_EXPR_CASE (TRY_CATCH_EXPR)
      
    START_EXPR_CASE (TRY_FINALLY_EXPR)
    END_EXPR_CASE (TRY_FINALLY_EXPR)
      
    START_EXPR_CASE (TYPE_DECL)
      ADD_DECL_FLAG (nonlocal_flag)   			/* ??? */
      ADD_DECL_FLAG (ignored_flag)
      ADD_DECL_FLAG (abstract_flag)
      ADD_DECL_FLAG (artificial_flag)
      /* ### Do we need  user_align, preserve_flag, debug_expr_is_from ??? */
      ADD_DECL_FLAG (decl_flag_2)
      ADD_DECL_FLAG (no_tbaa_flag)   /* ??? */
      ADD_VIS_FLAG (in_system_header_flag)
      /* ### Do we need weak_flag, visibility_specified, visibility ??? */
    END_EXPR_CASE (TYPE_DECL)
      
    START_EXPR_CASE (UNEQ_EXPR)
    END_EXPR_CASE (UNEQ_EXPR)
      
    START_EXPR_CASE (UNGE_EXPR)
    END_EXPR_CASE (UNGE_EXPR)
      
    START_EXPR_CASE (UNGT_EXPR)
    END_EXPR_CASE (UNGT_EXPR)
      
    START_EXPR_CASE (UNION_TYPE)
      ADD_EXPR_FLAG (asm_written_flag)
      ADD_TYPE_FLAG (no_force_blk_flag)
      ADD_TYPE_FLAG (transparent_union_flag)
    END_EXPR_CASE (UNION_TYPE)
      
    START_EXPR_CASE (UNLE_EXPR)
    END_EXPR_CASE (UNLE_EXPR)
      
    START_EXPR_CASE (UNLT_EXPR)
    END_EXPR_CASE (UNLT_EXPR)
      
    START_EXPR_CASE (UNORDERED_EXPR)
    END_EXPR_CASE (UNORDERED_EXPR)
      
    START_EXPR_CASE (VA_ARG_EXPR)
    END_EXPR_CASE (VA_ARG_EXPR)
      
    START_EXPR_CASE (VAR_DECL)
      ADD_EXPR_FLAG (addressable_flag)
      ADD_EXPR_FLAG (static_flag)
      ADD_EXPR_FLAG (public_flag)
      ADD_EXPR_FLAG (asm_written_flag)
      ADD_DECL_FLAG (nonlocal_flag)
      ADD_DECL_FLAG (virtual_flag)
      ADD_DECL_FLAG (abstract_flag)
      ADD_DECL_FLAG (artificial_flag)
      ADD_DECL_FLAG (decl_flag_0)
      ADD_DECL_FLAG (decl_flag_2)
      ADD_DECL_FLAG (decl_flag_3)
      ADD_DECL_FLAG (gimple_reg_flag)
      /* ### no_tbaa_flag ??? */
      ADD_VIS_FLAG (defer_output)
      ADD_VIS_FLAG (hard_register)
      ADD_VIS_FLAG (thread_local)
      ADD_VIS_FLAG (common_flag)
      ADD_VIS_FLAG (dllimport_flag)
      ADD_VIS_FLAG (based_on_restrict_p)
      ADD_VIS_FLAG (shadowed_for_var_p)
      ADD_VIS_FLAG (in_system_header_flag)
      ADD_VIS_FLAG (weak_flag)
      ADD_VIS_FLAG (seen_in_bind_expr)
      ADD_VIS_FLAG (comdat_flag)
      /* ### Do we need visibility_specified ??? */
      ADD_VIS_FLAG_SIZE (visibility, 2)
      /* ### We need to serialize the init priority itself.  */
      ADD_VIS_FLAG (init_priority_p)
      ADD_VIS_FLAG_SIZE (tls_model, 3)
    END_EXPR_CASE (VAR_DECL)
      
    START_EXPR_CASE (VEC_COND_EXPR)
    END_EXPR_CASE (VEC_COND_EXPR)
      
    START_EXPR_CASE (VEC_LSHIFT_EXPR)
    END_EXPR_CASE (VEC_LSHIFT_EXPR)
      
    START_EXPR_CASE (VEC_RSHIFT_EXPR)
    END_EXPR_CASE (VEC_RSHIFT_EXPR)
      
    START_EXPR_CASE (VEC_WIDEN_MULT_HI_EXPR)
    END_EXPR_CASE (VEC_WIDEN_MULT_HI_EXPR)

    START_EXPR_CASE (VEC_WIDEN_MULT_LO_EXPR)
    END_EXPR_CASE (VEC_WIDEN_MULT_LO_EXPR)

    START_EXPR_CASE (VEC_UNPACK_HI_EXPR)
    END_EXPR_CASE (VEC_UNPACK_HI_EXPR)

    START_EXPR_CASE (VEC_UNPACK_LO_EXPR)
    END_EXPR_CASE (VEC_UNPACK_LO_EXPR)

    START_EXPR_CASE (VEC_UNPACK_FLOAT_HI_EXPR)
    END_EXPR_CASE (VEC_UNPACK_FLOAT_HI_EXPR)

    START_EXPR_CASE (VEC_UNPACK_FLOAT_LO_EXPR)
    END_EXPR_CASE (VEC_UNPACK_FLOAT_LO_EXPR)

    START_EXPR_CASE (VEC_PACK_TRUNC_EXPR)
    END_EXPR_CASE (VEC_PACK_TRUNC_EXPR)

    START_EXPR_CASE (VEC_PACK_SAT_EXPR)
    END_EXPR_CASE (VEC_PACK_SAT_EXPR)

    START_EXPR_CASE (VEC_PACK_FIX_TRUNC_EXPR)
    END_EXPR_CASE (VEC_PACK_FIX_TRUNC_EXPR)

    START_EXPR_CASE (VEC_EXTRACT_EVEN_EXPR)
    END_EXPR_CASE (VEC_EXTRACT_EVEN_EXPR)

    START_EXPR_CASE (VEC_EXTRACT_ODD_EXPR)
    END_EXPR_CASE (VEC_EXTRACT_ODD_EXPR)

    START_EXPR_CASE (VEC_INTERLEAVE_HIGH_EXPR)
    END_EXPR_CASE (VEC_INTERLEAVE_HIGH_EXPR)

    START_EXPR_CASE (VEC_INTERLEAVE_LOW_EXPR)
    END_EXPR_CASE (VEC_INTERLEAVE_LOW_EXPR)

    START_EXPR_CASE (VECTOR_CST)
      ADD_EXPR_FLAG (static_flag)
      ADD_EXPR_FLAG (public_flag)
    END_EXPR_CASE (VECTOR_CST)
      
    START_EXPR_CASE (VECTOR_TYPE)
    END_EXPR_CASE (VECTOR_TYPE)
      
    START_EXPR_CASE (VIEW_CONVERT_EXPR)
    END_EXPR_CASE (VIEW_CONVERT_EXPR)
      
    START_EXPR_CASE (VOID_TYPE)
    END_EXPR_CASE (VOID_TYPE)
      
    START_EXPR_CASE (WIDEN_MULT_EXPR)
    END_EXPR_CASE (WIDEN_MULT_EXPR)
      
    START_EXPR_CASE (WIDEN_SUM_EXPR)
    END_EXPR_CASE (WIDEN_SUM_EXPR)
      
    START_EXPR_CASE (WITH_CLEANUP_EXPR)
      ADD_EXPR_FLAG (static_flag)
    END_EXPR_CASE (WITH_CLEANUP_EXPR)
      
    START_EXPR_CASE (WITH_SIZE_EXPR)
    END_EXPR_CASE (WITH_SIZE_EXPR)
  END_EXPR_SWITCH ()
