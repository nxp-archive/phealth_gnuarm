/* Declarations and definitions of codes relating to the 
   encoding of tree and gimple into the object files.

   Copyright (C) 2009 Free Software Foundation, Inc.
   Contributed by Kenneth Zadeck <zadeck@naturalbridge.com>

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 3, or (at your option) any later
version.

GCC is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with GCC; see the file COPYING3.  If not see
<http://www.gnu.org/licenses/>.  */

/* All of the tree codes can be divided into four groups:

   1) Those that do not occur at lto generation and reading time.
      These are not listed here, they are simply hit as the default
      case in several case statements.  

   2) The tree codes whose portable form can completely mechanically
      derived from the various tables within the compiler.  These tags
      are in the block controlled by the preprocessor symbol
      TREE_SINGLE_MECHANICAL_TRUE.

   3) The tree codes whose portable form cannot be generated from the 
      tables but still have only a single variation.  These tags are
      in the block controlled by TREE_SINGLE_MECHANICAL_FALSE.

   4) The tree codes where there are multiple lto records for a
      single tree form.  These not only cannot be generated
      mechanically but there is a many to one mapping from the lto
      record type to the tree code.  These tags are
      in the block controlled by TREE_MULTIPLE.

   This file is used to generate case labels for the
   TREE_SINGLE_MECHANICAL_TRUE class and the lto record to tree_code
   for TREE_MULTIPLE for TREE_SINGLE_MECHANICAL_TRUE and
   TREE_SINGLE_MECHANICAL_FALSE classes.

   The tree code to lto record mapping can be generated for
   TREE_SINGLE_MECHANICAL_TRUE and TREE_SINGLE_MECHANICAL_FALSE
   classes.  */

#ifdef TREE_MULTIPLE
  MAP_EXPR_TAGS(BIT_FIELD_REF, LTO_bit_field_ref0, 2)
  MAP_EXPR_TAGS(CASE_LABEL_EXPR, LTO_case_label_expr0, 4)
  MAP_EXPR_TAGS(COMPLEX_CST, LTO_complex_cst0, 2)
  MAP_EXPR_TAGS(VAR_DECL, LTO_var_decl0, 2)
  MAP_EXPR_TAGS(LABEL_DECL, LTO_label_decl0, 2)
  MAP_EXPR_TAGS(VECTOR_CST, LTO_vector_cst0, 2)
  MAP_EXPR_TAGS(FUNCTION_DECL, LTO_function_decl0, 2)
#endif

#ifdef TREE_SINGLE_MECHANICAL_FALSE
  MAP_EXPR_TAG(ARRAY_RANGE_REF, LTO_array_range_ref)
  MAP_EXPR_TAG(ARRAY_REF, LTO_array_ref)
  MAP_EXPR_TAG(ARRAY_TYPE, LTO_array_type)
  MAP_EXPR_TAG(BLOCK, LTO_block)
  MAP_EXPR_TAG(BOOLEAN_TYPE, LTO_boolean_type)
  MAP_EXPR_TAG(COMPLEX_TYPE, LTO_complex_type)
  MAP_EXPR_TAG(COMPONENT_REF, LTO_component_ref)
  MAP_EXPR_TAG(CONST_DECL, LTO_const_decl)
  MAP_EXPR_TAG(CONSTRUCTOR, LTO_constructor)
  MAP_EXPR_TAG(ENUMERAL_TYPE, LTO_enumeral_type)
  MAP_EXPR_TAG(FIELD_DECL, LTO_field_decl)
  MAP_EXPR_TAG(FIXED_CST, LTO_fixed_cst)
  MAP_EXPR_TAG(FIXED_POINT_TYPE, LTO_fixed_point_type)
  MAP_EXPR_TAG(FUNCTION_TYPE, LTO_function_type)
  MAP_EXPR_TAG(IDENTIFIER_NODE, LTO_identifier_node)
  MAP_EXPR_TAG(INTEGER_CST, LTO_integer_cst)
  MAP_EXPR_TAG(INTEGER_TYPE, LTO_integer_type)
  MAP_EXPR_TAG(METHOD_TYPE, LTO_method_type)
  MAP_EXPR_TAG(NAMESPACE_DECL, LTO_namespace_decl)
  MAP_EXPR_TAG(OFFSET_TYPE, LTO_offset_type)
  MAP_EXPR_TAG(PARM_DECL, LTO_parm_decl)
  MAP_EXPR_TAG(POINTER_TYPE, LTO_pointer_type)
  MAP_EXPR_TAG(QUAL_UNION_TYPE, LTO_qual_union_type)
  MAP_EXPR_TAG(RANGE_EXPR, LTO_range_expr)
  MAP_EXPR_TAG(REAL_CST, LTO_real_cst)
  MAP_EXPR_TAG(REAL_TYPE, LTO_real_type)
  MAP_EXPR_TAG(RECORD_TYPE, LTO_record_type)
  MAP_EXPR_TAG(REFERENCE_TYPE, LTO_reference_type)
  MAP_EXPR_TAG(RESULT_DECL, LTO_result_decl)
  MAP_EXPR_TAG(RESX_EXPR, LTO_resx_expr)
  MAP_EXPR_TAG(SSA_NAME, LTO_ssa_name)
  MAP_EXPR_TAG(STRING_CST, LTO_string_cst)
  MAP_EXPR_TAG(TRANSLATION_UNIT_DECL, LTO_translation_unit_decl)
  MAP_EXPR_TAG(TREE_BINFO, LTO_tree_binfo)
  MAP_EXPR_TAG(TREE_LIST, LTO_tree_list)
  MAP_EXPR_TAG(TREE_VEC, LTO_tree_vec)
  MAP_EXPR_TAG(TYPE_DECL, LTO_type_decl)
  MAP_EXPR_TAG(UNION_TYPE, LTO_union_type)
  MAP_EXPR_TAG(VECTOR_TYPE, LTO_vector_type)
  MAP_EXPR_TAG(VOID_TYPE, LTO_void_type)
#endif /* TREE_SINGLE_MECHANICAL_FALSE */

#ifdef TREE_SINGLE_MECHANICAL_TRUE
  MAP_EXPR_TAG(ABS_EXPR, LTO_abs_expr)
  MAP_EXPR_TAG(ADDR_EXPR, LTO_addr_expr)
  MAP_EXPR_TAG(ALIGN_INDIRECT_REF, LTO_align_indirect_ref)
  MAP_EXPR_TAG(ASSERT_EXPR, LTO_assert_expr)
  MAP_EXPR_TAG(BIT_AND_EXPR, LTO_bit_and_expr)
  MAP_EXPR_TAG(BIT_IOR_EXPR, LTO_bit_ior_expr)
  MAP_EXPR_TAG(BIT_NOT_EXPR, LTO_bit_not_expr)
  MAP_EXPR_TAG(BIT_XOR_EXPR, LTO_bit_xor_expr)
  MAP_EXPR_TAG(CEIL_DIV_EXPR, LTO_ceil_div_expr)
  MAP_EXPR_TAG(CEIL_MOD_EXPR, LTO_ceil_mod_expr)
  MAP_EXPR_TAG(COMPLEX_EXPR, LTO_complex_expr)
  MAP_EXPR_TAG(COMPOUND_EXPR, LTO_compound_expr)
  MAP_EXPR_TAG(COMPOUND_LITERAL_EXPR, LTO_compound_literal_expr)
  MAP_EXPR_TAG(COND_EXPR, LTO_cond_expr)
  MAP_EXPR_TAG(CONJ_EXPR, LTO_conj_expr)
  MAP_EXPR_TAG(CONVERT_EXPR, LTO_convert_expr)
  MAP_EXPR_TAG(DECL_EXPR, LTO_decl_expr)
  MAP_EXPR_TAG(DOT_PROD_EXPR, LTO_dot_prod_expr)
  MAP_EXPR_TAG(EQ_EXPR, LTO_eq_expr)
  MAP_EXPR_TAG(EXACT_DIV_EXPR, LTO_exact_div_expr)
  MAP_EXPR_TAG(EXC_PTR_EXPR, LTO_exc_ptr_expr)
  MAP_EXPR_TAG(FILTER_EXPR, LTO_filter_expr)
  MAP_EXPR_TAG(FIXED_CONVERT_EXPR, LTO_fixed_convert_expr)
  MAP_EXPR_TAG(FIX_TRUNC_EXPR, LTO_fix_trunc_expr)
  MAP_EXPR_TAG(FLOAT_EXPR, LTO_float_expr)
  MAP_EXPR_TAG(FLOOR_DIV_EXPR, LTO_floor_div_expr)
  MAP_EXPR_TAG(FLOOR_MOD_EXPR, LTO_floor_mod_expr)
  MAP_EXPR_TAG(GE_EXPR, LTO_ge_expr)
  MAP_EXPR_TAG(GT_EXPR, LTO_gt_expr)
  MAP_EXPR_TAG(IMAGPART_EXPR, LTO_imagpart_expr)
  MAP_EXPR_TAG(INDIRECT_REF, LTO_indirect_ref)
  MAP_EXPR_TAG(LE_EXPR, LTO_le_expr)
  MAP_EXPR_TAG(LROTATE_EXPR, LTO_lrotate_expr)
  MAP_EXPR_TAG(LSHIFT_EXPR, LTO_lshift_expr)
  MAP_EXPR_TAG(LT_EXPR, LTO_lt_expr)
  MAP_EXPR_TAG(LTGT_EXPR, LTO_ltgt_expr)
  MAP_EXPR_TAG(MAX_EXPR, LTO_max_expr)
  MAP_EXPR_TAG(MIN_EXPR, LTO_min_expr)
  MAP_EXPR_TAG(MINUS_EXPR, LTO_minus_expr)
  MAP_EXPR_TAG(MISALIGNED_INDIRECT_REF, LTO_misaligned_indirect_ref)
  MAP_EXPR_TAG(MULT_EXPR, LTO_mult_expr)
  MAP_EXPR_TAG(NE_EXPR, LTO_ne_expr)
  MAP_EXPR_TAG(NEGATE_EXPR, LTO_negate_expr)
  MAP_EXPR_TAG(NON_LVALUE_EXPR, LTO_non_lvalue_expr)
  MAP_EXPR_TAG(NOP_EXPR, LTO_nop_expr)
  MAP_EXPR_TAG(OBJ_TYPE_REF, LTO_obj_type_ref)
  MAP_EXPR_TAG(ORDERED_EXPR, LTO_ordered_expr)
  MAP_EXPR_TAG(PAREN_EXPR, LTO_paren_expr)
  MAP_EXPR_TAG(POINTER_PLUS_EXPR, LTO_pointer_plus_expr)
  MAP_EXPR_TAG(PLUS_EXPR, LTO_plus_expr)
  MAP_EXPR_TAG(PREDICT_EXPR, LTO_predict_expr)
  MAP_EXPR_TAG(RDIV_EXPR, LTO_rdiv_expr)
  MAP_EXPR_TAG(REALIGN_LOAD_EXPR, LTO_realign_load_expr)
  MAP_EXPR_TAG(REALPART_EXPR, LTO_realpart_expr)
  MAP_EXPR_TAG(REDUC_MAX_EXPR, LTO_reduc_max_expr)
  MAP_EXPR_TAG(REDUC_MIN_EXPR, LTO_reduc_min_expr)
  MAP_EXPR_TAG(REDUC_PLUS_EXPR, LTO_reduc_plus_expr)
  MAP_EXPR_TAG(ROUND_DIV_EXPR, LTO_round_div_expr)
  MAP_EXPR_TAG(ROUND_MOD_EXPR, LTO_round_mod_expr)
  MAP_EXPR_TAG(RROTATE_EXPR, LTO_rrotate_expr)
  MAP_EXPR_TAG(RSHIFT_EXPR, LTO_rshift_expr)
  MAP_EXPR_TAG(TRUNC_DIV_EXPR, LTO_trunc_div_expr)
  MAP_EXPR_TAG(TRUNC_MOD_EXPR, LTO_trunc_mod_expr)
  MAP_EXPR_TAG(TRUTH_AND_EXPR, LTO_truth_and_expr)
  MAP_EXPR_TAG(TRUTH_NOT_EXPR, LTO_truth_not_expr)
  MAP_EXPR_TAG(TRUTH_OR_EXPR, LTO_truth_or_expr)
  MAP_EXPR_TAG(TRUTH_XOR_EXPR, LTO_truth_xor_expr)
  MAP_EXPR_TAG(UNEQ_EXPR, LTO_uneq_expr)
  MAP_EXPR_TAG(UNGE_EXPR, LTO_unge_expr)
  MAP_EXPR_TAG(UNGT_EXPR, LTO_ungt_expr)
  MAP_EXPR_TAG(UNLE_EXPR, LTO_unle_expr)
  MAP_EXPR_TAG(UNLT_EXPR, LTO_unlt_expr)
  MAP_EXPR_TAG(UNORDERED_EXPR, LTO_unordered_expr)
  MAP_EXPR_TAG(VEC_COND_EXPR, LTO_vec_cond_expr)
  MAP_EXPR_TAG(VEC_LSHIFT_EXPR, LTO_vec_lshift_expr)
  MAP_EXPR_TAG(VEC_RSHIFT_EXPR, LTO_vec_rshift_expr)
  MAP_EXPR_TAG(VIEW_CONVERT_EXPR, LTO_view_convert_expr)
  MAP_EXPR_TAG(WIDEN_MULT_EXPR, LTO_widen_mult_expr)
  MAP_EXPR_TAG(WIDEN_SUM_EXPR, LTO_widen_sum_expr)
  MAP_EXPR_TAG(WITH_SIZE_EXPR, LTO_with_size_expr)
#endif /* TREE_SINGLE_MECHANICAL_TRUE  */

#ifdef GIMPLE_CODES
  MAP_STMT_TAG (GIMPLE_ASM, LTO_gimple_asm)
  MAP_STMT_TAG (GIMPLE_ASSIGN, LTO_gimple_assign)
  MAP_STMT_TAG (GIMPLE_CALL, LTO_gimple_call)
  MAP_STMT_TAG (GIMPLE_COND, LTO_gimple_cond)
  MAP_STMT_TAG (GIMPLE_GOTO, LTO_gimple_goto)
  MAP_STMT_TAG (GIMPLE_LABEL, LTO_gimple_label)
  MAP_STMT_TAG (GIMPLE_PHI, LTO_gimple_phi)
  MAP_STMT_TAG (GIMPLE_PREDICT, LTO_gimple_predict)
  MAP_STMT_TAG (GIMPLE_RETURN, LTO_gimple_return)
  MAP_STMT_TAG (GIMPLE_RESX, LTO_gimple_resx)
  MAP_STMT_TAG (GIMPLE_SWITCH, LTO_gimple_switch)
#endif
