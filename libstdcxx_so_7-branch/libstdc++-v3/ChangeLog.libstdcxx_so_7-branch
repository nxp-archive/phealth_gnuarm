2005-01-25  Loren J. Rittle  <ljrittle@acm.org>

	* include/bits/locale_facets.h (ctype<wchar_t>::_M_bit):
	Base size on bits in __wmask_type.
	(ctype<wchar_t>::_M_wmask): Likewise.
	* config/locale/generic/ctype_members.cc: Remove magic numbers.

2005-01-24  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20050124.

2005-01-18  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20050118.

2005-01-12  Christopher Jefferson <chris@bubblescope.net>

	* include/bits/stl_function.h (mem_fun_t, const_mem_fun_t,
	mem_fun_ref_t, const_mem_fun_ref_t, mem_fun1_t, const_mem_fun1_t,
	mem_fun1_ref_t, const_mem_fun1_ref_t): Remove overloads for void
	return type, just an old HP/SGI workaround.
	* testsuite/20_util/functional/binders.cc: Move to...
	* testsuite/20_util/functional/binders/3113.cc: ...here.
	* testsuite/20_util/functional/binders/1.cc: New.

2005-01-10  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_algobase.h (lexicographical_compare):
	Fix concept check.

2005-01-10  Christopher Jefferson <chris@bubblescope.net>

	* include/bits/predefined_ops.h: New.
	* include/Makefile.am: Add.
	* include/Makefile.in: Regenerate.
	* include/bits/stl_algobase.h (mismatch, equal,
	lexicographical_compare): Make non-predicate version call predicated
	version.
	* testsuite/25_algorithms/lexicographical_compare/check_type.cc: New.
	* testsuite/25_algorithms/lexicographical_compare/1.cc: Likewise.
	* testsuite/25_algorithms/mismatch/check_type.cc: Likewise.
	* testsuite/25_algorithms/mismatch/1.cc: Likewise.
	* testsuite/25_algorithms/equal/check_type.cc: New.
	* testsuite/25_algorithms/equal/1.cc: New.

2005-01-09  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20050109.

2004-12-31  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20041231.

2004-12-06  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20041206.

2004-11-17  Paolo Carlini  <pcarlini@suse.de>

	DR 434. bitset::to_string() hard to use [Ready]
	* include/std/std_bitset.h (to_string): Add three overloads, taking
	fewer template arguments.
	* docs/html/ext/howto.html: Add an entry for DR 434.
	* testsuite/23_containers/bitset/to_string/1.cc: New.

2004-11-16  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20041116.

2004-11-08  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20041108.

2004-10-28  Chris Jefferson  <chris@bubblescope.net>

	PR libstdc++/17441
	* include/bit/stl_algo.h (find(,,,input_iterator_tag),
	find(,,,random_access_interator_tag),
	find_if(,,,input_iterator_tag),
	find_if(,,,random_access_iterator_tag)): Uglify function name.
	(find, find_if): Use new uglified specialisation names.
	* testsuite/25_algorithms/find/17441.cc: New.

2004-10-25  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20041025.

2004-10-18  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20041018.

2004-10-10  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20041010.

2004-10-08  Paolo Carlini  <pcarlini@suse.de>

	* include/bits/stl_map.h (map::map(const _Compare&,
	const allocator_type&), map::map(_InputIterator, _InputIterator,
	const _Compare&, const allocator_type&)): Implement according to
	the letter of the standard, i.e., don't use two overloads.
	* include/bits/stl_multimap.h: Likewise for multimap.
	* include/bits/stl_multiset.h: Likewise for multiset.
	* include/bits/stl_set.h: Likewise for set.

	* include/bits/stl_bvector.h (vector::vector(size_type, bool,
	const allocator_type&)): Don't use two overloads; fix the
	signature, the second argument is by const ref.

	* include/bits/stl_bvector.h (assign(size_t, bool)): Fix the
	signature: according to the standard the second argument is by
	const ref.
	(insert(iterator, bool)): Likewise.
	(insert(iterator, size_type, bool)): Likewise for the third arg.

2004-10-03  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20041003.

2004-09-24  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20040924.

2004-09-24  Paolo Carlini  <pcarlini@suse.de>
	    Jonathan Wakely  <redi@gcc.gnu.org>

	* include/bits/stl_list.h (list::list(size_type, value_type,
	const allocator_type&): Implement according to the letter of the
	standard, i.e., don't use two overloads, not equivalent in case
	of non default constructible T.
	(list::resize(size_type, const value_type&)): Fix the signature:
	according to the standard the second argument is by value; also,
	don't use two overloads.
	* include/bits/list.tcc (list::resize(size_type, const value_type&)):
	Adjust consistently the signature.
	* include/bits/stl_deque.h (deque::deque(size_type, value_type,
	const allocator_type&)): Likewise.
	(deque::resize(size_type, const value_type&)): Likewise.
	* include/bits/stl_vector.h (vector::vector(size_type, value_type,
	const allocator_type&)): Likewise.
	(vector::resize(size_type, const value_type&)): Likewise.
	* testsuite/testsuite_hooks.h: Add NonDefaultConstructible test type.
	* testsuite/23_containers/deque/explicit_instantiation.cc: Move to...
	* testsuite/23_containers/deque/explicit_instantiation/1.cc: ...here.
	* testsuite/23_containers/deque/explicit_instantiation/2.cc: New.
	* testsuite/23_containers/list/explicit_instantiation.cc: Move to...
	* testsuite/23_containers/list/explicit_instantiation/1.cc: ...here.
	* testsuite/23_containers/list/explicit_instantiation/2.cc: New.
	* testsuite/23_containers/map/explicit_instantiation.cc: Move to...
	* testsuite/23_containers/map/explicit_instantiation/1.cc: ...here.
	* testsuite/23_containers/map/explicit_instantiation/2.cc: New.
	* testsuite/23_containers/multimap/explicit_instantiation.cc: Move to...
	* testsuite/23_containers/multimap/explicit_instantiation/1.cc: ...here.
	* testsuite/23_containers/multimap/explicit_instantiation/2.cc: New.
	* testsuite/23_containers/multiset/explicit_instantiation.cc: Move to...
	* testsuite/23_containers/multiset/explicit_instantiation/1.cc: ...here.
	* testsuite/23_containers/multiset/explicit_instantiation/2.cc: New.
	* testsuite/23_containers/set/explicit_instantiation.cc: Move to...
	* testsuite/23_containers/set/explicit_instantiation/1.cc: ...here.
	* testsuite/23_containers/set/explicit_instantiation/2.cc: New.
	* testsuite/23_containers/vector/explicit_instantiation.cc: Move to...
	* testsuite/23_containers/vector/explicit_instantiation/1.cc: ...here.
	* testsuite/23_containers/vector/explicit_instantiation/2.cc: New.

2004-09-16  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20040916.

2004-08-30  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20040830.

2004-08-24  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/16896
	* include/bits/stl_list.h (struct _List_node_base): Rename the
	transfer member to _M_transfer, hook to _M_hook, and unhook to
	_M_unhook.
	* include/bits/list.tcc (list<>::insert): Tweak consistently.
	* src/list.cc: Change consistently.
	* config/linker-map.gnu: Likewise.	
	* testsuite/23_containers/list/16896.cc: New.

	* include/bits/stl_list.h: Trivial formatting fixes.

	* config/linker-map.gnu: Move everything in GLIBCXX_3.4, 3.4.1
	and 3.4.2 under GLIBCXX_3.6.
	* testsuite/testsuite_abi.cc: Add GLIBCXX_3.6.
	* configure.ac (libtool_VERSION): Bump to 7:0:0.
	* configure: Regenerate.

2004-08-24  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20040824.

2004-08-19  Dhruv Matani  <dhruvbird@gmx.net>
	
	* include/bits/stl_tree.h (struct _Rb_tree_impl): Change the
	_M_key_compare member to a function, so that the _M_impl's member
	can be accessed with equal ease for either the normal version, or
	the specialization for PODs - this reduces the size of the red-black
	tree by 4-bytes for optimizable struct comparators; tweak consistently
	all users.

2004-08-17  Paolo Carlini  <pcarlini@suse.de>

        Merged to mainline at tag libstdcxx_so_7-merge-20040817.
