2008-06-13  Richard Guenther  <rguenther@suse.de>

	* var-tracking.c (compute_bb_dataflow): Fix C99 var declaration.

2008-05-29  Michael Matz  <matz@suse.de>

	* var-tracking.c (enum micro_operation_type): Add MO_ASSOC type.
	(assoc_reg_set, assoc_mem_set, count_assocs, add_assocs): New
	functions.
	(compute_bb_dataflow): Use them to remember decl associations.
	(emit_notes_in_bb): Deal with new micro ops.
	(vt_initialize): Count new micro ops and call add_assocs.

2008-05-29  Michael Matz  <matz@suse.de>

	* dwarf2out.c (add_location_or_const_value_attribute): When a
	decl only has one location nevertheless note it's start of live.

2008-05-29  Michael Matz  <matz@suse.de>

	* var-tracking.c (track_expr_p): Also track decls that have
	no RTL set.

2008-05-29  Michael Matz  <matz@suse.de>
	    Richard Guenther  <rguenther@suse.de>

	* tree-ssa-live.c (remove_unused_scope_block_p): Preserve
	some more scopes.
	* tree-inline.c (setup_one_parameter): Associate new decl,
	not the one from the origin.

2007-12-12  Sebastian Pop  <sebastian.pop@amd.com>

	* tree-pretty-print.c (print_varmap, print_expr_varmap): Document.
	* print-rtl.c (print_rtx): Fix typo.
	* emit-rtl.c (move_xbitmap): Document.
	* tree-ssanames.c (ssa_varmap_lookup, ssa_varmap_set,
	ssa_varmap_replace): Document.
	(ssa_varmap_release): Fix typo.

2007-11-13  Richard Guenther  <rguenther@suse.de>

	* rtl.h (set_reg_decl): Declare.
	* emit-rtl.c (set_reg_decl): New function.
	* expr.h (set_expr_vars): Declare.
	* expr.c (set_expr_vars): New helper function, split out from ...
	(expand_expr_real): Here.  Use set_reg_decl instead of messing
	with REG_EXPR directly.
	* function.h (assign_parm_setup_reg): Use set_expr_vars to get
	vars for function parameter pseudos.

2007-11-13  Richard Guenther  <rguenther@suse.de>

	* tree.h (ssa_varmap_exprmap_merge_name): Declare.
	* tree-ssanames.c (ssa_varmap_process_copy_1): Use dump_flags
	for dumping.
	(ssa_varmap_add_var): Likewise.
	(ssa_varmap_process_phi): Likewise.
	(print_ssa_varmap): Likewise.
	(ssa_varmap_exprmap_merge_name): New helper function, split
	out from ...
	* tree-outof-ssa.c (replace_use_variable): ... here.  Use
	it also for simple variable replacement.

2007-11-13  Michael Matz  <matz@suse.de>

	* emit-rtl.c (move_xbitmap): New helper.
	(try_split): Preserve bitmap of names from splitters.

2007-11-13  Richard Guenther  <rguenther@suse.de>

	* tree.h (print_ssa_varmap): Declare.
	* tree-ssanames.c (print_ssa_varmap): New function.
	* Makefile.in (tree-ssanames.o): Add $(DIAGNOSTIC_H) dependency.
	* tree-dump.c (struct dump_option_value_in): Add vars modifier.
	* tree-pass.h (TDF_VARS): Define.
	* tree-pretty-print.c (print_varmap): New helper function.
	(print_expr_varmap): Likewise.
	(dump_generic_node): Call it on defs and return expressions.
	* passes.c (execute_function_todo): Print variable mapping
	info if requested.
	* print-rtl.c (print_rtx): Print variable bitmap for SETs if
	available.

2007-11-13  Richard Guenther  <rguenther@suse.de>

	* function.h (struct function): Add varmap_exprmap member.
	* tree-ssanames.c (ssa_varmap_exprmap_lookup): New function.
	(ssa_varmap_exprmap_insert): Likewise.
	(ssa_varmap_build_exprmap): Likewise.
	* tree.h (ssa_varmap_exprmap_lookup): Likewise.
	(ssa_varmap_exprmap_insert): Likewise.
	(ssa_varmap_build_exprmap): Likewise.
	* tree-outof-ssa.c (replace_use_variable): Remember names
	for TERed expressions.
	(rewrite_trees): If available, associate
	the expressions with the bitmap of names.
	(remove_ssa_form): Associate expressions with bitmaps of names.
	(rewrite_out_of_ssa): Propagate names information.  Allocate
	map of expressions to names bitmaps.  Free SSA_NAME to decls
	bitmap.
	* expr.c (expand_expr_real): Rename to ...
	(expand_expr_real_x): ... this.
	(expand_expr_real): New wrapper initializing the expanded
	expressions target SET insns bitmap of names if possible.
	* cfgexpand.c (tree_expand_cfg): Delete expression to names
	bitmap after expansion.

2007-11-13  Richard Guenther  <rguenther@suse.de>

	* function.h (struct function): Add varmap_hash member.
	* tree-ssanames.c (release_ssa_name): Call ssa_varmap_release.
	(release_defs): Process a copy for updating variable mappings.
	(ssa_varmap_lookup): New function.
	(ssa_varmap_set): Likewise.
	(ssa_varmap_replace): Likewise.
	(ssa_varmap_release): Likewise.
	(ssa_varmap_add_ref): Likewise.
	(ssa_varmap_process_copy_1): Likewise.
	(ssa_varmap_process_copy): Likewise.
	(ssa_varmap_add_var): Likewise.
	(ssa_varmap_process_phi): Likewise.
	* function.c (allocate_struct_function): Initialize varmap members.
	* tree-inline.c (setup_one_parameter): Add the decl of the param
	to the argument SSA_NAME varmap.
	* tree.h (ssa_varmap_lookup): Declare.
	(ssa_varmap_add_ref): Likewise.
	(ssa_varmap_get_ref): Likewise.
	(ssa_varmap_process_copy): Likewise.
	(ssa_varmap_add_var): Likewise.
	(ssa_varmap_process_phi): Likewise.
	* tree-into-ssa.c (rewrite_into_ssa): Allocate SSA_NAME to
	bitmap of names mapping.
	* tree-parloops.c (create_loop_fn): Likewise.

2007-11-12  Richard Guenther  <rguenther@suse.de>

	* bitmap.h (struct uid_bitmap_map): Declare.
	(uid_bitmap_map_eq): Likewise.
	(uid_bitmap_map_hash): Likewise.
	* bitmap.c (uid_bitmap_map_eq): New function.
	(uid_bitmap_map_hash): Likewise.
	* tree.h (struct tree_bitmap_map): Add.
	(tree_bitmap_map_eq): Define.
	(tree_bitmap_map_hash): Likewise.

2007-11-12  Michael Matz  <matz@suse.de>
	Richard Guenther  <rguenther@suse.de>

	* rtl.def (SET): Add bitmap operand.
	* rtl.h (gen_rtx_SET): Re-define to always create SET
	with NULL bitmap.
	(gen_rtx_SET_with_vars): New.
	* genrecog.c (find_operand): Handle 'b'.
	(find_matching_operand): Likewise.
	(validate_pattern): Likewise.
	(add_to_sequence): Likewise.
	* genemit.c (gen_exp): Handle 'b' like '0'.
	* genattrtab.c (attr_rtx_1): Likewise.
	* jump.c (rtx_renumbered_equal_p): Likewise.
	* read-rtl.c (read_rtx_1): Likewise.
	* emit-rtl.c (copy_insn_1): Likewise.
	* rtl.c (copy_rtx): Likewise.
	(rtx_equal_p): Ignore bitmaps.
	* cse.c (exp_equiv_p): Likewise.

2007-11-12  Richard Guenther  <rguenther@suse.de>

	* tree-flow.h (uid_decl_map_hash, uid_decl_map_eq): Move ...
	* tree.h (uid_decl_map_hash, uid_decl_map_eq): ... here.
	(lookup_decl_from_uid): Declare.
	(struct tree_base): Add nogc_flag.
	(DECL_NOGC_P): New define.
	* tree-ssa.c (uid_decl_map_eq, uid_decl_map_hash): Move ...
	* tree.c (uid_decl_map_eq, uid_decl_map_hash): ... here.
	(uid_decl_map_marked_p): New static helper function.
	(decl_for_uid_map): New global hashtable mapping DECL_UID
	to the decl tree.
	(init_ttree): Allocate it.
	(insert_decl_to_uid_decl_map): New helper function.
	(make_node_stat): Insert new decls into the map.
	(copy_node_stat): Likewise.
	(lookup_decl_from_uid): New function.
	(print_decl_for_uid_map_statistics): New helper.
	(dump_tree_statistics): Call it.
