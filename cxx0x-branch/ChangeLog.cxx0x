2007-04-26  Douglas Gregor  <doug.gregor@gmail.com>

	* libstdc++-v3/include/ext/pb_ds/detail/type_utils.hpp: Replace
	"tr1" with _GLIBCXX_TR1.
	* libstdc++-v3/include/ext/throw_allocator.h: Ditto.
	* libstdc++-v3/include/ext/array_allocator.h: Ditto.
	* libstdc++-v3/testsuite/util/testsuite_allocator.h: Ditto.
	* libstdc++-v3/testsuite/util/rng/twister_rand_gen.hpp: Ditto.

2007-04-24  Douglas Gregor  <doug.gregor@gmail.com>

	* gcc/cp/typeck.c (structural_comptypes): Compare DECLTYPE_TYPE nodes.
	* gcc/cp/cp-tree.def (DECLTYPE_TYPE): New.
	* gcc/cp/error.c (dump_type): Dump DECLTYPE_TYPE nodes.
	(dump_type_prefix): Ditto.
	(dump_type_suffix): Ditto.
	* gcc/cp/tree.c (DECLTYPE_TYPE): Walk DECLTYPE_TYPE nodes.
	* gcc/cp/mangle.c (write_type): Handle DECLTYPE_TYPE, but don't mangle
	the expression.
	* gcc/cp/cp-tree.h (IS_AGGR_TYPE): DECLTYPE_TYPE nodes can be aggregate
	types.
	(DECLTYPE_TYPE_EXPR): New.
	(DECLTYPE_TYPE_ID_EXPR_OR_MEMBER_ACCESS_P): New.
	(finish_declared_type): Declare.
	* gcc/cp/cxx-pretty-print.c (pp_cxx_type_specifier_seq): Print
	DECLTYPE_TYPE nodes.
	(pp_cxx_type_id): Ditto.
	* gcc/cp/pt.c (for_each_template_parm_r): Walk DECLTYPE_TYPE children.
	(tsubst): Substitute into a DECLTYPE_TYPE node.
	(tsubst_copy): Ditto.
	(unify): Cannot deduce anything from TYPEOF_OF or DECLTYPE_TYPE
	nodes.
	(dependent_type_p_r): DECLTYPE_TYPE types are always dependent.
	* gcc/cp/semantics.c (finish_typeof): TYPEOF_TYPE types need to use
	structural equality (because we can't hash the expressions).
	(finish_declared_type): New.
	* gcc/cp/lex.c (reswords): Add "decltype" keyword.
	* gcc/cp/parser.c (cp_parser_postfix_expression): Add
	MEMBER_ACCESS_ONLY_P to restrict postfix expression to member
	access expressions.
	(cp_parser_unary_expression): Update call to
	cp_parser_postfix_expression to reflect new parameter.
	(cp_parser_declared_type): New.
	(cp_parser_simple_type_specifier): Parse decltype types.
       * gcc/c-common.h (enum rid): Add RID_DECLTYPE, update RID_LAST_CXX0X.
       * gcc/testsuite/g++.dg/cpp0x/decltype1.C: New.
       * gcc/testsuite/g++.dg/cpp0x/decltype2.C: New.
       * gcc/testsuite/g++.dg/cpp0x/decltype3.C: New.
       * gcc/testsuite/g++.dg/cpp0x/decltype4.C: New.
       * gcc/testsuite/g++.dg/cpp0x/decltype5.C: New.
       * gcc/testsuite/g++.dg/cpp0x/decltype6.C: New.
       * gcc/testsuite/g++.dg/cpp0x/decltype7.C: New.

2007-04-24  Douglas Gregor  <doug.gregor@gmail.com>

	* gcc/testsuite/g++.old-deja/g++.pt/defarg6.C: Only run with
	-std=gnu++98.
	* gcc/testsuite/g++.old-deja/g++.pt/ucnid-1.C: Ditto.
	* gcc/testsuite/g++.dg/cpp0x/variadic61.C: Ditto.
	* gcc/testsuite/g++.dg/cpp0x/warn_cxx0x.C: Ditto.
	* gcc/testsuite/g++.dg/cpp0x/variadic62.C: Ditto.
	* gcc/testsuite/g++.dg/template/meminit1.C: Ditto.
	* gcc/testsuite/g++.dg/template/operator7.C: Ditto.
	* gcc/testsuite/g++.dg/template/static15.C: Ditto.
	* gcc/testsuite/g++.dg/template/invalid1.C: Ditto.
	* gcc/testsuite/g++.dg/template/shift1.C: Ditto.
	* gcc/testsuite/g++.dg/template/error10.C: Ditto.
	* gcc/c-opts.c (c_common_init_options): Default to C++0x mode with
	GNU extensions.
	(c_common_handle_option): -ansi selects C++0x mode.
	(set_std_cxx98): Turn of FLAG_CPP0X.
	* gcc/c-common.c (flag_cpp0x): Default to 1 (C++0x mode on).

2007-04-24  Pedro Lamarao  <pedro.lamarao@mndfck.org>

       * parser.c (cp_parser_mem_initializer_list): make sure the rules
       constructor delegation are followed.
       * init.c (expand_member_init): return properly if name is a
       target constructor.
       (emit_mem_initializers): if initializer is a target constructor,
       delegate.
       (perform_target_ctor): new function.

2007-04-24  Pedro Lamarao  <pedro.lamarao@mndfck.org>

       * g++.dg/cpp0x/dc_01.C: new test.
       * g++.dg/cpp0x/dc_02.C: new test.
       * g++.dg/cpp0x/dc_03.C: new test.

2007-04-24  Douglas Gregor  <doug.gregor@gmail.com>

       * Branched at revision 124107.