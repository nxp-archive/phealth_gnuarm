2009-07-22  Michael Meissner  <meissner@linux.vnet.ibm.com>
	    Pat Haugen  <pthaugen@us.ibm.com>
	    Revital Eres <ERES@il.ibm.com>

	* config/rs6000/vector.md (VEC_F): Add VSX support.
	(VEC_A): Ditto.
	(VEC_N): Ditto.
	(mov<mode>): Ditto.
	(vector_load_<mode>): Ditto.
	(vector_store_<mode>): Ditto.
	(vector GPR move split): Ditto.
	(vec_reload_and_plus_<mptrsize>): Ditto.
	(vec_reload_and_reg_<mptrsize>): Ditto.
	(add<mode>3): Ditto.
	(sub<mode>3): Ditto.
	(mul<mode>3): Ditto.
	(neg<mode>2): Ditto.
	(abs<mode>2): Ditto.
	(smin<mode>3): Ditto.
	(smax<mode>3): Ditto.
	(vector_eq<mode>): Ditto.
	(vector_gt<mode>): Ditto.
	(vector_ge<mode>): Ditto.
	(vector_gtu<mode>): Ditto.
	(vector_select_<mode>_uns): Ditto.
	(vector_eq_<mode>_p): Ditto.
	(vector_gt_<mode>_p): Ditto.
	(vector_ge_<mode>_p): Ditto.
	(vector_gtu_<mode>_p): Ditto.
	(cr6_test_for_zero): Ditto.
	(cr6_test_for_zero_reverse): Ditto.
	(cr6_test_for_lt): Ditto.
	(cr6_test_for_lt_reverse): Ditto.
	(xor<mode>3): Ditto.
	(ior<mode>3): Ditto.
	(and<mode>3): Ditto.
	(one_cmpl<mode>2): Ditto.
	(nor<mode>2): Ditto.
	(andc<mode>2): Ditto.
	(float<VEC_int<mode>2): Ditto.
	(unsigned_float<VEC_int><mode>2): Ditto.
	(fix_trunc<mode><VEC_int>2): Ditto.
	(fixuns_trunc<mode><VEC_int>2): Ditto.
	(vec_init<mode>):
	(vec_set<mode>): Ditto.
	(vec_extract<mode>): Ditto.
	(vec_interleave_highv4sf): Ditto.
	(vec_interleave_lowv4sf): Ditto.
	(vec_realign_load_<mode>): Ditto.
	(vec_shl_<mode>): Ditto.
	(vec_shr_<mode>): Ditto.
	(div<mode>3): New patterns for VSX.
	(vec_interleave_highv2df): Ditto.
	(vec_interleave_lowv2df): Ditto.
	(vec_pack_trunc_v2df): Ditto.
	(vec_pack_sfix_trunc_v2df): Ditto.
	(vec_pack_ufix_trunc_v2df): Ditto.
	(vec_unpacks_hi_v4sf): Ditto.
	(vec_unpacks_lo_v4sf): Ditto.
	(vec_unpacks_float_hi_v4si): Ditto.
	(vec_unpacku_float_lo_v4si): Ditto.
	(vec_unpacku_float_hi_v4si): Ditto.
	(vec_unpacks_float_lo_v4si): Ditto.
	(movmisalign<mode>): Ditto.
	(vector_ceil<mode>2): New patterns for vectorizing math library.
	(vector_floor<mode>2): Ditto.
	(vector_btrunc<mode>2): Ditto.
	(vector_copysign<mode>3): Ditto.

	* config/rs6000/predicates.md (easy_vector_constant_msb): New
	predicate for setting the high bit in each word, used for
	copysign.

	* config/rs6000/ppc-asm.h (f19): Whitespace.
	(f32-f63): Define if VSX.
	(v0-v31): Define if Altivec.
	(vs0-vs63): Define if VSX.

	* config/rs6000/t-rs6000 (MD_INCLUDES): Add power7.md and vsx.md.

	* config/rs6000/power7.md: New file, provide tuning parameters for
	-mcpu=power7.

	* config/rs6000/rs6000-c.c (rs6000_macro_to_expand): Add VSX
	support.
	(rs6000_cpu_cpp_builtins): Ditto.
	(altivec_overloaded_builtins): Ditto.
	(altivec_resolve_overloaded_builtin): Ditto.

	* config/rs6000/rs6000.opt (-mno-vectorize-builtins): Add new
	debug switch to disable vectorizing simple math builtin
	functions.

	* config/rs6000/rs6000.c (rs6000_builtin_vectorized_function):
	Vectorize simple math builtin functions.
	(TARGET_VECTORIZE_BUILTIN_VECTORIZED_FUNCTION): Define target
	hook to vectorize math builtins.
	(rs6000_override_options): Enable -mvsx on -mcpu=power7.
	(rs6000_builtin_conversion): Add VSX/power7 support.
	(rs6000_builtin_vec_perm): Ditto.
	(vsplits_constant): Add support for loading up a vector constant
	with just the high bit set in each part.
	(rs6000_expand_vector_init): Add VSX/power7 support.
	(rs6000_expand_vector_set): Ditto.
	(rs6000_expand_vector_extract): Ditto.
	(rs6000_emit_move): Ditto.
	(bdesc_3arg): Ditto.
	(bdesc_2arg): Ditto.
	(bdesc_1arg): Ditto.
	(rs6000_expand_ternop_builtin): Ditto.
	(altivec_expand_builtin): Ditto.
	(rs6000_expand_unop_builtin): Ditto.
	(rs6000_init_builtins): Ditto.
	(altivec_init_builtins): Ditto.
	(builtin_function_type): Ditto.
	(rs6000_common_init_builtins): Ditto.
	(rs6000_handle_altivec_attribute); Ditto.
	(rs6000_mangle_type): Ditto.
	(rs6000_vector_mode_supported_p): Ditto.
	(rs6000_mode_dependent_address): Altivec addresses with AND -16
	are mode dependent.

	* config/rs6000/vsx.md: New file for VSX support.

	* config/rs6000/rs6000.h (EASY_VECTOR_MSB): New macro for
	identifing values with just the most significant bit set.
	(enum rs6000_builtins): Add builtins for VSX.  Add simple math
	vectorized builtins.

	* config/rs6000/altivec.md (UNSPEC_VRFIP): Delete.
	(UNSPEC_VRFIM): Delete.
	(splitter for loading up vector with most significant bit): New
	splitter for vectorizing copysign.
	(altivec_vrfiz): Rename from altivec_fturncv4sf2.  Add support for
	vectorizing simple math functions.
	(altivec_vrfip): Add support for vectorizing simple math
	functions.
	(altivec_vrfim): Ditto.
	(altivec_copysign_v4sf3): New insn for Altivec copysign support.

	* config/rs6000/rs6000.md (UNSPEC_BPERM): New constant.
	(power7.md, vsx.md): Include for power7 support.
	(copysigndf3): Use VSX instructions if -mvsx.
	(negdf2_fpr): Ditto.
	(absdf2_fpr): Ditto.
	(nabsdf2_fpr): Ditto.
	(adddf3_fpr): Ditto.
	(subdf3_fpr): Ditto.
	(muldf3_fpr): Ditto.
	(divdf3_fpr): Ditto.
	(fix_truncdfdi2_fpr): Ditto.
	(cmpdf_internal1): Ditto.
	(fred, fred_fpr): Convert into expander/insn to add VSX support.
	(btruncdf2, btruncdf2_fpr): Ditto.
	(ceildf2, ceildf2_fpr): Ditto.
	(floordf2, floordf2_fpr): Ditto.
	(floatdidf2, floatdidf2_fpr): Ditto.
	(fmadddf4_fpr): Name insn.  Use VSX instructions if -mvsx.
	(fmsubdf4_fpr): Ditto.
	(fnmadddf4_fpr_1): Ditto.
	(fnmadddf4_fpr_2): Ditto.
	(fnmsubdf4_fpr_1): Ditto.
	(fnmsubdf4_fpr_2): Ditto.
	(fixuns_truncdfdi2): Add expander for VSX support.
	(fix_truncdfdi2): Ditto.
	(fix_truncdfsi2): Ditto.
	(ftruncdf2): Ditto.
	(btruncsf2): Whitespace.
	(movdf_hardfloat32): Add support for VSX registers.
	(movdf_softfloat32): Ditto.
	(movdf_hardfloat64): Ditto.
	(movdf_hardfloat64_mfpgpr): Ditto.
	(movdf_softfloat64): Ditto.
	(movti splitters): Add check for vector registers supporting
	TImode in the future.
	(bpermd): Add power7 bpermd instruction.

	* config/rs6000/altivec.h (vec_div): Define if VSX.
	(vec_mul): Ditto.
	(vec_msub): Ditto.
	(vec_nmadd): Ditto.
	(vec_nearbyint): Ditto.
	(vec_rint): Ditto.
	(vec_sqrt): Ditto.
	(all predicates): Use the generic builtin function, and not the
	V4SF specific function so that the predicates will work with
	VSX's V2DF.
	(vec_all_*): Ditto.
	(vec_any_*): Ditto.

	* doc/extend.texi (PowerPC Altivec/VSX Built-in Functions):
	Document new VSX functions and types.

	* doc/invoke.texi (PowerPc options): Document -mpopcntd, -mvsx
	switches.

	* doc/md.texi (PowerPC constraints): Document "wd", "wf", "ws",
	"wa", and "j" constraints.  Modify "v" to talk about Altivec
	instead of just vector.

2009-07-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vector.md (vec_init<mode>): Change to use whether
	loads/stores of the vector type are supported instead of the
	arithmetic type.  Eliminate vec_init_operand predicate.
	(vec_set<mode>): Ditto.
	(vec_extract<mode>): Ditto.

	* config/rs6000/predicates.md (vec_init_operand): Delete.

	* config/rs6000/rs6000.c (vsx_expand_builtin): Delete stub until
	we have specific VSX work.
	((rs6000_expand_builtin): Delete call to vsx_expand_builtin.

	Merge up to version 149953.

2009-07-09  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 149437.

2009-07-09  Michael Meissner  <meissner@linux.vnet.ibm.com>
	    Pat Haugen  <pthaugen@us.ibm.com>
	    Revital Eres <ERES@il.ibm.com>

	* config/rs6000/vector.md: New file.  Move most of the vector
	expander support here from altivec.md to allow for the VSX vector
	unit in the future.  Add support for secondary_reload patterns.
	Rewrite the patterns for vector comparison, and vector comparison
	predicate instructions so that the RTL expresses the desired
	behavior, instead of using unspec.

	* config/rs6000/constraints.md ("f" constraint): Use
	rs6000_constraints to hold the precalculated register class.
	("d" constraint): Ditto.
	("wd" constraint): New constraint for VSX.
	("wf" constraint): Ditto.
	("ws" constraint): Ditto.
	("wa" constraint): Ditto.
	("wZ" constraint): Ditto.
	("j" constraint): Ditto.

	* config/rs6000/predicates.md (vsx_register_operand): New
	predicate for VSX.
	(vfloat_operand): New predicate for vector.md.
	(vint_operand): Ditto.
	(vlogical_operand): Ditto.
	(easy_fp_constant): If VSX, 0.0 is an easy constant.
	(easy_vector_constant): Add VSX support.
	(altivec_indexed_or_indirect_operand): New predicate for
	recognizing Altivec style memory references with AND -16.
	(vec_init_operand): New predicate for vector initialize.

	* config/rs6000/t-rs6000 (MD_INCLUDES): Add vector.md.

	* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add
	support for V2DI, V2DF in logical, permute, select operations.

	* config/rs6000/rs6000.opt (-mvsx-scalar-double): Add new debug
	switch for vsx/power7.
	(-mvsx-scalar-memory): Ditto.
	(-mvsx-align-128): Ditto.
	(-mallow-movmisalign): Ditto.
	(-mallow-df-permute): Ditto.
	(-msched-groups): Ditto.
	(-malways-hint): Ditto.
	(-malign-branch-targets): Ditto.

	* config/rs6000/rs6000.c (rs6000_vector_reg_class): Delete,
	replacing it with rs6000_constraints.
	(rs6000_vsx_reg_class): Ditto.
	(rs6000_constraints): New array to hold the register classes of
	each of the register constraints that can vary at runtime.
	(rs6000_hard_regno_mode_ok): For VSX, only check if the VSX memory
	unit is being used.
	(builtin_hash_function): New support for hashing the tree types
	for builtin function as we need it, rather than trying to build
	all of the trees that we need.  Add initial preliminary VSX
	support.
	(builtin_function_type): Ditto.
	(builtin_function_eq): Ditto.
	(builtin_hash_struct): Ditto.
	(rs6000_init_builtins): Ditto.
	(builtin_mode_to_type): Ditto.
	(rs6000_common_init_builtins): Ditto.
	(altivec_init_builtins): Ditto.
	(rs6000_common_init_builtins): Ditto.
	(rs6000_debug_vector_unit): Move into rs6000_debug_reg_global.
	(rs6000_debug_reg_global): Move -mdebug=reg statements here.
	Print several of the scheduling related parameters.
	(rs6000_hard_regno_nregs_internal): If -mvsx, floating point
	registers are 128 bits if VSX memory reference instructions are
	used.
	(rs6000_init_hard_regno_mode_ok): Switch to putting constraints in
	rs6000_constraints instead of rs6000_vector_reg_class.  Move
	-mdebug=reg code to rs6000_debug_reg_global.  Add support for
	-mvsx-align-128 debug switch.  Drop testing float_p if VSX or
	Altivec.
	(rs6000_buitlin_conversion): Add support for returning unsigned
	vector conversion functions to fix regressions due to stricter
	type checking.
	(rs6000_vec_perm): Ditto.
	(bdesc_3arg): Ditto.
	(rs6000_expand_vector_init): Initial VSX support for using xxlxor
	to zero a register.
	(rs6000_override_options): Make power7 set the scheduling groups
	like the power5.  Add support for new debug switches to override
	the scheduling defaults.  Temporarily disable -mcpu=power7 from
	setting -mvsx.  Add support for debug switches -malways-hint,
	-msched-groups, and -malign-branch-targets.
	(altivec_expand_predicate_builtin): Rewrite how predicates are
	setup to generate better RTL, and not pass the instruction to be
	generated as a SYMBOL_REF.
	(struct builtin_description_predicates): Ditto.
	(bdesc_altivec_preds): Ditto.
	(rs6000_expand_builtin): Whitespace changes.  Rewrite predicate
	builtins.
	(rs6000_emit_vector_compare): Rewrite vector conditional support
	so that where we can, we use RTL operators, instead of blindly use
	UNSPEC.
	(get_vec_cmp_insn): Delete, rewrite vector conditionals.
	(get_vsel_insn): Ditto.
	(rs6000_emit_vector_select): Ditto.
	(rs6000_emit_minmax): Directly generate min/max under altivec,
	vsx.
	(create_TOC_reference): Add -mdebug=addr support.
	(emit_frame_save): VSX loads/stores need register indexed
	addressing.
	(TARGET_SECONDARY_RELOAD): Define target hook.
	(TARGET_IRA_COVER_CLASSES): Ditto.
	(vsx_expand_builtin): Stub for VSX builtins.
	(rs6000_expand_builtin): Call vsx_expand_builtin if -mvsx.
	(enum reload_reg_type): New enum for simplifing reg classes.
	(rs6000_reload_register_type): Simplify register classes into GPR,
	Vector, and other registers.
	(rs6000_secondary_reload): New target hook for fixing up invalid
	Altivec and VSX addresses in reload.
	(rs6000_secondary_reload_inner): Ditto.
	(rs6000_ira_cover_classes): New target hook, that returns the
	appropriate cover classes, based on -mvsx being used or not.
	(rs6000_secondary_reload_class): Add VSX support.
	
	* config/rs6000/rs6000.h (IRA_COVER_CLASSES): Delete, use target
	hook instead.
	(IRA_COVER_CLASSES_PRE_VSX): Cover classes if not -mvsx.
	(IRA_COVER_CLASSES_VSX): Cover classes if -mvsx.
	(rs6000_vector_reg_class): Delete.
	(rs6000_vsx_reg_class): Ditto.
	(enum rs6000_reg_class_enum): New enum for the constraints that
	vary based on target switches.
	(rs6000_constraints): New array to hold the register class for all
	of the register constraints that vary based on the switches used.
	(ALTIVEC_BUILTIN_*_UNS): Add unsigned builtin functions.
	(enum rs6000_builtins): Add unsigned varients for the builtin
	declarations returned by target hooks for expanding multiplies,
	select, and permute operations.  Add VSX builtins.
	(enum rs6000_builtin_type_index): Add entries for VSX.
	(V2DI_type_node): Ditto.
	(V2DF_type_node): Ditto.
	(unsigned_V2DI_type_node): Ditto.
	(bool_long_type_node): Ditto.
	(intDI_type_internal_node): Ditto.
	(uintDI_type_internal_node): Ditto.
	(double_type_internal_node): Ditto.

	* config/rs6000/altivec.md (whole file): Move all expanders to
	vector.md from altivec.md.  Rename insn matching functions to be
	altivec_foo.
	(UNSPEC_VCMP*): Delete, rewrite vector comparisons.
	(altivec_vcmp*): Ditto.
	(UNSPEC_VPERM_UNS): New, add for unsigned types using vperm.
	(VM): New iterator for moves that includes the VSX types.
	(altivec_vperm_<mode>): Add VSX types.  Add unsigned types.
	(altivec_vperm_<mode>_uns): New, for unsigned types.
	(altivec_vsel_*): Rewrite vector comparisons and predicate
	builtins.
	(altivec_eq<mode>): Ditto.
	(altivec_gt<mode>): Ditto.
	(altivec_gtu<mode>): Ditto.
	(altivec_eqv4sf)

2009-07-08  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Initial version, from mainline 149381.

