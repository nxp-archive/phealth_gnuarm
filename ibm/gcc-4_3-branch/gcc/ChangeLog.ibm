2009-10-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR target/41787
	* config/rs6000/rs6000.c (struct machine_function): Add
	vsx_or_altivec_used_p to record if vector types are used.
	(rs6000_expand_to_rtl_hook): Rename from
	rs6000_alloc_sdmode_stack_slot.  If VSX, check to see if there are
	any vector operations, so if there are, we can set VRSAVE to
	non-zero when only floating point vector registers are used.
	(TARGET_EXPAND_TO_RTL_HOOK): Use rs6000_expand_to_rtl_hook.
	(rs6000_check_vector_mode): Inner function to check if vector
	types are used in the code.
	(compute_vrsave_mask): If VSX, make sure VRSAVE is non-zero if
	vector instructions are used.

	* config/rs6000/rs6000.h (HARD_REGNO_CALL_PART_CLOBBERED):
	Indicate that VSX registers which overlap floating point
	registers, can't be used across a call, since the ABI only states
	the scalar part of the register will be saved and restored.

2009-10-22  Janis Johnson  <janis187@us.ibm.com>

	Backport from 4.3 branch:
	2009-09-21  Janis Johnson  <janis187@us.ibm.com>

	PR c/41049
	* real.c decimal_from_integer, decimal_integer_string): New.
	(real_from_integer): Use them as special case for decimal float.
	* config/dfp-bit.c (_si_to_sd, _usi_to_sd): Use default rounding.
	(_di_to_sd, _di_to_dd, _di_to_td, _udi_to_sd, _udi_to_dd, _udi_to_td):
	Do not append zero after the decimal point in string to convert.

2009-10-20  Peter Bergner  <bergner@vnet.ibm.com>

	Backport from mainline
	2009-10-10  Peter Bergner  <bergner@vnet.ibm.com>

	* configure.ac: Add test for dci instruction.
	* configure: Regenerate.
	* config.in: Likewise.
	* config.gcc: Handle --with-cpu=476 and --with-cpu=476fp.
	* doc/invoke.texi: Add cpu_type 476 and 476fp.
	(-mmulhw): Add 476 to description.
	(-mdlmzb): Likewise.
	* config/rs6000/t-fprules (MULTILIB_MATCHES_FLOAT): Include -mcpu=476.
	* config/rs6000/rs6000.c (processor_costs): Add ppc476_cost.
	(processor_target_table): Add 476 and 476fp entries.
	(rs6000_override_options): Use ppc476_cost for PROCESSOR_PPC476.
	(rs6000_issue_rate): Add CPU_PPC476.
	* config/rs6000/rs6000.h (ASM_CPU_476_SPEC): Define.
	(ASM_CPU_SPEC): Pass %(asm_cpu_476) for -mcpu=476 and -mcpu=476fp.
	(processor_type): Add PROCESSOR_PPC476.
	(EXTRA_SPECS): Add asm_cpu_476 string.
	* config/rs6000/rs6000.md: (define_attr "type"): Add isel attribute.
	(define_attr "cpu"): Add ppc476.
	Include 476.md.
	Update comments for 476.
	(isel_signed, isel_unsigned): Change to use "isel" type attribute.
	* config/rs6000/vxworks.h (CPP_SPEC): Handle 464 and 476.
	Update copyright year.
	* config/rs6000/476.md: New file.
	* config/rs6000/40x.md: Add description for "isel" attribute.
	Update copyright year.
	* config/rs6000/440.md: Likewise.
	* config/rs6000/603.md: Likewise.
	* config/rs6000/6xx.md: Likewise.
	* config/rs6000/7450.md: Likewise.
	* config/rs6000/7xx.md: Likewise.
	* config/rs6000/8540.md: Likewise.
	* config/rs6000/cell.md: Likewise.
	* config/rs6000/e300c2c3.md: Likewise.
	* config/rs6000/e500mc.md: Likewise.
	* config/rs6000/mpc.md: Likewise.
	* config/rs6000/power4.md: Likewise.
	* config/rs6000/power5.md: Likewise.
	* config/rs6000/power6.md: Likewise.
	* config/rs6000/power7.md: Likewise.
	* config/rs6000/rios1.md: Likewise.
	* config/rs6000/rios2.md: Likewise.
	* config/rs6000/rs64.md: Likewise.

2009-10-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/predicates.md: Update copyright year.
	* config/rs6000/altivec.md: Ditto.
	
	* config/rs6000/t-rs6000 (TM_H): Add rs6000-builtin.def.
	(MD_INCLUDES): Add a2.md.
	
	* config/rs6000/rs6000-c.c (altivec_categorize_keyword): Import
	conditional macro support for 'vector', 'bool' and 'pixel' from
	4.5 development branch.
	(init_vector_keywords): Ditto.
	(rs6000_macro_to_expand): Ditto.
	(rs6000_cpu_cpp_builtins): Ditto.

	* config/rs6000/rs6000.c (rs6000_builtin_decls): Change
	RS6000_BUILTIN_COUNT to MAX_RS6000_BUILTINS.
	(builtin_classify): New static vector to classify various builtins
	to get the tree attributes correct.
	(def_builtin): Set the attributes of builtins based on what the
	builtin does (i.e. memory operation, floating point, saturation
	need special attributes, others are pure functions).

	* config/rs6000/rs6000.h (enum rs6000_btc): New enum to classify
	the builtins.
	(enum rs6000_builtins): Include rs6000-builtin.def to define the
	builtins.  Change the end marker to MAX_RS6000_BUILTINS from
	RS6000_BUILTIN_COUNT.
	(rs6000_builtin_decls): Change RS6000_BUILTIN_COUNT to
	MAX_RS6000_BUILTINS.

	* config/rs6000/rs6000-builtin.def: New file that combines the
	builtin enumeration name and attributes.

2009-10-12  Ben Elliston  <bje@au.ibm.com>

	Backport from mainline
	2009-10-07  Ben Elliston  <bje@au.ibm.com>

	* config.gcc (powerpc*-*-*): Handle a2.
	* config/rs6000/rs6000.md (cpu): Add ppca2.  Include "a2.md".
	* config/rs6000/a2.md: New file.
	* config/rs6000/rs6000.h (ASM_CPU_SPEC): Add support for a2.
	(enum processor_type): Add PROCESSOR_PPCA2.
	* config/rs6000/rs6000.c (ppca2_cost): New costs.
	(rs6000_override_options): Add "a2" to processor_target_table.
	Update rs6000_always_hint logic.  Correctly set rs6000_cost for
	a2.
	* doc/invoke.texi (RS/6000 and PowerPC Options): Document
	-mcpu=a2.

2009-10-02  Peter Bergner  <bergner@vnet.ibm.com>

	Backport from mainline.

	2009-08-30  Alan Modra  <amodra@bigpond.net.au>

	PR target/41081
	* fwprop.c (get_reg_use_in): Delete.
	(free_load_extend): New function.
	(forward_propagate_subreg): Use it.

	2009-08-23  Alan Modra  <amodra@bigpond.net.au>

	PR target/41081
	* fwprop.c (try_fwprop_subst): Allow multiple sets.
	(get_reg_use_in): New function.
	(forward_propagate_subreg): Propagate through subreg of zero_extend
	or sign_extend.

	2009-05-08  Paolo Bonzini  <bonzini@gnu.org>

	PR rtl-optimization/33928
	PR 26854
	* fwprop.c (use_def_ref, get_def_for_use, bitmap_only_bit_bitween,
	process_uses, build_single_def_use_links): New.
	(update_df): Update use_def_ref.
	(forward_propagate_into): Use get_def_for_use instead of use-def
	chains.
	(fwprop_init): Call build_single_def_use_links and let it initialize
	dataflow.
	(fwprop_done): Free use_def_ref.
	(fwprop_addr): Eliminate duplicate call to df_set_flags.
	* df-problems.c (df_rd_simulate_artificial_defs_at_top,
	df_rd_simulate_one_insn): New.
	(df_rd_bb_local_compute_process_def): Update head comment.
	(df_chain_create_bb): Use the new RD simulation functions.
	* df.h (df_rd_simulate_artificial_defs_at_top,
	df_rd_simulate_one_insn): New.
	* opts.c (decode_options): Enable fwprop at -O1.
	* doc/invoke.texi (-fforward-propagate): Document this.

2009-10-02  Peter Bergner  <bergner@vnet.ibm.com>

	Backport from mainline:

	2009-08-23  Alan Modra  <amodra@bigpond.net.au>
	PR target/41081
	* config/rs6000/rs6000.md (rotlsi3_64, ashlsi3_64, lshrsi3_64,
	ashrsi3_64): New.


	Backport from 4.3 branch:

	2009-09-25  Alan Modra  <amodra@bigpond.net.au>
	* config/rs6000/rs6000.md (load_toc_v4_PIC_3c): Correct POWER
	form of instruction.

	2009-09-23  Alan Modra  <amodra@bigpond.net.au>
	PR target/40473
	* config/rs6000/rs6000.c (rs6000_output_function_prologue): Don't
	call final to emit non-scheduled prologue, instead insert at entry.

2009-09-23  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/predicates.md (indexed_or_indirect_operand):
	Eliminate support for VSX load/store with update.

	* config/rs6000/vsx.md (vsx_mov<mode>): Eliminate code that forced
	vector registers loaded in GPRs to use Q constraint instead of o,
	that ultimately was do to returning V2DF in gpr registers.  Add
	assertions to make sure we don't have VSX load/store with update.

	* config/rs6000/rs6000.h (enum rs6000_builtins): Eliminate VSX
	load/store with update instructions.

2009-09-23  Peter Bergner  <bergner@vnet.ibm.com>

	Revert patches/patch-043-build-id.diff

	Backport from mainline:

	2009-04-30  Paul Pluzhnikov  <ppluzhnikov@google.com>
		    Roland McGrath <roland@redhat.com>

	* configure.ac (HAVE_LD_BUILDID): New check for ld --build-id
	support.
	(ENABLE_LD_BUILDID): New configuration option.
	* gcc.c [HAVE_LD_BUILDID and ENABLE_LD_BUILDID]
	(LINK_BUILDID_SPEC): New macro.
	(init_spec): If defined, prepend it between LINK_EH_SPEC and
	link_spec.
	* doc/install.texi: Document --enable-linker-build-id option.
	* configure: Rebuild.
	* config.in: Rebuild.

2009-09-21  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* target-def.h (TARGET_VECTORIZE): Remove extra spacing at the end
	of the line.

	* config/rs6000/rs6000.c (rs6000_legitimate_address_p): Drop
	support for VSX memory reference instructions with update.
	* config/rs6000/vsx.md (vsx_mov<mode>): Ditto.
	(vsx_movti): Ditto.
	(VSX_U): Delete, no longer need with load/store with update
	removed.
	(VSbit): Ditto.
	(VStype_load_update): Ditto.
	(VStype_store_update): Ditto.
	(vsx_load<VSX_U:mode>_update_<P:mptrsize>): Ditto.
	(vsx_store<VSX_U:mode>_update_<P:mptrsize>): Ditto.

2009-09-17  Revital Eres  <eres@il.ibm.com>

	* doc/tm.texi (TARGET_SUPPORT_VECTOR_MISALIGNMENT): Document.
	* targhooks.c (default_builtin_support_vector_misalignment):
	New builtin function.
	* targhooks.h (default_builtin_support_vector_misalignment):
	Declare.
	* target.h (builtin_support_vector_misalignment):
	New field in struct gcc_target.
	* tree-vectorizer.c (vect_supportable_dr_alignment): Call
	new builtin function.
	* target-def.h (TARGET_SUPPORT_VECTOR_MISALIGNMENT):
	Define.
	* config/rs6000/rs6000.c
	(rs6000_builtin_support_vector_misalignment): New function.
	(TARGET_SUPPORT_VECTOR_MISALIGNMENT): Define.

2009-09-17  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 151807.

2009-09-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR target/41210 (backport from mainline)
	* config/rs6000/rs6000.c (rs6000_function_value): V2DF and V2DI
	are returned in the same register (vs34 or v2) that Altivec vector
	types are returned in.
	(rs6000_libcall_value): Ditto.

	PR target/41331 (backport from mainline)
	* config/rs6000/rs6000.c (rs6000_emit_move): Use gen_add3_insn
	instead of explicit addsi3/adddi3 calls.
	(rs6000_split_multireg_move): Ditto.
	(rs6000_emit_allocate_stack): Ditto.
	(rs6000_emit_prologue): Ditto.
	(rs6000_output_mi_thunk): Ditto.

	* config/rs6000/rs6000.md (bswapdi*): Don't assume the pointer
	size is 64 bits if we can use 64-bit registers.

2009-09-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to gcc-4_3-branch, id 151696.

2009-08-25  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to gcc-4_3-branch, id 151096.

2009-09-08  Peter Bergner  <bergner@vnet.ibm.com>

	Backport from mainline:

	2008-09-03  Anton Blanchard  <anton@samba.org>
	* config/rs6000/rs6000.c (rs6000_split_lock_test_and_set): Do not
	emit memory barrier before operation.

2009-08-21  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR target/40671
	* config/rs6000/rs6000.c (rs6000_override_options): Use
	TARGET_64BIT instead of TARGET_POWERPC64 to set the size of
	pointers.

	PR target/41145
	* config/rs6000/rs6000.c (rs6000_handle_altivec_attribute): Fix
	reporting of vector + decimal/boolean/complex, 

2009-07-28  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.opt (-mvectorize-buitlins): Disable this by
	default until the 4.3 related bugs are fixed.

	Merge up to power7-meissner branch, id 150174.  See
	ChangeLog.power7 for more details.

	Import changes from gcc-4_3-branch branch, id 150056.

2009-06-16  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.opt (-mallow-movmisalign): Disable by
	default in the 4.3 branch, since this seems to cause codegen bugs
	in the calculix spec benchmark.

	Backport from power7-meissner branch
	* config/rs6000/rs6000.c (bdesc_2arg): Split tdiv/tsqrt patterns
	into 2 separate patterns, one that returns the FE flag and one
	that returns FG.
	(bdesc_1arg): Ditto.

	* config/rs6000/vsx.md (vsx_tdiv<mode>3*): Reimplment tdiv/tsqrt
	patterns to match the hardware which sets a CR register based on
	the inputs, not a vector register.  Since two flags are set,
	provide two separate patterns that returns each flag.  If the
	instruction is used in a test, it will be optimized to use the
	normal conditional branch.
	(vsx_tsqrt<mode>2*): Ditto.

	* config/rs6000/rs6000.h (VSX_BUILTIN_*): Split tdiv/tsqrt
	patterns into 2 separate patterns, one that returns the FE flag
	and one that returns FG.

	* config/rs6000/rs6000.md (bswaphi): Use HImode for force_reg
	call.

2009-06-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Backport from power7-meissner branch
	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define
	__HAVE_BSWAP__ to let people know they can use the bswap
	builtins.

	* config/rs6000/rs6000.c (rs6000_init_builtins): Make the bswap16
	builtin take and return unsigned short ints.

	* config/rs6000/rs6000.md (bswaphi2*): Use HImode as argument and
	return type.

2009-06-11  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Backport from power7-meissner branch
	* doc/extend.texi (PowerPC AltiVec/VSX Built-in Functions):
	Document the non-Altivec/VSX builtins.

	* config/rs6000/rs6000.c (rs6000_expand_builtin): Add
	support for __builtin_bswap16.
	(rs6000_init_builtins): Ditto.
	* config/rs6000/rs6000.h (enum rs6000_builtins): Ditto.

	* config/rs6000/rs6000.md (bswap*): Add support for 16 and 64-bit
	bswaps, including using the ldbrx/stbrx instructions on power7.

2009-06-11  Alan Modra  <amodra@au.ibm.com>

	PR target/25972
	* config/rs6000/darwin-ldouble.c (longDblUnion): Delete.
	(pack): New inline function.  Use throughout in place of packing a
	pair of doubles to long double via union.

2009-06-10  Ben Elliston  <bje@au.ibm.com>

	Backport from mainline:

	2008-10-04  Anton Blanchard  <anton@samba.org>
	* config/rs6000/rs6000.c (rs6000_emit_sync): Use gen_lwsync().
	(rs6000_split_atomic_op): Same.
	(rs6000_split_compare_and_swap): Same.
	(rs6000_split_compare_and_swapqhi): Same.

2009-06-05  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Sync up to version 148216.  Pull in patches from both
	gcc-4_3-branch and power7-meissner.

	PR tree-optimization/40219 (back ported from 4.5)
	* tree.c (iterative_hash_expr): Make sure the builtin function is
	a normal builtin function and not a front end or back end builtin
	before indexing into the built_in_decls array.

	PR tree-optimization/40049 (back ported from 4.5)
	* tree-vect-transform.c (vectorizable_operation): If the machine
	has only vector/vector shifts, convert the type of the constant to
	the appropriate type to avoid building incorrect trees, which
	eventually have problems with garbage collection.

2009-05-04  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (builtin_mode_to_type): Add GTY marker.
	(rs6000_builtin_vec_perm): Delete, GCC 4.3 doesn't support the
	targetm.vectorize.builtin_vec_perm hook.
	
2009-05-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
	    Revital1 Eres <ERES@il.ibm.com>

	Backport from 05-01 power7-meissner branch:
	* config/rs6000/rs6000.c (rs6000_builtin_mask_for_load): Enable
	for VSX.

	* config/rs6000/rs6000-c.c (rs6000_macro_to_expand): Do not expand
	__vector if it is not followed by a known identifier.

	* config/rs6000/rs6000.c (rs6000_emit_vector_cond_expr): Don't
	call unsigned_condition, just manually recognize the unsigned
	condition tests.  Return NULL_RTX for unhandled conditions.

	* config/rs6000/vector.md (VEC_K, VEC_N): New iterator for vector
	alignment support.
	(vec_pack_trunc_v2df): Use vfloat_operand, vint_operand, or
	vlogical_operand instead of vsx_register.
	(vec_pack_sfix_trunc_v2df): Ditto.
	(vec_unpacks_hi_v4sf): Ditto.
	(vec_unpacks_lo_vv4sf): Ditto.
	(vec_unpacks_float_hi_v4si): Ditto.
	(vec_unpacks_float_lo_v4si): Ditto.
	(vec_unpacku_float_hi_v4si): Ditto.
	(vec_unpacku_float_lo_v4si): Ditto.
	(vec_realign_load_<mode>): Move here from altivec.md.  Generate a
	vperm instruction instead of being an alias that does the same
	thing.
	(movmisalign<mode>): New insns, VSX vectors with 4/8 byte
	alignments don't need realignment support.
	(vec_shl_<mode>): Move here from altivec.md.
	(vec_shr_<mode>): Ditto.

	* config/rs6000/altivec.md (altivec_vsldoi_<mode>): Define for all
	vector types.
	(vec_shl_<mode>): Move to vector.md.
	(vec_shr_<mode>): Ditto.
	(vec_realign_load_<mode>): Ditto.

	* config/rs6000/vector.md (vector_select_<mode>): Rename from
	vector_vsel_<mode>.  Use mode of CCmode on the NE operator.
	(vector_select_<mode>_uns): Clone vector_select_<mode> for
	unsigned types.

	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Map both of
	the A and M types of multiply/add builtins to the internal name
	without either A/M, since the compiler will pick the appropriate
	instruction based on the registers allocated.

	* config/rs6000/rs6000.c (builtin_mode_to_type): Add support for
	unsigned types.
	(struct builtin_hash_struct): Ditto.
	(rs6000_init_builtins): Ditto.
	(builtin_hash_function): Ditto.
	(builtin_hash_eq): Ditto.
	(builtin_function_type): Add an argument for the builtin function
	code.  For functions that take or produce unsigned types, use an
	unsigned type instead of a signed types to make things type
	correct.  Change callers.
	(rs6000_builtin_vec_perm): Add support for unsigned vector permute
	functions.
	(bdesc_3arg): Ditto.
	(rs6000_emit_vector_cond): Ditto.

	* config/rs6000/vsx.md (vsx_xxsel<mode>): Make NE operator have
	CCmode mode.
	(vsx_xxsel<mode>_uns): Clone vsx_xxsel<mode> to make unsigned
	varients.

	* config/rs6000/rs6000.h (ALTIVEC_BUILTIN_VSEL*): Add unsigned
	variants.
	(ALTIVEC_BUILTIN_VPERM*): Ditto.
	(VSX_BUILTIN_XXSEL*): Ditto.
	(VSX_BUILTIN_VPERM*): Ditto.

	* config/rs6000/altivec.md (UNSPEC_VPERM_UNS): New unspec constant.
	(altivec_vsel<mode>): Use CCmode for NE mode.
	(altivec_vsel<mode>_uns): Clone from altivec_vsel<mode> for
	unsigned types.
	(altivec_vperm<mode>_uns): New insn for vperm on unsigned types.

	* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok): Add
	enum casts to make code type correct for C++.
	(bdesc_altivec_preds): Use CODE_FOR_nothing instead of 0.
	(struct builtin_hash_struct): Change to new-style GTY markers.
	(builtin_hash_table): Ditto.
	(builtin_function_type): Make call to htab_find_slot be type
	correct.

2009-04-27  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Backport from 04-27 power7-meissner branch (optimization of
	V2DF/V2DI insert, extract, inits are not done in this merge):
	* config/rs6000/vector.md (VEC_A): New iterator for the arithmetic
	types.
	(UNSPEC_PREDICATE): Move here from altivec.md.
	(vector_eq_<mode>_p): Rewrite vector compare and set CR6 code,
	move expanders here from altivec.md, and add VSX support.
	(vector_gt_<mode>_p): Ditto.
	(vector_ge_<mode>_p): Ditto.
	(vector_gtu_<mode>_p): Ditto.
	(cr6_test_for_zero): Move here from altivec.md.
	(cr6_test_for_zero_reverse): Ditto.
	(cr6_test_for_lt): Ditto.
	(cr6_test_for_lt_reverse): Ditto.

	* config/rs6000/rs6000.opt (-mpower7-adjust-cost): Turn this on by
	default.

	* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add VSX
	double builtin support.

	* config/rs6000/rs6000.c (builtin_mode_to_type): Move higher in
	the source.
	(altivec_expand_predicate_builtin): Rewrite predicate handling,
	removing passing a SYMBOL ref to give the instruction being
	generated.
	(struct builtin_description_predicates): Ditto.
	(bdesc_altivec_preds): Ditto.
	(rs6000_expand_vector_set): For V2DF/V2DI optimization, pass the
	arguments in the correct order.
	(altivec_expand_builtin): Add V2DF/V2DI init, set, and extract
	builtins.  Change call to altivec_expand_predicate_builtin.
	(rs6000_expand_builtin): Delete some whitespace at the end of
	lines.  If power7, define the bpermd builtin.
	(rs6000_init_builtins): Move initialization of
	builtin_mode_to_type here from rs6000_common_init_builtins.  Use
	builtin_function_type to build random builtin function types.  Add
	support for __builtiN_bpermd on power7.
	(altivec_init_builtins): Add support for V2DF/V2DI init, set, and
	extract builtins.  Fix a typo in the last change.
	(rs6000_common_init_builtins): Move initialization of
	builtin_mode_to_type to rs6000_init_builtins.
	(print_operand, 'c' case): Fix typo in error message.
	(rs6000_emit_vector_compare): Use VSX_UNIT_* macros for VSX and
	Altivec code.
	(rs6000_emit_vector_cond_expr): Ditto.

	* config/rs6000/vsx.md (vsx_cmpdf_internal1): New insn to use
	xscmpudp instead of fcmpu.
	(vsx_eq_<mode>_p): Add VSX compare and predicate instructions.
	(vsx_gt_<mode>_p): Ditto.
	(vsx_ge_<mode>_p): Ditto.

	* config/rs6000/rs6000.h (enum rs6000_builtins): Add builtins for
	compare and set predicates, V2DF/V2DI init, set, and extract, and
	bpermd instructions.

	* config/rs6000/altivec.md (UNSPEC_PREDICATE): Move to vector.md.
	(altivec_vcmpequ<VI_char>_p): New insns for altivec vector compare
	and set predicate instructions.  Move expander to vector.md.
	(altivec_vcmpgts<VI_char>_p): Ditto.
	(altivec_vcmpgtu<VI_char>_p): Ditto.
	(altivec_vcmpeqfp_p): Ditto.
	(altivec_vcmpgtfp_p): Ditto.
	(altivec_vcmpgefp_p): Ditto.
	(altivec_vcmpbfp_p): Ditto.
	(altivec_predicate_<mode>): Delete, no longer used.
	(cr6_test_for_zero): Move to vector.md.
	(cr6_test_for_zero_reverse): Ditto.
	(cr6_test_for_lt): Ditto.
	(cr6_test_for_lt_reverse): Ditto.

	* config/rs6000/rs6000.md (UNSPEC_BPERM): New unspec constant.
	(cmpdf_internal1): Use VSX xscmpudp if -mvsx.
	(bpermd_<mode>): New insn for power7 bpermd builtin.

2009-04-26  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vector.md (vector_vsel<mode>): Generate the insns
	directly instead of calling VSX/Altivec expanders.

	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Map VSX
	builtins that are identical to Altivec, to the Altivec vesion.
	(altivec_overloaded_builtins): Add V2DF/V2DI sel, perm support.
	(altivec_resolve_overloaded_builtin): Add V2DF/V2DI support.

	* config/rs6000/rs6000.c (rs6000_expand_vector_init): Rename VSX
	splat functions.
	(expand_vector_set): Merge V2DF/V2DI code.
	(expand_vector_extract): Ditto.
	(bdesc_3arg): Add more VSX builtins.
	(bdesc_2arg): Ditto.
	(bdesc_1arg): Ditto.
	(rs6000_expand_ternop_builtin): Require xxpermdi 3rd argument to
	be 2 bit-constant, and V2DF/V2DI set to be a 1 bit-constant.
	(altivec_expand_builtin): Add support for VSX overloaded builtins.
	(altivec_init_builtins): Ditto.
	(rs6000_common_init_builtins): Ditto.
	(rs6000_init_builtins): Add V2DI types and vector long support.
	(rs6000_handle_altivec_attribute): Ditto.
	(rs6000_mange_type): Ditto.

	* config/rs6000/vsx.md (UNSPEC_*): Add new UNSPEC constants.
	(vsx_vsel<mode>): Add support for all vector types, including
	Altivec types.
	(vsx_ftrunc<mode>2): Emit the correct instruction.
	(vsx_x<VSv>r<VSs>i): New builtin rounding mode insns.
	(vsx_x<VSv>r<VSs>ic): Ditto.
	(vsx_concat_<mode>): Key off of VSX memory instructions being
	generated instead of the vector arithmetic unit to enable V2DI
	mode.
	(vsx_extract_<mode>): Ditto.
	(vsx_set_<mode>): Rewrite as an unspec.
	(vsx_xxpermdi2_<mode>): Rename old vsx_xxpermdi_<mode> here.  Key
	off of VSX memory instructions instead of arithmetic unit.
	(vsx_xxpermdi_<mode>): New insn for __builtin_vsx_xxpermdi.
	(vsx_splat_<mode>): Rename from vsx_splat<mode>.
	(vsx_xxspltw_<mode>): Change from V4SF only to V4SF/V4SI modes.
	Fix up constraints.  Key off of memory instructions instead of
	arithmetic instructions to allow use with V4SI.
	(vsx_xxmrghw_<mode>): Ditto.
	(vsx_xxmrglw_<mode>): Ditto.
	(vsx_xxsldwi_<mode>): Implement vector shift double by word
	immediate.

	* config/rs6000/rs6000.h (VSX_BUILTIN_*): Update for current
	builtins being generated.
	(RS6000_BTI_unsigned_V2DI): Add vector long support.
	(RS6000_BTI_bool_long): Ditto.
	(RS6000_BTI_bool_V2DI): Ditto.
	(unsigned_V2DI_type_node): Ditto.
	(bool_long_type_node): Ditto.
	(bool_V2DI_type_node): Ditto.

	* config/rs6000/altivec.md (altivec_vsel<mode>): Add '*' since we
	don't need the generator function now.  Use VSX instruction if
	-mvsx.
	(altivec_vmrghw): Use VSX instruction if -mvsx.
	(altivec_vmrghsf): Ditto.
	(altivec_vmrglw): Ditto.
	(altivec_vmrglsf): Ditto.

	* doc/extend.texi (PowerPC AltiVec/VSX Built-in Functions):
	Document that under VSX, vector double/long are available.

2009-04-23  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to gcc-4_3-branch, svn id 146207.
	* REVISION: Set to [merged from gcc-4_3-branch, svn 146659].
	
	backport from development branch
	* config/rs6000/vector.md (VEC_E): New iterator to add V2DImode.
	(vec_init<mode>): Use VEC_E instead of VEC_C iterator, to add
	V2DImode support.
	(vec_set<mode>): Ditto.
	(vec_extract<mode>): Ditto.

	* config/rs6000/predicates.md (easy_vector_constant): Add support
	for setting TImode to 0.

	* config/rs6000/rs6000.opt (-mvsx-vector-memory): Delete old debug
	switch that is no longer used.
	(-mvsx-vector-float): Ditto.
	(-mvsx-vector-double): Ditto.
	(-mvsx-v4sf-altivec-regs): Ditto.
	(-mreload-functions): Ditto.
	(-mallow-timode): New debug switch.

	* config/rs6000/rs6000.c (rs6000_ira_cover_classes): New target
	hook for IRA cover classes, to know that under VSX the float and
	altivec registers are part of the same register class, but before
	they weren't.
	(TARGET_IRA_COVER_CLASSES): Set ira cover classes target hookd.
	(rs6000_hard_regno_nregs): Key off of whether VSX/Altivec memory
	instructions are supported, and not whether the vector unit has
	arithmetic support to enable V2DI/TI mode.
	(rs6000_hard_regno_mode_ok): Ditto.
	(rs6000_init_hard_regno_mode_ok): Add V2DImode, TImode support.
	Drop several of the debug switches.
	(rs6000_emit_move): Force TImode constants to memory if we have
	either Altivec or VSX.
	(rs6000_builtin_conversion): Use correct insns for V2DI<->V2DF
	conversions.
	(rs6000_expand_vector_init): Add V2DI support.
	(rs6000_expand_vector_set): Ditto.
	(avoiding_indexed_address_p): Simplify tests to say if the mode
	uses VSX/Altivec memory instructions we can't eliminate reg+reg
	addressing.
	(rs6000_legitimize_address): Move VSX/Altivec REG+REG support
	before the large integer support.
	(rs6000_legitimate_address): Add support for TImode in VSX/Altivec
	registers.
	(rs6000_emit_move): Ditto.
	(def_builtin): Change internal error message to provide more
	information.
	(bdesc_2arg): Add conversion builtins.
	(builtin_hash_function): New function for hashing all of the types
	for builtin functions.
	(builtin_hash_eq): Ditto.
	(builtin_function_type): Ditto.
	(builtin_mode_to_type): New static for builtin argument hashing.
	(builtin_hash_table): Ditto.
	(rs6000_common_init_builtins): Rewrite so that types for builtin
	functions are only created when we need them, and use a hash table
	to store all of the different argument combinations that are
	created.  Add support for VSX conversion builtins.
	(rs6000_preferred_reload_class): Add TImode support.
	(reg_classes_cannot_change_mode_class): Be stricter about VSX and
	Altivec vector types.
	(rs6000_emit_vector_cond_expr): Use VSX_MOVE_MODE, not
	VSX_VECTOR_MOVE_MODE.
	(rs6000_handle_altivec_attribute): Allow __vector long on VSX.

	* config/rs6000/vsx.md (VSX_D): New iterator for vectors with
	64-bit elements.
	(VSX_M): New iterator for 128 bit types for moves, except for
	TImode.
	(VSm, VSs, VSr): Add TImode.
	(VSr4, VSr5): New mode attributes for float<->double conversion.
	(VSX_SPDP): New iterator for float<->double conversion.
	(VS_spdp_*): New mode attributes for float<->double conversion.
	(UNSPEC_VSX_*): Rename unspec constants to remove XV from the
	names.  Change all users.
	(vsx_mov<mode>): Drop TImode support here.
	(vsx_movti): New TImode support, allow GPRs, but favor VSX
	registers.
	(vsx_<VS_spdp_insn>): New support for float<->double conversions.
	(vsx_xvcvdpsp): Delete, move into vsx_<VS_spdp_insn>.
	(vsx_xvcvspdp): Ditto.
	(vsx_xvcvuxdsp): New conversion insn.
	(vsx_xvcvspsxds): Ditto.
	(vsx_xvcvspuxds): Ditto.
	(vsx_concat_<mode>): Generalize V2DF permute/splat operations to
	include V2DI.
	(vsx_set_<mode>): Ditto.
	(vsx_extract_<mode>): Ditto.
	(vsx_xxpermdi_<mode>): Ditto.
	(vsx_splat<mode>): Ditto.

	* config/rs6000/rs6000.h (VSX_VECTOR_MOVE_MODE): Delete.
	(VSX_MOVE_MODE): Add TImode.
	(IRA_COVER_CLASSES): Delete.
	(IRA_COVER_CLASSES_PRE_VSX): New cover classes for machines
	without VSX where float and altivec are different registers.
	(IRA_COVER_CLASS_VSX): New cover classes for machines with VSX
	where float and altivec are part of the same register class.

	* config/rs6000/altivec.md (VM2): New iterator for 128-bit types,
	except TImode.
	(altivec_mov<mode>): Drop movti mode here.
	(altivec_movti): Add movti insn, and allow GPRs, but favor altivec
	registers.

2009-04-17  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* DEV-PHASE: Set to IBM Advanced-Toolchain, prerelease.
	* REVISION: Set to [merged from gcc-4_3-branch, svn 146202].

	Apply the patches from the opensuse toolchain
	cross-ppc64-gcc-icecream-backend-4.3.3_20081022-9.3:
	* ../patches/patch-003-gcc-noalias-warn.diff
	* ../patches/patch-004-gcc-add-defaultsspec.diff
	* ../patches/patch-005-boehm-gc-strict-aliasing.patch
	* ../patches/patch-007-acats-timeout.patch
	* ../patches/patch-010-program-transform-name.diff
	* ../patches/patch-011-program-transform-name-tools.diff
	* ../patches/patch-012-gcc4-ppc64-m32-m64-multilib-only.patch
	* ../patches/patch-022-libjava-no-static.diff
	* ../patches/patch-023-libjava-no-multilib.diff
	* ../patches/patch-024-tls-no-direct.diff
	* ../patches/patch-025-pr27880.diff
	* ../patches/patch-028-pr33763.diff
	* ../patches/patch-030-Wunprototyped-calls.diff
	* ../patches/patch-041-fpreserve-function-arguments43.patch
	* ../patches/patch-042-pr27975.diff
	* ../patches/patch-043-build-id.diff
	* ../patches/patch-045-nvl423594.patch
	* ../patches/patch-046-pr32277.diff
	* ../patches/patch-050-gcc43-c++-builtin-redecl.patch
	* ../patches/patch-051-gcc41-ia64-stack-protector.patch
	* ../patches/patch-053-gcc43-libgomp-omp_h-multilib.patch
	* ../patches/patch-054-gcc43-pr34037.patch
	* ../patches/patch-056-gcc43-pr36741-revert.patch
	* ../patches/patch-057-gcc41-ppc32-retaddr.patch
	* ../patches/patch-058-gcc43-pr37189.patch
	* ../patches/patch-059-gcc43-x86_64-va_start.patch
	* ../patches/patch-060-gcc43-textdomain.patch
	* ../patches/patch-070-pr34043-1.diff
	* ../patches/patch-071-pr34043-2.diff
	* ../patches/patch-072-pr34043-3.diff
	* ../patches/patch-073-pr34043-4.diff
	* ../patches/patch-074-pr34043-5.diff
	* ../patches/patch-076-amd-SSE5-shift-ppc-2.diff
	* ../patches/patch-077-amd-SSE5-shift.diff
	* ../patches/patch-078-amd-cunroll-1.diff
	* ../patches/patch-079-amd-cunroll-2.diff
	* ../patches/patch-080-intel303993-aes.diff
	* ../patches/patch-081-amd-cvect-1.diff
	* ../patches/patch-082-amd-cvect-2.diff
	* ../patches/patch-090-ibm304071-z10-1
	* ../patches/patch-091-ibm304071-z10-2
	* ../patches/patch-092-ibm304071-z10-3
	* ../patches/patch-093-ibm304071-z10-4
	* ../patches/patch-094-ibm304071-z10-5
	* ../patches/patch-095-ibm304071-z10-6
	* ../patches/patch-096-pr36745.diff
	* ../patches/patch-097-pr36822.diff
	* ../patches/patch-099-ibm-vector-keyword-1
	* ../patches/patch-100-ibm-vector-keyword-2
	* ../patches/patch-101-ibm-vector-keyword-3
	* ../patches/patch-102-ibm304071-z10-7
	* ../patches/patch-103-ibm304134-power7-1
	* ../patches/patch-104-ibm-cell-split
	* ../patches/patch-105-ibm-cell-split-fixes
	* ../patches/patch-119-nvl426087.patch
	* ../patches/patch-120-ibm304071-z10-8
	* ../patches/patch-122-nvl436041.patch
	* ../patches/patch-123-gcc43-no-unwind-tables.diff
	* ../patches/patch-124-nvl441016.patch
	* ../patches/patch-126-nvl447669.diff
	* ../patches/patch-130-sap303956-utf16-1.diff
	* ../patches/patch-131-sap303956-utf16-2.diff
	* ../patches/patch-132-sap303956-utf16-3.diff
	* ../patches/patch-133-sap303956-utf16-4.diff
	* ../patches/patch-134-sap303956-utf16-mangling.diff

	Patches that opensuse installs, but not installed in this tree for
	a variety of reasons, including the patch is already installed on
	the upstream branch, the patch is obsoleted by recent powerpc
	work, or it is for the opensuse specific environment:
	* ../patches/unused-001-gcc-dir-version.patch
	* ../patches/unused-002-gcc-sles-version.patch
	* ../patches/unused-006-suse-record-gcc-opts.diff
	* ../patches/unused-031-pr27799.diff
	* ../patches/unused-040-pr36765.diff
	* ../patches/unused-047-pr36438.diff
	* ../patches/unused-048-pr37868.diff
	* ../patches/unused-049-pr38051.diff
	* ../patches/unused-052-gcc43-java-debug-iface-type.patch
	* ../patches/unused-055-gcc41-java-slow_pthread_self.patch
	* ../patches/unused-061-gcc43-rename-info-files.patch
	* ../patches/unused-075-amd-SSE5-shift-ppc-1.diff
	* ../patches/unused-106-nvl425806.patch
	* ../patches/unused-109-nvl425783.patch
	* ../patches/unused-110-nvl425784.patch
	* ../patches/unused-111-nvl425788.patch
	* ../patches/unused-112-nvl425789.patch
	* ../patches/unused-114-nvl425791.patch
	* ../patches/unused-115-nvl425794.patch
	* ../patches/unused-116-nvl425798-1.patch
	* ../patches/unused-117-nvl425798-2.patch
	* ../patches/unused-118-nvl425799.patch
	* ../patches/unused-121-nvl434500.patch
	* ../patches/unused-125-common-sysroot-gcc.diff

2009-04-16  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* Changelog.power7: Copy of the Changelog from the 4.5 development
	branch.

	* config/rs6000/rs6000-protos.h (rs6000_has_indirect_jump_p): New
	declaration.
	(rs6000_set_indirect_jump): Ditto.

	* config/rs6000/rs6000.c (struct machine_function): Add
	indirect_jump_p field.
	(rs6000_override_options): Wrap warning messages in N_().  If
	-mvsx was implicitly set, don't give a warning for -msoft-float,
	just silently turn off vsx.
	(rs6000_secondary_reload_inner): Handle more possible combinations
	of addresses.  Don't use strict register checking, since pseudos
	may still be present.
	(register_move_cost): If -mdebug=cost, print out cost information.
	(rs6000_memory_move_cost): Ditto.
	(rs6000_has_indirect_jump_p): New function, return true if
	current function has an indirect jump.
	(rs6000_set_indirect_jump): New function, note that an indirect
	jump has been generated.

	* config/rs6000/rs6000.md (indirect_jump): Note that we've
	generated an indirect jump.
	(tablejump): Ditto.
	(doloop_end): Do not generate decrement ctr and branch
	instructions if an indirect jump has been generated.

	* config/rs6000/vector.md (vec_reload_and_plus_<mptrsize>): Allow
	register+small constant in addition to register+register, and
	restrict the insn to only match during reload and afterwards.
	(vec_reload_and_reg_<mptrsize>): Allow for and of register
	indirect to not generate insn not found message.

2009-04-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR driver/39293
	* gcc.c (save_temps_flag): Add support for -save-temps=obj.
	(cpp_options): Ditto.
	(default_compilers): Ditto.
	(display_help): Ditto.
	(process_command): Ditto.
	(do_spec_1): Ditto.
	(set_input): Use lbasename instead of duplicate code.
	(save_temps_prefix): New static for -save-temps=obj.
	(save_temps_length): Ditto.
	
	* doc/invoke.texi (-save-temps=obj): Document new variant to
	-save-temps switch.

2009-04-13  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Backport more power7 development changes
	* config/rs6000/e300c2c3.md: Backport from 4.5 development
	version.
	* config/rs6000/vector.md: Ditto.
	* config/rs6000/xfpu.md: Ditto.
	* config/rs6000/vsx.md: Ditto.
	* config/rs6000/e500mc.md: Ditto.
	* config/rs6000/t-rs6000 (MD_INCLUDES): Ditto.
	
	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Backport
	from 4.5 development version.
	(altivec_overloaded_builtins): Ditto.
	(rs6000_builtin_type_compatible): Ditto.

	* config/rs6000/rs6000.c (altivec_expand_lv_builtin): Backport
	from 4.5 development version.
	(vsx_expand_builtin): Ditto.
	(get_vec_cmp_insn): Ditto.
	(get_vsel_insn): Ditto.
	(rs6000_emit_vector_select): Ditto.
	(rs6000_init_hard_regno_mode_ok): Ditto.
	(rs6000_builtin_mask_for_load): Ditto.
	(rs6000_builtin_conversion): Ditto.
	(rs6000_builtin_mul_widen_even): Ditto.
	(rs6000_builtin_mul_widen_odd): Ditto.
	(rs6000_expand_vector_init): Ditto.
	(rs6000_expand_vector_set): Ditto.
	(rs6000_expand_vector_extract): Ditto.
	(rs6000_conditional_register_usage): Ditto.
	(rs6000_emit_move): Ditto.
	(USE_ALTIVEC_FOR_ARG_P): Ditto.
	(function_arg_boundary): Ditto.
	(function_arg_advance): Ditto.
	(bdesc_3arg): Ditto.
	(bdesc_2arg): Ditto.
	(bdesc_abs): Ditto.
	(bdesc_1arg): Ditto.
	(altivec_epxand_ld_builtin): Ditto.
	(altivec_expand_st_builtin): Ditto.
	(altivec_expand_builtin): Ditto.
	(rs6000_expand_builtin): Ditto.
	(rs6000_init_builtins): Ditto.
	(rs6000_emit_vector_compare_vsx): Ditto.
	(rs6000_emit_vector_compare_altivec): Ditto.
	(rs6000_emit_vector_compare): Ditto.
	(rs6000_emit_vector_cond_expr): Ditto.
	(rs6000_emit_minmax): Ditto.

	* config/rs6000/altivec.md (UNSPEC_*): Backport from 4.5
	development version.
	(altivec_lvx_<mode>): Ditto.
	(altivec_stv_<mode>): Ditto.
	(mov<mode>): Ditto.
	(mov<mode>_internal): Ditto.
	(altivec_mov<mode>): Ditto.
	(gpr register move splits): Ditto.
	(addv4sf3): Ditto.
	(altivec_addv4sf3): Ditto.
	(subv4sf3): Ditto.
	(altivec_subv4sf3): Ditto.
	(altivec_vcmp*): Ditto.
	(mulv4sf3): Ditto.
	(altivec_mulv4sf3): Ditto.
	(mulv8hi3): Ditto.
	(altivec_vnmsubfp): Ditto.
	(smaxv4sf3): Ditto.
	(altivec_smaxv4sf3): Ditto.
	(sminv4sf3): Ditto.
	(altivec_sminv4sf3): Ditto.
	(altivec_vmrghsf): Ditto.
	(altivec_vmrglw): Ditto.
	(altivec_vmrglsf): Ditto.
	(altivec_vmrglw): Ditto.
	(and<mode>3): Ditto.
	(altivec_and<mode>3): Ditto.
	(ior<mode>3): Ditto.
	(altivec_ior<mode>3): Ditto.
	(xor<mode>3): Ditto.
	(altivec_xor<mode>3): Ditto.
	(one_cmpl<mode>2): Ditto.
	(altivec_one_cmpl<mode>2): Ditto.
	(altivec_nor<mode>3): Ditto.
	(andc<mode>3): Ditto.
	(altivec_andc<mode>3): Ditto.
	(altivec_vsl<VI_char>): Ditto.
	(ashl<mode>3): Ditto.
	(ftruncv4sf2): Ditto.
	(vcond*): Ditto.
	(altivec_vsel*): Ditto.
	(vec_init*): Ditto.
	(vec_set*): Ditto.
	(vec_extract*): Ditto.
	(absv4sf2): Ditto.
	(altivec_absv4sf2): Ditto.
	(negv4sf2): Ditto.
	(altivec_negv4sf2): Ditto.
	(altivec_lv*): Ditto.
	(altivec_stv*): Ditto.
	(vec_interleave_highv4sf): Ditto.
	(vec_interleave_lowv4sf): Ditto.
	
	* config/rs6000/rs6000.md (top level): Include e300c2c3.md,
	e500md.md, vector.md, and vsx.md.

	* config.in (CHAR_BIT): Backport from 4.5 development version.
	(GETGROUPS_T): Ditto.
	(HAVE_ALPHASORT): Ditto.
	(HAVE_AS_TLS_MARKERS): Ditto.
	(HAVE_DLFCN_H): Ditto.
	(HAVE_GAS_CFI_DIRECTIVE): Ditto.
	(HAVE_GAS_CFI_PERSONALITY_DIRECTIVE): Ditto.
	(HAVE_GAS_LCOMM_WITH_ALGINMENT): Ditto.
	(HAVE_GETIPINFO): Ditto.
	(HAVE_SCANDIR): Ditto.
	(LT_OBJDIR): Ditto.

	* doc/invoke.texi (-mgen-cell-microcode): Backport from 4.5
	development version.
	(-mwarn-cell-microcode): Ditto.
	(-mvsx): Ditto.
	(-msingle-float): Ditto.
	(-mdouble-float): Ditto.
	(-msimple-fpu): Ditto.
	(-mfpu): Ditto.
	(-mxlinx-fpu): Ditto.
	(-mmulhw): Ditto.
	(-mdlmzb): Ditto.
	(-mavoid-indexed-addresses): Ditto.
	(-msdata-data): Ditto.
	(-mtls-markers): Ditto.

2009-04-10  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Backport more power7 development changes
	* config/rs6000/aix53.h (ASM_CPU_SPEC): Backport from 4.5
	development version.

	* config/rs6000/spe.md (spe_fixuns_truncdfsi2): Backport from 4.5
	development version.
	(floating comparison ops): Ditto.
	(save_gprregs_spe): Ditto.
	(restore_gprregs_spe): Ditto.
	(return_and_restore_gprregs_spe): Ditto.

	* config/rs6000/constraints.md (w* constraints): Add new VSX
	constraints, wd, wf, ws, wa, wZ.
	(j constraint): Add constraint for vector of all 0's.

	* config/rs6000/predicates.md (vsx_register_operand): New insns
	from 4.5 development.
	(vfloat_operand): Ditto.
	(vint_operand): Ditto.
	(vlogical_operand): Ditto.
	(cc_reg_no_micro_cr0_operand): Ditto.
	(word_offset_memref_operand): Ditto.
	(altivec_indexed_or_indirect_operand): Ditto.
	(vec_init_operand): Ditto.
	(easy_fp_constant): Add E500 single/double float support, and
	using xxlxor to clear register under VSX.
	(indexed_or_indirect_operand): Add VSX support.
	(save_word_operation): Backport from development branch.

	* config/rs6000/linux64.opt (-mprofile-kernel): Change to be a
	variable, not a bit mask.

	* config/rs6000/sysv4.opt (-mbit-align): Change to be a variable,
	not a bit mask.
	(-mbit-word): Ditto.
	(-mregnames): Ditto.
	(-mprototype): Change variable name to be upper case.
	(-mwindiss): Deleted in 4.5.
	(-msdata): Update documentation.

	* config/rs6000/rs6000-protos.h (rs6000_preferred_reload_class):
	Backport from 4.5 development version.
	(rs6000_secondary_memory_needed): Ditto.
	(rs6000_cannot_change_mode_class): Ditto.
	(rs6000_secondary_reload_inner): Ditto.
	(rs6000_output_addr_const_extra): Ditto.
	(rs6000_find_base_term): Ditto.
	(rs6000_hard_regno_nregs): Ditto.
	(rs6000_xcoff_strip_dollar): Ditto.
	(rs6000_final_prescan_insn): Ditto.

	* config/rs6000/aix.h (LIBSTDCXX_STATIC): Backport from 4.5
	development version.
	(ADJUST_FIELD_ALIGN): Ditto.
	(GP_SAVE_INLINE): Ditto.

	* config/rs6000/rs6000.opt (-mpopcntd): Backport from 4.5
	development sources.
	(-mvsx*): Ditto.
	(-mpower7-adjust-cost): Ditto.
	(-mdisallow-float-in-lr-ctr): Ditto.
	(-mupdate): Ditto.
	(-mavoid-indexed-addresses): Ditto.
	(-mtls-markers): Ditto.
	(-misel): Ditto.
	(-mspe): Ditto.
	(-mgen-cell-microcode): Ditto.
	(-mwarn-cell-microcode): Ditto.
	(-msingle-float): Ditto.
	(-mdouble-float): Ditto.
	(-msimple-fpu): Ditto.
	(-mfpu=*): Ditto.
	(-mxlinx-fpu): Ditto.

	* config/rs6000/linux64.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Use
	SET_PROFILE_KERNEL to turn off -mprofile-kernel.

	* config/rs6000/darwin.h (GP_SAVE_INLINE): Backport from 4.5.

	* config/rs6000/rs6000.c (rs6000_cell_microcode): Backport from
	4.5 development version.
	(rs6000_spe): Ditto.
	(rs6000_debug_reg): Ditto.
	(rs6000_debug_addr): Ditto.
	(rs6000_debug_cost): Ditto.
	(rs6000_class_max_nregs): Ditto.
	(rs6000_hard_regno_nregs): Ditto.
	(rs6000_regno_regclass): Ditto.
	(rs6000_vector_reload): Ditto.
	(rs6000_explicit_options): Ditto.
	(rs6000_vector_unit): Ditto.
	(rs6000_vector_mem): Ditto.
	(rs6000_vector_reg_class): Ditto.
	(rs6000_vector_align): Ditto.
	(rs6000_vsx_reg_class): Ditto.
	(ppce300c2c3_cost): Ditto.
	(ppce500mc_cost): Ditto.
	(power7_cost): Ditto.
	(spe_synthesize_frame_size): Ditto.
	(rs6000_emit_allocate_stack): Ditto.
	(constant_popl_expr_1): Ditto.
	(no_global_regs_above): Ditto.
	(rs6000_savres_routine_sym): Ditto.
	(rs6000_emit_stack_reset): Ditto.
	(rs6000_make_savres_rtx): Ditto.
	(rs6000_savres_strategy): Ditto.
	(rs6000_restore_saved_cr): Ditto.
	(rs6000_debug_rtx_costs): Ditto.
	(rs6000_debug_address_cost): Ditto.
	(rs6000_debug_adjust_cost): Ditto.
	(rs6000_secondary_reload): Ditto.
	(rs6000_secondary_reload_inner): Ditto.
	(SET_PROFILE_KERNEL): Ditto.
	(TARGET_SECONDARY_RELOAD): Ditto.
	(rs6000_hard_regno_nregs_internal): Ditto.
	(rs6000_hard_regno_mode_ok): Ditto.
	(rs6000_debug_reg_print): Ditto.
	(rs6000_debug_vector_unit): Ditto.
	(rs6000_init_hard_regno_mode_ok): Ditto.
	(rs6000_override_options): Ditto.
	(optimization_options): Ditto.
	(rs6000_parse_fpu_option): Ditto.
	(rs6000_handle_option): Ditto.
	(rs6000_file_start): Ditto.
	(output_vec_const_move): Ditto.
	(paired_expand_vector_init): Ditto.
	(rs6000_expand_vector_init): Ditto.
	(invalid_e500_subreg): Ditto.
	(constant_pool_expr_1): Ditto.
	(constant_pool_expr): Ditto.
	(toc_relative_expr_p): Ditto.
	(legitimate_constant_pool_address_p): Ditto.
	(rs6000_legitimate_offset_address_p): Ditto.
	(avoiding_indexed_address_p): Ditto.
	(rs6000_legitimize_address): Ditto.
	(rs6000_legitimize_tls_address): Ditto.
	(rs6000_tls_symbol_ref_1): Ditto.
	(rs6000_legitimize_reload_address): Ditto.
	(rs6000_legitimate_address): Ditto.
	(rs6000_mode_dependent_address): Ditto.
	(rs6000_find_base_term): Ditto.
	(rs6000_hard_regno_nregs): Ditto.
	(rs6000_conditional_register_usage): Ditto.
	(rs6000_emit_move): Ditto.
	(function_arg_advance): Ditto.
	(spe_build_register_parallel): Ditto.
	(rs6000_spe_function_arg): Ditto.
	(function_arg): Ditto.
	(setup_incoming_varargs): Ditto.
	(rs6000_va_start): Ditto.
	(rs6000_gimplify_va_arg): Ditto.
	(rs6000_init_builtins): Ditto.
	(altivec_init_builtins): Ditto.
	(rs6000_common_init_builtins): Ditto.
	(rs6000_secondary_memory_needed_rtx): Ditto.
	(rs6000_check_sdmode): Ditto.
	(rs6000_reload_register_type): Ditto.
	(rs6000_preferred_reload_class): Ditto.
	(rs6000_secondary_memory_needed): Ditto.
	(rs6000_secondary_reload_class): Ditto.
	(rs6000_cannot_change_mode_class): Ditto.
	(print_operand): Ditto.
	(print_operand_address): Ditto.
	(rs6000_output_addr_const_extra): Ditto.
	(rs6000_generate_compare): Ditto.
	(rs6000_emit_cmove): Ditto.
	(rs6000_split_multireg_move): Ditto.
	(emit_frame_save): Ditto.
	(FIRST_SAVRES_REGISTER): Ditto.
	(LAST_SAVRES_REGISTER): Ditto.
	(N_SAVRES_REGISTERS): Ditto.
	(rs6000_emit_prologue): Ditto.
	(ALWAYS_RESTORE_ALTIVEC_BEFORE_POP): Ditto.
	(rs6000_emit_epilogue): Ditto.
	(rs6000_output_mi_thunk): Ditto.
	(rs6000_xcoff_strip_dollar): Ditto.
	(rs6000_output_symbol_ref): Ditto.
	(output_toc): Ditto.
	(output_profile_hook): Ditto.
	(rs6000_adjust_cost): Ditto.
	(rs6000_sched_reorder2): Ditto.
	(redefine_groups): Ditto.
	(pad_groups): Ditto.
	(rs6000_handle_altivec_attribute): Ditto.
	(rs6000_elf_encode_section_info): Ditto.
	(compare_section_name): Ditto.
	(machopic_output_stub): Ditto.
	(rs6000_register_move_cost): Ditto.
	(rs6000_memory_move_cost): Ditto.
	(rs600_emit_popcount): Ditto.
	(rs6000_libcall_value): Ditto.
	(rs6000_is_opaque_type): Ditto.
	(rs6000_vector_mode_support_p): Ditto.
	(rs6000_final_prescan_insn): Ditto.

	* config/rs6000/rs6000.h (ASM_CPU_SPEC): Backport from 4.5
	development version.
	(EXTRA_SPECS): Ditto.
	(ASM_CPU_NATIVE_SPEC): Ditto.
	(TARGET_TLS_MARKERS): Ditto.
	(processor_type): Ditto.
	(TARGET_*_FLOAT): Ditto.
	(TARGET_*_FPU): Ditto.
	(fpu_type_t): Ditto.
	(fpu_type): Ditto.
	(rs6000_debug_reg): Ditto.
	(rs6000_debug_addr): Ditto.
	(rs6000_debug_cost): Ditto.
	(TARGET_DEBUG_REG): Ditto.
	(TARGET_DEBUG_ADDR): Ditto.
	(TARGET_DEBUG_COST): Ditto.
	(rs6000_xilinx_fpu): Ditto.
	(rs6000_vector): Ditto.
	(VECTOR_UNIT_*): Ditto.
	(VECTOR_MEM_*): Ditto.
	(VECTOR_ALIGN): Ditto.
	(TARGET_ISEL): Ditto.
	(TARGET_ISEL64): Ditto.
	(UNITS_PER_VSX_WORD): Ditto.
	(STACK_BOUNDARY): Ditto.
	(LOCAL_ALIGNMENT): Ditto.
	(MEMBER_TYPE_FORCES_BLK): Ditto.
	(CONSTANT_ALIGNMENT): Ditto.
	(LOCAL_ALIGNMENT): Ditto.
	(SLOW_UNALIGNED_ACCESS): Ditto.
	(VSX_REGNO_P): Ditto.
	(VFLOAT_REGNO_P): Ditto.
	(VINT_REGNO_P): Ditto.
	(VLOGICAL_REGNO_P): Ditto.
	(HARD_REGNO_NREGS): Ditto.
	(VSX_VECTOR_MODE): Ditto.
	(VSX_VECTOR_MOVE_MODE): Ditto.
	(VSX_SCALAR_MODE): Ditto.
	(VSX_MODE): Ditto.
	(VSX_MOVE_MOVE): Ditto.
	(ALTIVEC_VECTOR_MODE): Ditto.
	(UNITS_PER_SIMD_WORD): Ditto.
	(MODES_TIEABLE_P): Ditto.
	(enum reg_class): Ditto.
	(REG_CLASS_NAMES): Ditto.
	(REG_CLASS_CONTENTS): Ditto.
	(IRA_COVER_CLASSES): Ditto.
	(REGNO_REG_CLASS): Ditto.
	(rs6000_vector_reg_class): Ditto.
	(rs6000_vsx_reg_class): Ditto.
	(VSX_REG_CLASS): Ditto.
	(PREFERRED_RELOAD_CLASS): Ditto.
	(SECONDARY_MEMORY_NEEDED): Ditto.
	(CLASS_MAX_NREGS): Ditto.
	(CANNOT_CHANGE_MODE_CLASS): Ditto.
	(STARTING_FRAME_OFFSET): Ditto.
	(STACK_DYNAMIC_OFFSET): Ditto.
	(FIND_BASE_TERM): Ditto.
	(FINAL_PRESCAN_INSN): Ditto.
	(ADDITIONAL_REGISTER_NAMES): Ditto.
	(OUTPUT_ADDR_CONST_EXTRA): Ditto.
	(enum rs6000_builtins): Ditto.
	(enum rs6000_builtin_type_index): Ditto.
	(V2DI_type_node): Ditto.
	(V2DF_type_mdoe): Ditto.
	(intDI_type_internal_node): Ditto.
	(uintDI_type_internal_node): Ditto.

	* config/rs6000/aix61.h (ASM_CPU_SPEC): Backport from 4.5
	development version.

	* config/rs6000/rs6000.md (UNSPEC_TOCREL): Ditto.
	(UNSPEC_MACHOPIC_OFFSET): Ditto.
	(fp_type attribute): Ditto.
	(cpu attribute): Ditto.
	(cell_micro): Ditto.
	(FP iterator): Ditto.
	(sel attribute): Ditto.
	(ptrsize attribute): Ditto.
	(tptrsize attribute): Ditto.
	(mptrsize attribute): Ditto.
	(zero extend/set CR and split): Ditto.
	(sign extend/set CR and split): Ditto.
	(logical operator/set CR and split): Ditto.
	(sign extend insns): Ditto.
	(andsi3*): Ditto.
	(anddi3*): Ditto.
	(rotate*): Ditto.
	(all floating point operations): Ditto.
	(movsicc): Ditto.
	(mov<mode>cc): Ditto.
	(isel_signed): Ditto.
	(isel_signed_<mode>): Ditto.
	(isel_unsigned): Ditto.
	(isel_unsigned_<mode>): Ditto.
	(smindi3): Ditto.
	(smaxdi3): Ditto.
	(umindi3): Ditto.
	(umaxdi3): Ditto.
	(movsi_got): Ditto.
	(movdf_hardfloat32): Ditto.
	(movdf_hardfloat64_mfpgpr): Ditto.
	(movdf_hardfloat64): Ditto.
	(stmsi*): Ditto.
	(mov*_<mode>_update): Ditto.
	(mov*_<mode>_update_stack): Ditto.
	(tls_gd_*): Ditto.
	(TLSmode): Ditto.
	(tls_*): Ditto.
	(allocate_stack): Ditto.
	(builtin_setjmp_receiver): Ditto.
	(call_indirect*): Ditto.
	(call_value_indirect*): Ditto.
	(save_gpregs_<mode>): Ditto.
	(save_fpregs_<mode>): Ditto.
	(restore_gpregs_<mode>): Ditto.
	(restore_fpregs_<mode>): Ditto.

	* config/rs6000/sysv4.h (TARGET_PROTOTYPE): Backport from 4.5
	development.
	(SUBTARGET_OVERRIDE_OPTIONS): Ditto.
	(FP_SAVE_INLINE): Ditto.
	(GP_SAVE_INLINE): Ditto.
	(SAVE_FP_SUFFIX): Ditto.
	(RESTORE_FP_SUFFIX): Ditto.
	(LINK_START_SPEC): Ditto.
	(LINK_OS_SPEC): Ditto.
	(DRIVER_SELF_SPECS): Ditto.
	(CPP_SPEC): Ditto.
	(ENDFILE_SPEC): Ditto.
	(CRTSAVRES_DEFAULT_SPEC): Ditto.
	(LIB_WINDISS_SPEC): Ditto.
	(CPP_OS_WINDISS_SPEC): Ditto.
	(STARTFILE_WINDISS_SPEC): Ditto.
	(ENDFILE_WINDDISS_SPEC): Ditto.
	(LINK_START_WINDISS_SPEC): Ditto.
	(LINK_OS_WINDISS_SPEC): Ditto.
	(SUBTARGET_EXTRA_SPECS): Ditto.

2009-02-24  Pat Haugen  <pthaugen@us.ibm.com>

	* config/rs6000/aix53.h (ASM_CPU_SPEC): Add Power7 entry.
	* config/rs6000/aix61.h (ASM_CPU_SPEC): Likewise.

2009-02-23  Pat Haugen  <pthaugen@us.ibm.com>

	Initial Power7 checkin made up of the following from our internal
	power7 development tree:

	2009-02-15  Pat Haugen  <pthaugen@us.ibm.com>
		    Michael Meissner  <meissner@linux.vnet.ibm.com>

	* doc/invoke.texi (-mpopcntd, -mno-popcntd): Document new switch.
	* configure.ac (powerpc*-*-*): Test for the assembler having the
	popcntd instruction.
	* configure: Regenerate.
	* config.in (HAVE_AS_POPCNTD): Add default value for configure
	test.
	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define
	_ARCH_PWR7 if the popcntd instruction is available.
	* config/rs6000/rs6000.opt (-mpopcntd): New switch to
	enable/disable the use of the popcntd and popcntw instructions.
	(-mfused-madd, -mno-fused-madd): Move to being a separate variable
	because we are out of mask bits.
	* config/rs6000/rs6000.c
	(insn_must_be_first_in_group): Add Power7 support.
	(insn_must_be_last_in_group): Ditto.
	(rs6000_emit_popcount): Add support for using the popcntw and
	popcntd instructions.
	* config/rs6000/rs6000.h (ASM_CPU_POWER7_SPEC): Switch to using
	popcntd as the test for a power7 assembler instead of vector
	scalar instructions.
	* (TARGET_POPCNTD): If assembler does not support the popcntd
	instruction, disable using it.
	* config/rs6000/rs6000.md
	(andi./andis./nor. patterns): Change insn type to fast_compare.
	(popcntwsi2): Add popcntw support.
	(popcntddi2): Add popcntd support.

	[gcc/testsuite patches]
	* gcc.target/powerpc/popcount-2.c: New file for power7 support.
	* gcc.target/powerpc/popcount-3.c: Ditto.

	2008-08-22  Pat Haugen  <pthaugen@us.ibm.com>

	Backport missing portions from FSF mainline:
	2008-08-08  Peter Bergner  <bergner@vnet.ibm.com>

	* doc/invoke.texi: Add cpu_type power7.
	* config.in (HAVE_AS_VSX): New.
	* configure.ac (HAVE_AS_VSX): Check for assembler support of the
	VSX instructions.
	* configure: Regenerate.
	* config/rs6000/rs6000.h (ASM_CPU_POWER7_SPEC): Define based on
	HAVE_AS_VSX.

	2008-08-22  Pat Haugen  <pthaugen@us.ibm.com>

	* config/rs6000/power7.md: Add power7 machine description.
	* config/rs6000/rs6000.c: (power7_cost): Define.
	(rs6000_override_options): Add power7 support.
	(rs6000_issue_rate): Likewise.
	* config/rs6000/rs6000.h: (processor_type): Add power7 entry.
	* config/rs6000/rs6000.md: (define_attr "cpu"):  Add power7.

	2008-04-28  Peter Bergner  <bergner@vnet.ibm.com>

	* config/rs6000/power7.md: New file.
	* config/rs6000/rs6000.md: Include it.

	2008-04-28  Peter Bergner  <bergner@vnet.ibm.com>

	Backport from FSF mainline:
	2008-02-26  Ben Elliston  <bje@au.ibm.com>

	* config/rs6000/rs6000.h (ASM_CPU_POWER5_SPEC): Define.
	(ASM_CPU_POWER6_SPEC): Likewise.
	(ASM_CPU_SPEC): Pass %(asm_cpu_power5) for -mcpu=power5.
	Likewise, pass %(asm_cpu_power6) for -mcpu=power6.
	(EXTRA_SPECS): Add asm_cpu_power5, asm_cpu_power6 spec strings.

	* config.gcc: Handle --with-cpu=power7.
	* config/rs6000/rs6000.c: Add power7 entry.
	* config/rs6000/rs6000.h: Handle -mcpu=power7.
	(ASM_CPU_POWER7_SPEC): Define.
	(ASM_CPU_SPEC): Pass %(asm_cpu_power7) for -mcpu=power7.
	(EXTRA_SPECS): Add asm_cpu_power7 string.

