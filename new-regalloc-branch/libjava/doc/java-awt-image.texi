@deftypemethod BufferedImage {public void} coerceData (boolean@w{ }@var{premultiplied}) 

@end deftypemethod
@deftypemethod BufferedImage {public WritableRaster} copyData (java.awt.image.WritableRaster@w{ }@var{dest}) 

@end deftypemethod
@deftypemethod BufferedImage {public Graphics2D} createGraphics () 

@end deftypemethod
@deftypemethod BufferedImage {public void} flush () 

@end deftypemethod
@deftypemethod BufferedImage {public WritableRaster} getAlphaRaster () 

@end deftypemethod
@deftypemethod BufferedImage {public ColorModel} getColorModel () 

@end deftypemethod
@deftypemethod BufferedImage {public Raster} getData () 

@end deftypemethod
@deftypemethod BufferedImage {public Raster} getData (java.awt.Rectangle@w{ }@var{rectangle}) 

@end deftypemethod
@deftypemethod BufferedImage {public Graphics} getGraphics () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getHeight () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getHeight (java.awt.image.ImageObserver@w{ }@var{imageobserver}) 

@end deftypemethod
@deftypemethod BufferedImage {public int} getMinTileX () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getMinTileY () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getMinX () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getMinY () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getNumXTiles () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getNumYTiles () 

@end deftypemethod
@deftypemethod BufferedImage {public Object} getProperty (java.lang.String@w{ }@var{string}) 

@end deftypemethod
@deftypemethod BufferedImage {public Object} getProperty (java.lang.String@w{ }@var{string}, java.awt.image.ImageObserver@w{ }@var{imageobserver}) 

@end deftypemethod
@deftypemethod BufferedImage {public String} getPropertyNames () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getRGB (int@w{ }@var{x}, int@w{ }@var{y}) 

@end deftypemethod
@deftypemethod BufferedImage {public int} getRGB (int@w{ }@var{startX}, int@w{ }@var{startY}, int@w{ }@var{w}, int@w{ }@var{h}, int[]@w{ }@var{rgbArray}, int@w{ }@var{offset}, int@w{ }@var{scanlineStride}) 

@end deftypemethod
@deftypemethod BufferedImage {public WritableRaster} getRaster () 

@end deftypemethod
@deftypemethod BufferedImage {public SampleModel} getSampleModel () 

@end deftypemethod
@deftypemethod BufferedImage {public ImageProducer} getSource () 

@end deftypemethod
@deftypemethod BufferedImage {public Vector} getSources () 

@end deftypemethod
@deftypemethod BufferedImage {public BufferedImage} getSubimage (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod BufferedImage {public Raster} getTile (int@w{ }@var{tileX}, int@w{ }@var{tileY}) 

@end deftypemethod
@deftypemethod BufferedImage {public int} getTileGridXOffset () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getTileGridYOffset () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getTileHeight () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getTileWidth () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getType () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getWidth () 

@end deftypemethod
@deftypemethod BufferedImage {public int} getWidth (java.awt.image.ImageObserver@w{ }@var{imageobserver}) 

@end deftypemethod
@deftypemethod BufferedImage {public WritableRaster} getWritableTile (int@w{ }@var{tileX}, int@w{ }@var{tileY}) 

@end deftypemethod
@deftypemethod BufferedImage {public Point} getWritableTileIndices () 

@end deftypemethod
@deftypemethod BufferedImage {public boolean} hasTileWriters () 

@end deftypemethod
@deftypemethod BufferedImage {public boolean} isAlphaPremultiplied () 

@end deftypemethod
@deftypemethod BufferedImage {public boolean} isTileWritable (int@w{ }@var{tileX}, int@w{ }@var{tileY}) 

@end deftypemethod
@deftypemethod BufferedImage {public void} releaseWritableTile (int@w{ }@var{tileX}, int@w{ }@var{tileY}) 

@end deftypemethod
@deftypemethod BufferedImage {public void} setData (java.awt.image.Raster@w{ }@var{src}) 

@end deftypemethod
@deftypemethod BufferedImage {public void} setRGB (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{argb}) 

@end deftypemethod
@deftypemethod BufferedImage {public void} setRGB (int@w{ }@var{startX}, int@w{ }@var{startY}, int@w{ }@var{w}, int@w{ }@var{h}, int[]@w{ }@var{argbArray}, int@w{ }@var{offset}, int@w{ }@var{scanlineStride}) 

@end deftypemethod
@deftypemethod BufferedImage {public String} toString () 

@end deftypemethod
@deftypemethod ColorModel {public static ColorModel} getRGBdefault () 

@end deftypemethod
@deftypemethod ColorModel {public final boolean} hasAlpha () 

@end deftypemethod
@deftypemethod ColorModel {public final boolean} isAlphaPremultiplied () 

@end deftypemethod
@deftypemethod ColorModel {public int} getPixelSize () 

@end deftypemethod
@deftypemethod ColorModel {public int} getComponentSize (int@w{ }@var{componentIdx}) 

@end deftypemethod
@deftypemethod ColorModel {public int} getComponentSize () 

@end deftypemethod
@deftypemethod ColorModel {public int} getTransparency () 

@end deftypemethod
@deftypemethod ColorModel {public int} getNumComponents () 

@end deftypemethod
@deftypemethod ColorModel {public int} getNumColorComponents () 

@end deftypemethod
@deftypemethod ColorModel {public abstract int} getRed (int@w{ }@var{pixel}) 
Converts pixel value to sRGB and extract red int sample scaled
 to range [0, 255].
@end deftypemethod
@deftypemethod ColorModel {public abstract int} getGreen (int@w{ }@var{pixel}) 
Converts pixel value to sRGB and extract green int sample
 scaled to range [0, 255].
@end deftypemethod
@deftypemethod ColorModel {public abstract int} getBlue (int@w{ }@var{pixel}) 
Converts pixel value to sRGB and extract blue int sample
 scaled to range [0, 255].
@end deftypemethod
@deftypemethod ColorModel {public abstract int} getAlpha (int@w{ }@var{pixel}) 
Extract alpha int sample from pixel value, scaled to [0, 255].
@end deftypemethod
@deftypemethod ColorModel {public int} getRGB (int@w{ }@var{pixel}) 
Converts a pixel int value of the color space of the color
 model to a sRGB pixel int value.

 This method is typically overriden in subclasses to provide a
 more efficient implementation.
@end deftypemethod
@deftypemethod ColorModel {public int} getRed (java.lang.Object@w{ }@var{inData}) 
Converts pixel in the given array to sRGB and extract blue int
 sample scaled to range [0-255].

 This method is typically overriden in subclasses to provide a
 more efficient implementation.
@end deftypemethod
@deftypemethod ColorModel {public int} getGreen (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod ColorModel {public int} getBlue (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod ColorModel {public int} getAlpha (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod ColorModel {public int} getRGB (java.lang.Object@w{ }@var{inData}) 
Converts a pixel in the given array of the color space of the
 color model to an sRGB pixel int value.

 

This method performs the inverse function of
 @code{getDataElements(int rgb, Object pixel)}.
 I.e. @code{(rgb == cm.getRGB(cm.getDataElements(rgb,
 null)))}.
@end deftypemethod
@deftypemethod ColorModel {public Object} getDataElements (int@w{ }@var{rgb}, java.lang.Object@w{ }@var{pixel}) 
Converts an sRGB pixel int value to an array containing a
 single pixel of the color space of the color model.
 
 

This method performs the inverse function of
 @code{getRGB(Object inData)}.

 Outline of conversion process:

 
@itemize @bullet


 
@item
Convert rgb to normalized [0.0, 1.0] sRGB values.


 
@item
Convert to color space components using fromRGB in
 ColorSpace.


 
@item
If color model has alpha and should be premultiplied,
 multiply color space components with alpha value


 
@item
Scale the components to the correct number of bits.


 
@item
Arrange the components in the output array

 
 
@end itemize

@end deftypemethod
@deftypemethod ColorModel {public int} getComponents (int@w{ }@var{pixel}, int[]@w{ }@var{components}, int@w{ }@var{offset}) 
Fills an array with the unnormalized component samples from a
 pixel value. I.e. decompose the pixel, but not perform any
 color conversion. 

 This method is typically overriden in subclasses to provide a
 more efficient implementation.
@end deftypemethod
@deftypemethod ColorModel {public int} getComponents (java.lang.Object@w{ }@var{pixel}, int[]@w{ }@var{components}, int@w{ }@var{offset}) 
Fills an array with the unnormalized component samples from an
 array of transferType containing a single pixel. I.e. decompose
 the pixel, but not perform any color conversion.

 This method is typically overriden in subclasses to provide a
 more efficient implementation.
@end deftypemethod
@deftypemethod ColorModel {public int} getUnnormalizedComponents (float[]@w{ }@var{normComponents}, int@w{ }@var{normOffset}, int[]@w{ }@var{components}, int@w{ }@var{offset}) 
Convert normalized components to unnormalized components.
@end deftypemethod
@deftypemethod ColorModel {public float} getNormalizedComponents (int[]@w{ }@var{components}, int@w{ }@var{offset}, float[]@w{ }@var{normComponents}, int@w{ }@var{normOffset}) 
Convert unnormalized components to normalized components.
@end deftypemethod
@deftypemethod ColorModel {public int} getDataElement (int[]@w{ }@var{components}, int@w{ }@var{offset}) 
Converts the unnormalized component samples from an array to a
 pixel value. I.e. composes the pixel from component samples, but
 does not perform any color conversion or scaling of the samples.
 
 This method performs the inverse function of
 @code{getComponents(int pixel, int[] components,
			       int offset)}. I.e.

 @code{(pixel == cm.getDataElement(cm.getComponents(pixel, null,
 0), 0))}.

 This method is typically overriden in subclasses to provide a
 more efficient implementation.
@end deftypemethod
@deftypemethod ColorModel {public Object} getDataElements (int[]@w{ }@var{components}, int@w{ }@var{offset}, java.lang.Object@w{ }@var{obj}) 

@end deftypemethod
@deftypemethod ColorModel {public boolean} equals (java.lang.Object@w{ }@var{obj}) 

@end deftypemethod
@deftypemethod ColorModel {public final ColorSpace} getColorSpace () 

@end deftypemethod
@deftypemethod ColorModel {public ColorModel} coerceData (java.awt.image.WritableRaster@w{ }@var{raster}, boolean@w{ }@var{isAlphaPremultiplied}) 

@end deftypemethod
@deftypemethod ColorModel {public boolean} isCompatibleRaster (java.awt.image.Raster@w{ }@var{raster}) 

@end deftypemethod
@deftypemethod ColorModel {public WritableRaster} createCompatibleWritableRaster (int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod ColorModel {public SampleModel} createCompatibleSampleModel (int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod ColorModel {public boolean} isCompatibleSampleModel (java.awt.image.SampleModel@w{ }@var{sm}) 

@end deftypemethod
@deftypemethod ColorModel {public void} finalize () 

@end deftypemethod
@deftypemethod ColorModel {public WritableRaster} getAlphaRaster (java.awt.image.WritableRaster@w{ }@var{raster}) 
Subclasses must override this method if it is possible for the
 color model to have an alpha channel.
@end deftypemethod
@deftypemethod ColorModel {public String} toString () 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getRed (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getGreen (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getBlue (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getAlpha (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getRGB (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getRed (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getGreen (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getBlue (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getAlpha (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getRGB (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public Object} getDataElements (int@w{ }@var{rgb}, java.lang.Object@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getComponents (int@w{ }@var{pixel}, int[]@w{ }@var{components}, int@w{ }@var{offset}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getComponents (java.lang.Object@w{ }@var{pixel}, int[]@w{ }@var{components}, int@w{ }@var{offset}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public int} getDataElement (int[]@w{ }@var{components}, int@w{ }@var{offset}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public Object} getDataElements (int[]@w{ }@var{components}, int@w{ }@var{offset}, java.lang.Object@w{ }@var{obj}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public ColorModel} coerceData (java.awt.image.WritableRaster@w{ }@var{raster}, boolean@w{ }@var{isAlphaPremultiplied}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public boolean} isCompatibleRaster (java.awt.image.Raster@w{ }@var{raster}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public WritableRaster} createCompatibleWritableRaster (int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public SampleModel} createCompatibleSampleModel (int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public boolean} isCompatibleSampleModel (java.awt.image.SampleModel@w{ }@var{sm}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public WritableRaster} getAlphaRaster (java.awt.image.WritableRaster@w{ }@var{raster}) 

@end deftypemethod
@deftypemethod ComponentColorModel {public boolean} equals (java.lang.Object@w{ }@var{obj}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public SampleModel} createCompatibleSampleModel (int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public SampleModel} createSubsetSampleModel (int[]@w{ }@var{bands}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public DataBuffer} createDataBuffer () 

@end deftypemethod
@deftypemethod ComponentSampleModel {public int} getOffset (int@w{ }@var{x}, int@w{ }@var{y}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public int} getOffset (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public final int} getSampleSize () 

@end deftypemethod
@deftypemethod ComponentSampleModel {public final int} getSampleSize (int@w{ }@var{band}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public final int} getBankIndices () 

@end deftypemethod
@deftypemethod ComponentSampleModel {public final int} getBandOffsets () 

@end deftypemethod
@deftypemethod ComponentSampleModel {public final int} getScanlineStride () 

@end deftypemethod
@deftypemethod ComponentSampleModel {public final int} getPixelStride () 

@end deftypemethod
@deftypemethod ComponentSampleModel {public final int} getNumDataElements () 

@end deftypemethod
@deftypemethod ComponentSampleModel {public Object} getDataElements (int@w{ }@var{x}, int@w{ }@var{y}, java.lang.Object@w{ }@var{obj}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public Object} getDataElements (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, java.lang.Object@w{ }@var{obj}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public void} setDataElements (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, java.lang.Object@w{ }@var{obj}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public int} getPixel (int@w{ }@var{x}, int@w{ }@var{y}, int[]@w{ }@var{iArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public int} getPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int[]@w{ }@var{iArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public int} getSample (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public void} setDataElements (int@w{ }@var{x}, int@w{ }@var{y}, java.lang.Object@w{ }@var{obj}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public void} setPixel (int@w{ }@var{x}, int@w{ }@var{y}, int[]@w{ }@var{iArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod ComponentSampleModel {public void} setSample (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, int@w{ }@var{s}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod DataBufferByte {public byte} getData () 

@end deftypemethod
@deftypemethod DataBufferByte {public byte} getData (int@w{ }@var{bank}) 

@end deftypemethod
@deftypemethod DataBufferByte {public byte} getBankData () 

@end deftypemethod
@deftypemethod DataBufferByte {public int} getElem (int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod DataBufferByte {public int} getElem (int@w{ }@var{bank}, int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod DataBufferByte {public void} setElem (int@w{ }@var{i}, int@w{ }@var{val}) 

@end deftypemethod
@deftypemethod DataBufferByte {public void} setElem (int@w{ }@var{bank}, int@w{ }@var{i}, int@w{ }@var{val}) 

@end deftypemethod
@deftypemethod DataBufferInt {public int} getData () 

@end deftypemethod
@deftypemethod DataBufferInt {public int} getData (int@w{ }@var{bank}) 

@end deftypemethod
@deftypemethod DataBufferInt {public int} getBankData () 

@end deftypemethod
@deftypemethod DataBufferInt {public int} getElem (int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod DataBufferInt {public int} getElem (int@w{ }@var{bank}, int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod DataBufferInt {public void} setElem (int@w{ }@var{i}, int@w{ }@var{val}) 

@end deftypemethod
@deftypemethod DataBufferInt {public void} setElem (int@w{ }@var{bank}, int@w{ }@var{i}, int@w{ }@var{val}) 

@end deftypemethod
@deftypemethod DataBuffer {public static int} getDataTypeSize (int@w{ }@var{dataType}) 

@end deftypemethod
@deftypemethod DataBuffer {public int} getDataType () 

@end deftypemethod
@deftypemethod DataBuffer {public int} getSize () 

@end deftypemethod
@deftypemethod DataBuffer {public int} getOffset () 

@end deftypemethod
@deftypemethod DataBuffer {public int} getOffsets () 

@end deftypemethod
@deftypemethod DataBuffer {public int} getNumBanks () 

@end deftypemethod
@deftypemethod DataBuffer {public int} getElem (int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod DataBuffer {public abstract int} getElem (int@w{ }@var{bank}, int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod DataBuffer {public void} setElem (int@w{ }@var{i}, int@w{ }@var{val}) 

@end deftypemethod
@deftypemethod DataBuffer {public abstract void} setElem (int@w{ }@var{bank}, int@w{ }@var{i}, int@w{ }@var{val}) 

@end deftypemethod
@deftypemethod DataBuffer {public float} getElemFloat (int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod DataBuffer {public float} getElemFloat (int@w{ }@var{bank}, int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod DataBuffer {public void} setElemFloat (int@w{ }@var{i}, float@w{ }@var{val}) 

@end deftypemethod
@deftypemethod DataBuffer {public void} setElemFloat (int@w{ }@var{bank}, int@w{ }@var{i}, float@w{ }@var{val}) 

@end deftypemethod
@deftypemethod DataBuffer {public double} getElemDouble (int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod DataBuffer {public double} getElemDouble (int@w{ }@var{bank}, int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod DataBuffer {public void} setElemDouble (int@w{ }@var{i}, double@w{ }@var{val}) 

@end deftypemethod
@deftypemethod DataBuffer {public void} setElemDouble (int@w{ }@var{bank}, int@w{ }@var{i}, double@w{ }@var{val}) 

@end deftypemethod
@deftypemethod DataBufferUShort {public short} getData () 

@end deftypemethod
@deftypemethod DataBufferUShort {public short} getData (int@w{ }@var{bank}) 

@end deftypemethod
@deftypemethod DataBufferUShort {public short} getBankData () 

@end deftypemethod
@deftypemethod DataBufferUShort {public int} getElem (int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod DataBufferUShort {public int} getElem (int@w{ }@var{bank}, int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod DataBufferUShort {public void} setElem (int@w{ }@var{i}, int@w{ }@var{val}) 

@end deftypemethod
@deftypemethod DataBufferUShort {public void} setElem (int@w{ }@var{bank}, int@w{ }@var{i}, int@w{ }@var{val}) 

@end deftypemethod
@deftypemethod DirectColorModel {public final int} getRedMask () 

@end deftypemethod
@deftypemethod DirectColorModel {public final int} getGreenMask () 

@end deftypemethod
@deftypemethod DirectColorModel {public final int} getBlueMask () 

@end deftypemethod
@deftypemethod DirectColorModel {public final int} getAlphaMask () 

@end deftypemethod
@deftypemethod DirectColorModel {public final int} getRed (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod DirectColorModel {public final int} getGreen (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod DirectColorModel {public final int} getBlue (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod DirectColorModel {public final int} getAlpha (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod DirectColorModel {public final int} getRGB (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod DirectColorModel {public int} getRed (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod DirectColorModel {public int} getGreen (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod DirectColorModel {public int} getBlue (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod DirectColorModel {public int} getAlpha (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod DirectColorModel {public int} getRGB (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod DirectColorModel {public Object} getDataElements (int@w{ }@var{rgb}, java.lang.Object@w{ }@var{pixel}) 
Converts a normalized pixel int value in the sRGB color
 space to an array containing a single pixel of the color space
 of the color model.

 

This method performs the inverse function of
 @code{getRGB(Object inData)}.
@end deftypemethod
@deftypemethod DirectColorModel {public final int} getComponents (int@w{ }@var{pixel}, int[]@w{ }@var{components}, int@w{ }@var{offset}) 
Fills an array with the unnormalized component samples from a
 pixel value. I.e. decompose the pixel, but not perform any
 color conversion.
@end deftypemethod
@deftypemethod DirectColorModel {public final int} getComponents (java.lang.Object@w{ }@var{pixel}, int[]@w{ }@var{components}, int@w{ }@var{offset}) 

@end deftypemethod
@deftypemethod DirectColorModel {public final WritableRaster} createCompatibleWritableRaster (int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod DirectColorModel {public int} getDataElement (int[]@w{ }@var{components}, int@w{ }@var{offset}) 

@end deftypemethod
@deftypemethod DirectColorModel {public Object} getDataElements (int[]@w{ }@var{components}, int@w{ }@var{offset}, java.lang.Object@w{ }@var{obj}) 

@end deftypemethod
@deftypemethod DirectColorModel {public ColorModel} coerceData (java.awt.image.WritableRaster@w{ }@var{raster}, boolean@w{ }@var{isAlphaPremultiplied}) 

@end deftypemethod
@deftypemethod DirectColorModel {public boolean} isCompatibleRaster (java.awt.image.Raster@w{ }@var{raster}) 

@end deftypemethod
@deftypemethod DirectColorModel {public String} toString () 

@end deftypemethod
@deftypemethod ImageConsumer {public void} setDimensions (int@w{ }@var{width}, int@w{ }@var{height}) 

@end deftypemethod
@deftypemethod ImageConsumer {public void} setProperties (java.util.Hashtable@w{ }@var{props}) 

@end deftypemethod
@deftypemethod ImageConsumer {public void} setColorModel (java.awt.image.ColorModel@w{ }@var{model}) 

@end deftypemethod
@deftypemethod ImageConsumer {public void} setHints (int@w{ }@var{hintflags}) 

@end deftypemethod
@deftypemethod ImageConsumer {public void} setPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, java.awt.image.ColorModel@w{ }@var{model}, byte[]@w{ }@var{pixels}, int@w{ }@var{off}, int@w{ }@var{scansize}) 

@end deftypemethod
@deftypemethod ImageConsumer {public void} setPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, java.awt.image.ColorModel@w{ }@var{model}, int[]@w{ }@var{pixels}, int@w{ }@var{off}, int@w{ }@var{scansize}) 

@end deftypemethod
@deftypemethod ImageConsumer {public void} imageComplete (int@w{ }@var{status}) 

@end deftypemethod
@deftypemethod ImageObserver {public boolean} imageUpdate (java.awt.Image@w{ }@var{image}, int@w{ }@var{infoFlags}, int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{width}, int@w{ }@var{height}) 

@end deftypemethod
@deftypemethod ImageProducer {public void} addConsumer (java.awt.image.ImageConsumer@w{ }@var{ic}) 

@end deftypemethod
@deftypemethod ImageProducer {public boolean} isConsumer (java.awt.image.ImageConsumer@w{ }@var{ic}) 

@end deftypemethod
@deftypemethod ImageProducer {public void} removeConsumer (java.awt.image.ImageConsumer@w{ }@var{ic}) 

@end deftypemethod
@deftypemethod ImageProducer {public void} startProduction (java.awt.image.ImageConsumer@w{ }@var{ic}) 

@end deftypemethod
@deftypemethod ImageProducer {public void} requestTopDownLeftRightResend (java.awt.image.ImageConsumer@w{ }@var{ic}) 

@end deftypemethod
@deftypemethod IndexColorModel {public final int} getMapSize () 

@end deftypemethod
@deftypemethod IndexColorModel {public final int} getTransparentPixel () 

@end deftypemethod
@deftypemethod IndexColorModel {public final void} getReds (byte[]@w{ }@var{r}) 

@end deftypemethod
@deftypemethod IndexColorModel {public final void} getGreens (byte[]@w{ }@var{g}) 

@end deftypemethod
@deftypemethod IndexColorModel {public final void} getBlues (byte[]@w{ }@var{b}) 

@end deftypemethod
@deftypemethod IndexColorModel {public final void} getAlphas (byte[]@w{ }@var{a}) 

@end deftypemethod
@deftypemethod IndexColorModel {public final void} getRGBs (int[]@w{ }@var{rgb}) 

@end deftypemethod
@deftypemethod IndexColorModel {public int} getRed (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod IndexColorModel {public int} getGreen (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod IndexColorModel {public int} getBlue (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod IndexColorModel {public int} getAlpha (int@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod IndexColorModel {public int} getRed (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod IndexColorModel {public int} getGreen (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod IndexColorModel {public int} getBlue (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod IndexColorModel {public int} getAlpha (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod IndexColorModel {public int} getRGB (java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod IndexColorModel {public Object} getDataElements (int@w{ }@var{rgb}, java.lang.Object@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod IndexColorModel {public int} getComponents (int@w{ }@var{pixel}, int[]@w{ }@var{components}, int@w{ }@var{offset}) 

@end deftypemethod
@deftypemethod IndexColorModel {public final int} getComponents (java.lang.Object@w{ }@var{pixel}, int[]@w{ }@var{components}, int@w{ }@var{offset}) 

@end deftypemethod
@deftypemethod IndexColorModel {public int} getDataElement (int[]@w{ }@var{components}, int@w{ }@var{offset}) 

@end deftypemethod
@deftypemethod IndexColorModel {public Object} getDataElements (int[]@w{ }@var{components}, int@w{ }@var{offset}, java.lang.Object@w{ }@var{pixel}) 

@end deftypemethod
@deftypemethod IndexColorModel {public SampleModel} createCompatibleSampleModel (int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod PackedColorModel {public final int} getMask (int@w{ }@var{index}) 

@end deftypemethod
@deftypemethod PackedColorModel {public final int} getMasks () 

@end deftypemethod
@deftypemethod PackedColorModel {public SampleModel} createCompatibleSampleModel (int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod PackedColorModel {public boolean} isCompatibleSampleModel (java.awt.image.SampleModel@w{ }@var{sm}) 

@end deftypemethod
@deftypemethod PackedColorModel {public WritableRaster} getAlphaRaster (java.awt.image.WritableRaster@w{ }@var{raster}) 

@end deftypemethod
@deftypemethod PackedColorModel {public boolean} equals (java.lang.Object@w{ }@var{obj}) 

@end deftypemethod
@deftypemethod Raster {public static WritableRaster} createInterleavedRaster (int@w{ }@var{dataType}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{bands}, java.awt.Point@w{ }@var{location}) 

@end deftypemethod
@deftypemethod Raster {public static WritableRaster} createInterleavedRaster (int@w{ }@var{dataType}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{scanlineStride}, int@w{ }@var{pixelStride}, int[]@w{ }@var{bandOffsets}, java.awt.Point@w{ }@var{location}) 

@end deftypemethod
@deftypemethod Raster {public static WritableRaster} createBandedRaster (int@w{ }@var{dataType}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{bands}, java.awt.Point@w{ }@var{location}) 

@end deftypemethod
@deftypemethod Raster {public static WritableRaster} createBandedRaster (int@w{ }@var{dataType}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{scanlineStride}, int[]@w{ }@var{bankIndices}, int[]@w{ }@var{bandOffsets}, java.awt.Point@w{ }@var{location}) 

@end deftypemethod
@deftypemethod Raster {public static WritableRaster} createPackedRaster (int@w{ }@var{dataType}, int@w{ }@var{w}, int@w{ }@var{h}, int[]@w{ }@var{bandMasks}, java.awt.Point@w{ }@var{location}) 

@end deftypemethod
@deftypemethod Raster {public static WritableRaster} createInterleavedRaster (java.awt.image.DataBuffer@w{ }@var{dataBuffer}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{scanlineStride}, int@w{ }@var{pixelStride}, int[]@w{ }@var{bandOffsets}, java.awt.Point@w{ }@var{location}) 

@end deftypemethod
@deftypemethod Raster {public static WritableRaster} createBandedRaster (java.awt.image.DataBuffer@w{ }@var{dataBuffer}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{scanlineStride}, int[]@w{ }@var{bankIndices}, int[]@w{ }@var{bandOffsets}, java.awt.Point@w{ }@var{location}) 

@end deftypemethod
@deftypemethod Raster {public static WritableRaster} createPackedRaster (java.awt.image.DataBuffer@w{ }@var{dataBuffer}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{scanlineStride}, int[]@w{ }@var{bandMasks}, java.awt.Point@w{ }@var{location}) 

@end deftypemethod
@deftypemethod Raster {public static Raster} createRaster (java.awt.image.SampleModel@w{ }@var{sm}, java.awt.image.DataBuffer@w{ }@var{db}, java.awt.Point@w{ }@var{location}) 

@end deftypemethod
@deftypemethod Raster {public static WritableRaster} createWritableRaster (java.awt.image.SampleModel@w{ }@var{sm}, java.awt.Point@w{ }@var{location}) 

@end deftypemethod
@deftypemethod Raster {public static WritableRaster} createWritableRaster (java.awt.image.SampleModel@w{ }@var{sm}, java.awt.image.DataBuffer@w{ }@var{db}, java.awt.Point@w{ }@var{location}) 

@end deftypemethod
@deftypemethod Raster {public Raster} getParent () 

@end deftypemethod
@deftypemethod Raster {public final int} getSampleModelTranslateX () 

@end deftypemethod
@deftypemethod Raster {public final int} getSampleModelTranslateY () 

@end deftypemethod
@deftypemethod Raster {public WritableRaster} createCompatibleWritableRaster () 

@end deftypemethod
@deftypemethod Raster {public WritableRaster} createCompatibleWritableRaster (int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod Raster {public WritableRaster} createCompatibleWritableRaster (java.awt.Rectangle@w{ }@var{rect}) 

@end deftypemethod
@deftypemethod Raster {public WritableRaster} createCompatibleWritableRaster (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod Raster {public Raster} createTranslatedChild (int@w{ }@var{childMinX}, int@w{ }@var{childMinY}) 

@end deftypemethod
@deftypemethod Raster {public Raster} createChild (int@w{ }@var{parentX}, int@w{ }@var{parentY}, int@w{ }@var{width}, int@w{ }@var{height}, int@w{ }@var{childMinX}, int@w{ }@var{childMinY}, int[]@w{ }@var{bandList}) 

@end deftypemethod
@deftypemethod Raster {public Rectangle} getBounds () 

@end deftypemethod
@deftypemethod Raster {public final int} getMinX () 

@end deftypemethod
@deftypemethod Raster {public final int} getMinY () 

@end deftypemethod
@deftypemethod Raster {public final int} getWidth () 

@end deftypemethod
@deftypemethod Raster {public final int} getHeight () 

@end deftypemethod
@deftypemethod Raster {public final int} getNumDataElements () 

@end deftypemethod
@deftypemethod Raster {public final int} getTransferType () 

@end deftypemethod
@deftypemethod Raster {public DataBuffer} getDataBuffer () 

@end deftypemethod
@deftypemethod Raster {public SampleModel} getSampleModel () 

@end deftypemethod
@deftypemethod Raster {public Object} getDataElements (int@w{ }@var{x}, int@w{ }@var{y}, java.lang.Object@w{ }@var{outData}) 

@end deftypemethod
@deftypemethod Raster {public Object} getDataElements (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, java.lang.Object@w{ }@var{outData}) 

@end deftypemethod
@deftypemethod Raster {public int} getPixel (int@w{ }@var{x}, int@w{ }@var{y}, int[]@w{ }@var{iArray}) 

@end deftypemethod
@deftypemethod Raster {public float} getPixel (int@w{ }@var{x}, int@w{ }@var{y}, float[]@w{ }@var{fArray}) 

@end deftypemethod
@deftypemethod Raster {public double} getPixel (int@w{ }@var{x}, int@w{ }@var{y}, double[]@w{ }@var{dArray}) 

@end deftypemethod
@deftypemethod Raster {public int} getPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int[]@w{ }@var{iArray}) 

@end deftypemethod
@deftypemethod Raster {public float} getPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, float[]@w{ }@var{fArray}) 

@end deftypemethod
@deftypemethod Raster {public double} getPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, double[]@w{ }@var{dArray}) 

@end deftypemethod
@deftypemethod Raster {public int} getSample (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}) 

@end deftypemethod
@deftypemethod Raster {public float} getSampleFloat (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}) 

@end deftypemethod
@deftypemethod Raster {public double} getSampleDouble (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}) 

@end deftypemethod
@deftypemethod Raster {public int} getSamples (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{b}, int[]@w{ }@var{iArray}) 

@end deftypemethod
@deftypemethod Raster {public float} getSamples (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{b}, float[]@w{ }@var{fArray}) 

@end deftypemethod
@deftypemethod Raster {public double} getSamples (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{b}, double[]@w{ }@var{dArray}) 

@end deftypemethod
@deftypemethod RasterOp {public WritableRaster} filter (java.awt.image.Raster@w{ }@var{src}, java.awt.image.WritableRaster@w{ }@var{dest}) 

@end deftypemethod
@deftypemethod RasterOp {public Rectangle2D} getBounds2D (java.awt.image.Raster@w{ }@var{src}) 

@end deftypemethod
@deftypemethod RasterOp {public WritableRaster} createCompatibleDestRaster (java.awt.image.Raster@w{ }@var{src}) 

@end deftypemethod
@deftypemethod RasterOp {public Point2D} getPoint2D (java.awt.geom.Point2D@w{ }@var{srcPoint}, java.awt.geom.Point2D@w{ }@var{destPoint}) 

@end deftypemethod
@deftypemethod RasterOp {public RenderingHints} getRenderingHints () 

@end deftypemethod
@deftypemethod SampleModel {public final int} getWidth () 

@end deftypemethod
@deftypemethod SampleModel {public final int} getHeight () 

@end deftypemethod
@deftypemethod SampleModel {public final int} getNumBands () 

@end deftypemethod
@deftypemethod SampleModel {public abstract int} getNumDataElements () 

@end deftypemethod
@deftypemethod SampleModel {public final int} getDataType () 

@end deftypemethod
@deftypemethod SampleModel {public int} getTransferType () 

@end deftypemethod
@deftypemethod SampleModel {public int} getPixel (int@w{ }@var{x}, int@w{ }@var{y}, int[]@w{ }@var{iArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public abstract Object} getDataElements (int@w{ }@var{x}, int@w{ }@var{y}, java.lang.Object@w{ }@var{obj}, java.awt.image.DataBuffer@w{ }@var{data}) 
This method is provided as a faster alternative to getPixel(),
 that can be used when there is no need to decode the pixel into
 seperate sample values.
@end deftypemethod
@deftypemethod SampleModel {public Object} getDataElements (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, java.lang.Object@w{ }@var{obj}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public abstract void} setDataElements (int@w{ }@var{x}, int@w{ }@var{y}, java.lang.Object@w{ }@var{obj}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public void} setDataElements (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, java.lang.Object@w{ }@var{obj}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public float} getPixel (int@w{ }@var{x}, int@w{ }@var{y}, float[]@w{ }@var{fArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public double} getPixel (int@w{ }@var{x}, int@w{ }@var{y}, double[]@w{ }@var{dArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public int} getPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int[]@w{ }@var{iArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public float} getPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, float[]@w{ }@var{fArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public double} getPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, double[]@w{ }@var{dArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public abstract int} getSample (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public float} getSampleFloat (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public double} getSampleDouble (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public int} getSamples (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{b}, int[]@w{ }@var{iArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public float} getSamples (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{b}, float[]@w{ }@var{fArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public double} getSamples (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{b}, double[]@w{ }@var{dArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public void} setPixel (int@w{ }@var{x}, int@w{ }@var{y}, int[]@w{ }@var{iArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public void} setPixel (int@w{ }@var{x}, int@w{ }@var{y}, float[]@w{ }@var{fArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public void} setPixel (int@w{ }@var{x}, int@w{ }@var{y}, double[]@w{ }@var{dArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public void} setPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int[]@w{ }@var{iArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public void} setPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, float[]@w{ }@var{fArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public void} setPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, double[]@w{ }@var{dArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public abstract void} setSample (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, int@w{ }@var{s}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public void} setSample (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, float@w{ }@var{s}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public void} setSample (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, double@w{ }@var{s}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public void} setSamples (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{b}, int[]@w{ }@var{iArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public void} setSamples (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{b}, float[]@w{ }@var{fArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public void} setSamples (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{b}, double[]@w{ }@var{dArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SampleModel {public abstract SampleModel} createCompatibleSampleModel (int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod SampleModel {public abstract SampleModel} createSubsetSampleModel (int[]@w{ }@var{bands}) 

@end deftypemethod
@deftypemethod SampleModel {public abstract DataBuffer} createDataBuffer () 

@end deftypemethod
@deftypemethod SampleModel {public abstract int} getSampleSize () 

@end deftypemethod
@deftypemethod SampleModel {public abstract int} getSampleSize (int@w{ }@var{band}) 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public int} getNumDataElements () 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public SampleModel} createCompatibleSampleModel (int@w{ }@var{w}, int@w{ }@var{h}) 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public DataBuffer} createDataBuffer () 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public int} getSampleSize () 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public int} getSampleSize (int@w{ }@var{band}) 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public int} getOffset (int@w{ }@var{x}, int@w{ }@var{y}) 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public int} getBitOffsets () 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public int} getBitMasks () 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public int} getScanlineStride () 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public SampleModel} createSubsetSampleModel (int[]@w{ }@var{bands}) 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public Object} getDataElements (int@w{ }@var{x}, int@w{ }@var{y}, java.lang.Object@w{ }@var{obj}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public int} getPixel (int@w{ }@var{x}, int@w{ }@var{y}, int[]@w{ }@var{iArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public int} getPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int[]@w{ }@var{iArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public int} getSample (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public void} setDataElements (int@w{ }@var{x}, int@w{ }@var{y}, java.lang.Object@w{ }@var{obj}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public void} setPixel (int@w{ }@var{x}, int@w{ }@var{y}, int[]@w{ }@var{iArray}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod SinglePixelPackedSampleModel {public void} setSample (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, int@w{ }@var{s}, java.awt.image.DataBuffer@w{ }@var{data}) 

@end deftypemethod
@deftypemethod WritableRaster {public WritableRaster} getWritableParent () 

@end deftypemethod
@deftypemethod WritableRaster {public WritableRaster} createWritableTranslatedChild (int@w{ }@var{childMinX}, int@w{ }@var{childMinY}) 

@end deftypemethod
@deftypemethod WritableRaster {public WritableRaster} createWritableChild (int@w{ }@var{parentX}, int@w{ }@var{parentY}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{childMinX}, int@w{ }@var{childMinY}, int[]@w{ }@var{bandList}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setDataElements (int@w{ }@var{x}, int@w{ }@var{y}, java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setDataElements (int@w{ }@var{x}, int@w{ }@var{y}, java.awt.image.Raster@w{ }@var{inRaster}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setDataElements (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, java.lang.Object@w{ }@var{inData}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setRect (java.awt.image.Raster@w{ }@var{srcRaster}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setRect (java.awt.image.Raster@w{ }@var{srcRaster}, int@w{ }@var{dx}, int@w{ }@var{dy}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setPixel (int@w{ }@var{x}, int@w{ }@var{y}, int[]@w{ }@var{iArray}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setPixel (int@w{ }@var{x}, int@w{ }@var{y}, float[]@w{ }@var{fArray}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setPixel (int@w{ }@var{x}, int@w{ }@var{y}, double[]@w{ }@var{dArray}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int[]@w{ }@var{iArray}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, float[]@w{ }@var{fArray}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setPixels (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, double[]@w{ }@var{dArray}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setSample (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, int@w{ }@var{s}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setSample (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, float@w{ }@var{s}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setSample (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{b}, double@w{ }@var{s}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setSamples (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{b}, int[]@w{ }@var{iArray}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setSamples (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{b}, float[]@w{ }@var{fArray}) 

@end deftypemethod
@deftypemethod WritableRaster {public void} setSamples (int@w{ }@var{x}, int@w{ }@var{y}, int@w{ }@var{w}, int@w{ }@var{h}, int@w{ }@var{b}, double[]@w{ }@var{dArray}) 

@end deftypemethod
