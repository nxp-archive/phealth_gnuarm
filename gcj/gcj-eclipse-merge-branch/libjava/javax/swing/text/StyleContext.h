
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __javax_swing_text_StyleContext__
#define __javax_swing_text_StyleContext__

#pragma interface

#include <java/lang/Object.h>
#include <gcj/array.h>

extern "Java"
{
  namespace java
  {
    namespace awt
    {
        class Color;
        class Font;
        class FontMetrics;
    }
  }
  namespace javax
  {
    namespace swing
    {
      namespace event
      {
          class ChangeListener;
          class EventListenerList;
      }
      namespace text
      {
          class AttributeSet;
          class MutableAttributeSet;
          class Style;
          class StyleContext;
          class StyleContext$NamedStyle;
          class StyleContext$SmallAttributeSet;
      }
    }
  }
}

class javax::swing::text::StyleContext : public ::java::lang::Object
{

public:
  StyleContext();
public: // actually protected
  virtual ::javax::swing::text::StyleContext$SmallAttributeSet * createSmallAttributeSet(::javax::swing::text::AttributeSet *);
  virtual ::javax::swing::text::MutableAttributeSet * createLargeAttributeSet(::javax::swing::text::AttributeSet *);
public:
  virtual void addChangeListener(::javax::swing::event::ChangeListener *);
  virtual void removeChangeListener(::javax::swing::event::ChangeListener *);
  virtual JArray< ::javax::swing::event::ChangeListener * > * getChangeListeners();
  virtual ::javax::swing::text::Style * addStyle(::java::lang::String *, ::javax::swing::text::Style *);
  virtual void removeStyle(::java::lang::String *);
  virtual ::javax::swing::text::Style * getStyle(::java::lang::String *);
  virtual ::java::util::Enumeration * getStyleNames();
  virtual ::java::awt::Font * getFont(::javax::swing::text::AttributeSet *);
  virtual ::java::awt::Font * getFont(::java::lang::String *, jint, jint);
  virtual ::java::awt::FontMetrics * getFontMetrics(::java::awt::Font *);
  virtual ::java::awt::Color * getForeground(::javax::swing::text::AttributeSet *);
  virtual ::java::awt::Color * getBackground(::javax::swing::text::AttributeSet *);
public: // actually protected
  virtual jint getCompressionThreshold();
public:
  static ::javax::swing::text::StyleContext * getDefaultStyleContext();
  virtual ::javax::swing::text::AttributeSet * addAttribute(::javax::swing::text::AttributeSet *, ::java::lang::Object *, ::java::lang::Object *);
  virtual ::javax::swing::text::AttributeSet * addAttributes(::javax::swing::text::AttributeSet *, ::javax::swing::text::AttributeSet *);
  virtual ::javax::swing::text::AttributeSet * getEmptySet();
  virtual void reclaim(::javax::swing::text::AttributeSet *);
  virtual ::javax::swing::text::AttributeSet * removeAttribute(::javax::swing::text::AttributeSet *, ::java::lang::Object *);
  virtual ::javax::swing::text::AttributeSet * removeAttributes(::javax::swing::text::AttributeSet *, ::javax::swing::text::AttributeSet *);
  virtual ::javax::swing::text::AttributeSet * removeAttributes(::javax::swing::text::AttributeSet *, ::java::util::Enumeration *);
  static ::java::lang::Object * getStaticAttribute(::java::lang::Object *);
  static ::java::lang::Object * getStaticAttributeKey(::java::lang::Object *);
  static void readAttributeSet(::java::io::ObjectInputStream *, ::javax::swing::text::MutableAttributeSet *);
  static void writeAttributeSet(::java::io::ObjectOutputStream *, ::javax::swing::text::AttributeSet *);
  virtual void readAttributes(::java::io::ObjectInputStream *, ::javax::swing::text::MutableAttributeSet *);
  virtual void writeAttributes(::java::io::ObjectOutputStream *, ::javax::swing::text::AttributeSet *);
  static void registerStaticAttributeKey(::java::lang::Object *);
private:
  static const jlong serialVersionUID = 8042858831190784241LL;
public:
  static ::java::lang::String * DEFAULT_STYLE;
public: // actually package-private
  ::javax::swing::text::StyleContext$NamedStyle * __attribute__((aligned(__alignof__( ::java::lang::Object)))) defaultStyle;
  static ::java::util::Hashtable * sharedAttributeSets;
  static ::java::util::Hashtable * sharedFonts;
  static ::javax::swing::text::StyleContext * defaultStyleContext;
  static const jint compressionThreshold = 9;
private:
  static ::java::util::Hashtable * staticAttributeKeys;
public: // actually package-private
  ::javax::swing::event::EventListenerList * listenerList;
  ::java::util::Hashtable * styleTable;
public:
  static ::java::lang::Class class$;
};

#endif // __javax_swing_text_StyleContext__
