2008-04-19  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/gmmintrin.h (_mm_permutevar_pd): Call
	__builtin_ia32_vpermilvarpd instead of __builtin_ia32_vpermilpd128.
	(_mm256_permutevar_pd): Call __builtin_ia32_vpermilvarpd256
	instead of __builtin_ia32_vpermilpd256.
	(_mm_permutevar_ps): Call __builtin_ia32_vpermilvarps instead
	of __builtin_ia32_vpermilps128.
	(_mm256_permutevar_ps): Call __builtin_ia32_vpermilvarps256
	instead of __builtin_ia32_vpermilps256.
	(_mm_permute_pd): Call __builtin_ia32_vpermilpd instead of
	__builtin_ia32_vpermilpd128.
	(_mm256_permute_pd): Fix a typo.
	(_mm_permute_ps): Call __builtin_ia32_vpermilps instead of
	__builtin_ia32_vpermilps128.
	(_mm_permute2_pd): Call __builtin_ia32_vpermil2pd instead of
	__builtin_ia32_vpermil2pd128.
	(_mm_permute2_ps): Call __builtin_ia32_vpermil2ps instead of
	__builtin_ia32_vpermil2ps128.
	(_mm_maskload_pd): Call __builtin_ia32_maskloadpd instead of
	__builtin_ia32_maskloadpd128.
	(_mm_maskstore_pd): Call __builtin_ia32_maskstorepd instead of
	__builtin_ia32_maskstorepd128.
	(_mm_maskload_ps): Call __builtin_ia32_maskloadps instead of
	__builtin_ia32_maskloadps128.
	(_mm_maskstore_ps): Call __builtin_ia32_maskstoreps instead of
	__builtin_ia32_maskstoreps128.

	* config/i386/i386.c (ix86_builtins): Add IX86_BUILTIN_VPERMILVARPD,
	IX86_BUILTIN_VPERMILVARPS, IX86_BUILTIN_VPERMILVARPD256,
	IX86_BUILTIN_VPERMILVARPS256, IX86_BUILTIN_VPERMILPD,
	IX86_BUILTIN_VPERMILPS, IX86_BUILTIN_VPERMILPD256,
	IX86_BUILTIN_VPERMILPS256, IX86_BUILTIN_VPERMIL2PD,
	IX86_BUILTIN_VPERMIL2PS, IX86_BUILTIN_VPERMIL2PD256,
	IX86_BUILTIN_VPERMIL2PS256, IX86_BUILTIN_VPERM2F128PD256,
	IX86_BUILTIN_VPERM2F128PS256 and IX86_BUILTIN_VPERM2F128SI256.
	(sse_builtin_type): Add V8SF_FTYPE_V8SF_INT,
	V4DF_FTYPE_V4DF_INT, V8SI_FTYPE_V8SI_V8SI_INT,
	V8SF_FTYPE_V8SF_V8SF_V8SF_INT, V4DF_FTYPE_V4DF_V4DF_V4DF_INT,
	V4SF_FTYPE_V4SF_V4SF_V4SF_INT and V2DF_FTYPE_V2DF_V2DF_V2DF_INT.
	(bdesc_sse_args): Add __builtin_ia32_vperm2f128_pd256,
	__builtin_ia32_vperm2f128_ps256, __builtin_ia32_vperm2f128_si256,
	__builtin_ia32_vpermilpd, __builtin_ia32_vpermilps,
	__builtin_ia32_vpermilpd256, __builtin_ia32_vpermilps256,
	__builtin_ia32_vpermil2pd, __builtin_ia32_vpermil2ps,
	__builtin_ia32_vpermil2pd256 and __builtin_ia32_vpermil2ps256.
	(bdesc_2arg): Add __builtin_ia32_vpermilvarpd,
	__builtin_ia32_vpermilvarps, __builtin_ia32_vpermilvarpd256
	and __builtin_ia32_vpermilvarps256.
	(bdesc_1arg): Add IX86_BUILTIN_VPERMILPD, IX86_BUILTIN_VPERMILPS,
	IX86_BUILTIN_VPERMILPD256 and IX86_BUILTIN_VPERMILPS256.
	(ix86_init_mmx_sse_builtins): Handle bdesc_avx_4arg.  Support
	v8si_ftype_v8si_v8si_int in bdesc_2arg.  Define
	__builtin_ia32_vpermilpd, __builtin_ia32_vpermilps,
	__builtin_ia32_vpermilpd256 and __builtin_ia32_vpermilps256.
	(ix86_init_mmx_sse_builtins): Handle more AVX builtins.
	(ix86_expand_sse_operands_builtin): Support 4 arguments.  Handle
	more AVX builtins.

	* config/i386/i386.md (UNSPEC_VPERMIL): New.
	(UNSPEC_VPERMIL2): Likewise.
	(UNSPEC_VPERMIL2F128): Likewise.

	* config/i386/sse.md (avx_vpermil<mode>3): New.
	(avx_vpermilvar<mode>3): Likewise.
	(avx_vpermil2<mode>3): Likewise.
	(avx_vpermil2f128<mode>3): Likewise.

2008-04-19  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_expand_sse4_unpack): Use
	gen_avx_lshrti3 for AVX.
	(ix86_expand_binop_imm_builtin): Use CODE_FOR_avx_ashlti3 and
	CODE_FOR_avx_lshrti3 for AVX.

2008-04-19  Xuepeng Guo  <xuepeng.guo@intel.com>

	* config/i386/i386.md (avx_ashlti3): New.
	(avx_lshlti3): Likewise.

2008-04-19  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (sse_builtin_type): Add V8SI_FTYPE_V8SF,
	V8SF_FTYPE_V8SI, V4SI_FTYPE_V4DF, V4DF_FTYPE_V4SI,
	V4DF_FTYPE_V4SF and V4SF_FTYPE_V4DF.
	(bdesc_2arg): Move AVX builtins to ...
	(bdesc_sse_args): Here.
	(ix86_init_mmx_sse_builtins): Updated to handle more AVX builtins.
	Remove __builtin_ia32_cvtdq2pd256, __builtin_ia32_cvtdq2ps256,
	__builtin_ia32_cvtpd2ps256, __builtin_ia32_cvtps2dq256,
	__builtin_ia32_cvttps2dq256, __builtin_ia32_cvtps2pd256,
	__builtin_ia32_cvtpd2dq256 and __builtin_ia32_cvttpd2dq256.
	(ix86_expand_sse_operands_builtin): Handle more AVX builtins.

2008-04-18  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (sse_builtin_type): Add V4SI_FTYPE_V8SI_INT,
	V4SF_FTYPE_V8SF_INT, V2DF_FTYPE_V4DF_INT,
	V8SF_FTYPE_V8SF_V8SF_V8SF, V4DF_FTYPE_V4DF_V4DF_V4DF,
	V8SF_FTYPE_V8SF_V8SF_INT and V4DF_FTYPE_V4DF_V4DF_INT.
	(bdesc_sse_args): Add some AVX instrincis.
	(bdesc_1arg): Remove IX86_BUILTIN_EXTRACTF128PD256,
	IX86_BUILTIN_EXTRACTF128PS256 and
	and IX86_BUILTIN_EXTRACTF128SI256.
	(ix86_init_mmx_sse_builtins): Updated to handle some AVX
	instrincis.  Remove __builtin_ia32_vextractf128_pd256,
	__builtin_ia32_vextractf128_ps256 and
	__builtin_ia32_vextractf128_si256.
	(ix86_expand_sse_operands_builtin): Handle some AVX instrincis.
	(ix86_expand_unop_builtin): Remove CODE_FOR_avx_vextractf128v2df,
	CODE_FOR_avx_vextractf128v4sf and CODE_FOR_avx_vextractf128v4si.

2008-04-15  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_expand_builtin): Updated.

	* config/i386/i386.md (XMM0_REG...XMM15_REG): Restored.

	* config/i386/sse.md (avx_vzeroupper): Rewrite for 32bit.
	(avx_vzeroupper_rex64): New.

2008-04-14  Uros Bizjak  <ubizjak@gmail.com>
	    H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.md (XMM0_REG...XMM15_REG): Removed.
	* config/i386/sse.md (avx_vzeroall_rex64): Likewise.
	* config/i386/i386.c (ix86_expand_builtin): Updated.

2008-04-14  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/predicates.md (vzeroall_operation): New.

	* config/i386/sse.md (avx_vzeroall): Rewrite to use define_expand.
	(*avx_vzeroall): New.

2008-04-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_builtins): Add IX86_BUILTIN_VZEROALL
	and IX86_BUILTIN_VZEROUPPER.
	(ix86_init_mmx_sse_builtins): Handle __builtin_ia32_vzeroall
	and __builtin_ia32_vzeroupper.
	(ix86_expand_builtin): Handle IX86_BUILTIN_VZEROALL and
	IX86_BUILTIN_VZEROUPPER.

	* config/i386/i386.md (UNSPECV_VZEROALL): New.
	(UNSPECV_VZEROUPPER): Likewise.
	(XMM0_REG): Likewise.
	(XMM1_REG): Likewise.
	(XMM2_REG): Likewise.
	(XMM3_REG): Likewise.
	(XMM4_REG): Likewise.
	(XMM5_REG): Likewise.
	(XMM6_REG): Likewise.
	(XMM7_REG): Likewise.
	(XMM8_REG): Likewise.
	(XMM9_REG): Likewise.
	(XMM10_REG): Likewise.
	(XMM11_REG): Likewise.
	(XMM12_REG): Likewise.
	(XMM13_REG): Likewise.
	(XMM14_REG): Likewise.
	(XMM15_REG): Likewise.

	* config/i386/sse.md (avx_vzeroall): New.
	(avx_vzeroall_rex64): Likewise.
	(avx_vzeroupper): Likewise.

2008-04-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/gmmintrin.h (_mm256_extractf128_pd): Fix a typo.
	(_mm256_extractf128_ps): Likewise.
	(_mm256_extractf128_si256): Likewise.

	* config/i386/i386.c (ix86_builtins): Add
	IX86_BUILTIN_EXTRACTF128PD256, IX86_BUILTIN_EXTRACTF128PS256
	and IX86_BUILTIN_EXTRACTF128SI256.
	(bdesc_1arg): Add IX86_BUILTIN_EXTRACTF128PD256,
	IX86_BUILTIN_EXTRACTF128PS256 and
	and IX86_BUILTIN_EXTRACTF128SI256.
	(ix86_init_mmx_sse_builtins): Handle
	__builtin_ia32_vextractf128_pd256,
	__builtin_ia32_vextractf128_ps256 and
	__builtin_ia32_vextractf128_si256.
	(ix86_expand_unop_builtin): Handle CODE_FOR_avx_vextractf128v2df,
	CODE_FOR_avx_vextractf128v4sf and CODE_FOR_avx_vextractf128v4si.

	* config/i386/sse.md (avxextractmode): New.
	(avx_vextractf128<mode>): Likewise.

2008-04-11  H.J. Lu  <hongjiu.lu@intel.com>

	PR middle-end/35897
	* dse.c (store_info): Change positions_needed to unsigned
	HOST_WIDE_INT.
	(lowpart_bitmask): New.
	(record_store): Cast to unsigned HOST_WIDE_INT for
	positions_needed.  Assert width <= size of positions_needed *
	CHAR_BIT.  Call lowpart_bitmask to initialize positions_needed.
	(check_mem_read_rtx): Use unsigned HOST_WIDE_INT on mask.  Call
	lowpart_bitmask to set mask.

2008-04-10  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.h (VALID_AVX_REG_MODE): Renamed to ...
	(VALID_AVX256_REG_MODE): This.
	(AVX_VEC_FLOAT_MODE_P): Renamed to ...
	(AVX256_VEC_FLOAT_MODE_P): This.
	* config/i386/i386.c: Updated.
	* config/i386/sse.md: Likewise.

2008-04-10  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.md (UNSPEC_PCMP): New.
	(*avx_setcc<mode>): Likewise.
	(prefix_vex): Likewise.
	(*fop_df_comm_avx): Likewise.
	(mode): Add OI, V8SF and V4DF.

	* config/i386/predicates.md (const_4_to_5_operand): New.
	(const_6_to_7_operand): Likewise.
	(const_8_to_11_operand): Likewise.
	(const_12_to_15_operand): Likewise.
	(avx_comparison_float_operator): Likewise.

	* config/i386/sse.md (AVX256MODEI): New.
	(AVXMODEI): Likewise.
	(AVX256MODE): Likewise.
	(AVXMODE): Likewise.
	(AVX256MODEF2P): Likewise.
	(AVXMODEF2P): Likewise.
	(avxvecmode): New.
	(avxmodesuffixf2c): Likewise.
	(blendbits): Support V8SF and V4DF.
	(mov<mode>): New 256bit AVX integer vector pattern.
	(*mov<mode>_internal): Likewise.
	(mov<mode>): New 256bit AVX floating point vector pattern.
	(*mov<mode>_internal): Likewise.
	(<addsub><mode>3): Likewise.
	(*<addsub><mode>3): Likewise.
	(mul<mode>3): Likewise.
	(*mul<mode>3): Likewise.
	(<code><mode>3): Likewise.
	(*<code><mode>3): Likewise.
	(*ieee_smin<mode>3): Likewise.
	(*ieee_smax<mode>3): Likewise.
	(<code><mode>3): Likewise.
	(*<code><mode>3): Likewise.
	(push<mode>1): New 256bit AVX vector pattern.
	(movmisalign<mode>): Likewise.
	(avx_movup<avxmodesuffixf2c>): New.
	(avx_movdqu): Likewise.
	(divv8sf3): Likewise.
	(divv4df3): Likewise.
	(avx_div<mode>3): Likewise.
	(avx_addsubv8sf3): Likewise.
	(avx_addsubv4df3): Likewise.
	(avx_h<addsub>v4df3): Likewise.
	(avx_h<addsub>v8sf3): Likewise.
	(avx_cmpp<avxmodesuffixf2c><mode>3): Likewise.
	(avx_cmps<ssemodesuffixf2c><mode>3): Likewise.
	(*avx_maskcmp<mode>3): Likewise.
	(avx_nand<mode>3): Likewise.
	(*avx_nand<mode>3): Likewise.
	(avx_cvtdq2ps256): Likewise.
	(avx_cvtps2dq256): Likewise.
	(avx_cvttps2dq256): Likewise.
	(avx_cvtdq2pd256): Likewise.
	(avx_cvtpd2dq256): Likewise.
	(avx_cvttpd2dq256): Likewise.
	(avx_cvtpd2ps256): Likewise.
	(avx_cvtps2pd256): Likewise.
	(avx_shufps256): Likewise.
	(avx_shufps256_1): Likewise.
	(avx_shufpd256): Likewise.
	(avx_shufpd256_1): Likewise.
	(*avx_nand<mode>3): Likewise.
	(*avx_<code><mode>3): Likewise.
	(avx_blendp<avxmodesuffixf2c>256): Likewise.
	(avx_blendvp<avxmodesuffixf2c>256): Likewise.
	(avx_dpps256): Likewise.

2008-04-10  H.J. Lu  <hongjiu.lu@intel.com>

	* config.gcc (extra_headers): Add gmmintrin.h for x86 and x86-64.

	* config/i386/cpuid.h (bit_FMA): New.
	(bit_XSAVE): Likewise.
	(bit_OSXSAVE): Likewise.
	(bit_AVX): Likewise.

	* config/i386/gmmintrin.h: New.

	* config/i386/i386.c (OPTION_MASK_ISA_AVX_SET): New.
	(OPTION_MASK_ISA_FMA_SET): Likewise.
	(OPTION_MASK_ISA_AVX_UNSET): Likewise.
	(OPTION_MASK_ISA_FMA_SET): Likewise.
	(OPTION_MASK_ISA_SSE4_2_UNSET): Updated.
	(ix86_handle_option): Handle OPT_mavx and OPT_mfma.
	(pta_flags): Add PTA_AVX and PTA_FMA.
	(override_options): Handle PTA_AVX and PTA_FMA.
	(init_cumulative_args): Handle warn_avx.
	(classify_argument): Handle V8SFmode, V8SImode, V32QImode,
	V16HImode, V4DFmode and V4DImode.
	(function_arg_advance_32): Likewise.
	(function_arg_64): Likewise.
	(standard_sse_constant_opcode): Handle AVX modes.
	(print_reg): Handle 'x' and AVX registers.
	(print_operand): Handle 'x' and AVX vector compare instructions.
	(output_387_binary_op): Support AVX.
	(ix86_builtins): Add IX86_BUILTIN_ADDPD256 and
	IX86_BUILTIN_ADDPS256,  IX86_BUILTIN_ADDSUBPD256,
	IX86_BUILTIN_ADDSUBPS256, IX86_BUILTIN_ANDPD256,
	IX86_BUILTIN_ANDPS256, IX86_BUILTIN_ANDNPD256,
	IX86_BUILTIN_ANDNPS256,  IX86_BUILTIN_BLENDPD256,
	IX86_BUILTIN_BLENDPS256, IX86_BUILTIN_BLENDVPD256,
	IX86_BUILTIN_BLENDVPS256, IX86_BUILTIN_DPPS256.
	IX86_BUILTIN_DIVPD256, IX86_BUILTIN_DIVPS256,
	IX86_BUILTIN_HADDPD256, IX86_BUILTIN_HADDPS256,
	IX86_BUILTIN_HSUBPD256, IX86_BUILTIN_HSUBPS256,
	IX86_BUILTIN_MAXPD256, IX86_BUILTIN_MAXPS256,
	IX86_BUILTIN_MINPD256, IX86_BUILTIN_MINPS256,
	IX86_BUILTIN_MULPD256, IX86_BUILTIN_MULPS256,
	IX86_BUILTIN_ORPD256, IX86_BUILTIN_ORPS256,
	IX86_BUILTIN_SHUFPD256, IX86_BUILTIN_SHUFPS256,
	IX86_BUILTIN_SUBPD256, IX86_BUILTIN_SUBPS256,
	IX86_BUILTIN_XORPD256, IX86_BUILTIN_XORPS256,
	IX86_BUILTIN_CMPSD, IX86_BUILTIN_CMPSS, IX86_BUILTIN_CMPPD,
	IX86_BUILTIN_CMPPS, IX86_BUILTIN_CMPPD256, IX86_BUILTIN_CMPPS256,
	IX86_BUILTIN_CVTPD2PS256, IX86_BUILTIN_CVTPS2DQ256,
	IX86_BUILTIN_CVTPS2PD256, IX86_BUILTIN_CVTTPD2DQ256,
	IX86_BUILTIN_CVTPD2DQ256 and IX86_BUILTIN_CVTTPS2DQ256.
	(bdesc_sse_3arg): Add __builtin_ia32_blendpd256,
	__builtin_ia32_blendps256, __builtin_ia32_blendvpd256,
	__builtin_ia32_blendvps256,  __builtin_ia32_dpps256,
	__builtin_ia32_shufpd256, __builtin_ia32_shufps256,
	__builtin_ia32_cmpsd, __builtin_ia32_cmpss,
	__builtin_ia32_cmppd, __builtin_ia32_cmpps,
	__builtin_ia32_cmppd256 and __builtin_ia32_cmpps256.
	(bdesc_2arg): Add __builtin_ia32_addpd256,
	__builtin_ia32_addps256, __builtin_ia32_addsubpd256,
	__builtin_ia32_addsubps256, __builtin_ia32_andpd256,
	__builtin_ia32_andps256, __builtin_ia32_andnpd256,
	__builtin_ia32_andnps256, __builtin_ia32_divpd256,
	__builtin_ia32_divps256, __builtin_ia32_haddpd256,
	__builtin_ia32_hsubps256, __builtin_ia32_hsubpd256,
	__builtin_ia32_haddps256, __builtin_ia32_maxpd256,
	__builtin_ia32_maxps256, __builtin_ia32_minpd256,
	__builtin_ia32_minps256, __builtin_ia32_mulpd256,
	__builtin_ia32_mulps256, __builtin_ia32_orpd256,
	__builtin_ia32_orps256, __builtin_ia32_subpd256,
	__builtin_ia32_subps256, __builtin_ia32_xorpd256,
	__builtin_ia32_xorps256.
	(bdesc_1arg): Add entries for IX86_BUILTIN_CVTDQ2PD256,
	IX86_BUILTIN_CVTDQ2PS256,  IX86_BUILTIN_CVTPD2PS256,
	IX86_BUILTIN_CVTPS2DQ256, IX86_BUILTIN_CVTPS2PD256,
	IX86_BUILTIN_CVTTPD2DQ256, IX86_BUILTIN_CVTPD2DQ256 and
	IX86_BUILTIN_CVTTPS2DQ256.
	(ix86_init_mmx_sse_builtins): Handle __builtin_ia32_blendpd256,
	__builtin_ia32_blendps256, __builtin_ia32_blendvpd256,
	__builtin_ia32_blendvps256, __builtin_ia32_addpd256 and
	__builtin_ia32_addps256.  Define __builtin_ia32_cvtdq2pd256,
	__builtin_ia32_cvtdq2ps256, __builtin_ia32_cvtpd2ps256,
	__builtin_ia32_cvtps2dq256, __builtin_ia32_cvtps2pd256,
	__builtin_ia32_cvttpd2dq256, __builtin_ia32_cvtpd2dq256 and
	__builtin_ia32_cvttps2dq256.
	(ix86_expand_sse_4_operands_builtin): Handle 
	CODE_FOR_avx_blendpd256, CODE_FOR_avx_blendvpd256,
	CODE_FOR_avx_blendvps256, CODE_FOR_avx_cmpsdv2df3,
	CODE_FOR_avx_cmpssv4sf3, CODE_FOR_avx_cmppdv2df3,
	CODE_FOR_avx_cmppsv4sf3, CODE_FOR_avx_cmppsv8sf3 and
	CODE_FOR_avx_cmppdv4df3.
	(ix86_expand_builtin): Use switch instead of if.
	(ix86_hard_regno_mode_ok): Handle AVX mode.
	(ix86_vector_mode_supported_p): Likewise.

	* config/i386/i386.h (TARGET_AVX): New.
	(TARGET_FMA): Likewise.
	(TARGET_CPU_CPP_BUILTINS): Handle TARGET_AVX and TARGET_FMA.
	(BIGGEST_ALIGNMENT): Set to 256 for TARGET_AVX.
	(VALID_AVX_REG_MODE): New.
	(AVX_VEC_FLOAT_MODE_P): Likewise.
	(UNITS_PER_SIMD_WORD): Set to 32 for TARGET_AVX.
	(SSE_REG_MODE_P): Allow AVX modes.
	(ix86_args): Add a warn_avx field.

	* config/i386/i386-modes.def (VECTOR_MODES (INT, 32)): New.
	(VECTOR_MODES (FLOAT, 32)): Likewise.
	(VECTOR_MODE (INT, DI, 8)): Likewise.
	(VECTOR_MODE (INT, HI, 32)): Likewise.
	(VECTOR_MODE (INT, QI, 64)): Likewise.
	(VECTOR_MODE (FLOAT, DF, 8)): Likewise.
	(VECTOR_MODE (FLOAT, SF, 16)): Likewise.
	(VECTOR_MODE (INT, DI, 4)): Removed.
	(VECTOR_MODE (INT, SI, 8)): Likewise.
	(VECTOR_MODE (INT, HI, 16)): Likewise.
	(VECTOR_MODE (INT, QI, 32)): Likewise.
	(VECTOR_MODE (FLOAT, SF, 8)): Likewise.
	(INT_MODE (OI, 32)): Likewise.

	* config/i386/i386.opt (mavx): New.
	(mfma): Likewise.
