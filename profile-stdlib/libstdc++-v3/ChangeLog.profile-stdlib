2009-07-13  Silvius Rus  <silvius.rus@gmail.com>
	* acinclude.m4: Remove libprofc++ reference.
	* src/Makefile.in: Same.
	* src/Makefile.am: Same.
	* doc/xml/manual/profile_mode.xml: Major review.
	* include/profile/impl/profiler.h: Add default values for public
	preprocessor and environment variables.  Add public hooks for
	state methods.
	* include/profile/impl/profiler_trace.h: Change warning mechanism.
	Clean up.
	* include/profile/impl/profiler_state.h: Fix bug with
	GLIBCXX_PROFILE_MAX_WARN_COUNT=0.
	* include/profile/impl/profiler_node.h: Fix bug with
	GLIBCXX_PROFILE_MAX_STACK_DEPTH=0.
	* include/profile/impl/profiler_vector_size.h: Add call to
	__collect_warnings.
	* include/profile/impl/profiler_hashtable_size.h: Same.
	* include/profile/impl/profiler_container_size.h: Same.
 	(__container_size_info::__magnitude): Add.
 	(__container_size_info::__advice): Add.
 	(__container_size_info::__container_size_info): Add initializer list.
	* include/profile/impl/profiler_hash_func.h: Same.
	* include/profile/impl/profiler_vector_to_list.h: Same.
	* include/profile/impl/profiler_map_to_unordered_map.h: Same.
	* include/profile/vector: Fix analysis bug.
	* testsuite/ext/profile/all.cc: Add.

2009-07-07  Silvius Rus  <silvius.rus@gmail.com>
	* include/profile/impl/profiler_trace.h: Fix formatting.
	* testsuite/ext/profile/mh.cc: Add dg-options.
	* doc/xml/manual/profile_mode.xml: Update and fix throughout.

2009-07-02  Silvius Rus  <silvius.rus@gmail.com>
	* include/profile/impl/profiler_trace.h: Add mutex for object table
	and stack table operations.

2009-07-02  Silvius Rus  <silvius.rus@gmail.com>
	* include/profile/vector: Uglify names.

2009-07-02  Silvius Rus  <silvius.rus@gmail.com>
	* include/profile/impl/profiler.h: Uglify names.  
	(__reentrance_guard): New class.
	* include/profile/impl/profiler_container_size.h: Uglify names.
	* include/profile/impl/profiler_hash_func.h: Same.
	* include/profile/impl/profiler_hashtable_size.h: Same.
	* include/profile/impl/profiler_map_to_unordered_map.h: Same.
	* include/profile/impl/profiler_node.h: Same.
	* include/profile/impl/profiler_state.h: Same.
	* include/profile/impl/profiler_trace.h: Same.
	* include/profile/impl/profiler_vector_size.h: Same.
	* include/profile/impl/profiler_vector_to_list.h: Same.

2009-07-01  Silvius Rus  <silvius.rus@gmail.com>
	* include/profile/impl/profiler.h: Add reentrance guards to all
	hook calls.
	* include/profile/impl/profiler_state.h: Fix definition of
	template static members.
	* include/profile/impl/profiler_trace.h: Fix definition of
	template static members.
	* include/bits/c++config: Make _GLIBCXX_PROFILE mutually exclusive
	with _GLIBCXX_DEBUG and _GLIBCXX_PARALLEL.
	* testsuite/ext/profile/mh.cc: Add.
	* testsuite/ext/profile/mutex_extensions.cc: Add.

2009-06-02  Silvius Rus  <silvius.rus@gmail.com>
	* configure: Remove libprof++.  Added check for execinfo.h.
	* config.h.in: Add undef HAVE_EXECINFO_H.
	* Makefile.am: Remove libprof++.
	* Makefile.in: Remove libprof++.
	* libprofc++/profiler_vector_size.cc: Merge into 
	include/profile/impl/profiler_vector_size.h.
	* libprofc++/profiler_vector_size.h: Merge into 
	include/profile/impl/profiler_vector_size.h.
	* libprofc++/profiler_hash_func.cc: Merge into 
	include/profile/impl/profiler_hash_func.h.
	* libprofc++/profiler_hash_func.h: Merge into 
	include/profile/impl/profiler_hash_func.h.
	* libprofc++/profiler_trace.cc: Merge into 
	include/profile/impl/profiler_trace.h.
	* libprofc++/profiler_trace.h: Merge into 
	include/profile/impl/profiler_trace.h.
	* libprofc++/profiler_vector_to_list.cc: Merge into 
	include/profile/impl/profiler_vector_to_list.h.
	* libprofc++/profiler_vector_to_list.h: Merge into 
	include/profile/impl/profiler_vector_to_list.h.
	* libprofc++/profiler_container_size.cc: Merge into 
	include/profile/impl/profiler_container_size.h.
	* libprofc++/profiler_container_size.h: Merge into 
	include/profile/impl/profiler_container_size.h.
	* libprofc++/profiler_state.cc: Merge into 
	include/profile/impl/profiler_state.h.
	* libprofc++/profiler_state.h: Merge into 
	include/profile/impl/profiler_state.h.
	* libprofc++/profiler_map_to_unordered_map.cc: Merge into 
	include/profile/impl/profiler_map_to_unordered_map.h.
	* libprofc++/profiler_map_to_unordered_map.h: Merge into 
	include/profile/impl/profiler_map_to_unordered_map.h.
	* libprofc++/profiler_node.cc: Merge into
	include/profile/impl/profiler_node.h.
	* libprofc++/profiler_node.h: Merge into
	include/profile/impl/profiler_node.h.
	* libprofc++/profiler_hashtable_size.cc: Merge into
	include/profile/impl/profiler_hashtable_size.h.
	* libprofc++/profiler_hashtable_size.h: Merge into
	include/profile/impl/profiler_hashtable_size.h.
	* libprofc++/profiler.h: Merge into include/profile/impl/profiler.h.
	* include/Makefile.am: Added profile/impl directory.
	* include/Makefile.in: Added profile/impl directory.
	* include/profile/hashtable.h: Include profile/base.h instead of
	profiler.h.
	* include/profile/unordered_map: Uglify method name profile_destruct.
	Uglify method name profile_resize.
	* include/profile/unordered_set: Uglify method name profile_destruct.
	Uglify method name profile_resize.
	* include/profile/base.h: Include profile/impl/profiler.h instead
	of profiler.h.
	* include/profile/impl/profiler.h: Move from libprofc++/.  Include
	diagnostic implementation files.
	* include/profile/impl/profiler_state.h:  Merge from
	corresponding libprofc++/ files.  Make all methods inline.
	(state): Templatize class.
	* include/profile/impl/profiler_node.h:  Merge from
	corresponding libprofc++/ files.  Make all methods inline.
	Add ifdef guard HAVE_EXECINFO_H for call to backtrace.
	(size): new function.
	* include/profile/impl/profiler_trace.h  Merge from
	corresponding libprofc++/ files.  Make all methods inline.
	Use tr1/unordered_map instead of std/unordered_map without c++0x.
	(tables): New class.  Add HAVE_TLS ifdef guard.
	* include/profile/impl/profiler_container_size.h: Merge from
	corresponding libprofc++/ files.  Make all methods inline.
	* include/profile/impl/profiler_vector_size.h: Merge from
	corresponding libprofc++/ files.  Make all methods inline.
	* include/profile/impl/profiler_hash_func.h: Merge from
	corresponding libprofc++/ files.  Make all methods inline.
	* include/profile/impl/profiler_vector_to_list.h: Merge from
	corresponding libprofc++/ files.  Make all methods inline.
	* include/profile/impl/profiler_map_to_unordered_map.h: Merge from
	corresponding libprofc++/ files.  Make all methods inline.
	* include/profile/impl/profiler_hashtable_size.h: Merge from
	corresponding libprofc++/ files.  Make all methods inline.
	* testsuite/Makefile.in: Removed references to libprofc++.
	* testsuite/Makefile.am: Removed references to libprofc++.

2009-05-30  Silvius Rus  <silvius.rus@gmail.com>
	* include/profile/set.h: Integrate updates from std.
	* include/profile/unordered_set: Integrate updates from std.
	* include/profile/vector: Integrate updates from std.
	* include/profile/deque: Integrate updates from std.
	* include/profile/map.h: Integrate updates from std.
	* include/profile/unordered_map: Integrate updates from std.
	* include/profile/bitset: Integrate updates from std.
	* include/profile/list: Integrate updates from std.
	* include/profile/multiset.h: Integrate updates from std.
	* include/profile/multimap.h: Integrate updates from std.
	* include/bits/c++config: Fix namespace defines for profile mode.
	* libprofc++/profiler.h: Fix copy/paste error with names.
	* libprofc++/profiler_trace.h: Remove printouts.
	* testsuite/Makefile.in: Replace -fprofile-stdlib with 
	-D_GLIBCXX_PROFILE -lprofc++.
	* testsuite/ext/throw_allocator/deallocate_global.cc: Add ifndef
	_GLIBCXX_PROFILE.
	* testsuite/ext/throw_allocator/deallocate_local.cc(main): Discard
	global allocation count from verification.
	* testsuite/23_containers/unordered_map/profile/hash_map.cc: Add.
	* testsuite/23_containers/unordered_map/profile/unordered.cc: Add.
	* testsuite/23_containers/vector/profile/vector.cc: Add.
	* testsuite/23_containers/deque/capacity/moveable.cc: Add ifndef
	_GLIBCXX_PROFILE.
	* testsuite/23_containers/list/capacity/29134.cc: Add ifndef
	_GLIBCXX_PROFILE.
	* testsuite/31_profile/hash_map.cc: Delete.
	* testsuite/31_profile/unordered.cc: Delete.
	* testsuite/31_profile/vector.cc: Delete.

2009-03-11  Silvius Rus  <silvius.rus@gmail.com>
	* libprofc++/Makefile.am: Add modules.
	* libprofc++/Makefile.in: Add modules.
	* libprofc++/profiler_trace.cc: Add calls to initialization and report
	for map_to_unordered_map.
	* libprofc++/profiler.h: Add hooks for trace_map_to_unordered_map.
	* libprofc++/profiler_map_to_unordered_map.cc: New file.
	* libprofc++/profiler_map_to_unordered_map.h: New file.
	* include/profile/base.h: Fix author field.
	* include/profile/map.h: Update from include/debug/map.h.  Add calls
	to trace_map_to_unordered_map hooks.

2008-11-10  Silvius Rus  <silvius.rus@gmail.com>
	* libprofc++/Makefile.in: Add modules.
	* libprofc++/profiler_vector_size.cc: Refactor.
	* libprofc++/profiler_trace.cc: Refactor.
	* libprofc++/profiler_hash_func.cc: New file.
	* libprofc++/profiler_vector_to_list.cc: New file.
	* libprofc++/profiler_trace.h: Refactor.
	* libprofc++/profiler_hash_func.h: New file.
	* libprofc++/profiler_vector_to_list.h: New file.
	* libprofc++/profiler_container_size.cc: Refactor.
	* libprofc++/profiler_container_size.h: Refactor.
	* libprofc++/profiler.h: Add hooks for INEFFICIENT_HASH and 
	VECTOR_TO_LIST.  Change arguments from void* to const void*.
	* libprofc++/profiler_state.h: Include C++ headers instead of C.
	* libprofc++/profiler_node.cc: Reorganize.
	* libprofc++/profiler_hashtable_size.cc: Reorganize.
	* libprofc++/profiler_node.h: Reorganize.
	* include/profile/hashtable.h: Add INEFFICIENT_HASH instrumentation.
	* include/profile/unordered_set:  Add INEFFICIENT_HASH instrumentation.
	* include/profile/vector: Add VECTOR_TO_LIST instrumentation.
	* include/profile/unordered_map: Add INEFFICIENT_HASH instrumentation.

2008-08-15  Lixia Liu  <liulixia@purdue.edu>
	* configure: Add directory libprofc++ for profiling runtime library.
	* Makefile.in: Add directory libprofc++.
	* Makefile.am: Ditto.
	* acinclude.m4: Ditto.
	* libprofc++/Makefile.in: New makefile.
	* libprofc++/Makefile.am: New makefile.
	* libprofc++/profiler.h: New public header file for runtime library.
	* libprofc++/profiler_trace.h: New file.
	* libprofc++/profiler_state.h: New file.
	* libprofc++/profiler_node.h: New file.
	* libprofc++/profiler_container_size.h: New file.
	* libprofc++/profiler_trace.cc: New file.
	* libprofc++/profiler_state.cc: New file.
	* libprofc++/profiler_node.cc: New file.
	* libprofc++/profiler_container_size.cc: New file.
	* libprofc++/profiler_vector_size.cc: New file.
	* libprofc++/profiler_hashtable_size.cc: New file.
	* src/Makefile.in: Add new library.
	* src/Makefile.am: Add new library.
	* include/Makefile.in: Add new instrumented header files.
	* include/Makefile.am: Add new instrumented header files.
	* include/tr1_impl/hashtable (_Hashtable): Expose insert_return_type.
	* include/std/vector: Include profile/vector guarded by 
	_GLIBCXX_PROFILE.
	* include/std/deque: Likewise.
	* include/std/list: Likewise.
	* include/std/map: Likewise.
	* include/std/unordered_map: Likewise.
	* include/std/bitset: Likewise.
	* include/std/set: Likewise.
	* include/std/unordered_set: Likewise.
	* include/profile/base.h: New file.
	* include/profile/set.h: New file for instrumented container set.
	* include/profile/unordered_set: Likewise.
	* include/profile/vector: Likewise.
	* include/profile/deque: Likewise.
	* include/profile/map.h: Likewise.
	* include/profile/multimap.h: Likewise.
	* include/profile/hashtable.h: Likewise.
	* include/bits/c++config: Define profile namespace.
	* include/backward/hash_map: New file for instrumented hash_map
	* include/backward/hash_set: Likewise.
	* testsuite/Makefile.in: Add check-profile.
	* testsuite/Makefile.am: Ditto.
	* testsuite/23_containers/vector/resize/moveable.cc: Aware profile 
	mode.
	* testsuite/31_profile/hash_map.cc: New testcase for profile mode.
	* testsuite/31_profile/vector.cc:  New testcase for profile mode.
	* testsuite/31_profile/unordered.cc: New testcase for profile mode.
	* ChangeLog.profile-stdlib: New changelog for branch profile-stdlib.
