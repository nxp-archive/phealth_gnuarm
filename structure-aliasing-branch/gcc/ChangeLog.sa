2004-12-22 Daniel Berlin <dberlin@dberlin.org>

	* tree-ssa-alias.c: Include vec.h.
	(get_fake_vars_for_var): New function.
	(get_fake_vars_for_component_ref): Ditto.
	(compute_flow_insensitive_aliasing): Use get_fake_vars_for_var.
	(setup_pointers_and_addressables): Ditto here.
	(add_pointed_to_var): If we were really passed a component ref,
	try to get a set of fake variables from it.
	Otherwise, make sure to include all the approriate fake variables
	into the pointed-to set.
	(bitpos_of_field): New function.
	(push_fields_onto_fieldstack): Ditto.
	(var_subvar_hash): Ditto.
	(var_subvar_free): Ditto.
	(var_subvar_eq): Ditto.
	(lookup_subvars_for_var): Ditto.
	(get_subvars_for_var): Ditto.
	(create_overlap_variables_for): Ditto.
	(create_structure_vars): Ditto.
	(ref_contains_array_ref): Ditto.
	(pass_create_structure_vars): New structure.	
	* tree-flow.h (get_fake_vars_for_component_ref): Prototype.
	(get_fake_vars_for_var): Ditto.
	(mem_tag_kind): Add STRUCT_FIELD.
	* tree-ssa-operands.c (note_addressable): Add fake vars into
	addressable set.
	(get_expr_operands): Add fake variables when we add regular
	variable.
	
2004-11-18  Daniel Berlin  <dberlin@dberlin.org>

	* tree-ssa-structalias.c: Rewrite to use real offsets, instead of
	field numbering.
	* tree-optimize.c (init_tree_optimization_passes): Uncomment calls
	to build_pta and del_pta.
	
2004-09-30  Daniel Berlin  <dberlin@dberlin.org>

	* tree-ssa-loop-ivopts.c (rewrite_use_address): Mark new variables
	for renaming.
	(tree_ssa_iv_optimize): Call rewrite_into_ssa and
	rewrite_into_loop_closed_ssa.
	* tree-ssa-operands.c (add_stmt_operand): We don't want to deal
	with type tags.  Add support for trying to find partial use/def
	info.
	* tree-into-ssa.c (rewrite_stmt): Call
	get_intersecting_reaching_def for partial uses.
	(ssa_rewrite_stmt): Ditto.
	(rewrite_operand): Inlined into caller and removed.
	(find_may_def_for_use): New function.
	(find_must_def_for_use): Ditto.
	(find_partial_def_for_use): Ditto.
	* tree-ssa-structalias.c (process_unification_queue): Fix bug in
	determing whether variable merging changed the solution.
	Print out names being unified.
	(get_constraint_for_component_ref): Update for integer_id.
	(get_constraint_for): Assignments from integers now get
	the INTEGER constraint.
	(create_alias_vars): Mark var_readonly as address taken.
	Add in integer constraint.
	(alias_get_name):Call alias_get_name, not get_name, to
	get ssa variable name, since alias_get_name knows 
	what to do with unnamed variables.
	
2004-09-29  Daniel Berlin  <dberlin@dberlin.org>

	* tree-ssa-ccp.c (substitute_and_fold): Don't try to access
	operand 1 of non-MODIFY_EXPR stmts.
	* version.c: Note that this is the structure aliasing branch
	
2004-09-27  Daniel Berlin  <dberlin@dberlin.org>

	* tree-flow-inline.c: gcc_assertify.
	* tree-ssa-ccp.c (substitute_and_fold): Mark new vars
	if RHS is handled component as well.

2004-09-26  Daniel Berlin  <dberlin@dberlin.org>

	* tree-flow-inline.h (get_vuse_offset_ptr): New.
	(get_vuse_size_ptr): New.
	(get_vuse_op_ptr): Modify for vuse operand type change.
	(op_iter_init_tree): Fix comment.
	(op_iter_next_partuse): New function.
	(op_iter_init_partuse): Ditto.
	* tree-pretty-print.c (dump_vops): Use new partuse iterator
	to get offset and size info for vuses.
	* tree-ssa-operands.c (build_vuses_offset): New array.
	(build_vuses_size): New array.
	(allocate_vuse_optype): Modify to use vuse_operand_type_t.
	(init_ssa_operands): Init new arrays.
	(fini_ssa_operands): Free new arrays.
	(finalize_ssa_vuses): Rewrite to handle size and offset info as
	well.
	(append_vuse): Take offset and size now as well.
	Push onto new arrays.	
	(add_stmt_operand): Do partial uses here.
	(copy_virtual_operands): Copy offset and size for vuse as well.
	(create_ssa_artficial_load_stmt): Modify to append vuse offset
	and size from the may_def result and size.
	* tree-ssa-operands.h (VUSE_OFFSET_PTR): New macro.
	(VUSE_OFFSET): Ditto.
	(SET_VUSE_OFFSET): Ditto.
	(VUSE_SIZE_PTR): Ditto.
	(VUSE_SIZE): Ditto.
	(SET_VUSE_SIZE): Ditto.
	(vuse_operand_type): New structure.
	(vuse_optype_d): Use it.
	(FOR_EACH_SSA_PARTUSE_OPERAND): New macro.
	
2004-09-19  Daniel Berlin  <dberlin@dberlin.org>

	* tree-ssa-ccp.c (substitute_and_fold): Changing some piece
	of a handled component may now change the v_may_def.
	* tree-ssa-operands.c (fini_ssa_operands):
	Free offset and size arrays too.
	(add_stmt_operand): Use get_inner_reference to determine offset
	and size when possible.
	* tree-ssa.c: Add vd_pair_pool.
	(init_tree_ssa): Alloc vd_pair pool.
	(delete_tree_ssa): Free vd_pair pool.
	* tree-ssa-structlias.c: Update for TREE_CODE_CLASS change.

2004-09-15  Daniel Berlin  <dberlin@dberlin.org>
	
	* Makefile.in (TREE_FLOW_H): Add vec.h.
	* tree-flow.h: Include vec.h.
	(var_def_pair): New struct.
	(register_new_def): update prototype.
	* tree-into-ssa.c (rewrite_block_data): Use a vector of vd_pair_t.
	(rewrite_initialize_block_local_date): Use vector function for
	block_defs.
	(rewrite_initialize_block): Pass new parameter to register_new_def.
	(rewrite_stmt): Ditto.
	(ssa_register_new_def): Removed.
	(ssa_rewrite_initialize_block): Use register_new_def.
	(ssa_rewrite_stmt): Ditto.
	(rewrite_finalize_block): Rewrite to use new block_defs vector.
	(ssa_rewrite_finalize_block): Removed.
	(register_new_def): Take new parameter, rewrite to use
	block_defs vector.
	* tree-ssa-dom.c (struct dom_block_walk_data): Use a vector
	for block_defs.
	(restore_currdefs_to_original_value): Update for vector use.
	(register_definitions_for_stmt): Ditto.
	(dom_opt_initialize_block_local_data): Ditto.
	(dom_opt_finalize_block): Ditto.
	(thread_across_edge): Pass new parameter to register_new_def.

2004-09-12  Daniel Berlin  <dberlin@dberlin.org>

	* Makefile.in (tree-ssa-structalias.o): New file.
	(tree-ssa-structalias.o): New.
	* tree-optimize.c (init_tree_optimization_passes): Add build_pta,
	del_pta.
	* tree-pass.h (pass_build_pta, pass_del_pta): New.
	* tree-ssa-structalias.c: New file.
	* tree-ssa-structalias.h: Ditto
	* tree-ssa-operands.c (append_v_may_def): Use unsigned int, not 
	unsigned HOST_WIDE_INT, for now.

2004-09-02  Daniel Berlin  <dberlin@dberlin.org>

	* tree-flow-inline.h (get_v_may_def_offset_ptr): New function.
	(get_v_may_def_size_ptr): Ditto.
	(op_iter_next_maydef): Add size and offset.
	(op_iter_init_maydef): Ditto.
	* tree-into-ssa.c (mark_def_sites): Ditto.
	* tree-pretty-print.c (dump_vops): Ditto.
	* tree-ssa-operands.c (build_v_may_defs_offset): New.
	(build_v_may_defs_size): Ditto.
	(init_ssa_operands): Init new varrays.
	(finalize_ssa_v_may_defs): Compare/set offset and size too.
	(finalize_ssa_vuses): Pop new arrays.
	(start_ssa_stmt_operands): Check new arrays.
	(append_v_may_def): Handle offset and size.
	(add_stmt_operand): Pass offset and size to append_v_may_def.
	(copy_virtual_operands): Copy offset and size.
	* tree-ssa-operands.h (v_may_def_operand_type): Add offset and
	size.
	(V_MAY_DEF_OFFSET_PTR): New macro.
	(V_MAY_DEF_OFFSET): Ditto.
	(V_MAY_DEF_SIZE_PTR): Ditto.
	(V_MAY_DEF_SIZE): Ditto.
	(FOR_EACH_SSA_MAYDEF): Modify to give caller offset and size.
