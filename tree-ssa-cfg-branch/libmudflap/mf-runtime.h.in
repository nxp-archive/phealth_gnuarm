/* Public libmudflap declarations -*- C -*- */

#ifndef MF_RUNTIME_H
#define MF_RUNTIME_H

#if @MF_HAVE_STDINT_H@ /* autoconf HAVE_STDINT_H */
#include <stdint.h>
#endif
#include <sys/types.h>
#if ! @MF_HAVE_UINTPTR_T@
typedef unsigned long uintptr_t;
#define HAVE_UINTPTR_T 1
/* Define this here, in case an autoconf application was run
   without CFLAGS=-fmudflap but is being compiled with -fmudflap.  */
#endif


/* Global declarations used by instrumentation. */

struct __mf_cache { uintptr_t low; uintptr_t high; };
extern struct __mf_cache __mf_lookup_cache [];
extern uintptr_t __mf_lc_mask;
extern unsigned char __mf_lc_shift;

/* Multithreading support.  */
#ifdef _MUDFLAPTH
/* extern pthread_mutex_t __mf_biglock; */
#define _REENTRANT
#define _THREAD_SAFE
#endif

/* Codes to describe the type of access to check: __mf_check arg 3 */

#define __MF_CHECK_READ 0
#define __MF_CHECK_WRITE 1


/* Codes to describe a region of memory being registered: __mf_*register arg 3 */

#define __MF_TYPE_NOACCESS 0
#define __MF_TYPE_HEAP 1
#define __MF_TYPE_HEAP_I 2
#define __MF_TYPE_STACK 3
#define __MF_TYPE_STATIC 4
#define __MF_TYPE_GUESS 5


/* The public mudflap API */

#ifdef __cplusplus
extern "C" {
#endif

extern void __mf_check (void *ptr, size_t sz, int type, const char *location)
       __attribute((nothrow));
extern void __mf_register (void *ptr, size_t sz, int type, const char *name) 
       __attribute((nothrow));
extern void __mf_unregister (void *ptr, size_t sz) __attribute((nothrow));
extern unsigned __mf_watch (void *ptr, size_t sz);
extern unsigned __mf_unwatch (void *ptr, size_t sz);
extern void __mf_report ();
extern int __mf_set_options (const char *opts);


/* Redirect some standard library functions to libmudflap.  These are
   done by simple #define rather than linker wrapping, since only
   instrumented modules are meant to be affected.  */

#ifdef _MUDFLAP  
#define memcpy __mfwrap_memcpy 
#define memmove __mfwrap_memmove
#define memset __mfwrap_memset 
#define memcmp __mfwrap_memcmp 
#define memchr __mfwrap_memchr 
#define memrchr __mfwrap_memrchr
#define strcpy __mfwrap_strcpy 
#define strncpy __mfwrap_strncpy 
#define strcat __mfwrap_strcat 
#define strncat __mfwrap_strncat
#define strcmp __mfwrap_strcmp 
#define strcasecmp __mfwrap_strcasecmp 
#define strncmp __mfwrap_strncmp 
#define strncasecmp __mfwrap_strncasecmp
#define strdup __mfwrap_strdup 
#define strndup __mfwrap_strndup 
#define strchr __mfwrap_strchr 
#define strrchr __mfwrap_strrchr
#define strstr __mfwrap_strstr 
#define memmem __mfwrap_memmem 
#define strlen __mfwrap_strlen 
#define strnlen __mfwrap_strnlen
#define bzero __mfwrap_bzero 
#define bcopy __mfwrap_bcopy 
#define bcmp __mfwrap_bcmp 
#define index __mfwrap_index 
#define rindex __mfwrap_rindex
#define asctime __mfwrap_asctime
#define ctime __mfwrap_ctime
#define gmtime __mfwrap_gmtime
#define localtime __mfwrap_localtime
#define time __mfwrap_time
#define strerror __mfwrap_strerror
#define fopen __mfwrap_fopen
#define fclose __mfwrap_fclose
#define fread __mfwrap_fread
#define fwrite __mfwrap_fwrite
#define fgetc __mfwrap_fgetc
#define fgets __mfwrap_fgets
#define getc __mfwrap_getc
#define gets __mfwrap_gets
#define ungetc __mfwrap_ungetc
#define fputc __mfwrap_fputc
#define fputs __mfwrap_fputs
#define putc __mfwrap_putc
#define puts __mfwrap_puts
#define clearerr __mfwrap_clearerr
#define feof __mfwrap_feof
#define ferror __mfwrap_ferror
#define fileno __mfwrap_fileno
#define printf __mfwrap_printf
#define fprintf __mfwrap_fprintf
#define sprintf __mfwrap_sprintf
#define snprintf __mfwrap_snprintf
#define vprintf __mfwrap_vprintf
#define vfprintf __mfwrap_vfprintf
#define vsprintf __mfwrap_vsprintf
#define vsnprintf __mfwrap_vsnprintf
#define access __mfwrap_access
#define remove __mfwrap_remove
#define fflush __mfwrap_fflush
#define fseek __mfwrap_fseek
#define ftell __mfwrap_ftell
#define rewind __mfwrap_rewind
#define fgetpos __mfwrap_fgetpos
#define fsetpos __mfwrap_fsetpos
#define stat __mfwrap_stat
#define fstat __mfwrap_fstat
#define lstat __mfwrap_lstat
#define mkfifo __mfwrap_mkfifo
#define setvbuf __mfwrap_setvbuf
#define setbuf __mfwrap_setbuf
#define opendir __mfwrap_opendir
#define closedir __mfwrap_closedir
#define readdir __mfwrap_readdir
#define recv __mfwrap_recv
#define recvfrom __mfwrap_recvfrom
#define recvmsg __mfwrap_recvmsg
#define send __mfwrap_send
#define sendto __mfwrap_sendto
#define sendmsg __mfwrap_sendmsg
#define setsockopt __mfwrap_setsockopt
#define getsockopt __mfwrap_getsockopt
#define accept __mfwrap_accept
#define bind __mfwrap_bind
#define connect __mfwrap_connect
#define gethostname __mfwrap_gethostname
#define sethostname __mfwrap_sethostname
#define gethostbyname __mfwrap_gethostbyname
#define wait __mfwrap_wait
#define waitpid __mfwrap_waitpid
#define popen __mfwrap_popen
#define pclose __mfwrap_pclose
#define execve __mfwrap_execve
#define execv __mfwrap_execv
#define execvp __mfwrap_execvp
#define system __mfwrap_system
#define dlopen __mfwrap_dlopen
#define dlerror __mfwrap_dlerror
#define dlsym __mfwrap_dlsym
#define dlclose __mfwrap_dlclose
#define fopen64 __mfwrap_fopen64
#define stat64 __mfwrap_stat64
#define fseeko64 __mfwrap_fseeko64
#define ftello64 __mfwrap_ftello64
#define semop __mfwrap_semop
#define semctl __mfwrap_semctl
#define shmctl __mfwrap_shmctl
#define shmat __mfwrap_shmat
#define shmdt __mfwrap_shmdt

/* Disable glibc macros.  */
#define __NO_STRING_INLINES

#endif /* _MUDFLAP */


#ifdef __cplusplus
}
#endif

#endif /* MF_RUNTIME_H */
