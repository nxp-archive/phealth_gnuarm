2003-10-05  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gimple-low.c (struct lower_data): New field encl_switch_body.
	(lower_case_label_expr): New.
	(lower_stmt_body, lower_stmt, lower_switch_expr): Handle switch_expr
	lowering.
	* tree-cfg.c (CASE_END, CASE_NEXT_RAW): Removed.
	(CASE_GOTO, CASE_NEXT, CASE_DESTINATION, CASE_CASE, CASE_EDGE): Work
	over tree_stmt_iterators.
	(CASE_START): New.
	(make_switch_expr_edges, tree_redirect_edge_and_branch,
	find_taken_edge_switch_expr, tree_cleanup_block_edges,
	remove_superfluous_labels): Use tree_stmt_iterator for switch cases.
	(build_new_label): Moved ...
	* gimplify.c (build_new_label): ...here.
	(build_and_jump): Use it.
	* tree-flatten.c (tree_flatten_statement): Assume SWITCH_EXPRs are
	lowered.

2003-10-05  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gimple-low.c (simple_goto_p): New.
	(lower_cond_expr): Lower COND_EXPR form.
	* tree-cfg.c (tree_cleanup_block_edges): Cleanup edges that are both
	true and false.
	* tree-flatten.c (tree_flatten_statement): Assume COND_EXPRs are
	lowered.

	* tree-cfg.c (stmt_starts_bb_p): Include is_ctrl_altering_stmt.

2003-10-05  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gimple-low.c: New.
	* Makefile.in (gimple-low.o): Add.
	* cfglayout.c (insn_locators_initialize): Use new scoping info.
	* expr.c (expand_expr): Record scope changes.
	* function.c (blocks_nreverse): Export.
	(uninitialized_vars_warning): Use DECL_RTL_SET_P instead of DECL_RTL.
	(reset_block_changes, record_block_change, record_block_change,
	check_block_change, free_block_changes): New.
	* function.h (struct function): New fields dont_emit_block_notes
	and ib_boundaries_block.
	(blocks_nreverse, reset_block_changes, record_block_change,
	finalize_block_changes, check_block_change, free_block_changes):
	Declare.
	* sibcall.c (optimize_sibling_and_tail_recursive_call): Don't call
	reorder_blocks if cfun->dont_emit_block_notes.
	* stmt.c (expand_start_bindings_and_block, expand_end_bindings): Don't
	emit block notes if cfun->dont_emit_block_notes.
	* toplev.c (rest_of_compilation): Don't call reorder_blocks if
	cfun->dont_emit_block_notes.
	* tree-flow.h (lower_function_body): Declare.
	* tree-optimize.c (optimize_function_tree): Call lower_function_body.
	* tree.c (build1): Initialize TREE_BLOCK.
	* tree.h (TREE_BLOCK): New macro.
	(struct tree_exp): Add block field.

2003-10-03  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* tree-ssa.c (degrees): Removed.
	(rewrite_into_ssa): Degrees initialization removed.
	(rewrite_block): Test vars_to_rename instead.
	* tree-dfa.c (remove_phi_arg_num): Don't update PHI_ARG_CAPACITY.

2003-10-02  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	Merge from tree-ssa-branch (tree-ssa-cfg-merge-20031001)

2003-08-18  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gimplify.c (gimplify_loop_expr): Place the exit label correctly.
	(annotate_stmt_with_file_line): Don't assign lines to artificial
	gotos.
	* toplev.c (rest_of_decl_compilation): Ensure correct line number is
	reported for invalid register name error.
	* tree-cfg.c: Update comment on general shape of cfg.
	(remove_bb): Ensure correct line number is reported for unreachable
	basic block.

2003-08-17  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* version.c (version_string): Update.

2003-08-16  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* basic-block.h (EDGE_CONSTRUCT_ENTRY): New.
	* cfg.c (dump_edge_info): Add name for EDGE_CONSTRUCT_ENTRY flag.
	* tree-cfg.c (remove_stmt, bsi_remove): Get basic block from argument
	rather than from bb_for_stmt.
	(remove_useless_stmts_and_vars): Export.
	(make_edges): Mark edges with EDGE_CONSTRUCT_ENTRY.
	(tree_redirect_edge_and_branch): Refuse to redirect abnormal edges.
	Update phi nodes.
	(cleanup_tree_cfg): Don't call remove_useless_stmts_and_vars.
	(tree_merge_blocks): Handle phi nodes.
	(tree_verify_flow_info): Add checks for phi nodes.
	(dump_block_tree): Dump variables.
	(tree_forwarder_block_p): Fail if successor is EDGE_CONSTRUCT_ENTRY,
	or if block contains phi nodes.
	(thread_jumps): Handle phi nodes.
	(merge_seq_blocks): Don't merge with construct entry.
	* tree-dfa.c (add_vdef): Export.
	(virtual_op_p): Split off add_stmt_operand.
	(add_stmt_operand): Use it.
	* tree-flatten.c (tree_flatten_statement): Don't record BIND_EXPRs
	with no variables.
	(compact_to_block): Use EDGE_CONSTRUCT_ENTRY flag.
	* tree-flow.h (remove_useless_stmts_and_vars, add_vdef,
	virtual_op_p, fixup_var_scope): Declare.
	* tree-optimize.c (optimize_function_tree): Enable dce.
	* tree-ssa-copyprop.c (fixup_var_scope): Split off propagate_copy.
	(propagate_copy): Use it.
	* tree-ssa-dce.c: Disable removal of dead conditionals.  Enable rest.
	* tree-ssa-dom.c (optimize_stmt): Use fixup_var_scope.
	* tree-ssa.c (rewrite_out_of_ssa): Call remove_useless_stmts_and_vars.
	* tree.c (resize_phi_node): Zero new elements.

2003-08-14  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Makefile.in (tree-flatten.o): Add.
	* basic-block.h (struct basic_block_def): Head_tree_p and
	end_tree_p replaced with head_tree and end_tree.
	(BB_CONTROL_EXPR, BB_LOOP_CONTROL_EXPR): Removed.
	(tidy_fallthru_edges): Hookized.
	(dump_cfg): Declare.
	* bitmap.c (bitmap_first_set_bit, bitmap_last_set_bit): Prevent
	warning when loop header copying is not done.
	* c-call-graph.c (construct_call_graph):  Disable cfg statistics.
	* c-decl.c (c_expand_body_1): Ask for creation of loop notes.
	* c-simplify.c (gimplify_c_loop): Emit the loop in a better shape.
	* cfg.c (dump_edge_info): Add loop_exit flag.
	(dump_cfg): New.
	* cfghooks.h (struct cfg_hooks): Add cfgh_tidy_fallthru_edges.
	(tidy_fallthru_edges): New macro.
	* cfgloop.h (create_loop_notes): Declare.
	* cfgloopmanip.c (create_loop_notes): New.
	* cfgrtl.c (tidy_fallthru_edges): Renamed to rtl_tidy_fallthru_edges.
	* except.c (resolve_fixup_regions): Fix.
	* explow.c (probe_stack_range): Don't emit loop notes when they are
	recreated.
	* expr.c (emit_block_move_via_loop): Ditto.
	* function.h (struct function): New flag recreate_loop_notes.
	* gimplify.c (build_and_jump): Exported.
	(gimplify_loop_expr): Lower LOOP_EXPRs.
	* integrate.c (copy_decl_for_inlining): Reset DECL_TOO_LATE.
	* toplev.c (rest_of_compilation): Recreate loop notes.
	* tree-alias-common.c (create_alias_vars): Work over cfg.
	* tree-cfg.c: Almost completely rewritten.
	* tree-flatten.c: New.
	* tree-flow-inline.h (parent_block, parent_stmt): Removed.
	(bsi_end_p, bsi_next bsi_stmt_ptr, bsi_stmt, bsi_container,
	tsi_from_bsi): Rewritten.
	(FOR_EACH_BSI_IN_REVERSE): Removed.
	(FOR_EACH_STMT_IN_REVERSE): Rewritten.
	* tree-flow.h (enum tree_container_note, enum block_tree_type): New.
	(struct tree_container, tree_cell, struct block_tree): New.
	(block_tree, no_bb_for_stmt): Declare variables.
	(struct var_ann_d): Add scope field.
	(struct stmt_ann_d): Removed parent_stmt and
	reachable_exception_handlers fields.  Added case_edge field.
	(parent_stmt, parent_block): Removed.
	(struct bb_ann_d): Added block field.
	(bti_start, bti_end_p, bti_next): Declare.
	(block_stmt_iterator): Modified.
	(bsi_container, bsi_from_tsi, is_loop_stmt, loop_body, set_loop_body,
	insert_bb_before, is_latch_block_for, remove_useless_stmts_and_vars):
	Declaration removed.
	(bsi_cell, debug_tree_bb_n, dump_cfg_function_to_file,
	block_tree_free, tree_move_block_after, tree_split_block,
	tree_cleanup_block_edges, assign_vars_to_scopes, build_new_label,
	tree_cell_alloc, tree_flatten_statement, tree_unflatten_statements):
	Declare.
	(tree_block_label): New.
	(build_tree_cfg, cleanup_tree_cfg, propagate_copy): Declaration changed.
	* tree-optimize.c (optimize_function_tree): Create cfg the new way.
	Disable dce.
	* tree-pretty-print.c (dump_block_info): Modified.
	* tree-simple.c (is_gimple_stmt): Remove LOOP_EXPR.
	* tree-simple.h (build_and_jump): Declare.
	* tree-ssa-ccp.c (tree_ssa_ccp): Modified.
	* tree-ssa-copyprop.c (get_common_scope, move_var_to_scope): New.
	(copyprop_stmt, propagate_copy): Use them.
	(tree_ssa_copyprop): Modified.
	* tree-ssa-dce.c: Disabled.
	* tree-ssa-dom.c (tree_ssa_dominator_optimize, optimize_block):
	Modified.
	(optimize_stmt): Update scope of variables.
	* tree-ssa-live.c (build_tree_conflict_graph): Modified.
	* tree-ssa-pre.c (finalize_1, tree_perform_ssapre): Modified.
	* tree-ssa.c (delete_tree_ssa, rewrite_into_ssa,
	rewrite_out_of_ssa): Modified.
	(remove_annotations_r): Removed.

2003-08-13  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Changelog.tree-ssa-cfg: New.
