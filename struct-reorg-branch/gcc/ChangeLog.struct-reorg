2005-01-21  Caroline Tice  <ctice@apple.com>

	Remove attribute "global_export".
	* c-common.c (handle_global_export_attribute):  Remove function.
	(c_common_attribute_table): Remove global_export attribute.
	* cgraphunit.c (cgraph_function_and_variable_visibility):  Remove
	global_export attribute.

2005-01-21  Caroline Tice  <ctice@apple.com>

	Merged with tree-profiling branch, as of 2005-01-17.  Tag on
	the tree-profiling branch is "tree-profiling-merge-20050117".

2005-01-14  Caroline Tice  <ctice@apple.com>

	* struct-reorg.c (struct malloc_call_data):  Add new field, num_elts.
	(similar_struct_decls_p, replace_old_field_types):  Add forward 
	declarations.
	(found_in_list): New function.
	(get_type_name): Add code to deal with type_nodes without names.
	(print_type):  Change completely to deal with recursively defined structs.
	(print_new_types): Make changes to correspond to changes in print_type, to
	deal with recursively defined structs.
	(get_fields): Add code to initialize new_mapping field.
	(add_field_access_site): Add bb and context parameters; use the parameters
	to initialize th new bb and context fields in struct access_site.
	(get_stmt_accessed_fields_1): Add bb and context parameters, pass them
	to calls to add_field_access_site and get_stmt_accessed_fields_1.
	(get_stmt_accessed_fields): Add bb and context parameters; pass them to
	calls to get_stmt_accessed_fields_1.
	(build_f_acc_list_for_bb): Add bb and context parameters; pass them to
	calls to get_stmt_accessed_fields.
	(build_bb_access_list_for_struct): Add function context to call to 
	build_f_acc_list_for_bb.
	(struct_contains_field_p): New function.
	(struct_contains_substruct_p): New function.
	(update_field_mappings): Modify to only update mapping when appropriate.
	(create_new_var_decls): Modify to deal correctly with ARRAY_TYPE, and
	to update appropriate fields of struct variables to use new type 
	definitions.
	(collect_malloc_data): Modify to deal correctly with calls to calloc as
	well as calls to malloc.
	(add_field_mallocs): New function.
	(create_cascading_mallocs): New function.
	(create_new_mallocs): Remove code that forced all new calls to be
	'malloc' (which was wrong for 'calloc's); add code to generate appropriate
	'calloc' arguments, when necessary; add call to create_cascading_mallocs,
	for malloc'ing new sub-structures where appropriate.
	(find_and_substitute_types_and_vars):  Return immediately if no work to
	be done.
	(build_new_stmts):  Modified to accept and properly handle more 
	complicated field access statements.
	(update_field_accesses):  Modified to correctly use (possibly nested)
	new mapping information.
	(update_struct_use_stmts): Added appropriate new arguments to call to 
	build_new_stmts.
	(add_type_to_worklist): New function.
	(add_type_to_donelist): New function.
	(remove_type_from_list): New function.
	(replace_old_field_types): New function.
	(do_peel):  Added call to replace_old_field_types.
	* struct-reorg.h (struct access_site):  Added two new fields, bb and
	context, to help with inserting new statements at field access sites.

2005-01-12 Mostafa Hagog <mustafa@il.ibm.com>

	* cgraphunit.c (cgraph_optimize): Move matrix_reorg.
	* params.def (PARAM_STRUCT_REORG_CACHE_MISS_PENALTY): New.
	* params.h (STRUCT_REORG_CACHE_MISS_PENALTY): New.
	* struct-reorg-cpg.c (get_faccg_arc): Remove.
	(collapse_successor): Fix a bug. 
	(can_collapse_successors_p): New.
	(compact_faccg): Call can_collapse_successors_p.
	(split_data_structure): Use STRUCT_REORG_CACHE_MISS_PENALTY.
	* struct-reorg.c (add_to_varpool_list): Remove.
	(create_new_var_decls): Call cgraph_varpool_finalize_decl
	instead of add_to_varpool_list.


2004-12-28  Revital Eres  <eres@il.ibm.com>

	* Makefile.in: (matrix_reorg.o): New file.
	* matrix-reorg.c: New file.
	* cgraph.h (matrix_reorg): Declare.
	* graphunit.c (matrix_reorg): Call.
	* common.opt (flag_matrix_flattening): New flag.

2004-12-28 Mostafa Hagog <mustafa@il.ibm.com>

        * struct-reorg-cpg.c: (split_data_structure): Minor Tweaks.
        * struct-reorg.c: (build_f1neuron_cluster_info): Comment out.
        (collect_struct_use_data): Check struct_clustering->direct_access.
        (do_peel): Check struct_clustering->children/sibling.

2004-12-19  Caroline Tice  <ctice@apple.com>

	* cgraph.h (add_call_to_malloc_list):  New function declaration.
	* cgraphunit.c (record_call_1): Add code to collect information about
	  calls to malloc (by calling add_call_to_malloc_list).
	(cgraph_optimize): Move call to peel_structs.
	* struct-reorg-cpg.c (split_data_structure): Add calls to zero bitmaps
	after allocating them.
	* struct-reorg.c (tree-gimple.h, pointer-set.h, c-tree.h):  Add new
	include statements.
	(visited_nodes):  Change from hash table to pointer set.
	(use_struct, new_type_node, new_var_data, malloc_call_data, 
	malloc_struct):  New struct types.
	(struct_reorg_malloc_list, malloc_data_list, split_all_fields):  New
	global variables.
	(build_f1neuron_cluster_info): New function.
	(get_type_name): New function.
	(print_type): New function.
	(print_new_types): New function.
	(build_basic_struct): New function.
	(make_new_field_decl): New function.
	(update_field_mapings): New function.
	(build_child-struct): New function.
	(add_to_types_list): New function.
	(create_and_assemble_new_types): New function.
	(add_to_varpool_list): New function.
	(insert_into_var_list): New function.
	(make_new_vars_1): New function.
	(add_to_vars_list): New function.
	(create_new_var_decls): New function.
	(collect_malloc_data): New function.
	(record_malloc_1): New function.
	(add_bb_info): New function.
	(find_var): New function.
	(is_constant_0): New function.
	(lookup_field_2); New function.
	(build_component_ref_2): New function.
	(create_new_mallocs): New function.
	(search_rhs_for_struct_vars): New function.
	(find_and_substitute_types_and_vars): New function.
	(build_new_stmts): New function.
	(find_base): New function.
	(find_new_var): New function.
	(update_struct_offset): New function.
	(append_to_var_list): New function.
	(update_field_accesses): New function.
	(collect_struct_use_data): New function.
	(update_struct_use_stmts): New function.
	(do_peel): Added code to check and fix struct_clustering info if
	desired or appropriate.  Add code to actually perform the
	requrested code transformations.
	(perform_escape_analysis): New function.
	(peel_structs):  Added code to call and use new (preliminary)
	escape analysis code.  Modified code to only call do_peel once, and
	pass it all the information about all the data structs at once.
	(add_call_to_malloc_list): New function.
	* struct-reorg.h (struct_tree_list):  New struct type.
	(field_map): New struct type.
	(struct data_field_entry):  Added new field (new_maping).
	(struct data_structure):  Added new field (new_types).

2004-12-13  Dale Johannesen  <dalej@apple.com>

	* tree-inline.c (optimize_inline_calls):  Call counts_to_freqs.

2004-12-09 Kenneth Zadeck  <Kenneth.Zadeck@NaturalBridge.com>
	* tree-gimple.c (get_base_var): missing const_decl case.
	* cgraphunit.c (cgraph_mark_nonexportable): remove.
	(cgraph_function_and_variable_visibility): added global_export
	attribute.

2004-12-09 Kenneth Zadeck  <Kenneth.Zadeck@NaturalBridge.com>
	merged in tree-profiling branch as of 2004-12-08

2004-12-06 Mostafa Hagog  <mustafa@il.ibm.com>
	* params.def (PARAM_STRUCT_REORG_DISTANCE_THRESHOLD): New.
	* params.h (STRUCT_REORG_DISTANCE_THRESHOLD): New.
	* struct-reorg-cpg.c (struct faccg_arc, struct faccg_node):
	New.
	(create_bb_field_access, create_facc_node, copy_faccg_node,
	remove_facc_node, create_facc_arc, remove_faccg_arc, 
	get_faccg_arc, redirect_arc_src, redirect_arc_dest, 
	successors_exist_p, add_to_collapsed_succs, 
	add_cp_relation_for_collapsed_succs, 
	update_cpg_for_faccg_loop, split_dest_predecessors,
	collapse_successor, compact_faccg, dump_faccg_node,
	dump_faccg, free_faccg, build_compact_field_access_graphs,
	update_cpg_from_faccg): New.
	(update_cpg_for_bb): New implementation.
	(update_cpg_for_structure): Call the new CPG building Alg.
	(struct field_order): Rename f_indx to f_index. 
	(split_data_structure): Several fixes.
	* struct-reorg.c (get_stmt_accessed_fields_1): Fix.
	(vcg_dump): Open/Close.
	(hotest_struct_count): New.
	(peel_structs): Use hotest_struct_count to handle only "hot" 
	structures.
	* struct-reorg.h (struct bb_field_access): Rename f_indx
	with f_index.
	(update_cpg_for_structure): Additional parameter.

2004-12-05 Mostafa Hagog  <mustafa@il.ibm.com>
	* struct-reorg-cpg.c (field_wcp): Remove the use of pow.

2004-12-03  Dale Johannesen  <dalej@apple.com>

	* tree-ssa-loop-ch.c (copy_loop_headers):  Don't divide by 0.

2004-12-02  Dale Johannesen  <dalej@apple.com>

	* basic-block.h (scale_bbs_frequencies_int):  New declaration.
	(scale_bbs_frequencies_gcov_type):  New declaration.
	* cfgloopmanip.c (scale_bbs_frequencies):  Renamed to
	scale_bbs_frequencies_int and moved to cfg.c.
	(scale_loop_frequencies):  Adjust call to it.
	(duplicate_loop_to_header_edge):  Adjust calls to it.
	* cfg.c (RDIV): New (copied from cfgloopmanip.c).
	(update_bb_profile_for_threading):  Performance improvement
	from mainline.  Allow for roundoff error.
	(scale_bbs_frequencies_int):  Moved from cfgloopmanip.c.
	(scale_bbs_frequencies_gcov_type):  New.
	* except.c (get_maybe_saved_eh_throw_stmt_table):  Remove.
	* except.h (get_maybe_saved_eh_throw_stmt_table):  Remove.
	* tree-eh.c (duplicate_stmt_eh_region_mapping):  Remove #if 0.
	* tree-inline.c (struct inline_data):  Add callee_cfun.
	(copy_body_r):  Move make_edge call to right places.
	Use id->callee_cfun.
	(copy_cfg_body):  Set and use id->callee_cfun.
	(clone_body):  Set it.
	(save_body):  Set it.
	* tree-ssa-loop-ch.c (copy_loop_headers):  Propagate profiling info.

2004-11-21  Dale Johannesen  <dalej@apple.com>

	Merge from tree-profiling-branch as of 11-17.

2004-11-18  Mostafa Hagog  <mustafa@il.ibm.com>

	* params.def (PARAM_COLD_FIELD_RATIO): Changed default to 5.
	(PARAM_STRUCT_REORG_DYNAMIC_THRESHOLD): New.
	* params.h (STRUCT_REORG_DYNAMIC_THRESHOLD): New.
	* struct-reorg-cpg.c (update_cpg_for_lately_accessed_field,
	update_cpg_for_loop): New. 
	(update_cpg_for_bb): New implemenation that uses
	update_cpg_for_lately_accessed_fieldss and update_cpg_for_loop.
	(update_cpg_for_structure): Change the BB traversal to fit new
	implementation.
	(split_data_structure): Structure splitting heuristic tweaks.
	* struct-reorg.h (bb_field_access): Added bb_index, prev. 


2004-11-17  Mostafa Hagog  <mustafa@il.ibm.com>

	* struct-reorg-cpg.c (field_size_in_bytes, cp_relation, field_wcp,
	wcp_left_right_contribution, find_max_fanout_field, 
	reorder_fields_of_struct, group_size_in_bytes, average_cp_relation,
	split_data_structure): New functions to implement field reordering
	and structure splitting.
	(cache_aware_data_reorganization): call reorder_fields_of_struct
	and split_data_structure.
	* struct-reorg.c (get_original_type_decl_name, 
	similar_struct_decls_p ): New functions.
	(get_fields): Zero count field.
	(verify_data_structure): New.
	(get_data_struct_by_decl): Use similar_struct_decls_p instead of
	comparing DECLS of structs.
	(printout_field_reordering_hints, 
	printout_structure_splitting_hints): New.
	* struct-reorg.h (fields_in_cluster): New field.
	(verify_data_structure): Declare.
	* params.def (PARAM_COLD_FIELD_RATIO, PARAM_COLD_STRUCTURE_RATIO, 
	PARAM_STRUCT_REORG_CACHE_LINE_SIZE): New.
	* params.h (COLD_FIELD_RATIO, COLD_STRUCTURE_RATIO, 
	STRUCT_REORG_CACHE_LINE_SIZE): New macros.
	

2004-10-21  Caroline Tice  <ctice@apple.com>

	* cgraph.c (cgraph_create_indirect_edge) : New function.
        (cgraph_indirect_call_edge):  New function.
        (cgraph_indirect_assign_edge):  New function.
        (cgraph_create_edge):  Initialize indirect function call fields.
	* cgraph.h (struct cgraph_node):  Add new field, indirect_calls.
        (struct cgraph_edge):  Add new fields, next_indirect_call, 
	indirect_call_var, indirect_called_fns.
        (INDIRECT_CALLS):  New accessor macro.
        (NEXT_INDIRECT_CALL):  New accessor macro.
        (INDIRECT_CALL_VAR):  New accessor macro.
        (INDIRECT_CALLED_FNS):  New accessor macro.
        (cgraph_indirect_assign_edge): New function declaration.
        (cgraph_indirect_call_edge): New function declaration.
	* cgraphunit.c (record_call_1):  Add code for recording indirect 
	function calls.

2004-10-15  Caroline Tice  <ctice@apple.com>

	Add "global_export" attribute.
	* c-common.c (handle_global_export_attribute): New function to handle
	new attribute.
	(c_common_attribute_table): Add new attribute, "global_export".
	* cgraphunit.c (cgraph_mark_nonexportable): Check to make sure function
	'main' is part of current compilation; Don't set TREE_PUBLIC to zero
	in decls with 'global_export' attribute.
	
2004-10-11  Caroline Tice  <ctice@apple.com>

	Fix small bootstrap problems.
	* cgraphunit.c (cgraph_finalize_compilation_unit): Change condition
	flag from flag_unit_at_a_time to flag_whole_program.
	* struct-reorg-cpg.c (cache_aware_data_reorganization):  Mark
	parameter with ATTRIBUTE_UNUSED.
	* struct-reorg.c(get_stmt_accessed_fields_1):  Initialize 
	struct_type.
	(build_data_structure_list):  Remove unused variable.

2004-10-07  Caroline Tice  <ctice@apple.com>

	* cgraphunit.c (comment): Fix function name in comment.
	(cgraph_finalize_compilation_unit): Modify to not call 
	cgraph_varpool_assemble_pending_decls if flag_unit_at_a_time is true.
	(cgraph_mark_nonexportable): New function.
	(cgraph_optimize): Add call to cgraph_mark_nonexportable.
	* common.opt (fwhole-program): New compiler option, with new flag
	flag_whole_program.
	* opts.c (decode_options): flag_whole_program automatically turns on
	flag_unit_at_a_time.
	* struct-reorg.c (whole_program_p): Remove function.
	(build_data_structure_list): Remove code that tested variable names.
	(peel_structs): Remove call to whole_program_p; add test of 
	flag_whole_program.

2004-10-05  Caroline Tice  <ctice@apple.com>

	* c-common.c (disable_typechecking_for_spec_flag): New flag.
	* c-decl.c (disable_typechecking_for_spec_flag): Remove macro definition.
	* c-opts.c (c_common_handle_option): Handle new flag.
	* c.opt (fdisable-typechecking-for-spec): New flag option.
	* flags.h (disable_typechecking_for_spec_flag):  Extern declaration for
	new flag.

2004-10-04  Caroline Tice  <ctice@apple.com>

	* struct-reorg.c (opts.h): New include statement.
	(whole_program_p): New function.
	(build_data_structure_list):  Update code to correctly find
	local variable declarations.
	(peel_structs):  Add call to whole_program_p; add code to avoid
	re-analyzing same function multiple times (avoid analyzing clones).

2004-10-04  Mostafa Hagog  <mustafa@il.ibm.com>

	* struct-reorg.c (peel_structs): Handle data structures of
	local variables and function arguments.
        (get_stmt_accessed_fields): Use of get_inner_reference to handle
        the general case.
        (build_data_structure_list, make_data_struct_node): New functions.
	* struct-reorg.h (struct data_structure): Add in_extern_definition.

2004-09-29  Mostafa Hagog  <mustafa@il.ibm.com>

	* struct-reorg-cpg.c (update_cpg_for_bb): Bug fix.

2004-09-28  Mostafa Hagog  <mustafa@il.ibm.com>

	* cgraph.h (peel_structs): Declare.
	* graphunit.c (peel_structs): Call.
	* struct-reorg-cpg.c (struct cpg_cell, struct cpg_struct):
	Move the definition.
	* struct-reorg.c (peel_structs): Make the field access analysis
	inter-procedural.
	* struct-reorg.h (struct cpg_cell, struct cpg_struct):
	Move the definition to here.
	* tree-optimize.c (init_tree_optimization_passes): Remove
	pass_struct_reorg.
	* tree-pass.h : Remove pass_struct_reorg.

2004-09-27  Mostafa Hagog  <mustafa@il.ibm.com>

	* struct-reorg.c : Bug fixes.
	* struct-reorg-cp.c (dump_cpg): New function.
	* tree-optimize.c (init_tree_optimization_passes): Add
	pass_struct_reorg.

2004-09-20  Mostafa Hagog  <mustafa@il.ibm.com>

	* Makefile.in (struct-reorg.o, struct-reorg-cpg.o): New files.
	* struct-reorg.c, struct-reorg.h, , struct-reorg-cp.c: New files
	for implementing structure reorganization optimizations.
	* timevar.def (TV_PEEL_STRUCTS): New.
	* tree-pass.h (pass_struct_reorg): New.
