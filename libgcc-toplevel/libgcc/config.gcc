# libgcc host-specific configuration file.
# Copyright 2005, 2006
# Free Software Foundation, Inc.

#This file is part of GCC.

#GCC is free software; you can redistribute it and/or modify it under
#the terms of the GNU General Public License as published by the Free
#Software Foundation; either version 2, or (at your option) any later
#version.

#GCC is distributed in the hope that it will be useful, but WITHOUT
#ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#for more details.

#You should have received a copy of the GNU General Public License
#along with GCC; see the file COPYING.  If not, write to the Free
#Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA
#02110-1301, USA.

# This is the libgcc host-specific configuration file
# where a configuration type is mapped to different system-specific
# definitions and files.  This is invoked by the autoconf-generated
# configure script.  Putting it in a separate shell file lets us skip
# running autoconf when modifying host-specific information.

# This file switches on the shell variable ${host}.

# This file sets the following shell variables for use by the
# autoconf-generated configure script:
#
#  hmake_file		A list of machine-description-specific
#			makefile-fragments, defaulting to
#			"$cpu_type/t-$cpu_type".
#
#  extra_parts		List of extra object files that should be compiled
#			for this host machine.
#

hmake_file=$cpu_type/t-$cpu_type

# Set default cpu_type.
cpu_type=`echo ${host} | sed 's/-.*$//'`
case ${host} in
m32c*-*-*)
        cpu_type=m32c
        ;;
alpha*-*-*)
	cpu_type=alpha
	;;
am33_2.0-*-linux*)
	cpu_type=mn10300
	;;
strongarm*-*-*)
	cpu_type=arm
	;;
arm*-*-*)
	cpu_type=arm
	;;
bfin*-*)
	cpu_type=bfin
	;;
ep9312*-*-*)
	cpu_type=arm
	;;
frv*)	cpu_type=frv
	;;
xscale-*-*)
	cpu_type=arm
	;;
i[34567]86-*-*)
	cpu_type=i386
	;;
x86_64-*-*)
	cpu_type=i386
	;;
ia64-*-*)
	extra_headers=ia64intrin.h
	;;
hppa*-*-* | parisc*-*-*)
	cpu_type=pa
	;;
m32r*-*-*)
        cpu_type=m32r
        ;;
m680[012]0-*-*)
	cpu_type=m68k
	;;
mips*-*-*)
	cpu_type=mips
	;;
powerpc*-*-*)
	cpu_type=rs6000
	;;
score*-*-*)
	cpu_type=score
	;;
sparc64*-*-*)
	cpu_type=sparc
	;;
sparc*-*-*)
	cpu_type=sparc
	;;
spu*-*-*)
	cpu_type=spu
	;;
s390*-*-*)
	cpu_type=s390
	;;
# Note the 'l'; we need to be able to match e.g. "shle" or "shl".
sh[123456789lbe]*-*-*)
	cpu_type=sh
	;;
tic4x-*-*)
        cpu_type=c4x
        ;;
esac

# Common parts for widely ported systems.
case ${host} in
*-*-darwin*)
	hmake_file="t-darwin ${cpu_type}/t-darwin t-slibgcc-darwin"
	;;
esac

case ${host} in
i[3456x]86-*-netware*)
	case /${with_ld} in
		hmake_file="${hmake_file} i386/t-nwld"
		;;
	esac
	;;
x86_64-*-darwin*)
	hmake_file="t-darwin ${cpu_type}/t-darwin64 t-slibgcc-darwin"
	;;
powerpc64-*-linux*)
	hmake_file="${hmake_file} rs6000/t-ldbl128"
	;;
powerpc64-*-gnu*)
	hmake_file="${hmake_file} rs6000/t-ldbl128"
	;;
powerpc-*-linux*)
	hmake_file="${hmake_file} rs6000/t-ldbl128"
	;;
powerpc-*-gnu*)
	hmake_file="${hmake_file} rs6000/t-ldbl128"
	;;
esac
