2004-04-28  Alan Modra  <amodra@bigpond.net.au>

	PR target/14960
	* config/rs6000/rs6000.c (rs6000_stack_info): Rename total_raw_size
	to non_fixed_size, and leave out fixed_size from the sum.
	(generate_set_vrsave): Correct clobbers.
	(rs6000_emit_epilogue): Test TARGET_ALTIVEC with TARGET_ALTIVEC_SAVE.
	(rs6000_function_value): Test TARGET_ALTIVEC and TARGET_ALTIVEC_ABI.
	(rs6000_libcall_value): Likewise.
	* config/rs6000/rs6000.h (FUNCTION_VALUE_REGNO_P): Likewise.
	(FUNCTION_ARG_REGNO_P): Likewise.

2004-04-24  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (compare_current_location): New.
	(variable_part_different_p): Compare current location of the part
	of variable only if compare_current_location is true.
	(variable_tracking_main): Clear compare_current_location before
	finding locations, set it before emitting notes.

2004-04-21  Michael Matz  <matz@suse.de>

	* toplev.c (rest_of_type_compilation): Check for TYPE_STUB_DECL
	being NULL.

2004-04-20  Josef Zlomek  <zlomekj@suse.cz>

	* function.c (assign_parms): Force
	MEM_EXPR (DECL_INCOMING_RTL (parm)) == parm.

	Revert:
	2004-02-24  Josef Zlomek  <zlomekj@suse.cz>

		* emit-rtl.c (set_decl_incoming_rtl): Maintain reverse
		information for MEM too.

2004-04-20  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (variable_part_different_p): Variable parts differ
	when the most recent locations differ.

2004-04-18  Josef Zlomek  <zlomekj@suse.cz>

	Backport from mainline
	2003-09-15  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>
		    Jeff Law  <law@redhat.com>

		* gcse.c (remove_reachable_equiv_notes): New.
		(replace_store_insn): Call it.  Update antic list.
		(store_killed_in_insn): Take REG_EQUAL notes into account.
		(build_store_vectors, delete_store): Add parameter to
		replace_store_insn call.
	
	* gcse.c (remove_reachable_equiv_notes): Visit also blocks with kill
	flag.  Handle last == NULL.

2004-04-17  Alan Modra  <amodra@bigpond.net.au>

	PR target/14715
	* config/rs6000/rs6000.c (rs6000_stack_info): Make parm_size agree
	with STARTING_FRAME_OFFSET.

2004-04-07  Josef Zlomek  <zlomekj@suse.cz>

	* toplev.c (process_options): Temporarily disable variable tracking
	on big endian machines.

2004-04-05  Alan Modra  <amodra@bigpond.net.au>

	Backport from mainline.
	2003-05-19  J"orn Rennecke <joern.rennecke@superh.com>
	* c-decl.c (finish_decl): When setting the DECL_ASSEMBLER_NAME
	of a function using ASMSPEC, prepend a star.

	2003-04-28  Jakub Jelinek  <jakub@redhat.com>
	* c-decl.c (finish_decl): When prototype with asmspec is found
	for built-in, adjust built_in_decls as well as expr.c decls.
	* expr.c (init_block_move_fn, init_block_clear_fn): New functions.
	(emit_block_move_libcall_fn, clear_storage_libcall_fn): Use it.
	* expr.h (init_block_move_fn, init_block_clear_fn): New prototypes.

2004-04-01  Alan Modra  <amodra@bigpond.net.au>

	* dwarf2out.c (DEBUG_STR_SECTION_FLAGS): Heed flag_merge_constants.

2004-03-31  David Edelsohn  <edelsohn@gnu.org>

	Backport from mainline:
	* config/rs6000/rs6000.c (rs6000_always_hint): New variable.
	(rs6000_sched_groups): New variable.
	(processor_target_table): Add power5.
	(rs6000_override_options): Set rs6000_sched_insert_nops,
	rs6000_sched_costly_dep and rs6000_sched_restricted_insns_priority
	from rs6000_sched_groups.
	(output_cbranch): Use rs6000_always_hint.
	(rs6000_variable_issue): Use rs6000_sched_groups.
	(rs6000_adjust_cost): Add CPU_POWER5.
	(is_microcoded_insn): Use rs6000_sched_groups.
	(is_dispatch_slot_restricted): Use rs6000_sched_groups.
	Return 2 for POWER5 cracked instructions.
	(is_cracked_insn): Use rs6000_sched_groups.
	(is_branch_slot_insn): Use rs6000_sched_groups.
	(rs6000_issue_rate): Add CPU_POWER5.
	(rs6000_sched_finish): Use rs6000_sched_groups.
	* config/rs6000/rs6000.h (processor_type): Add PROCESSOR_POWER5.
	(DEFAULT_SCHED_COSTLY_DEP): Delete.
	(DEFAULT_RESTRICTED_INSNS_PRIORITY): Delete.
	(DEFAULT_SCHED_FINISH_NOP_INSERTION_SCHEME): Delete.
	(RTX_COSTS): Add PROCESSOR_POWER5.
	* config/rs6000/rs6000.md (define_attr "cpu"): Add power5.
	* config/rs6000/power5.md: New file.
	* doc/invoke.texi: Add G5,power4,power5 options.

2004-03-30  Hartmut Penner  <hpenner@de.ibm.com>

	Backport from mainline:
        * config/rs6000/rs6000.c (output_vec_const_move):
        Find all cases of EASY_VECTOR_15_ADD_SELF.
        (easy_vector_constant_add_self): Accept
        all vector constant loadable by vsplt* and vadd*.
	(easy_vector_same): Use easy_vector_splat_const.
	(easy_vector_const): Use easy_vector_splat_const.
        (easy_vector_splat_const): New function.
	(gen_easy_vector_constant_add_self): New function.
	
	* config/rs6000/rs6000-protos.c (gen_easy_vector_constant_add_self):
	New prototype.

        * config/rs6000/altivec.md (movv4si splitter): Change to
	emit move insn with halfed vector constant.
	(*movv8hi splitter): Likewise.
	(*movv16qi splitter): Likewise.

2004-03-30  Hartmut Penner  <hpenner@de.ibm.com>

	Backport from mainline:
	PR 11591	
	* config/rs6000/rs6000.c (rs6000_legitimate_address): 
	Allow any offset to argument pointer in no-strict case.

2004-03-27  Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/t-linux64bi (bispecs): Correct for non-default cpu.
	* config/rs6000/t-linuxbi (bispecs): Likewise.

2004-03-19  Andreas Jaeger  <aj@suse.de>
	
	Integrate backport from 3.4:
	2004-03-01  Mircea Namolaru  <namolaru@il.ibm.com>

	* cfgloop.h (get_var_set_from_bct, is_bct_cond): Declaration of
	new functions.
	* cfgloopanal.c: Include loop.h.
	(get_var_set_from_bct): New function.
	(is_bct_cond): New function.
	(blocks_single_set_registers): Handle branch and count jumps.
	(count_loop_iterations): Likewise.
	(simple_increment): Likewise
	* doloop.c (doloop_condition_get): Export.
	* loop-init.c (fixup_loop_exit_succesor): New function.
	(loop_optimizer_finalize): Handle loops ending with branch and
	count jumps.
	* loop-unroll.c: Include toplev.h
	(discard_increment): New function.
	(expand_bct): New function.
	(peel_loop_completely): Handle the removal of branch and count jumps.
	(unroll_loop_constant_iterations): Likewise.
	(unroll_loop_runtime_iterations): Likewise
	* loop.h (doloop_condition_get): Declare.

2004-03-19  Josef Zlomek  <zlomekj@suse.cz>

	Merge from mainline:
	2003-10-22  Joseph S. Myers  <jsm@polyomino.org.uk>

		* fixinc/tests/base/obstack.h: New test.

2004-03-18  Josef Zlomek  <zlomekj@suse.cz>

	Merge from 3.3 branch:
	2004-03-17  Ian Lance Taylor  <ian@wasabisystems.com>
	
		Backport:
		2003-11-08  Joseph S. Myers  <jsm@polyomino.org.uk>
	
		* c-typeck.c (pedantic_lvalue_warning): Deprecate compound
		expressions as lvalues.
		* doc/extend.texi: Document that all extended lvalues are now
		deprecated.
	
		2003-11-05  Joseph S. Myers  <jsm@polyomino.org.uk>
	
		* c-typeck.c (pedantic_lvalue_warning): Deprecate use of
		conditional expressions as lvalues.
	
		2003-10-22  Joseph S. Myers  <jsm@polyomino.org.uk>
	
		* c-typeck.c (pedantic_lvalue_warning): Unconditionally warn of
		deprecation of casts as lvalues.
		* fixinc/inclhack.def (obstack_lvalue_cast): New fix.
		* fixinc/fixincl.x: Regenerate.

2004-03-14  Ulrich Weigand  <uweigand@de.ibm.com> 

	Merge from 3.3 branch:
	2004-03-13  Jakub Jelinek  <jakub@redhat.com>
	PR target/14533
	* config/s390/s390.c (legitimize_pic_address): Don't abort on UNSPEC
	other than 100.

2004-03-11  Alan Modra  <amodra@bigpond.net.au>

	* real.c (encode_ibm_extended): Do round low word.

2004-03-11  Josef Zlomek  <zlomekj@suse.cz>

	PR/14362
	* var-tracking.c (struct variable_def): Added field refcount.
	(variable_htab_free): Decrease the refcount and delete variable
	only if there are no more references.
	(unshare_variable): New function.
	(vars_copy_1): Increase refcount instead of copying the variable.
	(variable_union): Share the variables where possible, unshare
	the variables if needed.
	(variable_different_p): Return false if var1 and var2 are
	the same structure.
	(variable_was_changed): Init the refcount of new variable.
	(set_frame_base_location): Unshare variable if needed.
	(set_variable_part): Init the refcount of new variable.
	Unshare the variables if needed.
	(delete_variable_part): Unshare the variables if needed. 
	(emit_notes_for_differences_1): Init the refcount of new variable.
	(vt_add_function_parameters): Do not add function parameters to
	IN set of ENTRY_BLOCK_PTR because it is unused anyway.
	(vt_initialize): Do not add frame_base_decl to IN set of
	ENTRY_BLOCK_PTR because it is unused anyway.

2004-03-09  Alan Modra  <amodra@bigpond.net.au>

	PR target/14478
	* config/rs6000/rs6000.md: Give all reg_or_neg_short_operand
	constraints a zero alternative.

2004-03-09  Michael Matz  <matz@suse.de>

	Ulrich Weigand  <uweigand@de.ibm.com>
	* config/s390/s390.c (s390_simplify_dwarf_addr): Simplify
	unspec 101 to literal_pool_label.

2004-03-09  Michael Matz  <matz@suse.de>

	* gcc.c (retry_ice): Add "-frandom-seed=0" to parameters.

2004-03-08  Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/rs6000.md (extenddftf2): Don't use REAL_VALUE_NEGATE,
	instead use memset.

2004-03-08  Michael Matz  <matz@suse.de>

	2004-03-05  Ian Lance Taylor  <ian@wasabisystems.com>

	PR inline-asm/6162
	* reload.c (find_reloads): Only support one pair of commutative
	operands.

	2004-02-27  Ian Lance Taylor  <ian@wasabisystems.com>

	PR optimization/7871
	* flow.c (mark_set_1): Don't add LOG_LINKS for global registers
	from or to call insns.	

	2004-02-27  Eric Botcazou  <ebotcazou@libertysurf.fr>

	PR optimization/7871
	* flow.c (propagate_one_insn): Interpret calls as setting global
	registers, not merely clobbering them.

2004-03-08  Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/rs6000.c (rs6000_move_block_from_reg): Copy from 3.4.
	(setup_incoming_varargs): Use it.
	* config/rs6000/darwin.h (SUBTARGET_OVERRIDE_OPTIONS): Delete
	first definition.

	* config/rs6000/rs6000.md (extenddftf2): Use -0.0 in low double.
	* real.c (encode_ibm_extended): Use -0.0 in low double of Inf,
	NaN, and zero.  Update comment.

2004-03-08  Alan Modra  <amodra@bigpond.net.au>

	PR debug/11983
	* dwarf2out.c (enum dw_val_class): Rename dw_val_class_float to
	dw_val_class_vec.  Replace use throughout file.
	(dw_float_const): Delete.
	(dw_vec_const): New.
	(dw_val_struct_union): Rename val_float to val_vec.  Replace use
	throughout file.
	(add_AT_vec): Rename from add_AT_float.  Add elt_size param.
	(same_dw_val_p): Adjust vec comparison.  Use memcmp.
	(size_of_die): Adjust dw_val_class_vec sizing.
	(output_die): Output dw_val_class_vec.
	(insert_int, extract_int, insert_float): New functions.
	(add_const_value_attribute): Use insert_float for CONST_DOUBLE.
	Handle CONST_VECTOR.
	(add_location_or_const_value_attribute): Handle CONST_VECTOR.

2004-03-08  Alan Modra  <amodra@bigpond.net.au>

	Merge from mainline.
	2004-02-10  Danny Smith  <dannysmith@users.sourceforge.net>
	* real.c (real_from_string): Look for 'X' as well as 'x' in
	hexfloat strings.

	2003-10-29  Hans-Peter Nilsson  <hp@axis.com>
	* real.c (do_divide): Initialize result with a 0.

	2003-09-10  Jerry Quinn  <jlquinn@optonline.net>
	* real.c: Update URL to VAX floating point docs.
	(decode_vax_d): Extract 8 exponent bits instead of 7.

	2003-08-27  Jason Merrill  <jason@redhat.com>
	* real.c (do_multiply): Initialize with memset.

	2003-04-02  Andreas Schwab  <schwab at suse dot de>
	* real.c (decode_ieee_single): Fix decoding of SNaN bit.

2004-03-08  Alan Modra  <amodra@bigpond.net.au>

	PR target/14406
	* config/rs6000/rs6000.md (abstf2, abstf2+1): Delete define_insn.
	(abstf2, abstf2_internal): New define_expand.

	Merge from gcc-3.4
	2004-02-26  Aldy Hernandez  <aldyh@redhat.com>
	* config/rs6000/rs6000.md: Add fixuns_truncsfsi2 and
	fix_truncsfsi2.
	* config/rs6000/spe.md: Delete spe_efsctuiz.
	Add spe_fixuns_truncsfsi2.
	Add spe_fix_truncsfsi2.

	2004-02-24  Aldy Hernandez  <aldyh@redhat.com>
	* config/rs6000/spe.md (spe_fix_truncsfsi2): Delete.
	(spe_fixuns_truncsfsi2): Delete.
	* config/rs6000/rs6000.md (fix_truncsfsi2): Delete.
	(fixuns_truncsfsi2): Delete.

	2004-02-19  Aldy Hernandez  <aldyh@redhat.com>
	* config/rs6000/spe.md (spe_fixunssfsi2): Rename to
	spe_fixuns_truncsfsi2.
	* config/rs6000/rs6000.md (fixunssfsi2): Rename to
	fixuns_truncsfsi2.

	2004-02-10  Aldy Hernandez  <aldyh@redhat.com>
	* config/rs6000/spe.md ("*movv2si_internal"): Check for register
	operand.
	(movv4hi_internal): Same.
	(movv2sf_internal): Same.
	(movv1di_internal): Same.

2004-03-07  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (vars_copy_1): Cleanup and speedup chain operations.
	(vars_copy): Likewise.
	(variable_union): Likewise.
	(set_variable_part): Likewise.
	(delete_variable_part): Likewise.

2004-03-06  Ulrich Weigand  <uweigand@de.ibm.com>

	Backport from the 3.3 branch:
	* config/s390/s390.md ("load_multiple", "*load_multiple_di",
	"*load_multiple_si"): Allow only if reload_completed.
	("store_multiple", "*store_multiple_di", "*store_multiple_si"):
	Likewise.

2004-03-05  Ulrich Weigand  <uweigand@de.ibm.com>

	Backport from the 3.3 branch:
	* config/s390/s390.c (s390_expand_movstr): Clobber double-word
	register before initializing high and low parts separately.
	(s390_expand_clrstr): Likewise.
	(s390_expand_cmpmem): Likewise.

2004-03-05  Jan Hubicka  <jh@suse.cz>

	* cfgcleanup.c (thread_jump): Update call of cselib_init.
	* cselib.c: Merge from mainline.
	* cselib.h (cselib_init): Update prototype.
	* gcse.c (local_cprop_pass): Update call of cselib_init.
	* loop.c (load_mems): Update call of cselib_init.
	* postreload.c (reload_cse_regs_1): Update call of cselib_init.
	* sched-deps.c (sched_analyze): Update call of cselib_init.

2004-03-05  Alan Modra  <amodra@bigpond.net.au>

	* real.c (encode_ibm_extended): Don't bother rounding low double.
	* c-common.c (builtin_define_float_constants): Tweak MAX
	when fmt->pnan < fmt->p.

	Backport from mainline
	2004-02-08  Richard Sandiford  <rsandifo@redhat.com>
	* real.c (encode_ibm_extended): Normalize the input value before
	converting it to a double.  Handle the case where a normal value
	rounds to infinity.

	2003-04-01  Alexandre Oliva  <aoliva@redhat.com>
	* real.h (EXP_BITS): Make room for...
	(struct real_value): ... added canonical bit.
	(struct real_format): Added pnan.
	(mips_single_format, mips_double_format, mips_extended_format,
	mips_quad_format): New.
	* real.c: Copy p to pnan in all formats.
	(get_canonical_qnan, get_canonical_snan): Set canonical bit.
	(real_nan): Use pnan to compute significand's shift.
	(real_identical): Disregard significand in canonical NaNs.
	(real_hash): Likewise.  Take signalling into account.
	(encode_ieee_single, encode_ieee_double, encode_ieee_quad):
	Disregard significand bits in canonical NaNs.  Set all bits of
	canonical NaN if !qnan_msb_set.
	(encode_ibm_extended, decode_ibm_extended): Likewise.  Use
	qnan_msb_set to tell the base double format.
	(ibm_extended_format): Use 53 as pnan.
	(mips_single_format, mips_double_format, mips_extended_format,
	mips_quad_format): Copied from the corresponding ieee/ibm
	formats, with qnan_msb_set false.
	* config/mips/iris6.h (MIPS_TFMODE_FORMAT): Use mips_extended_format.
	* config/mips/mips.c (override_options): Use mips_single_format
	and mips_double_format.  Default TFmode to mips_quad_format.
	* config/mips/t-iris6 (tp-bit.c): Define QUIET_NAN_NEGATED.
	* config/mips/t-mips (fp-bit.c, dp-bit.c): Likewise.
	* config/fp-bit.c (pack_d, unpack_d): Obey it.

	2003-03-31  Richard Henderson  <rth@redhat.com>
	* real.c (real_identical): Reorg so as to not compare
	signalling for normals.

	2003-03-27  Richard Henderson  <rth@redhat.com>
	* real.h (struct real_value): Add signalling.
	(EXP_BITS): Decrement.
	* real.c (get_canonical_qnan): Don't set MSB-1.
	(get_canonical_snan): Likewise.  Set signalling.
	(real_identical): Compare signalling.
	(round_for_format): Remove force-one-bit on code.
	(real_nan): Likewise.  Set signalling.
	(encode_ieee_single): Add force-one-bit code; honor signalling.
	(encode_ieee_double, encode_ieee_extended, encode_ieee_quad): Likewise.
	(decode_ieee_single): Set signalling.
	(decode_ieee_double, decode_ieee_extended, decode_ieee_quad): Likewise.

2004-03-05  Jan Hubicka  <jh@suse.cz>

	* libgcc2.c (gcov_exit): Fix locking race condition.

2004-03-04  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (track_expr_p): Fix typo.

2004-03-04  Josef Zlomek  <zlomekj@suse.cz>

	Backport from mainline
	2003-08-20  Jason Merrill  <jason@redhat.com>

		* attribs.c (decl_attributes): Rebuild the function pointer type
		after changing the target type.
		* tree.c (get_qualified_type): Also check that the attributes
		match.

2004-03-04  Steven Bosscher  <stevenb@suse.de>

	* config.gcc: Fix last patch.
	* i386.h (TARGET_CPU_DEFAULT_nocona): Fix value.

2004-03-04  Josef Zlomek  <zlomekj@suse.cz>

	PR/14362
	* var-tracking.c (track_expr_p): Do not track variables which
	should be ignored for debugging purposes.

2004-03-04  Steven Bosscher  <stevenb@suse.de>

	Backport from the 3.3 branch.

	2004-03-02  Richard Henderson  <rth@redhat.com>

	PR middle-end/11767
	* optabs.c (prepare_cmp_insn): Force trapping memories to registers
	before the compare, if flag_non_call_exceptions.

	PR middle-end/14327
	* stmt.c (expand_computed_goto): Do do_pending_stack_adjust before
	emitting the label, not after.

2004-03-03  Jan Hubicka  <jh@suse.cz>

	* config.gcc: add support for nocoma/prescott/pentium-m/pentium3m
	/pentium4m.
	* i386.c (override_options): add support for new cpus.
	* i386.h (target_cpu_default_names): new names.
	(target_cpu_default_pentium_m, target_cpu_default_pentium4e): new
	constants.
	* invoke.texi: extend documentation of -mtune/-march for new cpus.

	* i386.c (override_options): add -mcmodel=kernel warning.

2004-02-26  Alan Modra  <amodra@bigpond.net.au>

	* gcse.c (delete_null_pointer_checks_1): Do delete CC setter if
	HAVE_cc0.

2004-02-25  Michael Matz  <matz@suse.de>

	* config/i386/i386.c (ix86_comp_type_attributes): Check for
	regparm attributes.

2004-02-25  Alan Modra  <amodra@bigpond.net.au>

	* gcse.c (delete_null_pointer_checks_1): Do not delete CC setter.

2004-02-24  Josef Zlomek  <zlomekj@suse.cz>

	* emit-rtl.c (set_decl_incoming_rtl): Maintain reverse information
	for MEM too.

2004-02-23  Josef Zlomek  <zlomekj@suse.cz>

	Backport from mainline
	2004-02-14  Josef Zlomek  <zlomekj@suse.cz>

		* emit-rtl.c (set_decl_incoming_rtl): Check whether
		the 0th element of PARALLEL is NULL.

2004-02-23  Andrew Pinski  <pinskia@physics.uc.edu>

	* config/rs6000/linux.h (OS_MISSING_POWERPC64): Define.
	* config/rs6000/linux64.h (OS_MISSING_POWERPC64): Define.

2004-02-23  Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/rs6000.c (rs6000_legitimize_reload_address): Don't
	attempt to handle non multiple of 4 offsets that might be used
	when loading or storing 64-bit gprs.
	(legitimate_offset_address_p): Correct offset checks.  Comment.

2004-02-22  Ulrich Weigand  <uweigand@de.ibm.com>

	Backport from mainline:
	* config/s390/s390.md ("divmoddisi3"): Fix incorrect mode.

2004-02-21  Jakub Jelinek  <jakub@redhat.com>

	* config/i386/i386.c (override_options): Don't imply 3DNow! for -m64
	by default.

2004-02-21  Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/rs6000.c (rs6000_override_options): Don't override
	-msoft-float by -mcpu.  Consolidate similar code for MASK_MULTIPLE
	and MASK_STRING.

	* config/rs6000/linux.h (OS_MISSING_POWERPC64): Define.
	* config/rs6000/linux64.h (OS_MISSING_POWERPC64): Define.

	* config.gcc (powerpc cpu default): Match cpus supported in rs6000.c.

	* combine.c (can_combine_p): Don't ignore SETs marked with
	REG_EH_REGION notes.
	(try_combine): Revert last patch for the following and apply new
	patch instead.  When attempting to fix unrecognized insns, don't
	split a PARALLEL that contains the original i2.

2004-02-21  Andreas Jaeger  <aj@suse.de>

	* cfgloopanal.c (test_for_iteration): Backport from mainline:
	Avoid printf warning.

2004-02-20  Jan Hubicka  <jh@suse.cz>

	* k6.md (k6_alux):  Use mode attribute.

2004-02-19  Alan Modra  <amodra@bigpond.net.au>

	* function.c (assign_parms): When building decl_rtl for
	SPLIT_COMPLEX_ARGS, ensure inner modes of concat match outer.

2004-02-18  Andreas Jaeger  <aj@suse.de>

	* toplev.c: Include <alloc-pool.h> for dump_alloc_pool_statistics
	prototype.

2004-02-18  Jan Hubicka  <jh@suse.cz>

	* i386.c (x86_prologue_using_move, x86_epilogue_using_move): Disable for P4.

2004-02-16  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (gcc-3_3_3_release)

2004-02-15  Jan Hubicka  <jh@suse.cz>

	* i386.c (ix86_avoid_jump_misspredicts):  Fix merge error.

2004-02-15  Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/rs6000.h: Revert changes from last merge.

	PR optimization/14119
	* combine.c (try_combine): When attemting to fix unrecognized insns,
	don't delete SETs marked with REG_EH_REGION notes.  Also, don't split
	a PARALLEL when that results in the original insns.

	Apply patch from mainline.
	2003-09-04  Jan Hubicka  <jh@suse.cz>
	* toplev.c (wrapup_global_declarations): Fix final pass in
	unit-at-atime mode.

2004-02-15  Andreas Jaeger  <aj@suse.de>

	Backport from mainline:
	2003-01-09  Vladimir Makarov  <vmakarov@redhat.com>

	* genattr.c (main): Add output of prototype of new interface
	function `dfa_clean_insn_cache'.


2004-02-14  Jan Hubicka  <jh@suse.cz>

	* i386.c (x86_four_jump_limit): New variable.
	(k8_avoid_jump_misspredicts): Rename to ...
	(ix86_avoid_jump_misspredicts): .. this one.
	(ix86_pad_returns): Break out from ...
	(ix86_reorg): ... this one; do ix86_avoid_jump_misspredicts when asked
	to.
	* i386.h (TARGET_FOUR_JUMP_LIMIT): New macro.

2004-02-14  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3 branch (hammer-3_3-merge-20040114)

2004-01-22  Hartmut Penner  <hpenner@de.ibm.com>
	Backport from mainline.
	2004-02-11  Hartmut Penner  <hpenner@de.ibm.com>
	* config/rs6000/altivec.md (*movv4si_internal): At least one
	operand must be register_operand.
	(*movv8hi_internal1): Likewise.
	(*movv16qi_internal1): Likewise.
	(*movv4sf_internal1): Likewise.

	2004-02-11  Hartmut Penner  <hpenner@de.ibm.com>
	* gcc/config/rs6000/rs6000.c (rs6000_override_options)
	Set AltiVec ABI and vrsave as default for ppc64 linux.
	(init_cumulative_args): Post error, if try to return
	value in AltiVec register without enable AltiVec.
	(function_arg_advance): Ditto for passing arguments. 

2004-02-11  Josef Zlomek  <zlomekj@suse.cz>

	Ulrich Weigand  <uweigand@de.ibm.com>
	* tree.h (frame_base_decl): Add GTY marker.
	* var-tracking.c (frame_base_decl): Likewise.

2004-02-11  Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/linux64.h (MD_FALLBACK_FRAME_STATE_FOR): Don't
	bump retaddr here.

2004-02-11  Josef Zlomek  <zlomekj@suse.cz>

	Backport from mainline.
	2004-02-10  Josef Zlomek  <zlomekj@suse.cz>
		PR/14058
		* emit-rtl.c (set_decl_incoming_rtl): New.
		* tree.h (set_decl_incoming_rtl): New.
		* function.c (assign_parms): Use set_decl_incoming_rtl for
		setting DECL_INCOMING_RTL.
		* ada/misc.c (adjust_decl_rtl): Likewise.

2004-02-10  Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/t-linux64bi: New file, copy of old t-linuxbi.
	* config/rs6000/t-linuxbi (bispecs): Use -mlong-double-128 only
	when -m64 passed.
	* config.gcc: Use t-linux64bi for powerpc64-linux biarch.

2004-02-09  Jan Hubicka  <jh@suse.cz>

	* cselib.c: Include alloc-pool.h
	(empty_vals, empty_elt_lists, empty_elt_loc_lists): Kill.
	(elt_loc_list_pool, elt_list_pool, cselib_val_pool): Declare.
	(new_elt_list, new_elt_loc_list, unchain_one_elt_list,
	unchain_one_elt_loc_list_pool, unchain_one_value,
	new_cselib_val): Simplify using allocpool.
	(cselib_init): Initialize allocpools.
	(cselib_finish): Finish allocpools.

	* cselib.c (value_pool): New.
	(new_cselib_val): Use pool.
	(cselib_init): Initialize value_pool
	(cselib_finish): Free pool.

2004-02-09  Andreas Schwab  <schwab@suse.de>

	* sched-deps.c (add_dependence): Fix missing return value.

2004-02-09  Jan Hubicka  <jh@suse.cz>

	* alias.c (find_base_term, get_addr):  Do not dereference NULL
	pointer when all VALUE's locations has been invalidated.
	(rtx_equal_for_memref_p): Simplify checking of VALUEs.

	* cselib.c (discard_useless_values):  Clear out value pointer pointing
	to datastructure to be recycled.

	* gcse.c (bypass_block): Prevent edges to be unified when we are
	about to emit compenstation code.

	By Kazu Hitara:
	* gcse.c (bypass_block): Fix a typo in the previous check-in
	to the file.

	* alloc-pool.c (align_four): Kill.
	(create_alloc_pool): Align size to eight.
	(free_alloc_pool, free_pool): Invalidate deallocated data.

2004-02-08  David Edelsohn  <edelsohn@gnu.org>

	* haifa-sched.c (schedule_block): Revert to old behavior: Always
	invoke targetm.sched.reorder.

	Backport from mainline:
	* haifa-sched.c (schedule_block): Always invoke ready_sort after
	scheduling instructions.

	2003-10-21  Jan Hubicka  <jh@suse.cz>
	* haifa-sched.c (choose_ready): Initialize index.

2004-02-07  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c: Fix comment typos.
	(vt_add_function_parameters): Surround checkings by
	#ifdef ENABLE_CHECKING and #endif.

2004-02-06  Josef Zlomek  <zlomekj@suse.cz>

	Backport from mainline.
	* dwarf2out.c (struct die_struct): Added field decl_id.
	(decl_die_table): Changed to hash table.
	(decl_die_table_allocated): Deleted.
	(decl_die_table_in_use): Deleted.
	(DECL_DIE_TABLE_INCREMENT): Deleted.
	(decl_die_table_hash): New function.
	(decl_die_table_eq): New function.
	(lookup_decl_die): Lookup in a hash table.
	(equate_decl_number_to_die): Insert into a hash table.
	(dwarf2out_init): Init hash table decl_die_table.

	* dwarf2out.c (struct var_loc_list_def): Added field decl_id.
	(decl_loc_table): Changed to hash table.
	(decl_loc_table_allocated): Deleted.
	(decl_loc_table_in_use): Deleted.
	(DECL_LOC_TABLE_INCREMENT): Deleted.
	(decl_loc_table_hash): New function.
	(decl_loc_table_eq): New function.
	(lookup_decl_loc): Lookup in a hash table.
	(add_var_loc_to_decl): Insert into a hash table.
	(dwarf2out_begin_function): Empty the hash table.
	(dwarf2out_init): Init hash table decl_loc_table.

2004-02-06  Alan Modra  <amodra@bigpond.net.au>

	Backport from mainline.
	* doc/tm.texi (INIT_CUMULATIVE_ARGS): Update doco.
	* calls.c (expand_call): Pass n_named_args to INIT_CUMULATIVE_ARGS.
	(emit_library_call_value_1): Likewise pass nargs.
	* expr.c (block_move_libcall_safe_for_call_parm): Pass 3 here.
	* function.c (assign_parms): Pass -1 to INIT_CUMULATIVE_ARGS.
	* ada/misc.c (default_pass_by_ref): Pass 2 to INIT_CUMULATIVE_ARGS.
	* config/rs6000/rs6000.c (init_cumulative_args): Use n_named_args
	parameter instead of scanning TYPE_ARGS_TYPES to count args.
	* config/rs6000/rs6000-protos.h (init_cumulative_args): Update
	prototype.
	* config/rs6000/rs6000.h (INIT_CUMULATIVE_ARGS): Pass extra arg.
	(INIT_CUMULATIVE_INCOMING_ARGS): Set extra arg to 1000.
	(INIT_CUMULATIVE_LIBCALL_ARGS): Set extra arg to 0.
	* config/sh/sh.c (sh_output_mi_thunk): Pass 1 as n_named_args to
	INIT_CUMULATIVE_ARGS.
	* config/alpha/alpha.h (INIT_CUMULATIVE_ARGS): Update.
	* config/alpha/unicosmk.h, config/alpha/vms.h, config/arc/arc.h,
	config/arm/arm.h, config/avr/avr.h, config/c4x/c4x.h,
	config/cris/cris.h, config/d30v/d30v.h, config/dsp16xx/dsp16xx.h,
	config/fr30/fr30.h, config/frv/frv.h, config/h8300/h8300.h,
	config/i370/i370.h, config/i960/i960.h, config/ia64/ia64.h,
	config/ip2k/ip2k.h, config/m32r/m32r.h, config/m68hc11/m68hc11.h,
	config/m68k/m68k.h, config/m68k/mot3300.h, config/m88k/m88k.h,
	config/mcore/mcore.h, config/mips/mips.c, config/mips/mips.h,
	config/mmix/mmix.h, config/mn10200/mn10200.h,
	config/mn10300/mn10300.h, config/ns32k/ns32k.h, config/pa/pa.h,
	config/pdp11/pdp11.h, config/romp/romp.h, config/s390/s390.h,
	config/sh/sh.h, config/sparc/sparc.h, config/stormy16/stormy16.h,
	config/v850/v850.h, config/vax/vax.h, config/xtensa/xtensa.h: Likewise.

2004-02-06  Alan Modra  <amodra@bigpond.net.au>

	* config.gcc: Update rs6000.
	* config/lynxbase.h, config/rs6000/aix.h, config/rs6000/aix41.h,
	config/rs6000/aix43.h, config/rs6000/aix51.h, config/rs6000/aix52.h,
	config/rs6000/altivec-defs.h, config/rs6000/altivec.h,
	config/rs6000/crtsavres.asm, config/rs6000/darwin-ldouble.c,
	config/rs6000/darwin.h, config/rs6000/eabi.h,
	config/rs6000/eabialtivec.h, config/rs6000/eabisim.h,
	config/rs6000/eabispe.h, config/rs6000/libgcc-ppc64.ver,
	config/rs6000/linux.h, config/rs6000/linux64.h,
	config/rs6000/linuxspe.h, config/rs6000/lynx.h,
	config/rs6000/lynxbase.h, config/rs6000/ppc64-fp.c,
	config/rs6000/rs6000-protos.h, config/rs6000/rs6000.c,
	config/rs6000/rs6000.h, config/rs6000/rs6000.md,
	config/rs6000/rtems.h, config/rs6000/spe.h, config/rs6000/spe.md,
	config/rs6000/sysv4.h, config/rs6000/t-darwin,
	config/rs6000/t-linux64, config/rs6000/t-linuxbi, config/rs6000/t-spe,
	config/rs6000/xcoff.h: Merge/import from gcc-3.4.  In addition,
	make the following changes..

	* config/rs6000/t-linuxbi (LIB2FUNCS_EXTRA): Add darwin-ldouble.c.
	(SHLIB_MAPFILES): Add libgcc-ppc64.ver.
	(SHLIB_MKMAP_OPTS): Delete.
	(TARGET_LIBGCC2_CFLAGS): Add -specs.
	(bispecs): Add rule.
	* config/rs6000/t-linux64 (LIB2FUNCS_EXTRA): Add darwin-ldouble.c.
	(SHLIB_MAPFILES): Add libgcc-ppc64.ver.
	(FPBIT, DPBIT): Define.
	(dp-bit32.c, fp-bit32.c): Add rules.
	* config/rs6000/libgcc-ppc64.ver: New file.
	* config/rs6000/ppc64-fp.c (__fixtfdi, __floatditf): New functions.
	(__floatdidf, __floatdisf): Optimize multiply.
	(__fixunstfdi): New function.
	* config/rs6000/rs6000.c (rs6000_complex_function_value): Allow for
	real and imag parts larger than one register.
	(function_arg): Correct type of reg used when fp arg split partially
	to stack.
	* config/rs6000/darwin-ldouble.c: Import from mainline.  Protect
	with #if !_SOFT_FLOAT and __MACH__ or __powerpc64__.

	* config/rs6000/rs6000.h (RS6000_ARG_SIZE): Delete.
	(HARD_REGNO_MODE_OK): Disallow TFmode for fp31.
	* config/rs6000/rs6000.c (rs6000_arg_size): New function.
	Update all users of RS6000_ARG_SIZE.
	(function_arg_advance): Count fregno using mode size.
	(function_arg): Handle long double split over regs and memory.
	(function_arg_partial_nregs): Likewise.
	(rs6000_va_arg): Repackage complex args.

	* config/rs6000/aix.h (ADDTF3_LIBCALL, DIVTF3_LIBCALL,
	MULTF3_LIBCALL, SUBTF3_LIBCALL, INIT_TARGET_OPTABS): Delete.
	* config/rs6000/sysv4.h (ADDTF3_LIBCALL, DIVTF3_LIBCALL,
	EXTENDDFTF2_LIBCALL, EQTF2_LIBCALL, GETF2_LIBCALL, GTTF2_LIBCALL,
	LETF2_LIBCALL, LTTF2_LIBCALL, NETF2_LIBCALL, FLOATSITF2_LIBCALL,
	MULTF3_LIBCALL, NEGTF2_LIBCALL, TRUNCTFDF2_LIBCALL,
	FIX_TRUNCTFSI2_LIBCALL, TRUNCTFSF2_LIBCALL, FIXUNS_TRUNCTFSI2_LIBCALL,
	SQRTTF_LIBCALL, EXTENDSFTF2_LIBCALL, SUBTF3_LIBCALL,
	FLOATUNSSITF2_LIBCALL, INIT_TARGET_OPTABS): Delete.
	* config/rs6000/xcoff.h (RS6000_ITRUNC, RS6000_UITRUNC): Delete.
	* config/rs6000/rs6000.h (INIT_TARGET_OPTABS): Define.

	* config/rs6000/rs6000.md (extzv): Fail on size greater than wordsize
	to work around extract_bit_field bug.
	(floatdisf2): Make the predicate logic match the expanded insns.

2004-02-06  Alan Modra  <amodra@bigpond.net.au>

	Backport from mainline.
	2004-01-09  Geoffrey Keating  <geoffk@apple.com>
	* real.c (encode_ibm_extended): Make consistent with darwin-ldouble.c.

	2003-05-03  Geoffrey Keating  <geoffk@apple.com>
	* simplify-rtx.c (simplify_relational_operation): Add case for
	! (fabs(x) < 0.0).

	2003-05-05  Aldy Hernandez  <aldyh@redhat.com>
	* c-typeck.c (convert_for_assignment): Opaque pointers can
	interconvert.

	2003-02-20  Aldy Hernandez  <aldyh@redhat.com>
	* doc/tm.texi: Document Rename TARGET_VECTOR_TYPES_COMPATIBLE to
	TARGET_VECTOR_OPAQUE_P.  Document accordingly.
	* c-typeck.c (comptypes): Change call to vector_types_compatible
	to vector_opaque_p.
	(convert_for_assignment): Call vector_opaque_p instead of
	vector_types_compatible.
	(really_start_incremental_init): Disallow initialization of opaque
	types.
	* target-def.h: Remove TARGET_VECTOR_TYPES_COMPATIBLE.
	Define TARGET_VECTOR_OPAQUE_P.
	(TARGET_INITIALIZER): Same.
	* target.h (struct gcc_target): Remove vector_types_compatible.
	Add vector_opaque_p.

	2003-02-18  Nick Clifton  <nickc@redhat.com>
		    Aldy Hernandez  <aldyh@redhat.com>
	* doc/tm.texi: Document TARGET_VECTOR_TYPES_COMPATIBLE.
	* target-def.h (TARGET_INITIALIZER): Add
	TARGET_VECTOR_TYPES_COMPATIBLE.
	(TARGET_VECTOR_TYPES_COMPATIBLE): New macro.
	* target.h (struct gcc_target): Add field vector_types_compatible.
	* c-typeck.c (comptypes): Take into account
	TARGET_VECTOR_TYPES_COMPATIBLE.
	(convert_for_assignment): Same.

	2003-03-05  Aldy Hernandez  <aldyh@redhat.com>
	* doc/tm.texi: Document TARGET_DWARF_REGISTER_SPAN.
	* hooks.c (hook_rtx_rtx_null): New.
	* hooks.h (hook_rtx_rtx_null): Protoize.
	* target-def.h (TARGET_DWARF_REGISTER_SPAN): New macro.
	(TARGET_INITIALIZER): Add TARGET_DWARF_REGISTER_SPAN.
	* target.h (struct gcc_target): Add dwarf_register_span.
	* dwarf2out.c (multiple_reg_loc_descriptor): New.
	(one_reg_loc_descriptor): New.
	(reg_loc_descriptor): Add support for values that span more than
	one register.

2004-02-05  Alan Modra  <amodra@bigpond.net.au>

	Backport from mainline
	2004-01-26  Fariborz Jahanian <fjahanian@apple.com>
	PR middle-end/13779
	* expr.c (emit_group_load): split constant
	correctly into register components of PARALLEL insn.

	2003-12-08  James E Wilson  <wilson@specifixinc.com>
	PR target/13132
	* expmed.c (extract_bit_field): Only call mode_for_size for scalar
	integer modes.

	2003-04-29  Aldy Hernandez  <aldyh@redhat.com>
	* expr.c (emit_group_load): Dump parallels of simd types to
	memory.

	2003-04-21  Olivier Hainque  <hainque@act-europe.fr>
	* expmed.c (extract_bit_field): Reverse operands of && condition to
	prevent a potential division by zero in the previously first branch.

	2003-04-18  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>
	* expmed.c (mask_rtx): Avoid undefined shifts for BITSIZE of 0.

2004-02-05  Alan Modra  <amodra@bigpond.net.au>

	Backport from mainline
	2003-07-11  Richard Henderson  <rth@redhat.com>
	* function.c (assign_parms): Don't recombine complex args if
	fnargs is unchanged from orig_fnargs.
	(split_complex_args): Return args without complex before copying.
	Re-layout the modified parameters.

	2003-06-03  Aldy Hernandez  <aldyh@redhat.com>
	* function.c (assign_parms): Split complex arguments.
	* doc/tm.texi (SPLIT_COMPLEX_ARGS): Document.
	* expr.h (SPLIT_COMPLEX_ARGS): Define.
	(split_complex_types): Protoize.
	(split_complex_values): Protoize.
	* calls.c (expand_call): Split complex arguments on architectures
	that require it.
	(split_complex_values): New.
	(split_complex_types): New.

	2003-03-17  Olivier Hainque  <hainque@act-europe.fr>
	* function.c (assign_parms): For a struct value address passed as
	first argument, delay the function's result RTL setup code until
	after the emission of parameter conversions.

2004-02-04  Ulrich Weigand  <uweigand@de.ibm.com>

	Backport from mainline:
	PR optimization/12147
	* reload1.c (reload_reg_free_p): RELOAD_OTHER conflicts with
	RELOAD_FOR_OPADDR_ADDR.
	(reload_reg_reaches_end_p): A RELOAD_FOR_OTHER_ADDRESS register
	might be reused as RELOAD_FOR_OPADDR_ADDR register.

2004-02-02  David Edelsohn  <edelsohn@gnu.org>

	Merge scheduler from mainline.
	* flags.h: Add flag_sched_stalled_insns*.
	* haifa-sched.c: Merge from mainline.
	* sched-ebb.c: Initialize new sched_max_insns_priority field.
	* sched-int.h: Add sched_info sched_max_insns_priority field.
	* sched-rgn.c :Initialize new sched_max_insns_priority field.
	* target-def.h: Add TARGET_SCHED_IS_COSTLY_DEPENDENCE.
	* target.h: Add sched is_costly_dependence.
	* toplev.c: Add flag_sched_stalled_insns*.
	* config/rs6000/rs6000.c: Add DFA scheduler support.
	* config/rs6000/rs6000.h: Add DFA scheduler support.
	* config/rs6000/rs6000.md: Add DFA scheduler support.
	* config/rs6000/40x.md: New file.
	* config/rs6000/440.md: New file.
	* config/rs6000/603.md: New file.
	* config/rs6000/6xx.md: New file.
	* config/rs6000/7450.md: New file.
	* config/rs6000/7xx.md: New file.
	* config/rs6000/8540.md: New file.
	* config/rs6000/mpc.md: New file.
	* config/rs6000/power4.md: New file.
	* config/rs6000/rios1.md: New file.
	* config/rs6000/rios2.md: New file.
	* config/rs6000/rs64.md: New file.

2004-02-02  Jan Hubicka  <jh@suse.cz>

	* cgraph.c: Merge from mainline.
	* cgraph.h: Likewise.
	* cgraphunit.c: Likewise.
	* tree-inline.c (expand_call_inline): Produce better diagnostics
	with -Winline and unit-at-a-time.

2004-02-02  Josef Zlomek  <zlomekj@suse.cz>

	* tree-inline.c (copy_body_r): Do not replace ret_label.

2004-02-02  Alan Modra  <amodra@bigpond.net.au>

	Backport from mainline.
	2004-01-21  Alan Modra  <amodra@bigpond.net.au>
	* config/rs6000/sysv4.h (DWARF2_FRAME_REG_OUT): Define.
	* dwarf2out.c (output_cfi): Map regs using DWARF2_FRAME_REG_OUT.
	* doc/tm.texi (DWARF_FRAME_REGNUM, DWARF2_FRAME_REG_OUT): Document.

	2004-01-07  Alan Modra  <amodra@bigpond.net.au>
	* config/rs6000/rs6000.c (rs6000_dbx_register_number): New function.
	* config/rs6000/rs6000-protos.h (rs6000_dbx_register_number): Declare.
	* config/rs6000/rs6000.h (DWARF_FRAME_REGNUM): Define.
	(DWARF_REG_TO_UNWIND_COLUMN): Correct column adjustment and comment.
	* config/rs6000/sysv4.h (DBX_REGISTER_NUMBER): Define.

2004-01-31  Alan Modra  <amodra@bigpond.net.au>

	Backport from mainline.
	2003-12-19  James E Wilson  <wilson@specifixinc.com>
	* flow.c (mark_set_regs, case PARALLEL): Scan loop forwards.
	Add case for ASM_OPERANDS.
	* global.c (global_alloc): Set regs_ever_live for regs_asm_clobbered
	registers.

	2003-12-06  Alan Modra  <amodra@bigpond.net.au>
	PR 13169
	* basic-block.h (PROP_ASM_SCAN): Define.
	* final.c (regs_asm_clobbered): New array.
	* regs.h (regs_asm_clobbered): Declare.
	* flow.c (life_analysis): Init it.
	(mark_set_regs): Set PROP_ASM_SCAN for asms.
	(mark_set_1): Set regs_asm_clobbered.
	* global.c (global_alloc): Don't set eliminable_regset when
	regs_asm_clobbered.

	2003-12-03  Alan Modra  <amodra@bigpond.net.au>
	PR target/11229
	* cse.c (cse_insn): Set classp using src_const_elt if
	src_eqv_elt is NULL.

2004-01-30  Jan Hubicka  <jh@suse.cz>

	* reload.c (get_secondary_mem):  Fix updating of
	secondary_memlocs_elim_used.

	* reload.c (secondary_memlocs_elim_used): New static variable.
	(get_secondary_mem): Update it.
	(find_reloads): Use it.

	* alias.c (reg_base_value): Turn into varray.
	(reg_base_value_size): Kill.
	(old_reg_base_value): New deletable varray.
	(alias_invariant_size): New variable.
	(REG_BASE_VALUE): Update to use varray.
	(find_base_value): Likewise.
	(record_set): Likewise.
	(record_base_value): Likewise.
	(memrefs_conflict_p): Likewise.
	(record_set): Likewise
	(record_base_value): Likewise.
	(memrefs_conflict_p): Use alias_invariant_size.
	(init_alias_analysis): Use varray; set alias_invariant_size;
	rescale other arrays to be sized by maxreg.
	(end_alias_analysis): Save reg_base_value; clear alias_invariant_size.

	* basic-block.h (PROP_POSTRELOAD): New macro.
	(CLEANUP_LOG_LINKS): New.
	* cfgcleanup.c (cleanup_cfg): Only PROP_LOG_LINKS when asked to.
	* toplev.c (rest_of_handle_life):  Preserve LOG_LINKS trought cleanup_cfg.

	* alloc-pool.c: Include hashtab.h
	(alloc_pool_descriptor): New structure
	(alloc_pool_hash): New global variable.
	(hash_descriptor, eq_descriptor, alloc_pool_descriptor): New.
	(create_alloc_pool): Update statistics.
	(free_alloc_pool): Likewise.
	(pool_alloc): Likewise.
	(output_info): New structure
	(print_statistics, dump_alloc_pool_statistics): New function.
	* alloc-pool.h (alloc_pool_def): Turn name to be constant.
	(dump_alloc_pool_statistics): Declare.
	* toplev.c (finalize):  Dump statistics.

	* varray.c:  Include hashtab.h
	(varray_descriptor): New structure.
	(hash_descriptor, eq_descriptor, varray_descriptor,
	print_statistics): New static functions
	(varray_init, varray_grow): Update statistics
	(dump_varray_statistics): New function.
	* varray.h (dump_varray_statistics): Declare.
	* toplev.c (finalize): Call it.

2004-01-30  Ulrich Weigand  <uweigand@de.ibm.com>

	Backport from mainline:
	* configure.ac (gcc_cv_as_dwarf2_debug_line): Enable test for
	s390*-*-* targets by specifying a 'nop' insn.
	* configure: Regenerate.

2004-01-30  Andreas Jaeger  <aj@suse.de>

	* gcc.c (retry_ice): Fix typos.

2004-01-29  Jan Hubicka  <jh@suse.cz>

	* sibcall.c (skip_dead_hard_reg_sets): New function
	(call_ends_block_p): Use it.
	* flow.c (mark_regs_live_at_end): Make global
	* basic-block.h (mark_regs_live_at_end): Declare.

2004-01-29  Hartmut Penner  <hpenner@de.ibm.com>

	Backport from mainline.
	2004-01-14  Hartmut Penner  <hpenner@de.ibm.com>

	* gcc/config/rs6000/rs6000.c (rs6000_stack_info)
	Calculate always vrsave_mask if TARGET_ALTIVEC.
	(rs6000_emit_prologue): Emit code for vrsave
	only if TARGET_ALTIVEC_VRSAVE.
	(rs6000_emit_epilogue): Likewise.

2004-01-29  Alan Modra  <amodra@bigpond.net.au>

	* gcc.c (add_sysrooted_prefix): Fix typo in 2004-01-27 change.

2004-01-29  Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/linux64.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Ensure
	target_flags has MASK_POWERPC64 when -m64.
	(MASK_PROFILE_KERNEL): Bump in anticipation of MASK_MFCRF.
	* config/rs6000/rs6000.h: Correct target_flags free bits comment.

	Missed from 2004-01-14 commit.
	* config/rs6000/linux64.h (TARGET_LITTLE_ENDIAN): Redefine as 0.

	Backport from mainline, MASK_AIX_STRUCT_RET_SET too.
	2002-12-25  David Edelsohn  <edelsohn@gnu.org>
	* config/rs6000/rs6000.c (rs6000_override_options): Convert to
	tartet_flags_explicit.
	* config/rs6000/rs6000.h (MASK_MULTIPLE_SET, MASK_STRING_SET): Delete.
	Compact target_flags bits.
	(TARGET_MULTIPLE_SET, TARGET_STRING_SET): Delete.
	(TARGET_SWITCHES): Delete references to *_SET flags.

2004-01-28  Ulrich Weigand  <uweigand@de.ibm.com>

	* config/s390/s390.md ("cmpmem_long_64", "cmpmem_long_31"):
	Fix merge problem.

2004-01-26  Jakub Jelinek  <jakub@redhat.com>
	
	Backport from mainline:
	* config/i386/i386.c (ix86_constant_alignment): Decrease alignment
	of long string literals from 32 bytes to sizeof (void *) when !-Os
	and to 1 with -Os.

2004-01-28  Ulrich Weigand  <uweigand@de.ibm.com>

	Backport from mainline:
	* config/s390/s390.h (TARGET_DEFAULT): Default to !TARGET_BACKCHAIN.
	* config/s390/s390.c (s390_return_addr_rtx): Fail for all but current
	frame if !TARGET_BACKCHAIN.
	* config/s390/s390.md ("allocate_stack"): Use pattern only if 
	TARGET_BACKCHAIN.
	* doc/invoke.texi (-mbackchain/-mno-backchain): Document new default.

2004-01-27  Jan Hubicka  <jh@suse.cz>

	Merge from 3.3 branch (hammer-3_3-merge-20040126)

2004-01-27  Alan Modra  <amodra@bigpond.net.au>

	* gcc.c (main): Move code for relative standard_startfile_prefix to..
	(add_sysrooted_prefix): ..here.  Enable relative prefix for
	startfile_prefix_spec.
	* config/rs6000/linux64.h (STARTFILE_PREFIX_SPEC): Define.
	* config/rs6000/t-linuxbi: Remove extraneous/misleading comments.
	* config/rs6000/t-linux64: Likewise.
	(MULTILIB_OPTIONS, MULTILIB_DIRNAMES): Define.
	(MULTILIB_EXTRA_OPTS, MULTILIB_OSDIRNAMES): Define.

2004-01-26  Ulrich Weigand  <uweigand@de.ibm.com>

	Backport from mainline:
	* config/s390/s390.c (s390_frame_info): Allow large frame sizes
	for TARGET_64BIT.
	(s390_arg_frame_offset): Change return type to HOST_WIDE_INT.
	* config/s390/s390-protos.h (s390_arg_frame_offset): Likewise.

2004-01-26  Josef Zlomek  <zlomekj@suse.cz>

	* basic-block.h (BB_HEAD): Define.
	(BB_END): Define.
	* var-tracking.c: Fix formating of comments.
	(vt_find_locations): Coding style.
	(prologue_stack_adjust): Use BB_HEAD and BB_END.
	(vt_emit_notes): Likewise.
	(vt_initialize): Likewise.

2004-01-26  Hartmut Penner  <hpenner@de.ibm.com>

	Backport new 64bit altivec changes from mainline.
	2003-10-17  Segher Boessenkool  <boessen@de.ibm.com>
		    Hartmut Penner  <hpenner@de.ibm.com>

	* config/rs6000/rs6000.c (altivec_expand_lv_builtin): New function.
	(altivec_expand_stv_builtin): Adjust for the memory_operand.
	(altivec_expand_builtin): Call altivec_expand_lv_builtin.
	(altivec_init_builtins): Use `long int' for memory offsets.

	2003-04-01  Aldy Hernandez  <aldyh@redhat.com>

	* config/rs6000/rs6000.c (input_operand): Allow vector constants.

	* config/rs6000/rs6000.h (PREDICATE_CODES): Add
	easy_vector_constant, easy_vector_constant_add_self.
	(EXTRA_CONSTRAINT): Add 'W'.

	2003-06-20  Aldy Hernandez  <aldyh@redhat.com>

	PR/11092
	* config/rs6000/rs6000.h (LEGITIMATE_CONSTANT_P): Adjust for
	vectors.

	2004-01-06  Geoffrey Keating  <geoffk@apple.com>

	* simplify-rtx.c (simplify_immed_subreg): New.
	(simplify_subreg): Use simplify_immed_subreg.

2004-01-24  Alan Modra  <amodra@bigpond.net.au>

	* config.gcc (powerpc-*-linux*): Allow biarch builds.

2004-01-23  Jakub Jelinek  <jakub@redhat.com>

	* system.h (ICE_EXIT_CODE): Define.
	* gcc.c (execute): Don't free first string early, but at the end
	of the function.  Call retry_ice if compiler exited with
	ICE_EXIT_CODE.
	(retry_ice): New function.
	* diagnostic.c (diagnostic_count_diagnostic,
	diagnostic_action_after_output, error_recursion): Exit with
	ICE_EXIT_CODE instead of FATAL_EXIT_CODE.

2004-01-24  Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/rs6000.c (rs6000_assemble_integer): Replace
	#ifdef RELOCATABLE_NEEDS_FIXUP with if.
	* config/rs6000/linux.h (RELOCATABLE_NEEDS_FIXUP): Define in terms
	of target_flags_explicit.
	* config/rs6000/linux64.h (RELOCATABLE_NEEDS_FIXUP): Ditto for biarch
	case.  Define as 0 for non-biarch.
	(TARGET_RELOCATABLE): Don't define for biarch case.
	* config/rs6000/sysv4.h (RELOCATABLE_NEEDS_FIXUP): Define as 1.

	* mbchar.c (local_mbtowc): Ignore CROSS_COMPILE if NATIVE_CROSS.
	(local_mb_cur_max): Likewise.
	* configure.in: Set NATIVE_CROSS for ppc64->ppc32 too.
	* configure: Regenerate.

2004-01-23  Andreas Jaeger  <aj@suse.de>

	* config/rs6000/linux64.h (LINK_OS_LINUX_SPEC64): Fix.

2004-01-22  Hartmut Penner  <hpenner@de.ibm.com>
	Backport new 64bit abi from mainline.
	2004-01-22  Hartmut Penner  <hpenner@de.ibm.com>

	* gcc/config/rs6000/rs6000.c (function_arg) Handle
	vector register special in function without prototype.
	(function_arg_advance): Vector parameters get always
	GPRs allocated for the linux64 target.

	2004-01-15  Jan Hubicka  <jh@suse.cz>

	* builtins.c (std_expand_builtin_va_arg): Align operand when needed.

	2003-12-18  Hartmut Penner  <hpenner@de.ibm.com>

	* gcc/config/rs6000/rs6000.c (USE_ALTIVEC_FOR_ARG_P): Don't check
	for SVR4 ABI.

	2003-11-06  Geoffrey Keating  <geoffk@apple.com>

	* config/rs6000/rs6000.h (USE_FP_FOR_ARG_P): Move to rs6000.c.
	(USE_ALTIVEC_FOR_ARG_P): Likewise.
	* config/rs6000/rs6000.c (USE_FP_FOR_ARG_P): Move from rs6000.h.
	Take a pointer as the CUM parameter.  Update callers.
	(USE_ALTIVEC_FOR_ARG_P): Likewise.  Also correct for Darwin/AIX
	32-bit ABIs.
	(function_arg_advance): Use USE_ALTIVEC_FOR_ARG_P.  Correct case
	of vector parameters as named arguments of stdarg function.
	(function_arg): Likewise.

2004-01-22  Jan Hubicka  <jh@suse.cz>

	* i386.md (lea and add splitters): Make sure that all the operands
	get elliminated.

2004-01-21  Hartmut Penner  <hpenner@de.ibm.com>

	Backport 64 bit altivec enablement from mainline.
	2004-01-08  Hartmut Penner  <hpenner@de.ibm.com>

	* gcc/config/rs6000/rs6000.c (easy_vector_constant): Accept
	all vector constant loadable by vsplt*.
	(output_vec_const_move): Likewise.

	2003-10-17  Segher Boessenkool  <boessen@de.ibm.com>
		    Hartmut Penner  <hpenner@de.ibm.com>

	PR 10404, partial 11591, partial 11601
	* config/rs6000/altivec.md ("altivec_dst", "altivec_dstt",
	"altivec_dstst", "altivec_dststt", "altivec_lvsl", "altivec_lvsr",
	"altivec_lvebx", "altivec_lvehx", "altivec_lvewx", "altivec_lvxl",
	"altivec_lvx", "altivec_stvx", "altivec_stvxl", "altivec_stvebx",
	"altivec_stvehx", "altivec_stvewx"): Use a memory_operand.
	* config/rs6000/rs6000.c (altivec_expand_lv_builtin): New function.
	(altivec_expand_stv_builtin): Adjust for the memory_operand.
	(altivec_expand_builtin): Call altivec_expand_lv_builtin.
	(altivec_init_builtins): Use `long int' for memory offsets.

	2003-09-22  David Edelsohn  <edelsohn@gnu.org>
		    Hartmut Penner  <hpenner@de.ibm.com>
	            Segher Boessenkool  <boessen@de.ibm.com>

	* config/rs6000/rs6000.c (altivec_in_gprs_p): Rename to ...
	(gpr_or_gpr_p): Test INT_REGNO_P and convert to boolean.
	(rs6000_split_altivec_in_gprs): Rename to ...
	(rs6000_split_multireg_move): Add support for update addressing.
	* config/rs6000/rs6000-protos.h: Same.
	* config/rs6000/altivec.md: Same.

2004-01-21  Hartmut Penner  <hpenner@de.ibm.com>

	* f/com.h (ffecom_gfrt_basictype): Fix prototype.

2004-01-21  Andreas Jaeger  <aj@suse.de>

	* config/i386/x86-64.h (NO_PROFILE_COUNTERS): Define to 1.

2004-01-21  Andreas Jaeger  <aj@suse.de>

	* expr.c (MOVE_RATIO, CLEAR_RATIO): Move from here...
	* expr.h (MOVE_RATIO, CLEAR_RATIO): ... to here.

2004-01-21  Alan Modra  <amodra@bigpond.net.au>

	* config/rs6000/t-linuxbi: Rename from t-linux64.
	(SHLIB_MKMAP_OPTS): Remove.
	(CRTSTUFF_T_CFLAGS_S): Define.
	* config/rs6000/t-linux64: Revert to previous non-biarch version.
	(CRTSTUFF_T_CFLAGS_S, TARGET_LIBGCC2_CFLAGS): We do want -fPIC.
	(SHLIB_MKMAP_OPTS): Remove.
	* config.gcc: Adjust for above.  Allow non-biarch ppc64 build.
	* config/rs6000/linux64.h (TARGET_RELOCATABLE): Don't define.
	(FIXED_R13, CPP_SYSV_SPEC, ASM_OUTPUT_LABELREF): Don't define.
	* config/rs6000/sysv4.h (TARGET_TOC): Use TARGET_* defines.
	(SUBTARGET_SWITCHES): Move newlib entry.

	Backport biarch support from mainline.
	2003-12-01  Alan Modra  <amodra@bigpond.net.au>
	* config/rs6000/linux64.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Test
	target_flags directly rather than using TARGET_* defines.

	2003-10-14  Alan Modra  <amodra@bigpond.net.au>
	* config/rs6000/linux64.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Choose
	MASK_ALIGN_NATURAL if rs6000_alignment_string not given.  Don't
	assign DEFAULT_ABI.
	(ADJUST_FIELD_ALIGN, ROUND_TYPE_ALIGN): Update comment.
	* config/rs6000/rs6000.c: Formatting.
	(rs6000_parse_alignment_option): Only set rs6000_alignment_flags
	when rs6000_alignment_string given.

	2003-07-16  Jakub Jelinek  <jakub@redhat.com>
	* unwind-dw2.c (MD_FROB_UPDATE_CONTEXT): Define.
	(uw_update_context_1): Use it.
	* config/rs6000/rs6000.c (insn_after_throw): Remove.
	(rs6000_aix_emit_builtin_unwind_init): Save $r2 to its location
	in parent frame if _Unwind_* called directly instead of through
	.plt.
	(rs6000_emit_eh_toc_restore): Remove.
	(rs6000_emit_prologue): Update stack pointer before doing any saving
	if current_function_calls_eh_return.  Generate unwind info for $r2.
	(rs6000_emit_epilogue): Restore stack pointer after doing all
	restoring if current_function_calls_eh_return.  Restore $r2.
	* config/rs6000/rs6000-protos.h (rs6000_emit_eh_toc_restore): Remove.
	* config/rs6000/rs6000.md (eh_return): Remove call to
	rs6000_emit_eh_toc_restore.
	* config/rs6000/linux64.h (MD_FROB_UPDATE_CONTEXT): Define.
	* config/rs6000/aix.h (MD_FROB_UPDATE_CONTEXT): Define.

	2003-06-04  Jakub Jelinek  <jakub@redhat.com>
		    Alan Modra  <amodra@bigpond.net.au>
	* config/i386/linux.h (NO_PROFILE_COUNTERS): Define to 1.
	* config/i386/freebsd.h (NO_PROFILE_COUNTERS): Likewise.
	* config/i386/netbsd-elf.h (NO_PROFILE_COUNTERS): Likewise.
	* config/xtensa/xtensa.h (NO_PROFILE_COUTNERS): Likewise.
	* config/darwin.h (NO_PROFILE_COUNTERS): Likewise.
	* final.c (NO_PROFILE_COUNTERS): Define to 0 if not defined.
	(profile_function): Allow NO_PROFILE_COUNTERS to be non-constant.
	* config/rs6000/rs6000.c (output_profile_hook): Likewise.
	* configure.in (powerpc*-*, s390*-*): Set tls_as_opt.
	Pass it to $gcc_cv_as.
	* configure: Rebuilt.
	* config/rs6000/rs6000.c (rs6000_abi_name): Remove initializer.
	(print_operand): Allow TARGET_AIX to be non-constant.
	(rs6000_aix_emit_builtin_unwind_init, rs6000_emit_eh_toc_restore):
	Define unconditionally.
	(rs6000_elf_declare_function_name): New function.
	* config/rs6000/rs6000.md (eh_return): Allow TARGET_AIX to be
	non-constant.
	* config/rs6000/linux64.h [!RS6000_BI_ARCH] (TARGET_64BIT): Define
	to 1.
	(DEFAULT_ARCH64_P, RS6000_BI_ARCH_P): Define.
	[IN_LIBGCC2] (TARGET_64BIT): Define based on whether __powerpc64__
	is defined.
	(TARGET_AIX): Define to 1 if TARGET_64BIT.
	(PROCESSOR_DEFAULT): Remove.
	(TARGET_RELOCATABLE, RS6000_ABI_NAME, INVALID_64BIT,
	INVALID_32BIT, SUBSUBTARGET_OVERRIDE_OPTIONS): Define.
	[RS6000_BI_ARCH] (OVERRIDE_OPTIONS, ASM_FILE_START): Define.
	(ASM_DEFAULT_SPEC, ASM_SPEC, LINK_OS_LINUX_SPEC): Define for both
	-m32 and -m64.
	(MULTILIB_DEFAULTS): Define.
	(SUBSUBTARGET_EXTRA_SPECS): Define.
	(ASM_SPEC32, ASM_SPEC64, ASM_SPEC_COMMON): Define.
	(TARGET_TOC): Define only if !RS6000_BI_ARCH.
	(TARGET_NO_TOC): Remove.
	[!RS6000_BI_ARCH] (TARGET_RELOCATABLE, TARGET_EABI,
	TARGET_PROTOTYPE): Define to 0.
	(NO_PROFILE_COUNTERS): Define to TARGET_64BIT.
	(PROFILE_HOOK): Only call output_profile_hook if TARGET_64BIT.
	(ADJUST_FIELD_ALIGN, ROUND_TYPE_ALIGN): Adjust to work properly
	if !TARGET_64BIT.
	(USER_LABEL_PREFIX): Remove.
	(JUMP_TABLES_IN_TEXT_SECTION): Define to TARGET_64BIT.
	(SETUP_FRAME_ADDRESSES): Only call rs6000_aix_emit_builtin_unwind_init
	if TARGET_64BIT.
	(TARGET_OS_CPP_BUILTINS): Handle both -m32 and -m64.
	(LINK_OS_LINUX_SPEC32, LINK_OS_LINUX_SPEC64): Define.
	(STARTFILE_LINUX_SPEC, ENDFILE_LINUX_SPEC): Remove.
	(TOC_SECTION_ASM_OP): Define depending on TARGET_64BIT.
	(MINIMAL_TOC_SECTION_ASM_OP): Likewise.
	(SIZE_TYPE, PTRDIFF_TYPE, WCHAR_TYPE): Define depending on
	TARGET_64BIT.
	(RS6000_CALL_GLUE): Likewise.
	(SAVE_FP_PREFIX, SAVE_FP_SUFFIX, RESTORE_FP_PREFIX,
	RESTORE_FP_SUFFIX): Likewise.
	(ASM_DECLARE_FUNCTION_NAME): Remove.
	(ASM_DECLARE_FUNCTION_SIZE, ASM_OUTPUT_SOURCE_LINE,
	DBX_OUTPUT_BRAC, DBX_OUTPUT_NFUN): Only output dot before function
	name if TARGET_64BIT.
	(ASM_OUTPUT_SPECIAL_POOL_ENTRY_P): Handle both TARGET_64BIT and
	!TARGET_64BIT.
	(ASM_OUTPUT_REG_PUSH, ASM_OUTPUT_REG_POP): Remove undefs.
	(ASM_PREFERRED_EH_DATA_FORMAT): Take TARGET_64BIT into account.
	(DRAFT_V4_STRUCT_RET): Define.
	(SIGNAL_FRAMESIZE): New enum value.
	(MD_FALLBACK_FRAME_STATE_FOR): Define.
	* config/rs6000/default64.h: New file.
	* config/rs6000/sysv4.h (SUBTARGET_SWITCHES): Add -m32 and -m64
	options.
	(SUBTARGET_OVERRIDE_OPTIONS): If rs6000_abi_name is NULL, set it
	to RS6000_ABI_NAME.  Only disallow mixing of -fPIC with -mcall-aixdesc
	if !TARGET_64BIT.
	[!RS6000_BI_ARCH] (SUBSUBTARGET_OVERRIDE_OPTIONS): Define.
	(ASM_DECLARE_FUNCTION_NAME): Use rs6000_elf_declare_function_name
	function.
	(TARGET_OS_SYSV_CPP_BUILTINS): Define.
	(TARGET_OS_CPP_BUILTINS): Use it.
	(CPP_SYSV_SPEC): Remove.
	(CPP_SPEC): Remove cpp_sysv.
	(SUBTARGET_EXTRA_SPECS): Remove cpp_sysv.
	Add SUBSUBTARGET_EXTRA_SPECS.
	(SUBSUBTARGET_EXTRA_SPECS): Define.
	* config/rs6000/biarch64.h: New file.
	* config/rs6000/rs6000-protos.h (rs6000_elf_declare_function_name):
	New prototype.
	* config/rs6000/x-linux64: New file.
	* config/rs6000/t-linux64: Build -m64, -m32 and -m32 -msoft-float
	multilibs.
	* config/rs6000/eabi-ci.asm: Protect with #ifndef __powerpc64__.
	* config/rs6000/eabi-cn.asm: Likewise.
	* config/rs6000/tramp.asm: Likewise.
	* config/rs6000/sol-ci.asm: Likewise.
	* config/rs6000/sol-cn.asm: Likewise.
	* config/rs6000/linux.h (TARGET_64BIT): Define to 0.
	(TARGET_OS_CPP_BUILTINS): Use TARGET_OS_SYSV_CPP_BUILTINS.
	* config/rs6000/ppc-asm.h: Move __powerpc64__ section before
	_CALL_AIXDESC section.
	* config.gcc (powerpc64-*-linux*): Configure a bi-arch compiler,
	defaulting to -m64 unless --with-cpu= is one of the 32-bit CPUs
	or default32.

	2003-05-19  Kevin B. Hendricks  <kevin.hendricks@sympatico.ca>
	            David Edelsohn  <edelsohn@gnu.org>
	* config/rs6000/rs6000.c (rs6000_alignment_string,
	rs6000_alignment_flags): New variables.
	(rs6000_parse_alignment_option): New function.
	(rs6000_override_options): Call it.
	* config/rs6000/rs6000.h (TARGET_OPTIONS): Add -malign-XXX option.
	(MASK_ALIGN_POWER, MASK_ALIGN_NATURAL, TARGET_ALIGN_NATURAL): New
	macros.
	* config/rs6000/aix.h (ADJUST_FIELD_ALIGN): Always use COMPUTED
	natural alignment if TARGET_NATURAL_ALIGNMENT
	(ROUND_TYPE_ALIGN): Always use default record alignment if
	TAGET_NATURAL_ALIGNMENT.
	* config/rs6000/darwin.h (ADJUST_FIELD_ALIGN): Same
	(ROUND_TYPE_ALIGN): Same.
	* config/rs6000/linux64.h (ADJUST_FIELD_ALIGN): Same
	(ROUND_TYPE_ALIGN): Same.

2004-01-21  Alan Modra  <amodra@bigpond.net.au>

	Backport powerpc tls support from mainline.
	2003-09-17  Daniel Jacobowitz  <drow@mvista.com>
	* config/rs6000/sysv4.h (LIB_LINUX_SPEC): Give -lpthread before -lc.
	* config/rs6000/sysv4.h (LIB_LINUX_SPEC): Make -pthread apply
	to shared libraries.

	2003-05-12  Janis Johnson  <janis187@us.ibm.com>
		    Alan Modra  <amodra@bigpond.net.au>
		    Jakub Jelinek  <jakub@redhat.com>
	* configure.in (HAVE_AS_TLS): Add powerpc and powerpc64 tests.
	* configure: Rebuild.
	* config/rs6000/rs6000-protos.h: Update.
	* config/rs6000/rs6000.c (rs6000_tls_size): New.
	(rs6000_tls_size_string): New.
	(rs6000_parse_tls_size_option): New.
	(rs6000_legitimize_tls_address): New.
	(rs6000_tls_get_addr): New.
	(rs6000_got_sym): New.
	(rs6000_tls_symbol_ref): New.
	(rs6000_tls_symbol_ref_1): New.
	(rs6000_get_some_local_dynamic_name): New.
	(rs6000_get_some_local_dynamic_name_1): New.
	(TARGET_HAVE_TLS): New.
	(TARGET_CANNOT_FORCE_CONST_MEM): New.
	(rs6000_override_options): Handle -mtls-size option.
	(constant_pool_expr_1): Handle TLS symbols.
	(rs6000_legitimize_address): Handle TLS symbols.
	(rs6000_tls_referenced_p): New.
	(rs6000_legitimate_address): Handle TLS symbols.
	(rs6000_emit_move): Handle TLS symbols.
	(print_operand): Handle TLS symbols.
	(uses_TOC): Handle TLS symbols.
	(rs6000_emit_prologue): Use symbol for unspec constant.
	* config/rs6000/rs6000.h (HAVE_AS_TLS): New.
	(some_ld_name): New.
	(LEGITIMATE_CONSTANT_P): Handle TLS symbols.
	(PRINT_OPERAND_PUNCT_VALID_P): Handle TLS symbols.
	(PREDICATE_CODES): Add rs6000_tls_symbol_ref.
	* config/rs6000/rs6000.md (load_toc_v4_PIC_1, load_toc_v4_PIC_1b):
	Support TLS.
	(tls_gd_32, tls_gd_64, tls_ld_32, tls_ld_64, tls_dtprel_32,
	tls_dtprel_64, tls_dtprel_ha_32, tls_dtprel_ha_64, tls_dtprel_lo_32,
	tls_dtprel_lo_64, tls_got_dtprel_32, tls_got_dtprel_64, tls_tprel_32,
	tls_tprel_64, tls_tprel_ha_32, tls_tprel_ha_64, tls_tprel_lo_32,
	tls_tprel_lo_64, tls_got_tprel_32, tls_got_tprel_64, tls_tls_32,
	tls_tls_64): New.
	* config/rs6000/sysv4.h (SUBTARGET_OPTIONS): Add tls_size.

	2003-04-14  Janis Johnson  <janis287@us.ibm.com>
	* config/rs6000/rs6000.md (define_constants): Define constants for
	all UNSPEC usage, including new values for TLS support.
	(aux_truncdfsf2, fctiwz, movsi_got, movsi_got_internal,
	load_toc_aix_si, load_toc_aix_di, load_toc_v4_pic_si,
	load_toc_v4_PIC_1, load_toc_v4_PIC_1b, load_macho_picbase,
	macho_correct_pic, blockage, move_from_CR_ov_bit, movesi_from_cr,
	stack_tie, movsi_to_cr_one, movsi_to_cr, mtcrfsi, eh_set_lr_si,
	eh_set_lr_di): Use them.
	* rs6000.c: (mtcrf_operation, uses_TOC, rs6000_emit_prologue,
	rs6000_emit_epilogue) Use them.

	2003-03-19  Alan Modra  <amodra@bigpond.net.au>
	* config/rs6000/rs6000.c (rs6000_stack_info): Only require a frame
	when debugging on XCOFF targets.  Delete "abi" temp.

	2003-03-18  Alan Modra  <amodra@bigpond.net.au>
	* config/rs6000/linux64.h (MASK_PROFILE_KERNEL): Define.
	(TARGET_PROFILE_KERNEL): Define.
	(SUBTARGET_SWITCHES): Handle -mprofile-kernel.
	(PROFILE_BEFORE_PROLOGUE): Don't define.
	(PROFILE_KERNEL): Remove hacks.
	* config/rs6000/rs6000.c (TARGET_PROFILE_KERNEL): Define default.
	(rs6000_stack_info): No need to save lr if just for profiling when
	TARGET_KERNEL_PROFILE.
	(output_profile_hook): Output nothing when TARGET_KERNEL_PROFILE.
	(output_function_profiler): Localize label generation.  Emit code
	for kernel profiling.

	2003-03-17  Alan Modra  <amodra@bigpond.net.au>
	* config/rs6000/linux64.h (TARGET_64BIT): Redefine.
	(TARGET_RELOCATABLE, TARGET_EABI, TARGET_PROTOTYPE): Likewise.
	(SUBTARGET_SWITCHES, SUBTARGET_OPTIONS): Likewise.
	(SUBTARGET_OVERRIDE_OPTIONS, CPP_SYSV_SPEC): Likewise.

	2003-03-13  Alan Modra  <amodra@bigpond.net.au>
	* config/rs6000/rs6000.c (rs6000_flag_pic): Delete.
	(rs6000_xcoff_encode_section_info): #ifdef TARGET_XCOFF.
	(rs6000_binds_local_p, TARGET_BINDS_LOCAL_P): #if TARGET_MACHO.
	(rs6000_override_options): Don't clear flag_pic for ABI_AIX.
	(rs6000_legitimize_address): Formatting.
	(rs6000_emit_move): Likewise.
	(rs6000_return_addr): Test ABI_AIX as well as flag_pic.
	(rs6000_emit_prologue <save_LR_around_toc_setup>): Likewise.
	(rs6000_elf_select_section): Comment reason for shlib being
	set for ABI_AIX.
	(rs6000_elf_unique_section): Likewise.
	(rs6000_elf_encode_section_info): Test !TARGET_AIX as well as ABI_AIX.
	* config/rs6000/rs6000.h (LEGITIMATE_LO_SUM_ADDRESS_P): Test ABI_AIX
	as well as flag_pic.
	* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Likewise.
	(MINIMAL_TOC_SECTION_ASM_OP): Likewise.
	* config/rs6000/linux64.h (TARGET_ENCODE_SECTION_INFO): Don't define.

2004-01-19  Michael Matz  <matz@suse.de>

	* alpha/alpha.h (SETUP_INCOMING_VARARGS): Really adjust calls
	to move_block_from_reg() .

2004-01-18  Jan Hubicka  <jh@suse.cz>

	* c-common.c (c_estimate_num_insns_1): Merge with mainline
	* params.def (max-inline-insns-single, max-inline-insns-auto,
	large-function-insns): Likewise
	* invoke.texi: Update

2004-01-17  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c: Update overall comment.

2004-01-16  Jan Hubicka  <jh@suse.cz>

	* genautomata.c:  Merge from manline.
	* genattrtab.h:  Merge from manline.

2004-01-16  Jan Hubicka  <jh@suse.cz>

	PR opt/13608
	* i386.c (ix86_compute_frame_layout): Fix for alloca on leaf function.

2004-01-15  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (variable_tracking_main): Do not run variable tracking
	on large dense flow graph.

2004-01-15  Josef Zlomek  <zlomekj@suse.cz>

	Backport from mainline.
	2003-10-03  Jeff Sturm  <jsturm@one-point.com>
		    Roger Sayle  <roger@eyesopen.com>

		PR optimization/12289
		* calls.c (emit_call_1): Pretend to have popped the arguments
		to noreturn and longjmp functions instead of ignoring them.
		(expand_call): Don't adjust stack_pointer_delta while
		inhibit_defer_pop is set.

2004-01-14  Alan Modra  <amodra@bigpond.net.au>

	* calls.c (save_fixed_argument_area): Revert to passing low_to_save
	and high_to_save as ints.
	(restore_fixed_argument_area): Likewise.
	(try_to_integrate): Revert to storing reg_parm_stack_space as an int.
	(expand_call): Likewise.  low_to_save, high_to_save too.
	(emit_library_call_value_1): Likewise.
	(store_one_arg): Likewise.

	Backport from mainline
	2003-08-06  Alan Modra  <amodra@bigpond.net.au>
	* calls.c (load_register_parameters): Arrange for call_fusage to
	report the whole register as used when shifting to the msb.

	2003-07-30  Alan Modra  <amodra@bigpond.net.au>
	* calls.c (load_register_parameters): When shifting reg sized values
	to the msb, move the value to a reg first.

	2003-07-14  Alan Modra  <amodra@bigpond.net.au>
	* doc/tm.texi (BLOCK_REG_PADDING): Describe.
	* expr.h (struct locate_and_pad_arg_data): Add where_pad.
	(emit_group_load, emit_group_store): Adjust declarations.
	Remove most occurrences of #ifdef TREE_CODE.
	* expr.c (emit_group_load): Add "type" param, and use
	BLOCK_REG_PADDING to determine need for a shift.  Optimize non-
	aligned accesses if !SLOW_UNALIGNED_ACCESS.
	(emit_group_store): Likewise.
	(emit_push_insn, expand_assignment, store_expr, expand_expr): Adjust
	emit_group_load and emit_group_store calls.
	* calls.c (store_unaligned_arguments_into_pseudos): Tidy.  Use
	BLOCK_REG_PADDING to determine whether we need endian_correction.
	(load_register_parameters): Localize vars.  Handle shifting of
	small values to the correct end of regs.  Adjust emit_group_load
	call.
	(expand_call, emit_library_call_value_1): Adjust emit_group_load
	and emit_group_store calls.
	* function.c (assign_parms): Set mem alignment for stack slots.
	Adjust emit_group_store call.  Store values at the "wrong" end
	of regs to the stack.  Use BLOCK_REG_PADDING.
	(locate_and_pad_parm): Save where_pad.
	(expand_function_end): Adjust emit_group_load call.
	* stmt.c (expand_value_return): Adjust emit_group_load call.
	* Makefile.in (calls.o): Depend on $(OPTABS_H).
	* config/rs6000/linux64.h (TARGET_LITTLE_ENDIAN): Redefine as 0.
	(AGGREGATE_PADDING_FIXED, AGGREGATES_PAD_UPWARD_ALWAYS): Define.
	(MUST_PASS_IN_STACK): Define.
	(BLOCK_REG_PADDING): Define.
	* config/rs6000/rs6000.h (struct rs6000_args): Remove orig_nargs.
	(PAD_VARARGS_DOWN): Define in terms of FUNCTION_ARG_PADDING.
	* config/rs6000/rs6000.c (init_cumulative_args): Don't set orig_nargs.
	(function_arg_padding): !AGGREGATE_PADDING_FIXED compatibility code.
	Act on AGGREGATES_PAD_UPWARD_ALWAYS.

	2003-02-10  Alan Modra  <amodra@bigpond.net.au>
	* calls.c (try_to_integrate): Tidy stack_usage_map access.
	(emit_library_call_value_1): Likewise.	Formatting.
	(store_one_arg): Likewise.

	2003-01-26  Alan Modra  <amodra@bigpond.net.au>
	* calls.c (save_fixed_argument_area): Tidy.
	(restore_fixed_argument_area): Tidy.  Set alignment of stack_area.
	(expand_call): Comment typo fixes.  Don't init low_to_save.  Start
	call chain loop at 1 if !try_tail_call.  Formatting.
	(emit_library_call_value_1): Don't init low_to_save or high_to_save.
	Use save_fixed_argument_area and restore_fixed_argument_area.

2004-01-14  Alan Modra  <amodra@bigpond.net.au>

	Backport from mainline.
	2003-05-17  Alan Modra  <amodra@bigpond.net.au>
	* function.c (assign_parms): Check for zero size args.

	2003-05-09  Alan Modra  <amodra@bigpond.net.au>
	* expr.c (move_block_from_reg): Remove "size" parm.  Localize vars.
	Move code handling pieces not larger than a word to..
	* function.c (assign_parms): ..here, but use change_address instead
	of adjust_address and operand_subword, and expand_binop instead of
	expand_shift.  Adjust calls to move_block_from_reg.
	* expr.h (move_block_from_reg): Update declaration.
	(copy_blkmode_from_reg): Formatting.
	* Makefile.in (function.o): Add $(OPTABS_H) to deps.
	* config/alpha/alpha.c (alpha_setup_incoming_varargs): Adjust
	move_block_from_reg calls.
	* config/arc/arc.c (arc_setup_incoming_varargs): Likewise.
	* config/i960/i960.c (i960_setup_incoming_varargs): Likewise.
	* config/m32r/m32r.c (m32r_setup_incoming_varargs): Likewise.
	* config/m88k/m88k.c (m88k_builtin_saveregsk): Likewise.
	* config/mips/mips.c (mips_setup_incoming_varargs): Likewise.
	* config/pa/pa.c (hppa_builtin_saveregs): Likewise.
	* config/romp/romp.h (SETUP_INCOMING_VARARGS): Likewise.
	* config/rs6000/rs6000.c (setup_incoming_varargs): Likewise.
	* config/sh/sh.c (sh_builtin_saveregs): Likewise.

	2003-05-07  Alan Modra  <amodra@bigpond.net.au>
	* function.c (assign_parms): Correct reversed reg_parm_stack_space
	test.  Add partial in-regs size to stack_args_size.

	2003-05-02  Alan Modra  <amodra@bigpond.net.au>
	* calls.c (struct arg_data): Move offset, slot_offset, size and
	alignment_pad to struct locate_and_pad_arg_data.  Update all refs.
	(initialize_argument_information): Adjust call to locate_and_pad_parm.
	Delete alignment_pad var.  Don't calculate slot_offset here.
	(emit_library_call_value_1): Delete alignment_pad, offset and size
	vars.  Use struct locate_and_pad_arg_data instead.  Adjust refs.
	Adjust call to locate_and_pad_parm.  Don't tweak arg size for
	partial in-regs here.  Formatting fixes.
	* expr.h (struct locate_and_pad_arg_data): New struct.
	(locate_and_pad_parm): Adjust declaration.
	* function.c (assign_parms): Localize vars.  Use "locate" instead of
	other arg location vars.  Don't invoke FUNCTION_ARG or
	FUNCTION_INCOMING_ARG unless pretend_named is different from
	named_arg.  Heed MUST_PASS_IN_STACK and set up "partial" before
	calling locate_and_pad_parm.  Adjust locate_and_pad_parm call.
	Use slot_offset for stack home of reg parms.  Correct test for
	parm passed in memory.  Formatting fixes.
	(locate_and_pad_parm): Add "partial" to params.  Replace offset_ptr
	arg_size_ptr and alignment pad with "locate".  Set slot_offset here.
	Correct initial_offset_ptr handling.  Localize vars.  Always pad
	locate->offset even when in_regs.

2004-01-13  Jan Hubicka  <jh@suse.cz>

	* decl2.c (finish_file):  Fnalize external functions.

2004-01-13  Andreas Schwab  <schwab@suse.de>

	Backport from mainline:

	2003-02-25  Vladimir Makarov  <vmakarov@redhat.com>
		    Richard Henderson  <rth@redhat.com>

	* sched-int.h (INSN_TRAP_CLASS, WORST_CLASS): Move them from
	sched-rgn.c.
	(add_forward_dependence): New function prototype.

	* sched-rgn.c (INSN_TRAP_CLASS, WORST_CLASS): Move them to
	sched-init.h.
	(CONST_BASED_ADDRESS_P, may_trap_exp, haifa_classify_insn): Move
	them to haifa-sched.c.

	* haifa-sched.c (CONST_BASED_ADDRESS_P, may_trap_exp,
	haifa_classify_insn): Move them from sched-rgn.c.

	* sched-deps.c (add_dependence): Return flag of creating a new
	entry.
	(add_forward_dependence): New function.
	(compute_forward_dependences): Use the function.

	* sched-ebb.c (earliest_block_with_similiar_load): New function.
	(add_deps_for_risky_insns): New function.
	(schedule_ebb): Call the function.

2004-01-11  Jan Hubicka  <jh@suse.cz>

	Backport from mainline:

	2004-01-08  Eric Christopher  <echristo@redhat.com>
		* toplev.c (rest_of_handle_cfg): Add reg_scan pass
		  if we're running mark_constant_function.

2004-01-08  Richard Henderson  <rth@redhat.com>

	Backport from mainline.
	PR opt/12441
	Revert: Sat Mar 30 14:08:55 CET 2002  Jan Hubicka  <jh@suse.cz>
        * i386.c (aligned_operand): Be prepared for SUBREGed registers.
        (ix86_decompose_address): Use REG_P instead of GET_CODE (...) == REG.
        (ix86_address_cost): Be prepared for SUBREGed registers.
        (legitimate_address_p): Accept SUBREGed registers.

2004-01-08  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (struct variable_part_def): Added element cur_loc;
	(vars_copy_1): Set cur_loc to the first element of loc_chain.
	(variable_union): Likewise.
	(set_variable_part): Init cur_loc and emit note only if necessary.
	(delete_variable_part): Update cur_loc and emit note only if necessary.

2004-01-08  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (enum micro_operation_type): Added MO_USE_NO_VAR.
	(add_uses): Set type to MO_USE_NO_VAR instead of MO_CLOBBER.
	(compute_bb_dataflow): Process MO_USE_NO_VAR; cleanup.
	(emit_notes_in_bb): Likewise.
	(vt_initialize): Use MO_USE_NO_VAR instead of MO_CLOBBER for uses.

2004-01-08  Andreas Schwab  <schwab@suse.de>

	Merge from mainline:

	2003-12-19  Jakub Jelinek  <jakub@redhat.com>

	* config/ia64/unwind-ia64.c (ia64_copy_rbs): New function.
	(unw_access_gr): Only call ia64_rse_rnat_addr if addr is above
	regstk_top.
	(uw_frame_state_for): Handle locations inside bundles.
	(uw_init_context_1): Initialize context->rnat.
	Set context->regstk_top to lowest rbs address which has nat collection
	in context->rnat.
	(uw_install_context): Fix rnat restoring.
	Restore ar.rsc to previous state.
	* config/ia64/linux.h (MD_FALLBACK_FRAME_STATE_FOR,
	MD_HANDLE_UNWABI): Handle unwinding through SA_ONSTACK frames.

2004-01-08  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c: Rename type var_part to variable_part.
	(struct variable_def): Likewise.
	(variable_part_different_p): Likewise.

2004-01-03  Jan Hubicka  <jh@suse.cz>

	backport from mainline:
	2003-09-18  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	PR target/11674
	* config/i386/i386.c (x86_emit_floatuns): Also handle SImode operand.

2004-01-03  Jan Hubicka  <jh@suse.cz>

	* tree-inline.c (walk_tree): Sanity check that CALL_EXPR is not shared.
	* cp/calls.c (build_op_delete_call): Unshare expr.

2004-01-03  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (add_uses): Mark USEs or registers which are not
	associated with a variable.
	(add_stores): Likewise for SETs.
	(compute_bb_dataflow): Do not compute precomputed information.
	(emit_notes_in_bb): Likewise.
	(vt_initialize): Order USEs before CLOBBERs.

2003-12-31  Jan Hubicka  <jh@suse.cz>

	* i386.c (ix86_expand_movstr, ix86_expand_clrstr): Use libcal
	for large blocks only when not optimizing size or when REP_MOVL
	is not optimal.
	* i386.md (movstr expander): Enable when optimizing for size.

2003-12-29  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (change_decl_assembler_name): Work around late renaming of
	asms.

2003-12-28  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	Merge from mainline:

	2003-11-12  Jason Merrill  <jason@redhat.com>

		PR optimization/12547
		* java/lang.c (java_tree_inlining_walk_subtrees): Just walk
		BLOCK_EXPR_BODY directly.

2003-12-20  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (bb_stack_adjust_offset): Adjust memory references
	for the basic block, do not return a return value.
	(vt_stack_adjustments): bb_stack_adjust_offset does not return a value.
	(adjust_stack_reference): Remove redundant chack for
	frame_pointer_needed.
	(var_mem_delete_and_set): Do not adjust memory reference, it has already
	been adjusted while computing stack adjusts.
	(var_mem_delete): Likewise.
	(vt_add_function_parameters): Check for frame_pointer_needed.

2003-12-18  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20031216 tag)

2003-12-16  Josef Zlomek  <zlomekj@suse.cz>

	* flags.h: Really make flags_crossjumping extern.

2003-12-14  Andreas Jaeger  <aj@suse.de>

	* flags.h: Remove broken repgaram commit.
	* toplev.c: Likewise.

2003-12-13  Jan Hubicka  <jh@suse.cz>

	* flags.h: Make flags_crossjumping external.
	* toplev.c: Likewise.

	* calls.c (expand_call): Ensure that crossjumping won't produce
	missmatching stack frames.

2003-12-12  Andreas Schwab  <schwab@suse.de>

	Merge from mainline:

	2003-12-11  David Mosberger  <davidm@hpl.hp.com>

	* unwind-libunwind.c (_Unwind_SetGR): Clear the NaT bit as
	required by C++ ABI for Itanium.
	* config/t-libunwind (LIB2ADDEH): Remove unwind-libunwind.c.
	* config/t-libunwind-no-eh: New file.
	* configure.in: Check libunwind for _Unwind_Resume() and if it's
	present, set libunwind_has_eh_support to "yes".
	* configure: Regenerate.
	* config.gcc (ia64*-*-linux*): If $libunwind_has_eh_support is
	set to yes, use t-libunwind, otherwise, use t-libunwind-no-eh.

	2003-12-03  James E Wilson  <wilson@specifixinc.com>

	* gcc.c (init_spec): Pass -lunwind to init_gcc_specs in eh_name.
	* cp/g++spec.c (lang_specific_driver): Delete
	USE_LIBUNWIND_EXCEPTIONS support.

	2003-11-29  James E Wilson  <wilson@specifixinc.com>

	* gcc.c (init_spec): Pass -lunwind to init_gcc_specs in eh_name
	instead of in shared_name.

	2003-11-20 David Mosberger  <davidm@hpl.hp.com>

	* config/t-libunwind (LIB2ADDEH): Add unwind-c.c.
	(SHLIB_LC): Define.
	* unwind-libunwind.c (_Unwind_GetCFA): Implement.
	(_Unwind_GetBSP) [UNW_TARGET_IA64]: New function.

2003-12-08  Jan Hubicka  <jh@suse.cz>

	* calls.c (store_one_arg):  Fix array overrun.

2003-12-07  Jan Hubicka  <jh@suse.cz>

	* c-decl.c (finish_decl): Use change_decl_assembler-name.
	(finish_function): Rename flag_unit_at_time to flag-unit_at_a_time.
	* c-objc-common (finish_cdtor): Likewise.
	* tree-inline.c (expand_call_inline): Likewise.
	* cgraph.c: Merge from mainline
	* cgraph.h: Merge from mainline.
	* cgraphunit.c: Merge from mainline.
	* dwarf2out.c (gen_subprogram_die): Use flag-unit_at_a_time.
	* flags.h (flag_unit_at_time): Rename to ...
	(flag_unit_at_a_time): ... this one.
	* langhooks.h: Merge with mainline.
	* lanhooks.c (lhd_callgraph_analyze_expr): New.
	* toplev.h (flag_unit_at_time): Rename to ...
	(flag_unit_at_a_time): ... this one.
	(wrapup_global_declarations): Merge form mainline.
	* tree.h (change_decl_assembler-name): Declare.
	(notice_global_symbol): liekwsie.
	* varasm.c (notice_global_symbol): New.

2003-12-08  Jan Hubicka  <jh@suse.cz>

	* i386.md (cmpstr expander): Obey TARGET_INLINE_ALL_STRINGOPS

2003-12-06  Jan Hubicka  <jh@suse.cz>

	* unwind-pe.h (read_uleb128): Fix handling of large values
	(read_sleb128): Fix handling of large values

2003-12-05  Jan Hubicka  <jh@suse.cz>

	* calls.c (try_to_integrate): Adjust is HOST_WIDE_INT.
	* function.h (struct_function->outgoing_args_size): Make HOST_WIDE_INT
	* reload.c (reload): Fix warning.
	* i386.c (struct ix86_frame): Fix.

2003-12-03  Jan Hubicka  <jh@suse.cz>

	* calls.c:  Reorganize to get 64bit arguments working.

2003-12-03  Jan Hubicka  <jh@suse.cz>

	* i386.c (classify_argument): Make it 64bit clean.

2003-12-01  James E Wilson  <wilson@specifixinc.com>

	* config/ia64/ia64.h (FUNCTION_ARG_REGNO_P): Use AR_REG_FIRST not
	GR_ARG_FIRST.

2003-12-01  Andreas Schwab  <schwab@suse.de>

	Merge from mainline

	2003-12-01  James E Wilson  <wilson@specifixinc.com>

	PR target/8407
	* config/ia64/ia64.c (ia64_function_arg): For single-reg HFA, call
	gen_rtx_REG to create new reg with argument mode.

	Merge from mainline

	2003-08-27  Richard Sandiford  <rsandifo@redhat.com>

	* function.c (assign_parms): Allocate BLKmode stack slots.

2003-11-30  Jan Hubicka  <jh@suse.cz>

	* i386.c (ix86_emit_restore_regs_using_mov):  Deal with large offsets.
	(pro_epilogue_adjust_stack):  Update comment.

	* explow.c (round_push): Fix handling of large sizes.

2003-11-27  Josef Zlomek  <zlomekj@suse.cz>

	* toplev.c (rest_of_compilation): Disable VRP when tracer was used and
	flowgraph is large.

2003-11-26  Josef Zlomek  <zlomekj@suse.cz>

	* toplev.c (enum dump_file_index): Move DFI_vrp after DFI_life.
	(dump_file): Move "vrp" after "life".
	(rest_of_compilation): Run VRP after life analysis.
	* vrp.c (struct range_def): Add field dead.
	(enum oper_type): Add REG_IS_DEAD.
	(copy_dead_registers): New variable.
	(union_ranges): Copy dead registers only if copy_dead_registers.
	Delete the result range if it is a full range.
	(copy_range): Copy dead register only if copy_dead_registers.
	(copy_register_table): Set the target register to be live.
	(process_ranges_eq): Set the new range to be live.
	(process_ranges_lt): Likewise.
	(process_ranges_ltu): Likewise.
	(update_outgoing_edges): Delete debug dumps.  Enable copying dead
	registers.
	(find_operations): Add REG_IS_DEAD operations.
	(compute_ranges_for_bb): Disable copying dead registers.
	Process REG_IS_DEAD.  Set the target register to be live.  Delete debug
	dump.
	(compute_ranges): Disable copying dead registers when computing union.
	Do not add block whose successor is the block itself to worklist.
	Mark the blocks which are the destination of dead edge dirty.
	(dump_range): Print DEAD if register is dead.
	(dump_operation_list): Print REG_IS_DEAD.
	(value_range_propagation): Update life information for dirty blocks.

2003-11-25  H.J. Lu  <hongjiu.lu@intel.com>

	Sync with 3.3-branch:

	* config/i386/i386.c (MASK_SSE1): Removed.
	(MASK_SSE164): Removed.
	(MASK_SSE264): Removed.
	(bdesc_comi): Replace MASK_SSE1 with MASK_SSE. Replace
	MASK_SSE164 with MASK_SSE | MASK_64BIT. Replace MASK_SSE264
	with MASK_SSE2 | MASK_64BIT.
	(bdesc_2arg): Likewise.

	* doc/extend.texi: Document new builtin functions for Intel
	Prescott New Intrunctions.

	* doc/invoke.texi: Document new command-line options, -mpni and
	-mno-pni, for Intel Prescott New Intrunctions.

	* config.gcc (extra_headers): Add emmintrin.h for i[34567]86-*-*
	and x86_64-*-*.

	* config/i386/emmintrin.h: Updated from 3.3-branch.
	* config/i386/mmintrin.h: Likewise.
	* config/i386/xmmintrin.h: Likewise.

2003-11-24  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* genattrtab.c (strcmp_check, DEF_ATTR_STRING): New macros.
	(length_str, delay_type_str, delay_1_0_str, num_delay_slots_str):
	New variables.
	(main): Initialize them.
	(count_sub_rtxs): Remove unused function.
	(find_attr): Canonicalize the attribute name string.
	(attr_alt_subset_p, attr_alt_subset_of_compl_p, attr_alt_intersection,
	attr_alt_union, attr_alt_complement, attr_alt_bit_p, mk_attr_alt): New.
	(attr_rtx_1, copy_boolean, expand_delays, gen_unit): Always canonicalize
	string arguments.
	(attr_printf, attr_eq): Use DEF_ATTR_STRING.
	(check_attr_test, check_attr_value, make_length_attrs,
	write_length_unit_log, simplify_by_exploding, gen_attr,
	write_test_expr, write_attr_value, write_eligible_delay,
	write_complex_function, make_internal_attr,
	write_const_num_delay_slots): Changed due to change of type of
	find_attr.
	(simplify_cond): Update indices correctly.
	(check_attr_test, encode_units_mask, compute_alternative_mask,
	make_alternative_compare, simplify_and_tree,
	attr_rtx_cost, simplify_test_exp, gen_attr,
	write_test_expr, walk_attr_value): Handle EQ_ATTR_ALT.
	(fill_attr, evaluate_eq_attr, simplify_and_tree,
	attr_rtx_cost, simplify_by_exploding, walk_attr_value): Use
	strcmp_check.
	* rtl.def (EQ_ATTR_ALT): New.


2003-11-24  Jan Hubicka  <jh@suse.cz>

	Merge:
	2003-07-11  Jakub Jelinek  <jakub@redhat.com>
		* reload1.c (struct elim_table): Change offset, initial_offset and
		previous_offset fields to HOST_WIDE_INT.
		(offsets_at): Change from int to HOST_WIDE_INT.
		(reload): Adjust offsets_at initialization.
		(eliminate_regs_in_insn): Change type of offset to HOST_WIDE_INT.
		(verify_initial_elim_offsets): Change type of t to HOST_WIDE_INT.
		* config/i386/i386.c (ix86_compute_frame_layout): Change offset type
		to HOST_WIDE_INT.  Don't save regs using mov for huge frame sizes
		if TARGET_64BIT.
		(pro_epilogue_adjust_stack): New function.
		(ix86_expand_prologue, ix86_expand_epilogue): Use it.
		* config/i386/i386.md (pro_epilogue_adjust_stack): Remove.
		(pro_epilogue_adjust_stack_1): Remove * in front of name.
		(pro_epilogue_adjust_stack_rex64): Handle -2147483648 properly.
		(pro_epilogue_adjust_stack_rex64_2): New insn.

		* optabs.c (prepare_cmp_insn): Try cmpmemM first if it exists,
		then fall back to cmpstrM.
		* builtins.c (expand_builtin_memcmp): Likewise.
		* config/s390/s390-protos.h (s390_expand_cmpstr): Rename to...
		(s390_expand_cmpmem): ... this.
		* config/s390/s390.md (cmpmemdi, cmpmemsi, cmpmem_short_64,
		cmpmem_short_31, cmpmem_long_64, cmpmem_long_31): Renamed
		from cmpstr* patterns.  Rename call to s390_expand_cmpstr
		to s390_expand_cmpmem.
		* config/s390/s390.c (s390_expand_cmpstr): Rename to...
		(s390_expand_cmpstr): ... this.  Rename cmpstr* instructions
		to cmpmem*.
		* config/i370/i370.md (cmpmemsi, cmpmemsi_1): Renamed from
		cmpstr* patterns.
		* doc/md.texi (cmpstrM): Describe as String compare insn, not
		Block compare insn.
		(cmpmemM): Add.

		* gcc.dg/20030711-1.c: New test.

	Ulrich Weigand
		* prims.cc (catch_segv): Unblock correct signal.
		(catch_fpe): Likewise.

		* reload.c (find_reloads_subreg_address): Use correct offset for
		paradoxical MEM subregs on big-endian targets.

		* combine.c (simplify_set): Do not clear out undobuf.other_insn
		already set elsewhere.

		* combine.c (combine_simplify_rtx): Fix RTL sharing bug.

		* combine.c (distribute_notes): Handle REG_ALWAYS_RETURN.

		* config/s390/s390.c (s390_function_arg_float): New function.
		(s390_function_arg_pass_by_reference): Use it.
		(s390_function_arg_advance): Likewise.
		(s390_function_arg): Likewise.
		(s390_va_arg): Likewise

		* config/s390/s390.c (s390_va_arg): Fix alignment when retrieving
		non-integral types from integer register save area slots.

		* combine.c (simplify_comparison): Re-enable widening of comparisons
		with non-paradoxical subregs of non-REG expressions.

2003-11-24  Jan Hubicka  <jh@suse.cz>

	* i386.c: Merge merdium model fixes from mainline.
	* i386.h: Likewise.
	* i386.md: Likewise.

2003-11-11  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (vt_find_locations): Do not add block whose successor
	is the block itself to worklist.

2003-11-10  Andreas Jaeger  <aj@suse.de>

	* ada/Makefile.in (gnattools2): Remove gnatpsta.

	* ada/7sosprim.adb: tv_usec of struct_timeval and time_t are
	long integer.

	Backport from mainline:
	2003-06-23  Jakub Jelinek  <jakub@redhat.com>

	* config/i386/i386.c (x86_output_mi_thunk): Don't pass MEM to %P0,
	just SYMBOL_REF.

	* varasm.c (resolve_unique_section): Remove prototype.	No longer
	static.
	* tree.h (resolve_unique_section): New prototype.

	* cp/method.c (thunk_labelno): New variable.
	(make_alias_for_thunk): New function.
	(use_thunk): Use it if defined ASM_OUTPUT_DEF.  Put the thunk
	into the same section as the function it is calling.
	Include gt-cp-method.h.
	* cp/Make-lang.in (gt-cp-method.h): Depend on s-gtype.
	(cp/method.o): Depend on gt-cp-method.h.
	* cp/config-lang.in (gtfiles): Add $(srcdir)/cp/method.c.

	Backport from mainline:
	2003-06-12  Richard Henderson  <rth@redhat.com>

	* config/i386/i386.c (legitimate_constant_p): Handle UNSPEC_NTPOFF
	and UNSPEC_DTPOFF.

	Backport from mainline:
	2003-08-26  Jakub Jelinek  <jakub@redhat.com>

	* builtins.c (expand_builtin_expect_jump): Save pending_stack_adjust
	and restore it if returning NULL.

	* gcc.dg/20030826-2.c: New test.

2003-11-10  Andreas Jaeger  <aj@suse.de>

	* ada/Makefile.in (gnatlib): Pass VPATH.
	(SYMLIB): Remove libraries.

2003-11-10  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (contains_symbol_ref): Fix possible ICE.

2003-11-09  Josef Zlomek  <zlomekj@suse.cz>

	* flags.h (flag_var_tracking): New extern definition.
	* config/ia64/ia64.c (ia64_override_options): Disable var-tracking.

2003-11-07  Jan Hubicka  <jh@suse.cz>

	* i386.c (x86_64_sign_extended_value):  Return false from tls variables.
	(x86_64_zero_extended_value):  likewise.

2003-11-06  Josef Zlomek  <zlomekj@suse.cz>

	Andreas Schwab <schwab@suse.de>
	* dwarf2out.c (dwarf2out_var_location): Use ASM_OUTPUT_DEBUG_LABEL.

2003-11-04  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (set_frame_base_location): New function.
	(compute_bb_dataflow): Use set_frame_base_location.
	(emit_notes_in_bb): Likewise.

2003-11-03  Josef Zlomek  <zlomekj@suse.cz>

	Speedup var-tracking similarly to VRP.
	* var-tracking.c (vt_hybrid_search): Deleted.
	(vt_iterative_dataflow): Deleted.
	(vt_find_locations): New function - faster dataflow solver.
	(variable_tracking_main): Computing the order of blocks moved to
	vt_find_locations.

2003-11-01  Andreas Schwab  <schwab@suse.de>

	Merge from mainline:

	2003-04-25  H.J. Lu <hjl@gnu.org>

	* config/ia64/ia64.c (ia64_expand_compare_and_swap): Add rmode
	for return mode.
	(ia64_expand_builtin): Set rmode to SImode for
	IA64_BUILTIN_BOOL_COMPARE_AND_SWAP_SI,
	IA64_BUILTIN_VAL_COMPARE_AND_SWAP_SI and
	IA64_BUILTIN_BOOL_COMPARE_AND_SWAP_DI. Set remode to DImode
	for IA64_BUILTIN_VAL_COMPARE_AND_SWAP_DI.

	2003-04-24  H.J. Lu <hjl@gnu.org>

	* config/ia64/ia64.c (ia64_init_builtins): Add si_ftype_pdi_di_di
	for __sync_bool_compare_and_swap_di for int return type.

	* config/ia64/ia64intrin.h (__sync_bool_compare_and_swap_di):
	Change return type to int.
	(__sync_bool_compare_and_swap): Likewise.

2003-10-26  Josef Zlomek  <zlomekj@suse.cz>

	* vrp.c (compute_ranges): Use 2 heaps, fix memory leak.

2003-10-24  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	Merge from mainline:

	2003-06-13  Richard Henderson  <rth@redhat.com>

		* cfgbuild.c (make_edges): Set ABNORMAL with SIBCALL.
		* cfgrtl.c (purge_dead_edges): Expect it too.

	2003-06-07  Richard Henderson  <rth@redhat.com>

		* basic-block.h (EDGE_SIBCALL): New.
		(EDGE_ALL_FLAGS): Update.
		* cfg.c (dump_edge_info): Add sibcall name.
		* cfgbuild.c (make_edges): Use EDGE_SIBCALL.
		* cfgrtl.c (purge_dead_edges): Handle sibcalls.

2003-10-23  Josef Zlomek  <zlomekj@suse.cz>

	* vrp.c (compute_ranges_for_pending): Delete.
	(value_range_propagation): Move computing of block order to ...
	(compute_ranges): ... here. Speedup dataflow solver.

2003-10-22  Waldek Hebisch <hebisch@math.uni.wroc.pl>

	* config/i386/i386.c (classify_argument): Handle SET_TYPE.

2003-10-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* tsp.c: New file.
	* Makefile.in (tsp.o): Add.
	(bb-reorder.o): Add PARAMS_H dependency.
	* bb-reorder.c: Include params.h.
	(JUMP_COST, HIT_TAKEN_COST, MISS_TAKEN_COST, MISS_FALLTHRU_COST): New
	macros.
	(reorder_using_tsp, cost_of_uncond_jump, cost_of_cond_jump,
	cost_of_cond_branch, cost_b_after_a, record_edges): New functions.
	(reorder_basic_blocks): Call reorder_using_tsp.
	* cfglayout.h (struct vertex): New.
	(MAX_TSP_SIZE): New macro.
	(solve_tsp): Declare.
	* flags.h (flag_tsp_ordering): Declare.
	* params.def (PARAM_HIT_TAKEN_COST, PARAM_MISS_TAKEN_COST,
	PARAM_MISS_FALLTHRU_COST): New.
	* toplev.c (dump_file): Fix order of bbro and vartrack dumps.
	(flag_tsp_ordering): New.
	(f_options): Add -ftsp-ordering.
	* doc/invoke.texi (-ftsp-ordering): Document.
	* doc/passes.texi (tsp.c): Document.

2003-10-20  Andreas Jaeger  <aj@suse.de>

	* mklibgcc.in (libgcc2_eh_objs): Remove extra @.

2003-10-19  Andreas Jaeger  <aj@suse.de>

	Merge from mainline:

	2003-09-26  Andreas Krebbel <krebbel1@de.ibm.com>
	* config/s390/s390.md ("builtin_setjmp_setup"): Insn deleted.
	("builtin_longjmp"): Insn deleted.
	("save_stack_nonlocal"): Save literal pool base pointer behind
	backchain and stack pointer.
	("restore_stack_nonlocal"): Restore literal pool base pointer.
	* config/s390/s390.h ("STACK_SAVEAREA_MODE"): Double size of
	the stack save area for the nonlocal goto case.

2003-10-19  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3 branch (gcc_3_3_2_release)

2003-10-19  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (contains_symbol_ref): New function.
	(track_expr_p): Do not track MEMs which contain SYMBOL_REF.
	* config/s390/s390.c (s390_machine_dependent_reorg): Revert my last
	patch.

2003-10-16  Josef Zlomek  <zlomekj@suse.cz>

	* config/s390/s390.c (s390_machine_dependent_reorg): Get rid of UNSPEC
	in notes of type NOTE_INSN_VAR_LOCATION.

Sat Oct 11 21:33:44 CEST 2003  Jan Hubicka  <jh@suse.cz>

	Merge from 3.3 branch (hammer-merge-20031011)

2003-10-10  Andreas Schwab  <schwab@suse.de>

	Merge from mainline:

	2003-05-16  Jakub Jelinek  <jakub@redhat.com>
	* config/ia64/unwind-ia64.c (uw_update_reg_address): Handle
	.save XX, r0.


2003-10-10  Josef Zlomek  <zlomekj@suse.cz>,
            Daniel Berlin <dberlin@dberlin.org>

	Josef Zlomek <zlomekj@suse.cz>
	* Makefile.in (var-tracking.o): New.
	* gengtype.c (adjust_field_rtx_def): NOTE_INSN_VAR_LOCATION was added.
	* print-rtl.c (print_rtx): Likewise.
	* rtl.c (note_insn_name): Likewise.
	* rtl.def (VAR_LOCATION): New.
	* rtl.h (NOTE_VAR_LOCATION): New.
	(NOTE_VAR_LOCATION_DECL): New.
	(NOTE_VAR_LOCATION_LOC): New.
	(enum insn_note): NOTE_INSN_VAR_LOCATION was added.
	(note_all_uses): New exported function.
	(variable_tracking_main): New exported function.
	* rtlanal.c (note_all_uses): New function.
	* timevar.def (TV_VAR_TRACKING): New.
	* toplev.c (enum dump_file_index): Added DFI_vartrack.
	(dump_file): "vartrack" was added (-dV).
	(flag_var_tracking): New.
	(f_options): "var-tracking" was added.
	(rest_of_compilation): Run variable tracking.
	(process_options): If user has not specified flag_var_tracking set it
	according to optimize, debug_info_level and debug_hooks.
	* tree.h (frame_base_decl): New.
        * var-tracking.c: New file.
	* doc/invoke.texi: Added -dV and -fvar-tracking.
	* doc/passes.texi: Added variable tracking pass.

	Daniel Berlin <dberlin@dberlin.org>
	* debug.h (struct gcc_debug_hooks): Added var_location debug hook.
	* dbxout.c (dbx_debug_hooks): Likewise.
	(xcoff_debug): Likewise.
	* debug.c (do_nothing_debug_hooks): Likewise.
	* dwarf2out.c (dwarf2_debug_hooks): Likewise.
	* dwarfout.c (dwarf_debug_hooks): Likewise.
	* sdbout.c (sdb_debug_hooks): Likewise.
	* vmsdbgout.c (vmsdbg_debug_hooks): Likewise.
	* final.c (final_scan_insn): Call var_location debug hook for each
	NOTE_INSN_VAR_LOCATION.
	* dwarf2out.c (struct gcc_debug_hooks): Call dwarf2out_begin_function
	at the beginning of function, call dwarf2out_var_location for
	NOTE_INSN_VAR_LOCATION note.
	(struct var_loc_node, struct var_loc_list_def, loclabel_num,
	decl_loc_table, decl_loc_table_allocated, decl_loc_table_in_use,
	DECL_LOC_TABLE_INCREMENT): New.
	(lookup_decl_loc): New function.
	(add_var_loc_to_decl): New function.
	(output_loc_list): Fix bug, if separate_line_info_table_in_use
	output addr instead of delta, Location list terminators should be
	DWARF2_ADDR_SIZE long.
	(output_die): Use dw2_asm_output_offset, not dw2_asm_output_delta, for
	location list labels.
	(based_loc_descr): Added parameter can_use_fbreg, DW_OP_fbreg is used
	only if can_use_fbreg.
	(mem_loc_descriptor): Added parameter can_use_fbreg, pass it to other
	functions.
	(loc_descriptor): Likewise. Process VAR_LOCATION.
	(concat_loc_descriptor): Call loc_descriptor with can_use_fbreg == true.
	(loc_descriptor_from_tree): Call mem_loc_descriptor with
	can_use_fbreg == true.
	(add_location_or_const_value_attribute): Added parameter enum
	dwarf_attribute attr, generate attribute ATTR.  Create the location list.
	(add_bound_info): Call loc_descriptor with can_use_fbreg == true.
	(gen_formal_parameter_die): Call add_location_or_const_value_attribute
	with attr == DW_AT_location.
	(gen_subprogram_die): Generate the location list for DW_AT_frame_base
	if frame_base_decl is defined and has a location list.
	(gen_variable_die): Call add_location_or_const_value_attribute with
	attr == DW_AT_location.
        (dwarf2out_var_location): New function.
        (dwarf2out_begin_function): New function.
	(dwarf2out_init): Create decl_loc_table and initialize
	decl_loc_table_allocated and decl_loc_table_in_use.

2003-10-09  Josef Zlomek  <zlomekj@suse.cz>

	Merge from mainline:

	2003-02-28  Josef Zlomek  <zlomekj@suse.cz>

		* emit-rtl.c (set_reg_attrs_for_parm): New function.
		* rtl.h (set_reg_attrs_for_parm): New exported function.
		* function.c (assign_parms): Use set_reg_attrs_for_parm instead of
		set_reg_attrs_from_mem.

2003-10-08  Josef Zlomek  <zlomekj@suse.cz>

	Backport from mainline:

	2003-01-24  Jan Hubicka  <jh@suse.cz>
		* emit-rtl.c (reg_attrs_htab): New static variable.
		(reg_attrs_htab_hash, reg_attrs_htab_eq, get_reg_attrs): New static
		functions.
		(reg_rtx): Do not maintain regno_decl.
		(gen_rtx_REG_offset, set_reg_attrs_from_mem, set_delc_rtx,
		set_mem_attrs_from_reg): New global function.
		(init_emit): Do not initialize regno_decl.
		(init_emit_once): initialize reg_attrs_htab.
		* final.c (alter_subreg): Do not replace REG by SUBREG.
		(gen_mem_expr_from_op): Improve output.
		(output_asm_operands): Likewise.
		* function.c (assign_params): Do not set REGNO_DECL.
		* function.h (struct function): Kill regno_decl.
		(REGNO_DECL): Kill.
		* gengtype.c (adjust_field_rtx_def): Handle new field of reg.
		* print_rtl.c (print_rtx): Output REG information.
		* regclass.c (reg_scan_mark_refs): Update attrs.
		* reload1.c (alter_reg): Likewise.
		* simplify_rtx.c (simplify_subreg): Likewise.
		* stmt.c (expand_decl): Likewise.
		* rtl.def (REG): Add new field.
		* rtl.h (struct reg_attrs): New.
		(rtunion_def): At rtreg.
		(X0MEMATTR): Add checking.
		(X0REGATTR, REG_ATTRS, REG_EXPR, REG_OFFSET): New macro.
		(set_reg_attrs_from_mem, set_mem_attrs_from_reg, gen_rtx_REG_offset):
		Declare.
		* tree.h (SET_DECL_RTL): Call set_decl_rtl.

2003-10-06  Josef Zlomek  <zlomekj@suse.cz>

	* cfgrtl.c (delete_insn): Decrease LABEL_NUSES for all REG_LABEL notes.

2003-10-02  Josef Zlomek  <zlomekj@suse.cz>

	* cgraph.c (cgraph_node): Use INSERT instead of 1 in
	htab_find_slot_with_hash.
	(cgraph_node_for_identifier): Use NO_INSERT.
	(cgraph_remove_node): Use NO_INSERT.
	(cgraph_varpool_node): Use INSERT.
	(cgraph_varpool_remove_node): Use NO_INSERT.
	(cgraph_varpool_node_for_identifier): Use NO_INSERT.
	(cgraph_set_decl_assembler_name): Use INSERT/NO_INSERT.

2003-09-26  Josef Zlomek  <zlomekj@suse.cz>

	Merge from mainline:

	2003-06-05  Jakub Jelinek  <jakub@redhat.com>

		* mklibgcc.in: Propagate .note.GNU-stack section if needed into
		the .hidden assembly stubs.

	2003-06-04  Jakub Jelinek  <jakub@redhat.com>

		* function.c (trampolines_created): New variable.
		(expand_function_end): Set it when doing INITIALIZE_TRAMPOLINE.
		* function.h (trampolines_created): Add.
		* config/s390/linux.h (ASM_FILE_END): Define.
		* config/alpha/linux-elf.h (ASM_FILE_END): Define.
		* config/rs6000/linux.h (ASM_FILE_END): Define.
		* config/rs6000/linux64.h (ASM_FILE_END): Define.
		* config/sparc/linux.h (ASM_FILE_END): Define.
		* config/sparc/linux64.h (ASM_FILE_END): Define.
		* config/i386/i386.c (ix86_asm_file_end): Use SUBTARGET_FILE_END.
		* config/i386/linux.h (SUBTARGET_FILE_END): Define.
		* config/i386/linux64.h (SUBTARGET_FILE_END): Define.

2003-09-24  Josef Zlomek  <zlomekj@suse.cz>

	* config/s390/s390.md (movti, movdi_31): Fix constraints.

2003-09-09  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* basic-block.h (debug_bb_n): Declaration changed.
	* cfgrtl.c (debug_bb_n): Return the dumped bb.
	* cfgloopmanip.c (prepare_for_recount_frequencies,
	recount_frequencies): Don't run when !flag_guess_branch_prob.
	* toplev.c (rest_of_compilation): Force profile estimation
	when flag_guess_branch_prob.

Tue Sep  9 20:47:09 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* regmove.c (regmove_optimize): Don't try to make src and dst match
	when they are in different modes.

Tue Sep  9 02:32:09 CEST 2003  Jan Hubicka  <jh@suse.cz>
	Backport from mainline:
	2003-06-25  H.J. Lu <hongjiu.lu@intel.com>

		* doc/extend.texi: Document new builtin functions for Intel
		Prescott New Intrunctions.

		* doc/invoke.texi: Document new command-line options, -mpni and
		-mno-pni, for Intel Prescott New Intrunctions.

		* config.gcc (extra_headers): Add pmmintrin.h for i[34567]86-*-*.

		* config/i386/i386.c (override_options): Turn on MASK_SSE2
		for -mpni. Turn on MASK_SSE for -msse2.
		(bdesc_2arg): Add PNI builtins with 2 args.
		(bdesc_1arg): Add PNI builtins with 1 arg.
		(ix86_init_mmx_sse_builtins): Handle PNI builtins.
		(ix86_expand_builtin): Likewise.

		* config/i386/i386.h (MASK_3DNOW, MASK_3DNOW_A,
		MASK_128BIT_LONG_DOUBLE, MASK_64BIT, MASK_MS_BITFIELD_LAYOUT,
		MASK_TLS_DIRECT_SEG_REFS): Renumbered.
		(TARGET_PNI): New.
		(TARGET_SWITCHES): Don't enable MASK_SSE for -msse2 here. Add
		-mpni and -mno-pni.
		(TARGET_CPU_CPP_BUILTINS): Defined __PNI__ for PNI.
		(ix86_builtins): Add PNI builtins.
		(config/i386/i386.md): Add PNI patterns.

		* config/i386/pmmintrin.h: New file.

2003-09-06  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* flow.c (allocate_reg_life_data): Reset REG_FREQ.

2003-09-04  Michael Matz  <matz@suse.de>

	* cfgloopmanip.c (recount_frequencies): Don't clear the ENTRY_BLOCK.

2003-09-02  Josef Zlomek  <zlomekj@suse.cz>

	* toplev.c (rest_of_compilation): Run loop optimizations only
	if optimize > 0.

2003-09-02  Andreas Schwab  <schwab@suse.de>

	* Makefile.in (STAGESTUFF): Use build_ext gcov_iov.
	(gcov-iov.o): Fix for canadian-cross build.
	(gcov-iov$(build_exeext)): Rename from gcov-iov$(exeext).

2003-08-30  Josef Zlomek  <zlomekj@suse.cz>

	* fold-const.c (fold) [BIT_ANDTC_EXPR]: Fix thinko.
	(fold) [(A & C) == D where D & ~C != 0]: Use BIT_AND_EXPR and
	BIT_NOT_EXPR instead of BIT_ANDTC_EXPR.
	(fold [(A | C) == D where C & ~D != 0]: Likewise.

Wed Aug 27 18:27:55 CEST 2003  Jan Hubicka  <jh@suse.cz>
	Backport from SuSE local:
	2003-01-20  Richard Henderson  <rth@redhat.com>

		* expr.h (MUST_PASS_IN_STACK): Move implementation...
		* calls.c (default_must_pass_in_stack): ... here.
	Tue Mar 18 19:06:18 CET 2003  Jan Hubicka  <jh@suse.cz>
		* i386.c (use_fast_prologue_epilogue): Remove.
		(machine_function): New fields use_fast_prologue_epilogue;
		use_fast_prologue_epilogue_initialized.
		(ix86_frame): New field save_regs-using_mov;
		(ix86_compute_frame_layout):  Decide on fast prologues;
		allocate saved registers in red zone.
		(ix86_expand_epilogue, ix86_expand_prolgoues): Obey new parameters.
	Mon Mar  3 12:01:16 CET 2003  Jan Hubicka  <jh@suse.cz>
		* i386.c (classify_argument): Obey MUST_PASS_IN_STACK.
		* i386.h (MUST_PASS_IN_STACK): Use default_must_pass_in_stack
		for x86-64.

	Mon Apr 21 15:13:51 CEST 2003  Jan Hubicka  <jh@suse.cz>
		* reload.c (find_valid_class):  Allow fixed registers to refuse
		the mode; compute real amount of choices to allocate given register.

	Sun Apr  6 17:43:49 CEST 2003  Jan Hubicka  <jh@suse.cz>
		PR target/9929
		* reload.c (find_reloads_toplev):  Remove now redundant alternative
		(find_reloads_address_1): Synchronize handling of subregs with
		find_reloads_toplev;  Always reload whole subreg when the inner
		value requires more registers.

	Zdenek Dvorak
		   * flow.c (MAX_LIVENESS_ROUNDS): New.
		   (calculate_global_regs_live): Guarantee that liveness updating will
		   terminate.
		   (update_life_info_in_dirty_blocks): Remove hack that masked the bug.

2003-08-27  Josef Zlomek  <zlomekj@suse.cz>

	* cfgcleanup.c (merge_blocks_move_successor_nojumps): Use tablejump_p.
	* ifcvt.c (find_if_block): Added 2 arguments to tablejump_p.
	* jump.c (tablejump_p): Added 2 arguments.
	* rtl.h (tablejump_p): Likewise.

2003-08-26  Josef Zlomek  <zlomekj@suse.cz>

	* cse.c (count_reg_usage): Count register usage also for
	REG_SAVE_AREA note.
	* sibcall.c (optimize_sibling_and_tail_recursive_call): Set INSNS
	after deleting dead insns and CFG cleanup.

Tue Aug 26 15:19:39 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* c-semantics.c (add_stmt): Do not touch estimated_insns.

Mon Aug 25 10:13:45 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (set_decl_assembler_name): Fix.

2003-08-20  Josef Zlomek  <zlomekj@suse.cz>

	* fold-const.c (fold): Fix bug in (A & C) == D where D & ~C != 0
	and similarly in (A | C) == D where C & ~D != 0.

Mon Aug 18 16:23:16 CEST 2003  Jan Hubicka  <jh@suse.cz>

	PR c/11639
	* i386.c (ix86_expand_carry_flag_compare): Validate operand.

Mon Aug 18 10:14:17 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (cgraph_set_decl_assembler_name): New function.
	* cgraph.h (cgraph_set_decl_assembler_name): Declare.
	* varasm.c (make_decl_rtl): Use it.

Fri Aug 15 15:18:03 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* gcse.c (find_moveable_store):  Disqualify asm instructions.

Fri Aug 15 11:13:53 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* cse.c (find_best_addr):  Fold the best address discovered.

Thu Aug 14 15:08:13 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from gcc_3_3_1_release branch.

2003-08-13  Josef Zlomek  <zlomekj@suse.cz>

	* combine.c (force_to_mode <ASHIFT>): Fix segfault.

2003-08-10  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gcse.c (load_kills_store, find_loads, store_killed_in_insn,
	store_killed_after, store_killed_before): Keep track of the correct
	dependency function to use.

2003-08-08  Jan Hubicka  <jh@suse.cz>
	    Michael Matz  <matz@suse.de>

	* i386.c (ix86_return_pops_args, x86_this_parameter,
	x86_can_output_mi_thunk): Also test for local functions.
	(pic_symbolic_operand): Test for correct form of pic operands.

2003-08-05  Josef Zlomek  <zlomekj@suse.cz>

	* gcse.c (try_replace_reg): Fix updating of note.

Sat Aug  2 13:36:56 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* decl2.c (mark_member_pointers): Rename to...
	(mark_member_pointers_and_eh_handlers): ... this one; deal with eh
	handlers
	(lower_function): Update call.

Thu Jul 31 18:52:44 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (create_edge): Fix typo.

Wed Jul 30 19:01:39 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* gcse.c (insert_store): Ignore fake edges.

2003-07-30  Michael Matz  <matz@suse.de>

	* semantics.c (finish_hander_parms): Don't segfault.

Wed Jul 30 17:38:41 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* semantics.c (finish_hander_parms): Mark typeinfo as used.

Tue Jul 29 20:10:31 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* c-common.c (handle_used_attribute): Fix.

Mon Jul 28 21:30:30 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* method.c (use_thunk): Fix.

2003-07-28  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	PR optimization/11631
	* gcse.c (store_motion): Connect infinite loops to exit.

Mon Jul 28 20:06:56 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* i386.md (memory attribute) Avoid accessing uninitialized memory
	for ishift1 type instructions.

Sun Jul 27 22:37:23 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* typeck.c (build_address): Add mark_used.

2003-07-24  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* combine.c (force_to_mode): Make x >> 8 << 8 combine.

2003-07-24  Josef Zlomek  <zlomekj@suse.cz>

	* bb-reorder.c (branch_threshold): Tweek constants.
	(exec_threshold): Tweek constants.

2003-07-23  Josef Zlomek  <zlomekj@suse.cz>

	* vrp.c (MAX_UINT_VALUE): New macro.
	(MAX_SINT_VALUE): New macro.
	(MIN_SINT_VALUE): New macro.
	(RANGE_EMPTY_P): New macro.
	(RANGE_MAKE_EMPTY): New macro.
	(range_is_empty): Deleted.
	(convert_range): New function.
	(convert_ranges): New function.
	(union_ranges): Convert type of range when possible and needed. Use
	macros.
	(ranges_differ): Check all types the ranges have. Use macros.
	(FIND_RANGE): New macro.
	(CREATE_RANGE): New macro.
	(INIT_CONSTANT_RANGE_SINT): New macro.
	(INIT_CONSTANT_RANGE_UINT): New macro.
	(process_ranges_eq): Process all types the ranges have. Use macros.
	(process_ranges_lt): Convert type of range when possible and needed.
	Use macros.
	(process_ranges_ltu): Convert type of range when possible and needed.
	Use macros.
	(compute_ranges_for_bb): Use macros.
	(edge_is_dead): Check all types the range has.

2003-07-21  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* fold-const.c (fold): Fold some comparisons of bit operations.

Sat Jul 19 16:55:02 CEST 2003  Jan Hubicka  <jh@suse.cz>
	Merge from mainline:
	Wed Jul  9 02:28:39 CEST 2003  Jan Hubicka  <jh@suse.cz>

		* decl2.c (maybe_emit_vtables): Fix marking vtables as needed in
		unit-at-a-time
	Wed Jul  2 00:36:48 CEST 2003  Jan Hubicka  <jh@suse.cz>

		* decl2.c (defer_fn): Set DECL_DEFER_OUTPUT.
		(finish-file): Do not process function with DECL_DEFER_OUTPUT clear;
		clear DECL_DEFER_OUTPUT once function is processed; avoid flags
		massaging.

		* cp-tree.h (DECL_NEEDED_P): Support unit-at-a-time
		(expand_or_defer_fn): Declare.
		(lower_function): Declare.
		* decl.c (start_cleanup_fn): Use expand_or_defer_fn.
		* decl2.c: Include cgraph.h and varpool.h
		(maybe_emit_vtables):  Make explicit instantations as needed.
		(mark_member_pointers, lower_function): New functions.
		(finish_file): Do unit-at-a-time.
		* method.c (synthesize_method): Use expand_or_defer_fn.
		* optimize.c (maybe_clone_body): Use expand_or_defer_fn.
		* parser.c (cp_parser_function_definition_after_decl): Use
		expand_or_defer_fn.
		* pt.c (instantiate_decl): Likewise.
		* semantics.c: Include cgraph.h
		(expand_or_defer_fn): Break out from ...
		(expand_body): ... here; deal with unit-at-a-time.
		* cp-lang.c (LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION,
		LANG_HOOKS_CALLGRAPH_LOWER_FUNCTION): Define.
	Tue Jun 24 13:52:34 CEST 2003  Jan Hubicka  <jh@suse.cz>

		* class.c (build_vtable): Make vtables.
		* cp-tree.h (DECL_VTABLE_OR_VTT_P): New macro.
		* decl2.c (output_vtable_inherit): Rename to ...
		(prepare_assemble_variable): ... this one; change interface.
		(maybe_emit_vtables): Do not call output_vtable_inherit.
		* cp-lang.c (LANG_HOOKS_PREPARE_ASSEMBLE_VARIABLE): Define.
		* cp-tree.h (prepare_assemble_variable): New.
	Mon Jun 23 19:41:27 CEST 2003  Jan Hubicka  <jh@suse.cz>

		* decl.c (register_dtor_fn): Mark cleanup as used.
		* decl2.c (mark_vtable_entries): Skip nops.
		* rtti.c (get_tinfo_ptr): Mark tinfo as used.
		(build_dynamic_cast_1): Likewise.
		(tinfo_base_init): Likewise.
		(emit_tinfo_decl): Likewise.

2003-07-17  Josef Zlomek  <zlomekj@suse.cz>

	PR/11559:
	* vrp.c (process_ranges_lt): If both operands are registers and their
	ranges are not constant or empty do not shorten the ranges.
	Minor speedup.
	(process_ranges_ltu): Likewise.
	(dump_operation_list): New function.
	(debug_operation_list): New function.

2003-07-14  Andreas Jaeger  <aj@suse.de>
	Merge from mainline:

	2003-07-08  Geoffrey Keating  <geoffk@apple.com>

	* expr.c (MOVE_MAX_PIECES): Move from here...
	* defaults.h (MOVE_MAX_PIECES): ... to here.

2003-07-13  Josef Zlomek  <zlomekj@suse.cz>

	* vrp.c (find_operations_1): Fix bug: OPER->DST has to be a REG.

Sat Jul 12 17:40:50 CEST 2003  Jan Hubicka  <jh@suse.cz>

	Merge from mainline:

	Sat Jul 12 03:06:01 CEST 2003  Jan Hubicka  <jh@suse.cz>
				       Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>

		* cgraph.c (cgraph_max_uid): New global variable.
		(cgraph_node): Set uid field.
		(create_edge): Keep inline flags consistent.
		(dump_cgraph): Dump more info.
		* cgraph.h (struct cgraph_local_info): Remove inline_many and
		can_inline_once; add inlinable, disgread_inline_limits, and self_insn
		(struct cgraph_global_info): Add insns, calls, cloned_times,
		will_be_output.
		(struct cgraph_node): Add uid.
		(struct cgraph_edge): Add inline_call.
		(cgraph_max_uid, cgraph_inline_p): Declare.
		* cgraph.c: Include params.h and fibheap.h
		(cgraph_mark_functions_to_inline_once): Kill.
		(INSNS_PER_CALL): New constant.
		(ncalls_inlined, nfunctions_inlined, initial_insns, overall_insns): New
		static variables.
		(cgraph_finalize_function): Do not analyze inlining.
		(cgraph_finalize_compilation_unit): Set inlining attributes.
		(cgraph_mark_functions_to_output): More consistency checks.
		(cgraph_optimize_function): Set current_function_decl to NULL.
		(cgraph_expand_function): Use new inline flags.
		(cgraph_postorder): Expand from cgraph_expand_functions.
		(INLINED_TIMES, SET_INLINED_TIMES): New macros.
		(cgraph_inlined_into, cgraph_inlined_callees,
		cgraph_estimate_size_after_inlining, cgraph_estimate_growth,
		cgraph_mark_inline, cgraph_check_inline_limits,
		cgraph_default_inline_p, cgraph_decide_inling_of_small_functions,
		cgraph_decide_inlining, cgraph_inline_p): New functions.
		* params.def (PARAM_LARGE_FUNCTION_INSNS, PARAM_LARGE_FUNCTION_GROWTH,
		PARAM_INLINE_UNIT_GROWTH): New parameters.
		* tree-inline.c (struct inline_data): New field current_decl.
		(expand_call_inline): Avoid forward declarations; use
		inlinable_function_p.
		(optimize_inline_calls): Set id.current_decl.
	Wed Jul  9 03:00:10 CEST 2003  Jan Hubicka  <jh@suse.cz>

		* cgraph.c (cgraph_node_name): New function.
		(dump_cgraph): Use it.
		* cgraph.h (cgraph_dump_file): Declare.
		(cgraph_node_name): Declare.
		* cgraphunit.c: Include timevar.h
		(cgraph_finalize_compilation_unit): Use timevar; reorganize dumps.
		(cgraph_optimize_function): Use TV_INTEGRATION.
		(cgraph_mark_local_functions): reorganize dumps.
		(cgraph_mark_functions_to_inline_once): Likewise.
		(cgraph_optimize): Likewise; use timevar.
		* timevar.def (TV_CGRAPH, TV_CGRAPHOPT): New.
		* toplev.c (dump_file_index): Add DFI_cgraph.
		(dump_file_info): Likewise.
		(cgraph_dump_file): New global variable.
		(do_compile): Open and close cgraph dump.
		* invoke.texi (-d): Document new flag; renumber.
	Wed Jul  9 02:25:39 CEST 2003  Jan Hubicka  <jh@suse.cz>

		* c-common.c (c_estimate_num_insns_1): New static function.
		(c_estimate_num_insns): New global function.
		* c-common.h (DECL_NUM_STMTS): Rename to...
		(DECL_ESTIMATED_INSNS): ... this.
		(c_estimate_num_insns): Declare.
		* c-decl.c (duplicate_decls): Use DECL_ESTIMATED_INSNS.
		* c-lang.c (LANG_HOOKS_TREE_INLINING_ESTIMATE_NUM_INSNS): New.
		* c-semantics.c (add_stmt): Do not account statements.
		* langhooks-def.h (LANG_HOOKS_TREE_INLINING_ESTIMATE_NUM_INSNS):
		New.
		* langhooks.h (lang_hooks_for_tree_inlining): Add
		estimate_num_insns
		* params.def (max-inline-insns-auto, max-inline-insns-auto): set
		to 100.
		(max-inline-insns): set to 300.
		(min-inline-insns): set to 10.
		* tree-inline.c (struct inline_data): Rename inlined_stmts to
		inlined-insns.
		(INSNS_PER_STMT): Kill.
		(inlinable_function_p): Compute and store body size.
		(expand_call_inline): Likewise.
		(optimize_inline_calls): Likewise.

2003-07-09  Josef Zlomek  <zlomekj@suse.cz>

	* vrp.c (enum oper_type): New type.
	(struct operation_def): New struct.
	(struct bb_info_def): Added element 'operation_list'.
	(operation_pool): New alloc pool.
	(compute_ranges_for_insn): Deleted.
	(find_operations_1): New function.
	(find_operations): New function.
	(compute_ranges_for_bb): Update ranges according to preprocessed RTL.
	(value_range_propagation): Alloc operation_pool, preprocess RTL.

2003-07-08  Josef Zlomek  <zlomekj@suse.cz>

	* cfgcleanup.c (merge_blocks_move_successor_nojumps): Skip
	BARRIER when finding a jump table.

2003-07-05  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopmanip.c (force_single_succ_latches): Force latch to be
	different from header.

Thu Jul  3 18:23:33 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3 branch (hammer-3_3-merge-20030703)

2003-07-02  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Makefile.in (cfgloopmanip.o): Add flags.h and obstack.h dependency.
	* basic-block.h (estimate_frequencies, counts_to_freqs,
	push_aux_obstacks, pop_aux_obstacks): Declare.
	* cfg.c (push_aux_obstacks, pop_aux_obstacks): New function.
	* cfglayout.c (cfg_layout_duplicate_bb): Don't update frequencies
	when no incoming edge is given.
	(can_copy_bbs_p, copy_bbs): New functions.
	* cfglayout.h (can_copy_bbs_p, copy_bbs): Declare.
	* cfgloop.h (struct edge_freq_info, EDGE_FREQ_INFO): New.
	(DLTHE_FLAG_UPDATE_FREQ, DLTHE_PROB_UPDATING, DLTHE_USE_WONT_EXIT):
	Removed.
	(duplicate_loop_to_header_edge): Declaration changed.
	(prepare_for_recount_frequencies, recount_frequencies): Declare.
	* cfgloopmanip.c: Include obstack.h and flags.h.
	(duplicate_loop, duplicate_subloops, copy_loops_to): Remove prob
	parameter.
	(copy_bbs, scale_loop_frequencies, scale_bbs_frequencies,
	record_exit_edges): Removed.
	(increase_edge_probability, prob_after_removal): New.
	(remove_path, loopify): Don't update frequencies.
	(can_duplicate_loop_p): Use can_copy_bbs_p.
	(duplicate_loop_to_header_edge): Don't update frequencies.  Use new
	copy_bbs.
	(split_loop_bb, loop_split_edge_with): Record info for recounting
	frequencies.
	(prepare_for_recount_frequencies, recount_frequencies): New.
	* loop-unroll.c (unroll_and_peel_loops): Use recount_frequencies.
	(peel_loop_completely, unroll_loop_constant_iterations,
	peel_loop_simple): Modified due to duplicate_loop_to_header_edge
	change.
	(unroll_loop_runtime_iterations): Modified due to
	duplicate_loop_to_header_edge change.  Record info for recounting
	frequencies.
	* loop-unswitch.c (unswitch_loops): Use recount_frequencies.
	(unswitch_loop): Modified due to duplicate_loop_to_header_edge
	change.
	* predict.c (counts_to_freqs): Made global.
	(estimate_frequencies): New.
	(estimate_bb_frequencies): Partially moved to estimate_frequencies.

	* bb-reorder.c (copy_bb_p): Avoid warning.
	* loop-unroll.c (decide_unroll_constant_iterations): Avoid warning.

2003-07-02  Ulrich Weigand  <uweigand@de.ibm.com>
            Hartmut Penner  <hpenner@de.ibm.com>

	* config/s390/s390.h (s390_tune, s390_tune_flags, s390_tune_string,
	s390_arch, s390_arch_flags, s390_arch_string): Declare.
	(enum processor_type): New type.
	(enum processor_flags, TARGET_CPU_IEEE_FLOAT, TARGET_CPU_ZARCH,
	TARGET_LONG_DISPLACEMENT): New.
	(MASK_HARD_FLOAT, MASK_BACKCHAIN, MASK_SMALL_EXEC, MASK_DEBUG_ARG,
	MASK_64BIT, MASK_MVCLE): New.
	(TARGET_HARD_FLOAT, TARGET_BACKCHAIN, TARGET_SMALL_EXEC,
	TARGET_DEBUG_ARG, TARGET_64BIT, TARGET_MVCLE): Use them
	(MASK_ZARCH, TARGET_ZARCH): New.
	(TARGET_DEFAULT): Default to TARGET_ZARCH if DEFAULT_TARGET_64BIT.
	(TARGET_SWITCHES): Add -mesa and -mzarch.
	(TARGET_OPTIONS): Define.
	* config/s390/s390.c (s390_tune, s390_tune_flags, s390_tune_string,
	s390_arch, s390_arch_flags, s390_arch_string): New variables.
	(override_options): Decode -march and -mtune flags.  Fill in
	s390_tune* and s390_arch* global variables.
	* config/s390/linux.h (ASM_DEFAULT_ABI_SPEC, ASM_DEFAULT_MODE_SPEC,
	ASM_DEFAULT_ARCH_SPEC): New macros.
	(EXTRA_SPECS): Add them.
	(ASM_SPEC): Pass architecture mode and cpu architecture to assembler.
	* config/s390/s390.md (attr "cpu"): New attribute.
	* config.gcc [s390*-*-*]: Support --with-cpu configure option.
	* doc/invoke.texi (-mesa, -mzarch, -march, -mtune): Document.

	* config/s390/2064.md: New file.
	* config/s390/2084.md: New file.
	* config/s390/s390.md: Include them.
	* config/s390/s390.c (s390_issue_rate): New function.
	(TARGET_SCHED_ISSUE_RATE): Define.
	(s390_use_dfa_pipeline_interface): New function.
	(TARGET_SCHED_USE_DFA_PIPELINE_INTERFACE): Define.
	(s390_first_cycle_multipass_dfa_lookahead): New function.
	(TARGET_SCHED_FIRST_CYCLE_MULTIPASS_DFA_LOOKAHEAD): Define.
	(s390_sched_reorder2): New function.
	(TARGET_SCHED_REORDER2): Define.
	(s390_safe_attr_type): New function.
	(addr_generation_dependency_p): Use it.
	(s390_adjust_cost, s390_adjust_priority): Adapt to DFA scheduler.
	Remove DEBUG_SCHED support.
	(s390_agen_dep_p): New function.
	* config/s390/s390-protos.h: (s390_agen_dep_p): Declare.
	* config/s390/s390.md (attr "type"): Add "larl", "fsimpd", "fsimps",
	"floadd", "floads", "fstored", "fstores", "fmuld", "fmuls", "fdivd",
	"fdivs", "ftoi", "itof", "fsqrtd", "fsqrts".  Remove "lmul", "fmul",
	"ldiv", and "fdiv".
	(attr "atype"): Add "agen", remove "mem".
	(function units): Adapt to attr "type" changes.
	(all insns): Adapt "type" and "atype" where appropriate.

	* config/s390/s390.c (s390_extra_constraint): New function.
	* config/s390/s390-protos.h (s390_extra_constraint): Declare it.
	* config/s390/s390.h (EXTRA_CONSTRAINT): Use it.
	* config/s390/s390.c (q_constraint): Remove.
	* config/s390/s390-protos.h (q_constraint): Likewise.
	* config/s390/s390.h (EXTRA_MEMORY_CONSTRAINT): Add 'R', 'S', 'T'.
	(EXTRA_ADDRESS_CONSTRAINT): Define.
	* config/s390/s390.c (larl_operand): Refuse out-of-range operands.
	(DISP_IN_RANGE, s390_short_displacement): New.
	(legitimate_reload_operand_p): Support long displacements.
	(s390_decompose_address): Likewise.
	(legitimize_pic_address): Likewise.
	(legitimize_address): Likewise.
	(s390_fixup_clobbered_return_reg): Likewise.
	(s390_emit_prologue, s390_emit_epilogue): Likewise.
	(s390_output_mi_thunk): Likewise.
	* config/s390/s390.md (attr "op_type"): Add "RXY", "RSY", "SIY".
	(attr "atype", attr "length"): Add defaults for new op_types.
	(all insns): Change op_type attribute where appropriate.
	("*movdi_lay", "*movsi_lay", "*extendqidi2", "*extendqisi2"): New insns.
	("*tmqi_ext", "*tmdi_mem", "*tmsi_mem", "*tmhi_mem", *tmqi_mem",
	"*tstsi", "*tstsi_cconly", "*tsthiCCT", "*tsthiCCT_cconly",
	"*tsthi", "*tsthi_cconly", "*tstqiCCT", "*tstqiCCT_cconly",
	"*tstqi", "*tstqi_cconly", "*cmpsi_ccs_sign", "*cmpsi_ccs",
	"*cmpsi_ccu", "*cmphi_ccu", "*cmpqi_ccu", "*cli",
	"movti", "*movdi_64", "*movdi_31", "*movsi", "movhi", "movqi_64",
	"movqi", "*movstrictqi", "*movstricthi", "movstrictsi",
	"*movdf_64", "*movdf_31", "*movsf",
	"*load_multiple_si", "*store_multiple_di",
	"*sethighqisi", "*sethighhisi", "*sethighqidi_31", "*extendhisi2",
	"*la_64", "*la_31", "*la_31_and", "force_la_31",
	"*addsi3_carry1_cc", *addsi3_carry1_cconly",
	"*addsi3_carry2_cc", *addsi3_carry2_cconly",
	"*addsi3_cc", "*addsi3_cconly", "*addsi3_cconly2",
	"*addsi3_sign", "*addsi3_sub", "addsi3",
	"*subsi3_borrow_cc", "*subsi3_borrow_cconly", "*subsi3_cc",
	"*subsi3_cconly", "*subsi3_sign", "*subsi3_sub", "subsi3",
	"mulsi3"
	"*andsi3_cc", "*andsi3_cconly", "andsi3",
	"*andqi3_ss", "*andqi3_ss_inv",
	"*iorsi3_cc", "*iorsi3_cconly", "iorsi3",
	"*iorqi3_ss", "*iorqi3_ss_inv",
	"*xorsi3_cc", "*xorsi3_cconly", "xorsi3",
	"*xorqi3_ss", "*xorqi3_ss_inv",
	"*tls_load_31"): Add alternatives for long-displacement instructions.
	("*cmpdf_ccs", "*cmpdf_ccs_ibm", "*cmpsf_ccs", "*cmpsf_ccs_ibm",
	"*load_multiple_di", "*store_multiple_di",
	"*sethighqidi_64", "*zero_extendhisi2_31",
	"truncdfsf2_ibm", "extendsfdf2_ieee", "extendsfdf2_ibm",
	"adddf3", "*adddf3", "*adddf3_ibm",
	"addsf3", "*addsf3", "*addsf3_ibm",
	"subdf3", "*subdf3", "*subdf3_ibm",
	"subsf3", "*subsf3", "*subsf3_ibm",
	"mulsi_6432", "divmoddisi3",
	"muldf3", "*muldf3", "*muldf3_ibm",
	"mulsf3", "*mulsf3", "*mulsf3_ibm",
	"divdf3", "*divdf3", "*divdf3_ibm",
	"divsf3", "div*sf3", "*divsf3_ibm",
	"sqrtdf2", "sqrtsf2",
	"*cjump_long", "*icjump_long", "indirect_jump", "casesi_jump",
	"*doloop_si_long", "*doloop_di_long", "bas_64", "bas_31",
	"bas_r_64", "bas_r_31", "bas_tls_31", "bas_tls_64"): Adapt memory
	and address constraints for instructions that do not accept long
	displacements.

2003-06-29  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop.c (count_one_set): Fix detection of registers set in more
	than one basic block.

2003-06-27  Josef Zlomek  <zlomekj@suse.cz>

	* bb-reorder.c (find_traces_1_round): Do not send basic block to next
	round when we are in the last round.

2003-06-26  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* basic-block.h (RDIV): New.
	(EDGE_FREQUENCY): Use it.
	* cfgloopmanip.c (remove_path): Update frequencies on the other
	path.
	(scale_bbs_frequencies): Use RDIV.
	(RDIV): Moved to basic-block.h.

Wed Jun 25 22:22:15 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* gcse.c (local_variable_p): Proper fix.

Wed Jun 25 21:22:22 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* gcse.c (local_variable_p): Temporarily disable.

2003-06-25  Josef Zlomek  <zlomekj@suse.cz>

	* dwarf2out.c (gen_field_die): Return if type of decl is error mark.

Tue Jun 24 23:57:03 CEST 2003  Jan Hubicka  <jh@suse.cz>

	Merge from 3.3 branch (hammer-3_3-merge-20030624)

2003-06-21  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	Merge from mainline:
		* gcse.c (struct ls_expr): Added pattern_regs field.
		(ldst_entry): Initialize it.
		(extract_mentioned_regs, extract_mentioned_regs_helper): New.
		(store_ops_ok): Use regs precomputed by them.
		(find_loads, store_killed_in_insn, load_kills_store): Change return
		type to bool.
		(store_killed_before, store_killed_after): Take position of register
		set in account.
		(reg_set_info): Store position of the setter.
		(gcse_main): Enable store motion.
		(mems_conflict_for_gcse_p): Enable load motion of non-symbol mems.
		(pre_insert_copy_insn, update_ld_motion_stores, insert_store): Prevent rtl
		sharing.
		(simple_mem): Enable store motion of non-symbol mems.
		(regvec): Type changed.
		(LAST_AVAIL_CHECK_FAILURE): New.
		(compute_store_table_current_insn): New.
		(build_store_vectors): Computation of availability and anticipatability
		moved ...
		(compute_store_table, find_moveable_store): ... here.
		(delete_store): Remove senseless comment.
		(store_motion): Reorganize.
	* gcse.c (local_variable_p): New.

Sat Jun 21 20:43:52 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* combine.c (simplify_if_then_else): Do proper casting in the last
	transformation.

Fri Jun 20 18:58:58 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* gcse.c (pre_insert_copy_insn): Deal nicely with parallels.

2003-06-19  Josef Zlomek  <zlomekj@suse.cz>

	* vrp.c (redirect_edges): Do not redirect if some edge points to
	EXIT_BLOCK.
	(dump_range): Use HOST_WIDE_INT_PRINT_DEC and
	HOST_WIDE_INT_PRINT_UNSIGNED.

2003-06-19  Josef Zlomek  <zlomekj@suse.cz>

	* vrp.c: New file.
	* Makefile.in (vrp.o): Added.
	* toplev.c (enum dump_file_index): Added DFI_vrp.
	(struct dump_file_info): Added vrp.
	(flag_vrp): New flag.
	(lang_independent_options): New flag.
	(rest_of_compilation): Run value range propagation.
	(parse_options_and_default_flags): Run VRP at -O2.
	* timevar.def (TV_VRP): Added.
	* rtl.h (value_range_propagation): New extern function.
	* doc/invoke.texi: Added -dV and -fvalue-range-propagation.
	* doc/passes.texi: Added value range propagation pass.

	Backport from mainline:

	2003-05-12  Neil Booth  <neil@daikokuya.co.uk>

		* alloc-pool.c (last_id): Put in ENABLE_CHECKING guards.

	2003-05-12  Josef Zlomek  <zlomekj@suse.cz>

		* alloc-pool.h (ALLOC_POOL_ID_TYPE): New type.
		(struct alloc_pool_def): New element 'id'.
		* alloc-pool.c (fancy_abort): Extern function prototype.
		(abort): Macro which uses fancy_abort.
		(struct allocation_object_def): New structure.
		(ALLOCATION_OBJECT_PTR_FROM_USER_PTR): New macro.
		(USER_PTR_FROM_ALLOCATION_OBJECT_PTR): New macro.
		(last_id): New variable.
		(create_alloc_pool): Add the offset of u.data to size of element,
		increase and use last_id.
		(free_alloc_pool): Do the checking only when ENABLE_CHECKING.
		(pool_alloc): Likewise. Set ID for elements.
		(pool_free): Check whether the PTR was allocated from POOL.

	2002-12-18  Daniel Berlin  <dberlin@dberlin.org>

		* Makefile.in (OBJS): Add alloc-pool.o
		(alloc-pool.o): New object.
		* alloc-pool.c: New file.
		* alloc-pool.h: New file.

2003-06-18  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Makefile.in (vpt.o): Add flags.h, $(RECOG_H), insn-config.h
	and $(OPTABS_H) dependency.
	* cfgloopanal.c (count_strange_loop_iterations): New static function.
	(constant_iterations, count_loop_iterations, simple_loop_exit_p):
	Handle strange loops.
	* flags.h (flag_value_profile_transformations,
	flag_speculative_prefetching): Declare.
	* gcov-io.h (GCOV_TAG_CONST_DELTA_HISTOGRAMS): New.
	(const_delta_histograms_merger): New function.
	(profile_merger_for_tag): Add GCOV_TAG_CONST_DELTA_HISTOGRAMS merger.
	* profile.c (TAG_INDEX, value_tags, N_VALUE_TAGS,
	value_histograms_label): New.
	(gen_const_delta_profiler, label_for_tag): New profiler.
	(instrument_values, compute_value_histograms, branch_prob,
	init_branch_prob): Make more generic.
	* profile.h (MAX_COUNTER_SECTIONS): Change to 5.
	* toplev.c (flag_speculative_prefetching, lang_independent_options,
	process_options): New flag.
	(rest_of_compilation): Add speculative prefetching.
	* vpt.c: Include flags.h, insn-config.h, recog.h and optabs.h.
	(insn_divmod_values_to_profile, insn_prefetch_values_to_profile,
	find_mem_reference_1, find_mem_reference_2, find_mem_reference,
	gen_speculative_prefetch, speculative_prefetching_transform): New
	functions.
	(insn_values_to_profile): Use insn_divmod_values_to_profile and
	insn_prefetch_values_to_profile.
	(find_values_to_profile, value_profile_transformations): Add
	speculative prefetching.
	* vpt.h (HIST_TYPE_CONST_DELTA): New.

Wed Jun 11 20:53:03 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* Merge (hammer-3_3-merge-20030611)

2003-06-11  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopanal.c (variable_initial_value): Fix.

Fri Jun  6 12:08:36 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* cfgcleanup.c (cleanup_cfg):  Remove dead code even before sibcall.
	* cse.c (count_reg_usage): Look into call placeholders.
	(insn_live_p): Call placeholders are always live.
	(optimize_sibling_and_tail_recursive_call): Delete trivially dead insns.

Thu Jun  5 22:16:53 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* profile.c (build_function_info_value):  Fix.

Thu Jun  5 18:20:40 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* function.c (FLOOR_ROUND, CEIL_ROUND): Fix.
	* i386.md (gen_pro_epilogue_adjust_stack): Deal with gigantic stack frames.
	(pro_epilogue_adjust_stack_rex64_2): New pattern

Thu Jun  5 14:29:16 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* expr.h (assemble_static_space): Update prototype.
	* output.h (assemble_zeros, output_constant): Likewise.
	* elfos.h (ASM_OUTPUT_SKIP, ASM_OUTPUT_COMMON): Make it 64bit clean
	* alpha.h (ASM_OUTPUT_SKIP, ASM_OUTPUT_COMMON, ASK_OUTPUT_LOCAL): Make
	it 64bit clean.
	* elf.h (ASM_OTUPUT_SKIP): Likewise.
	* unicosmk.h (ASM_OUTPUT_SKIP, ASM_OUTPUT_COMM): Likewise.
	* arm.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL, ASM_OUTPUT_SKIP):
	Expect HOST_WIDE_INT operand.
	* aout.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL, ASM_OUTPUT_SKIP):
	Expect HOST_WIDE_INT operand.
	* unknown-elf.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL, ASM_OUTPUT_SKIP):
	Expect HOST_WIDE_INT operand.
	* avr.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_SKIP): Expect
	HOST_WIDE_INT operand.
	* c4x.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL, ASM_OUTPUT_SKIP,
	ASM_OUTPUT_BSS): Expect HOST_WIDE_INT operand.
	* aout.h (ASM_OTUPUT_SKIP): Likewise.
	* cris.h (ASM_OTUPUT_SKIP, ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL): Likewise.
	* darwin.h (ASM_OTUPUT_SKIP, ASM_OUTPUT_COMMON): Likewise.
	* dsp16xx.h (ASM_OTUPUT_SKIP): Likewise.
	* frv.h (ASM_OTUPUT_SKIP): Likewise.
	* h8300.h (ASM_OTUPUT_SKIP, ASM_OUTPUT_LOCAL): Likewise.
	* 370.h (ASM_OTUPUT_SKIP, ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL):
	Make it 64bit
	clean.
	* att.h (ASM_OUTPUT_SKIP): Expect HOST_WIDE_INT operand.
	* bsd.h (ASM_OUTPUT_SKIP, ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL):
	Make it 64bit clean.
	* darwin.h (ASM_OUTPUT_SKIP): Make it 64bit clean..
	* sco5.h (ASM_OUTPUT_SKIP, ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL): Expect
	HOST_WIDE_INT operand
	* svr3gas.h (ASM_OUTPUT_SKIP, ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL):
	Expect HOST_WIDE_INT operand
	* sysv3.h (ASM_OUTPUT_SKIP): Expect HOST_WIDE_INT operand
	* i960.h (ASM_OUTPUT_SKIP, ASM_OUTPUT_COMMON,
	ASM_OUTPUT_ALIGNED_LOCAL): Expect HOST_WIDE_INT operand
	* ip2k.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL, ASM_OUTPUT_SKIP):
	Likewise.
	* m32r.h (ASM_OUTPUT_COMMON): Likewise.
	* 3b1.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL, ASM_OUTPUT_SKIP):
	Likewise.
	* amix.h (ASM_OUTPUT_ALIGNED_LOCAL): Likewise.
	* crds.h (ASM_OUTPUT_SKIP, ASM_OUTPUT_ALIGNED_LOCAL): Likewise.
	* hp320.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL,
	ASM_OUTPUT_SKIP): Likewise.
	* m68k.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL, ASM_OUTPUT_SKIP):
	Likewise.
	* m68kelf.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL,
	ASM_OUTPUT_SKIP): Likewise.
	* m68kv4.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL,
	ASM_OUTPUT_SKIP): Likewise.
	* mot3300.h (ASM_OUTPUT_LOCAL, ASM_OUTPUT_SKIP): Likewise.
	* netbsd-elf.h (ASM_OUTPUT_LOCAL, ASM_OUTPUT_COMMON,
	ASM_OUTPUT_SKIP): Likewise.
	* sgs.h (ASM_OUTPUT_SKIP): Likewise.
	* tower-as.h (ASM_OUTPUT_LOCAL, ASM_OUTPUT_COMMON,
	ASM_OUTPUT_SKIP): Likewise.
	* m88k.h (ASM_OUTPUT_LOCAL, ASM_OUTPUT_COMMON, ASM_OUTPUT_SKIP):
	Likewise.
	* mcore.h (ASM_OUTPUT_LOCAL, ASM_OUTPUT_BSS, ASM_OUTPUT_SKIP): Likewise.
	* iris.h (ASM_OUTPUT_LOCAL): Likewise.
	* mips.h (ASM_OUTPUT_LOCAL, ASM_OUTPUT_SKIP): Likewise.
	* ns32k.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL,
	ASM_OUTPUT_SKIP): Make it 64bit clean.
	* pa-pro-end.h (ASM_OUTPUT_LOCAL, ASM_OUTPUT_ALIGNED_LOCAL):
	Make it 64bit clean.
	* pa.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL, ASM_OUTPUT_ALIGNED_LOCAL,
	ASM_OUTPUT_SKIP): Make it 64bit clean.
	* hpux.h (ASM_OUTPUT_LOCAL, ASM_OUTPUT_ALIGNED_LOCAL): Make it
	64bit clean.
	* romp.h (ASM_OUTPUT_SKIP, ASM_OUTPUT_LOCAL, ASM_OUTPUT_COMMON): Expect
	HOST_WIDE_INT argument
	* s390.h (ASM_OUTPUT_SKIP): Expect HOST_WIDE_INT argument.
	* sh.h (ASM_OUTPUT_SKIP, ASM_OUTPUT_LOCAL, ASM_OUTPUT_COMMON): Expect
	HOST_WIDE_INT argument
	* sol2.h (ASM_OUTPUT_SKIP): HOST_WIDE_INT argument
	* sparc.h (ASM_OUTPUT_SKIP, ASM_OUTPUT_COMMON): HOST_WIDE_INT argument
	* svr3.h (ASM_OUTPUT_SKIP): HOST_WIDE_INT argument
	* vax.h (ASM_OUTPUT_SKIP, ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL):
	HOST_WIDE_INT argument
	* vaxv.h (ASM_OUTPUT_LOCAL): HOST_WIDE_INT argument
	* xtensa.h (ASM_OUTPUT_LOCAL): HOST_WIDE_INT argument
	* varasm.c (asm_output_bss, asm_output_aligned_bss,
	asm_emit_uninitialized, assemble_zeros, assemble_static_space):
	HOST_WIDE_INT argument

Thu Jun  5 11:40:30 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* combine.c (simplify_if_then_else): (IF_THEN_ELSE (NE REG 0) (0) (8))
	is REG for nonzero_bits (REG) == 8.

2003-06-03  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* config/i386.c (k8_avoid_jump_misspredicts): Dump to rtl_dump_file
	instead of stderr.

2003-06-03  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopanal.c (num_loop_insns): Count only real insns.

Fri May 23 21:03:14 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* ifcvt.c (unshare_insns):  New static function.
	(noce_try_store_flag, noce_try_store_flag_inc,
	 noce_try_store_flag_mask, noce_try_cmove,
	 noce_try_cmove_arith, noce_try_minmax, noce_try_abs,
	 noce_process_if_block): Use it.

Tue May 20 12:12:42 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (gcc_3_3_release)

Sat May 10 21:17:37 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* fold-const.c (fold):  Fix fp compare optimization.

Thu May  1 11:39:07 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20030430)

Sun Apr 20 18:25:48 CEST 2003  Jan Hubicka  <jH@suse.cz>

	Backport Richard Henderson's from the mainline:

        * emit-rtl.c (try_split): Handle 1-1 splits of call insns properly.

        * config/ia64/ia64.c (TARGET_FUNCTION_OK_FOR_SIBCALL): New.
        (ia64_gp_save_reg): Remove.
        (struct ia64_frame_info): Move to the beginning of the file;
        add reg_save_gp.
        (ia64_expand_call): Rearrange for new call patterns.
        (ia64_reload_gp): New.
        (ia64_split_call): New.
        (ia64_compute_frame_size): Allocate reg_save_gp.
        (ia64_expand_prologue): Save reg_save_gp.
        (ia64_expand_epilogue): Don't restore gp.
        (ia64_hard_regno_rename_ok): Remove R4 hack.
        (ia64_function_ok_for_sibcall): New.
        (ia64_output_mi_thunk): Set reload_completed, no_new_pseudos;
        call try_split on sibcall pattern.
        * config/ia64/ia64-protos.h: Update.
        * config/ia64/ia64.md (call_nogp, call_value_nogp, sibcall_nogp):
        Rename from nopic versions.  Confiscate 2nd argument to call as
        a marker.
        (call_pic, call_value_pic, sibcall_pic): Remove.
        (call_gp, call_value_gp, sibcall_gp): New.
        (builtin_setjmp_setup): Remove.
        (builtin_setjmp_receiver): Call ia64_reload_gp.

Sun Apr 20 17:42:23 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20030421)

Mon Apr 14 22:40:51 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20030414)

Fri Apr 11 23:58:08 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20030411)

Mon Apr 10 21:19:38 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* profile.c (compute_branch_probabilities): Be even more permisive.

Mon Apr  7 21:49:58 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20030407)

Mon Apr  7 21:19:38 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* profile.c (compute_branch_probabilities): Accept negative counts after calls.
	(branch_prob): Do not add extra edges for setjmp.

Sun Apr  6 19:26:32 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* Makefile.in:  Use --static when bulding profilestage
	* config/i386/i386.c: Avoid warnings.

Thu Apr  3 09:47:28 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* cfgrtl.c (update_bb_for_insn): Do not set block for barriers.

Wed Apr  2 23:57:03 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* install.tex: Document profiledbootstrap.

	* Makefile.in (profiledbootstrap): New target

	* Makefile.in (clean, distclean): Kill new stages
	(POSTSTAGE1_FLAGS_TO_PASS): Break from ...
	(STAGE2_FLAGS_TO_PASS): ... this one.
	(STAGEPROFILE_FLAGS_TO_PASS, STAGEFEEDBACK_FLAGS_TO_PASS): New.
	(stage[2-4]_build): Add POSTSTAGE1_FLAGS_TO_PASS.
	(stageprofile_build, stageprofile_copy, stagefeedback_build,
	stagefeedback_copy): New.
	(restageprofile, restagefeedback, stageprofile-start,
	stageprofile, stagefeedback-start): Likewise.

	* Make-lang.in:  Add support for stageprofile and stagefeedback

Wed Apr  2 23:54:55 CEST 2003  Jan Hubicka  <jh@suse.cz>

	* i386.md:  Temporarily replace rep ; ret by nop ; ret.

Fri Mar 28 12:37:47 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20030328)

Wed Mar 26 00:37:13 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.md: New splitters to canonicalize order of arguments for AND.

Tue Mar 25 23:13:49 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.md (test patterns):  Allow memory operand in operand1.

Tue Mar 25 20:57:40 CET 2003  Jan Hubicka <jh@suse.cz>

	* i386.h (RTX_COST): Fix for -fpic.
	* i386.c (k8_avoid_jump_misspredicts): Fix.

Mon Mar 24 00:07:19 CET 2003  Jan Hubicka  <jh@suse.cz.

	* i386.md (align): New pattern.
	* i386.c (min_insn_size, k8_avoid_jump_misspredicts): New functions.

Fri Mar 21 19:35:07 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline:
	Richard Henderson
		* Makefile.in (cfglayout.o): Depend on TARGET_H.
		* cfglayout.c: Include target.h.
		(cfg_layout_can_duplicate_bb_p): Check targetm.cannot_copy_insn_p.
		* target-def.h (TARGET_CANNOT_COPY_INSN_P): New.
		* target.h (struct gcc_target): Add cannot_copy_insn_p.

		* config/alpha/alpha.c (alpha_cannot_copy_insn_p): New.
		(TARGET_CANNOT_COPY_INSN_P): New.
		(override_options): Revert 2003-02-08 hack.

Thu Mar 20 13:36:00 CET 2003  Jan Hubicka  <jh@suse.cz>

	* callgraph.c (known_fns): make extern.
	* function.c (known_fns): make global; fix GTY marker.

Tue Mar 18 21:05:45 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (hammer-3_3-merge-20030318)

Mon Mar 17 15:02:17 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.md (cvtts?2si peep2): New.

Wed Mar 12 09:40:47 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge form mainline (hammer-3_3-merge-20030212)

Mon Mar 10 15:43:30 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.c (x86_machine_dependent_reorg):  Replace rep instead of padding.
	* i386.md (UNSPEC_REP): New constant.
	(return_internal_long): New pattern.

Mon Mar 10 00:13:18 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge form mainline (hammer-3_3-merge-20030309)

Sun Mar  9 12:08:18 CET 2003  Jan Hubicka  <jh@suse.cz>

	* toplev.c (rest_of_compilation):  Do split insns after post-reload
	copy propagation.

	* toplev.c (rest_of_compilation): re-enable insn splitting after
	reg-stack.

	* callgraph.c (known_fns): Declare.
	(cgraph_node): Add the decl into varray.
	* function.c (known_fns): New static variable.

Fri Mar  7 12:55:23 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.c (ix86_expand_vector_move): Do not crash when offloading
	to memory in PIC mode.

2003-03-05  Michael Matz  <matz@suse.de>

	* unwind.h: Add the GPL exception.
	* Makefile.in (USER_H): Add unwind.h.

Tue Mar  4 23:45:34 CET 2003  Jan Hubicka   <jh@suse.cz>

	Merge from 3.3-branch (hammer-3_3-merge-20030304)

Mon Mar  3 16:35:42 CET 2003  Jan Hubicka  <jh@suse.cz>

	Merge from mainline:
	2003-02-24  Jeff Law  <law@redhat.com>

		* i386.md (testdi_1_rex64): Discourage reload from using the %eax
		alternative.
		(testsi_1, testhi_1, testqi_1): Likewise.

	2003-02-22  Josef Zlomek  <zlomekj@suse.cz>

		* config/i386/i386.md: Use gen_lowpart instead of gen_rtx_REG
		for copying a register.

	Wed Feb 19 17:22:51 CET 2003  Jan Hubicka  <jh@suse.cz>

		* i386.md (movsfcc_1, movdfcc_1): Fix constrains.

2003-03-02  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* profile.c (compute_value_histograms): Fix.
	* toplev.c (dump_file): Choose usable flag for vpt dump.

Thu Feb 27 12:31:33 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20030226)

Wed Feb 26 19:20:55 CET 2003  Jan Hubicka  <jh@suse.cz>

	* optabs.c (expand_fix): Do not widen the input operand.

Mon Feb 24 22:14:07 CET 2003  Jan Hubicka  <jh@suse.cz>

	* combine.c (simplify_shift_const):  Simplify few special cases
	into constants.

Sat Feb 22 23:04:10 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.md (movabs*): Restrict to first alternative
	* i386.c (x86_64_movabs_operand): Prohibit non-immediate operands.

Sat Feb 22 22:14:09 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20030222)

Sat Feb 22 20:12:57 CET 2003  Jan Hubicka  <jh@suse.cz>

	* expmed.c (expand_divmod): Undo sign extensions for unsigned operands

Fri Feb 21 23:42:59 CET 2003  Jan Hubicka  <jh@suse.cz>

	* fold-const.c (fold): Fix typo.

2003-02-22  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gcov-io.h (GCOV_TAG_SAME_VALUE_HISTOGRAMS): New section.
	(gcov_read_counter): Add parameter.
	(merger_function, same_value_histograms_merger, profile_merger_for_tag):
	New.
	(gcov_read_summary): Add parameter to gcov_read_counter call.
	* gcov.c (read_count_file): Ditto.
	* libgcc.c (gcov_exit): Support profile merging hooks.
	* profile.c (same_value_histograms_label): New.
	(get_exec_counts): Add parameter to gcov_read_counter call.
	(get_histogram_counts): Support profile merging hooks.
	(instrument_values, compute_value_histograms): Place same value
	histograms into own section.
	(branch_prob): Call allocate_reg_info after find_values_to_profile.
	(init_branch_prob): Create same_value_histograms_label.
	(label_for_tag): Return the label.
	* profile.h (MAX_COUNTER_SECTIONS): Increase.

	* loop.c (loop_optimize): Avoid warning.
	* regclass.c (cannot_change_mode_set_regs): Ditto.

Thu Feb 20 16:27:56 CET 2003  Jan Hubicka  <jh@suse.cz>

	* c-typeck.c (build_c_cast):  Fold constant variables into
	initial values.

Thu Feb 20 16:25:49 CET 2003  Jan Hubicka  <jh@suse.cz>

	* expr.c (emit_group_store):  Fix crash when converting single
	register into complex register.

Thu Feb 20 14:36:55 CET 2003  Jan Hubicka  <jh@suse.cz>

	* gcc.c-torture/execute/20020720-1.x: XFAIL for x86-64.

Wed Feb 19 17:18:06 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.md (movsfcc_1, movdfcc_1): Fix constrains.

Wed Feb 19 17:09:48 CET 2003  Jan Hubicka  <jh@suse.cz>

	* toplev.c (rest_of_compilation): Do unswitching before tracing.

Wed Feb 19 14:41:02 CET 2003  Jan Hubicka  <jh@suse.cz>

	* gcc.c-torture/execute/990208-1.c:  Add noinline attributes as needed.
	* gcc.c-torture/execute/eeprof-1.c:  Likewise.
	* gcc.c-torture/execute/stdio-opt-*.c: Likewise.
	* gcc.c-torture/execute/string-opt-*.c: Likewise.

Wed Feb 19 14:25:48 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.md (cosxf2):  fix conditional.

Sun Feb 16 22:38:39 CET 2003  Jan Hubicka  <jh@suse.cz>

	* toplev.c: Rename -funit-at-time to -funit-at-a-time
	* doc/invoke.texi: Likewise.

Sun Feb 16 19:55:18 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3 branch (hammer-3_3-merge-20030216)

2003-02-13  Josef Zlomek  <zlomekj@suse.cz>

	* cfgcleanup.c (outgoing_edges_match): When there is single outgoing
	edge and block ends with a jump insn it must be simple jump.

Wed Feb 12 16:58:29 CET 2003  Jan Hubicka  <jh@suse.cz>

	* predict.c (estimate_probability):  Fix roundoff error.

Tue Feb 11 19:07:08 CET 2003  Jan Hubicka  <jh@suse.cz>

	* combine.c (combine_simplify_rtx): Fix folding of
	nested float_truncates.

Tue Feb 11 10:04:33 CET 2003  Jan Hubicka  <jh@suse.cz>

	* predict.c (choose_function_section): Choose sections correctly.

Mon Feb 10 21:18:38 CET 2003  Jan Hubicka  <jh@suse.cz>

	* c-decl.c (c_expand_deferred_function):  Optimize inlining.

Mon Feb 10 11:38:17 CET 2003  Jan Hubicka  <jh@suse.cz>

	* combine.c (combine_simplify_rtx): Synchronize with mainline.

Sun Feb  9 19:21:35 CET 2003  Jan Hubicka  <jh@suse.cz>

	* combine.c (combine_simplify_rtx): Simplify using
	(float_truncate (float x)) is (float x)
	(float_extend (float_extend x)) is (float_extend x).

	* i386.md (floathi*): Deal with SSE.

Sun Feb  9 17:57:46 CET 2003  Jan Hubicka  <jh@suse.cz>

	* toplev.c (parse_options_and_default_flags):  Enable -funswitch-loops
	at -O3.

Sat Feb  8 02:03:22 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.md (ahi?v*3): Set third operand type to TImode.
	* i386.c (ix86_expand_binop_builtin): Extend operand when needed.

	* simplify-rtx.c (simplify_subreg): Fix conversion from vector into
	integer mode.

	* rtl.def (VEC_MERGE, VEC_SELECT, VEC_CONCAT, VEC_DUPLICATE):
	Change code so they are arithmetic expressions now.
	* simplify-rtx.c (simplify_unary_operation, simplify_binary_operation,
	simplify_ternary_operation): Deal with VEC_* expressions.

	* i386.md (vmaskcmp, pinsrw, movd patterns):  Fix RTL representation.

Fri Feb  7 22:24:20 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.md (sse2_nandv2di3):  Fix.

	* i386.md (movdi_rex64_1): Fix mmx<->int move opcode.

Fri Feb  7 12:59:54 CET 2003  Jan Hubicka  <jh@suse.cz>

	* passes.texi (web construction):  Document.
	* invoke.texi (-O3): Document that -fweb is enabled.

	* combine.c (combine_simplify_rtx):  Use reversed_comparison_code_parts.

	* toplev.c (rest_of_compilation): Move -fweb past new loop.
	(parse_options_and_default_flags):  Enable -fweb only at -O3.

	Merge from mainline

	Thu Feb  6 00:18:38 CET 2003  Jan Hubicka  <jh@suse.cz>

		* i386.c (x86_inter_unit_moves): New variable.
		(ix86_secondary_memory_needed): Fix 64bit case, honor
		TARGET_INTER_UNIT_MOVES
		* i386.h (x86_inter_unit_moves): Declare.
		(TARGET_INTER_UNIT_MOVES): New macro.
		* i386.md (movsi_1): Cleanup constraints; disable
		when not doing inter-unit moves.
		(movsi_1_nointernunit): New.
		(movdi_1_rex64): Fix constraints; deal with SSE->GPR moves.
		(movdi_1_rex64_nointerunit): New.
		(mivsf_1): disable when not doing inter-unit moves.
		(movsf_1_nointerunit): New.

	Mon Feb  3 16:01:17 CET 2003  Jan Hubicka  <jh@suse.cz>

		* i386.c (ix86_expand_int_movcc):  Fix setcc sign bit case.

	Tue Jan 28 12:15:13 CET 2003  Jan Hubicka  <jh@suse.cz>

		* i386.c (ix86_carry_flag_operator):  New predicate.
		(fcmov_operator): Fix whitespace.
		(ix86_expand_carry_flag_compare):  Deal with floating point.
		(ix86_expand_int_movcc): Deal with fp; update insn expansion
		(ix86_expand_int_addcc): Likewise.
		(ix86_expand_strlensi_unroll_1): likewsie.
		* i386.h (PREDICATE_CODES): Add ix86_carry_flag_operator.
		* i386.md (add?i_carry_rex64): Use new predicate.
		(sub?i3_carry_rex64): Likewise.
		(x86_mov?icc_0_m1*): Likewise.

	Thu Jan  9 00:57:15 CET 2003  Jan Hubicka  <jh@suse.cz>

		* i386.c  (ix86_expand_int_addcc): Fix thinko.

	Sat Jan 25 15:55:08 CET 2003  Jan Hubicka  <jh@suse.cz>

		* i386.c (ix86_expand_movstr, ix86_expand_clrstr): Consistently
		do libcall for large blocks.
		* i386.md (comi patterns): Set type to ssecomi.
		(sse2_unpck?pd): Fix mode of vec_select.

	2003-01-26  Kazu Hirata  <kazu@cs.umass.edu>

		* config/i386/i386-modes.def: Fix comment typos.
		* config/i386/i386.c: Likewise.
		* config/i386/i386.md: Likewise.

	Wed Feb  5 23:12:57 CET 2003  Jan Hubicka  <jh@suse.cz>

		* i386-protos.h (x86_emit_floatuns):  Declare.
		* i386.c (x86_emit_floatuns): New global function.
		* i386.md (floatunssisf2, floatunsdisf2,
		floatunsdidf2):  New patterns.

	Wed Jan  8 12:10:57 CET 2003  Jan Hubicka  <jh@suse.cz>

		* i386.md (adddi3_carry_rex64, subdi3_carry_rex64): Name pattern.
		(addhi3_carry, addqi3_carry, subhi3_carry, subqi3_carry): New patterns.
		(add??cc): New expanders.
		* i386.c (expand_int_addcc): New function.
		* i386-protos.h (expand_int_addcc): Declare.

	Sat Dec 14 20:43:41 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (flags_reg_operand):  New function.
		* i386.h (PREDICATE_CODES): Add flags_reg_operand.
		* i386.md (cmov splitter, movqicc): Use new predicate.

	Sat Dec 14 17:03:17 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (movqicc splitter): Fix template.

	Thu Dec  5 14:10:15 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (ix86_expand_prologue):  Add comment, do not use
		fast prologues for cold and normal functions.

	Thu Dec  5 00:52:37 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (x86_rep_movl_optimal): New variable.
		(ix86_expand_movstr, ix86_expand_clrstr): Use TARGET_REP_MOVL_OPTIMAL
		* i386.h (TARGET_REP_MOVL_OPTIMAL): New macro.

		* i386.md (negsf2_ifs, negdf2_ifs, negdf2_ifs_rex64, abssf2_ifs,
		absdf2_ifs, absdf2_ifs_rex64): Fix constraints.
		neg?f2_ifs, abs?f2_ifs splitters): Refuse memory operand; do not
		generate unnecesary subregs.

	Wed Dec  4 11:53:07 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (ix86_expand_int_movcc): Force operand into register for QImode
		condtiional moves.

Fri Feb  7 02:35:26 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Makefile.in (web.o): New.
	* web.c: New file.
	* rtl.h (web_main): Declare.
	* timervar.def (TV_WEB): New.
	* toplev.c (dump_file_index, dump_file_info): Add DFI_web.
	(flag_web): New static variable.
	(lang_independent_ptions): Add "web".
	(rest_of_compilation): Call web_main.
	(parse_options_and_default_flags): Add flag_web.
	* invoke.texi (-fweb): Document.

Wed Feb  5 15:50:47 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (hammer-3_3-merge-20030205)

Wed Feb  5 11:08:53 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Makefile.in (CRTSTUFF_CFLAGS): Add -fno-unit-at-time
	(OBJS): Add callgraph.o
	(callgraph.o): New.
	* c-decl.c (expand_body_1): Break out from ...
	(expand_body): This one;  change calling convention
	(finish_function): Move some of expand_body logic here.
	(c_expand_deferred_function): Update call of expand_body
	(c_expand_stmt): Use c_expand_body_1.
	* c-lang.c (LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION): Define.
	* c-objc-commin.c (c_objc_common_finish_file): Use callgraph code.
	* c-tree.h (c_expand_body): Declare.
	* callgraph.c: New file.
	* flags.h (flag_unit_at_time): Declare.
	* langhooks.h (LANG_HOOKS_CALLGRAPH_LOWER_FUNCTION,
	LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION,
	LANG_HOOKS_CALLGRAPH_INITIALIZER): New macros.
	* langhooks.h (struct lang_hooks_for_callgraph): New.
	(struct lang_hooks): Add callgraph field.
	* toplev.c (flag_unit_at_time): New.
	(lang_independent_options): Add flag_unit_at_time.
	(parse_options_and_default_flags): Set flag_unit_at_time for -O3.
	(process_options): Disable unit-at-time mode for frontends not
	supporting callgraph.
	* tree-inline.c (typedef struct inline_data): Add "decl"
	(inlinable_function_p): New argument nolimit.
	(tree_inlinable_function_p): Likewise.
	(expand_call_inline): Update callgraph.
	(optimize_inline_calls): Set id.decl.
	* tree-inline.h (tree_inlinable_function_p): Update prototype./
	* tree.h (cgraph_finalize_function, cgraph_finalize_compilation_unit,
	cgraph_create_edges, dump_cgraph, cgraph_optimize, cgraph_remove_call
	cgraph_calls_p): Declare.
	* i386.c (x86_optimize_local_function,
	TARGET_CGRAPH_OPTIMIZE_LOCAL_FUNCTION): New.
	* target-def.h (TARGET_CGRAPH_OPTIMIZE_LOCAL_FUNCTION, TARGET_CGRAPH):
	New.
	* target.h (struct gcc_target): Add new cgraph familly.

Wed Feb  5 11:05:24 CET 2003  Jan Hubicka  <jh@suse.cz>

	* emit-rtl.c (emit_copy_of_insn_after): Copy INSN_CODE cache too.

Mon Feb  3 15:58:28 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.c (ix86_expand_int_movcc):  Fix setcc sign bit case.

Mon Feb  3 01:46:53 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20030203)

Sat Feb  1 20:31:24 CET 2003  Jan Hubicka  <jh@suse.cz>

	* reload.c:  Revert Urlich's patch.

Sat Feb  1 13:20:59 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20030201)

Fri Jan 31 22:40:59 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20030131)

Tue Jan 28 19:47:13 CET 2003  Jan Hubicka  <jh@suse.cz>

	* pa.c (attr_length_millicode_call, attr_length_call): Do not crash
	when INSN_ADDRESSES are not computed.

Sun Jan 26 15:44:39 CET 2003  Jan Hubicka  <jh@suse.cz>

	* convert.c:  Fix merge differences.

2003-01-25  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* config/i386/i386-protos.h (function_arg_pass_by_reference): Declare.
	* config/i386/i386.h (FUNCTION_ARG_PASS_BY_REFERENCE): Use it.
	* config/i386/i386.c (function_arg_pass_by_reference): New.
	(ix86_va_arg): Support arguments passed by reference.

Thu Jan 23 16:52:55 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20032301 tag.)

2003-01-16  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloop.c (flow_loops_find): Fix handling of abnormal edges.

Sun Jan 12 15:17:43 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3-branch (hammer-3_3-merge-20031201 tag.)

Sat Jan 11 21:06:53 CET 2003  Jan Hubicka  <jh@suse.cz>

	* convert.c (strip_float_extensions):  Look for narrowest type handling
	FP constants.

	* fold-const.c (fold):  Fold (double)float1 CMP (double)float2 into
	float1 CMP float2.

	* convert.c (convert_to_real): Fold - and abs only when profitable.
	* fold-const.c (fold): Fold truncates in - and abs.

Sat Jan 11 12:21:45 CET 2003  Jan Hubicka  <jh@suse.cz>

	* builtins.c (fold_trunc_transparent_mathfn): New static function
	(fold_builtin): Fold floor/trunc/round/ceil/nearbyint.
	* convert.c (convert_to_real): Fix.

Thu Jan  9 14:17:47 CET 2003  Josef Zlomek <zlomekj@suse.cz>

	Merge from rtlopt branch:

	2003-01-02  Josef Zlomek <zlomekj@suse.cz>

	* bb-reorder.c (copy_bb_p): Parameter code_may_grow was added.
	(rotate_loop): Avoid uncond jump to cond jump.
	(find_traces_1_round): copy_bb_p has one more parameter.
	(connect_traces): Likewise.
	(copy_bb): Allow inserting a block into a trace.

	2002-12-30  Josef Zlomek <zlomekj@suse.cz>

	* bb-reorder.c (connect_traces): Get rid of warning.

Tue Jan  7 18:19:28 CET 2003  Jan Hubicka  <jh@suse.cz>

	* convert.c (convert_to_real):  Do conversion of floor and friends.

Tue Jan  7 18:03:29 CET 2003  Jan Hubicka  <jh@suse.cz>

	* builtins.c (DEF_BUILTIN): Accept 10 arguments.
	(implicit_built_in_decls): New global array.
	(mathfn_built_in): New global function.
	(fold_trunc_transparent_mathfn): New static function
	(expand_builtin_strstr, expand_bultin_strchr,
	expand_builtin_strpbrk, expand_builtin_strcpy,
	expand_builtin_strncpy, expand_bultin_strcmp,
	expand_bultin_strncat, expand_builtin_fputs): Use
	implicint_built_in_decls.
	(fold_builtin): Fold floor/trunc/round/ceil/nearbyint.
	* builtins.def: Fix comments.
	(DEF_GCC_BUILTIN, DEF_FALLBACK_BUILTIN, DEF_EXT_FALLBACK_BUILTIN,
	DEF_LIB_BUILTIN, DEF_LIB_ALWAYS_BUILTIN, DEF_EXT_LIB_BUILTIN,
	DEF_C99_BULTIN, DEF_FRONT_END_LIB_BUILTIN,
	DEF_EXT_FRONT_END_LIB_BUILTIN): Pass implicit as needed.
	(DEF_C99_C90RES_BULTIN): New.
	(*f, *l builtins): Update.
	* c-common.c (DEF_BUILTIN): Initialize implicit array.
	(c_expand_builtin_printf, c_expand_builtin_fprintf): Update.
	* convert.c (strip_float_extensions): New global function.
	* tree.h (DEF_BUILTIN): Accept 10 arguments.
	(implicit_built_in_decls, mathfn_built_in, strip_float_extension):
	Declare.
	* java/builtins.c (define_builtin): Handle implicit.
	(DEF_BUILTIN): Update.
	* tm.texi (TARGET_C99_FUNCTIONS): Document.
	* defaults.h (TARGET_C99_FUNCTIONS): Default to 1.

Tue Jan  7 17:48:24 CET 2003  Jan Hubicka  <jh@suse.cz>

	Merge from mainline:
	Fri Nov  8 13:01:42 CET 2002  Jan Hubicka  <jh@suse.cz>

	* builtins.c (expand_builtin_mathfn): Handle floor/ceil/trunc/round/nearbyint
	(expand_builtin): Likewise.
	* builtins.def: Add
	__builtin_floor, __builtin_floorf, __builtin_floorl
	__builtin_ceil, __builtin_ceilf, __builtin_ceill
	__builtin_round, __builtin_roundf, __builtin_roundl
	__builtin_trunc, __builtin_truncf, __builtin_truncl
	__builtin_nearbyint, __builtin_nearbyintf, __builtin_nearbyintl.
	* genopinit.c (optabs): Initialize the new optabs.
	* optab.c (init_optabs): Likewise.
	* optabs.h (optab_index): Add OTI_floor, OTI_ceil, OTI_trunc,
	OTI_round, OTI_nearbyint.
	(floor_optab, ceil_optab, trunc_optab, round_optab, nearbyint_optab): New.
	* doc/md.texi: Document new named patterns.
	* doc/extend.texi (builtin functions)  Document
	floor, floorf, floorl, ceil, ceilf,
	ceill, round, roundf, roundl, trunc,
	truncf, truncl, nearbyint, nearbyintf, nearbyintl.

Tue Dec 31 21:03:03 CET 2002  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3 branch (hammer-3_3-merge-20023112)

Tue Dec 31 11:39:47 CET 2002  Josef Zlomek <zlomekj@suse.cz>

	* jump.c (next_nonnote_insn_in_loop): New function.
	(copy_loop_headers): Use next_nonnote_insn_in_loop instead of
	next_nonnote_insn.
	(duplicate_loop_exit_test). Likewise.

Sat Dec 28 17:08:26 CET 2002  Jan Hubicka  <jh@suse.cz>

	* params.def:  Early merge from mainline.
	* toplev.c: Enable tracer by default on -O3.

Sun Dec 15 01:46:56 CET 2002  Jan Hubicka  <jh@suse.cz>

	* loop-unswitch.c (unswitch_loop): Initialize variable.

2002-12-16  Josef Zlomek  <zlomj9am@artax.karlin.mff.cuni.cz>

	* bb-reorder.c (bb_to_key): Fix accessing index -1 of array.
	(connect_traces): Fix several bugs.

Sun Dec 15 18:22:59 CET 2002  Josef Zlomek <zlomj9am@artax.karlin.mff.cuni.cz>

	* bb-reorder.c: Update comments, fix coding style.

Sat Dec 14 23:00:47 CET 2002  Jan Hubicka  <jh@suse.cz>

	* Merge from 3.3 branch (hammer-3_3-20021412 tag)

Tue Dec 10 20:34:42 CET 2002  Jan Hubicka  <jh@suse.cz>

	* cfg.c (dump_flow_info): Move regalloc and reg-scan data dump to ...
	* local-alloc.c (dump_local_alloc): ... here

2002-12-08  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopanal.c (mark_irreducible_loops): Fix.
	* unroll.c (unroll_loop_runtime_iterations,
	unroll_loop_constant_iterations, peel_loop_completely): Removed the
	call of mark_irreducible_loops.

Sun Dec  8 15:00:03 CET 2002  Jan Hubicka  <jh@suse.cz>

	* alias.c (memory_modified_1): New static function.
	(memory_modified): New static varaible.
	(memory_modified_in_insn_p): New global function.
	* rtl.h (memory_modified_in_insn_p): Declare.
	* rtlanal.c (modified_between_p, modified_in_p): Be smart about memory
	references.

Sat Dec  7 18:14:54 CET 2002  Jan Hubicka  <jh@suse.cz>

	* i386.c (ix86_expand_int_movcc):  Use force_operand instead of constructing
	insn directly.

Sat Dec  7 16:37:13 CET 2002  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (hammer-3_3-20020712 tag)

Sat Dec  7 15:45:14 CET 2002  Jan Hubicka  <jh@suse.cz>

	Hack to compile gcc:
	* unroll.c (unroll_loop_runtime_iterations,
	unroll_loop_constant_iterations, peel_loop_completely):Call
	mark_irreducible_loops.

Sat Dec  7 15:27:30 CET 2002  Jan Hubicka  <jh@suse.cz>

	* cfglayout.c (cfg_layout_split_block): New function.
	* cfglayout.h (cfg_layout_split_block): Declare.
	* cfgloopmanip.c (create_preheader): Use it.

	* calls.c (expand_call): Rename __bb_fork_func to __gcov_flush.

2002-12-03  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	Merge from rtlopt branch:

	2002-09-11  Nathan Sidwell  <nathan@codesourcery.com>

		Reimplement gcov format.
		* gcov-io.h: Replace.
		* gcov.c: Reimplement.
		* gcov-iov.c: New file.
		* gcov-dump.c: New file.
		* libgcc2.c (L_bb): Replace with ...
		(L_gcov): ... this.
		(struct bb_function_info, struct bb): Remove.
		(inhibit_libc): Never inhibit.
		(gcov_list, gcov_crc): New static variables.
		(gcov_version_mismatch): New static function.
		(__bb_exit_func): Renamed to ...
		(__gcov_exit): ... here. Made static. Reimplement.
		(__gcov_init_func): Rename to ...
		(__gcov_init): ... here. Check version, update crc.
		(__bb_fork_func): Rename to ...
		(__gcov_flush): ... here.
		* libgcc2.h (struct bb, __bb_exit_func, __bb_init_func,
		__bb_fork_func, gcov_type, __bb_find_arc_counters): Remove.
		* calls.c (expand_call): Call __gcov_flush.
		* profile.c (bb_file, last_bb_file_name): Remove.
		(bbg_file_name): New global variable.
		(output_gcov_string): Remove.
		(get_exec_counts): Reimplement.
		(branch_prob): Reimplement gcov file writing.
		(init_branch_prob): Create bbg_file_name, don't create
		bb_file_name.
		(end_branch_prob): Adjust. Don't remove counter file when
		instrumenting ourselves.
		(create_profiler): Adjust.
		* doc/gcov.texi (Gcov Data Files): Remove detailed specification,
		point to gcov-io.h.
		* Makefile.in (LANGUAGES): Add gcov-dump.
		(coverageexts): Remove .bb.
		(STAGESTUFF): Add gcov-dump.
		(LIB2FUNCS_ST): Replace _bb with _gcov.
		(profile.o): Depend on gcov-iov.h.
		(final.o): Don't depend on profile.h, gcov.h.
		(gcov.o): Depend on gcov-iov.h.
		(gcov-iov.o): New target.
		(gcov-iov): New target.
		(gcov-iov.h): New target.
		(gcov-dump.o): New target.
		(GCOV_DUMP_OBJS): New variable.
		(gcov-dump): New target.
		(distclean): Remove coverageexts.
		(stage1): Remove coverageexts.

	2002-11-21  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* Makefile.in (vpt.o): New file.
		(toplev.o, profile.o): Add vpt.h dependecy.
		* vpt.h: New.
		* vpt.c: New.
		* combine.c (distribute_notes): Handle REG_VALUE_HISTOGRAM note.
		* flags.h (flag_value_histograms): Declare.
		* gcov-io.h (GCOV_TAG_VALUE_HISTOGRAMS): New.
		(struct function_info): Add n_value_histogram_counters field.
		(struct gcov_info): Add value_counts and n_value_counts fields.
		* libgcc2.c (gcov_exit, __gcov_flush): Write out value histograms.
		* profile.c: Include vpt.h.
		(struct function_list): Add value_counters field.
		(value_histograms_label): New.
		(gen_loop_profiler): Deleted.
		(gen_interval_profiler, gen_range_profiler, gen_pow2_profiler,
		gen_one_value_profiler): New.
		(get_histogram_counts, instrument_loops, compute_loop_histograms,
		init_branch_prob): Modified.
		(index_counts_file): Fix mistakes.
		(instrument_values, compute_value_histograms): New.
		(branch_prob): Call them.
		(create_profiler): Emit requiered structures.
		* profile.h (struct profile_info): Add count_value_counters,
		count_value_counters_now and have_value_histograms fields.
		* rtl.c (reg_note_name): Add REG_VALUE_HISTOGRAM.
		* rtl.h (enum reg_note): Ditto.
		* toplev.c: Include vpt.h.
		(enum dump_file_index, dump_file): Add vpt dump file.
		(flag_value_histograms, flag_value_profile_transformations): New.
		(lang_independent_options): Add them.
		(rest_of_compilation): Add vpt pass.

	2002-11-23  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* vpt.c (find_values_to_profile): Move liveness analysis ...
		* toplev.c (rest_of_compilation): ... here.  Also do cleanup
		afterwards.

	2002-11-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* Makefile.in (loop-init.o): Add gcov-io.h dependency.
		* gcov-io.h (struct counter_section, struct counter_section_data): New.
		(struct function_info): n_arc_counts, n_loop_histogram_counters and
		n_value_histogram_counters fields merged into new n_counter_sections and
		counter_sections fields.
		(struct gcov_info): arc_counts, n_arc_counts, histogram_counts,
		n_histogram_counts, value_counts and n_value_counts merged into
		n_counter_sections and counter_sections fields.
		* libgcc2.c (gcov_exit, __gcov_flush): Rewritten to enable adding
		new section types.
		* loop-init.c: Include gcov-io.h.
		(loop_optimizer_init): Modified.
		* profile.c (struct function_list): count_edges, histogram_counters
		and value_counters merged to n_counter_sections and counter_sections
		fields.
		(set_purpose, label_for_tag, build_counter_section_fields,
		build_counter_section_value, build_counter_section_data_fields,
		build_counter_section_data_value, build_function_info_fields,
		build_function_info_value, build_gcov_info_fields,
		build_gcov_info_value, find_counters_section): New.
		(instrument_edges, instrument_loops, instrument_values,
		get_histogram_counts, compute_loop_histograms, compute_value_histograms,
		compute_branch_probabilities, branch_prob, create_profiler): Modified
		to enable adding new section types.
		* profile.h (MAX_COUNTER_SECTIONS): New.
		(struct section_info): New.
		(struct profile_info): count_instrumented_edges, count_histogram_counters,
		count_value_counters, count_edges_instrumented_now,
		count_histogram_counters_now, count_value_counters_now,
		have_loop_histograms, have_value_histograms fields merged into
		new n_sections and section_info fields.
		(find_counters_section): Declare.
		* vpt.c (insn_values_to_profile, gen_mod_subtract): Fix.

Wed Dec  4 23:42:16 CET 2002  Jan Hubicka  <jh@suse.cz>

	* i386.c: Fix merge problems.
	* i386.md: Likewise.

Wed Dec  4 11:47:43 CET 2002  Jan Hubicka  <jh@suse.cz>

	* i386.c (ix86_expand_int_movcc): Force operand into register for QImode
	condtiional moves.

2002-12-03  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	Merge from rtlopt branch:
	2002-11-29  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* cfgloopanal.c (simple_loop_p): Count desc->n_branches.
		* cfgloop.h (struct loop_desc): Add n_branches field.
		* loop-unroll.c (decide_peel_simple, decide_unroll_stupid): Do not
		unroll/peel loops containing branches.

	2002-11-10  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* loop-unroll.c (decide_unrolling_and_peeling): Fix.

	2002-11-10  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* loop-unroll.c (decide_unroll_constant_iterations,
		decide_unroll_runtime_iterations, decide_peel_simple,
		decide_unroll_stupid): Fix.

	2002-11-09  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* cfgloop.c (flow_loop_dump, flow_loops_free, flow_loop_exit_edges_find,
		get_loop_body, cancel_loop, verify_loop_structure):
		Use unsigned variables where appropriate.
		* cfgloopanal.c (simple_loop_p, mark_irreducible_loops,
		num_loop_insns, expected_loop_iterations): Ditto.
		* cfgloopmanip.c (record_exit_edges, duplicate_loop_to_header_edge,
		loopify, fix_loop_placement, can_duplicate_loop_p, create_preheaders,
		force_single_succ_latches): Ditto.
		* loop-unswitch.c (may_unswitch_on_p, unswitch_single_loop): Ditto.
		* predict.c (estimate_probability, estimate_loops_at_level): Ditto.
		* loop-unroll.c (unroll_or_peel_loop): Removed.
		(peel_loop_simple, peel_loop_completely, unroll_loop_stupid,
		unroll_loop_constant_iterations, unroll_loop_runtime_iterations,
		unroll_and_peel_loops): Modified.
		(peel_loops_completely, decide_unrolling_and_peeling,
		decide_peel_simple, decide_peel_once_rolling, decide_peel_completely,
		decide_unroll_stupid, decide_unroll_constant_iterations,
		decide_unroll_runtime_iterations): New.
		* cfgloop.h (enum lpt_dec, struct lpt_decision): New.
		(struct loop): Add lpt_decision, simple, desc, has_desc and ninsns
		fields.
		(expected_loop_iterations, duplicate_loop_to_header_edge): Declaration
		changed.
		(UAP_PEEL_COMPLETELY, UAP_PEEL_ONCE_ROLLING): Removed.

	2002-11-01  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* cfgloopmanip.c (duplicate_loop_to_header_edge): Fix count &
		frequencies updating.
		* loop-unroll.c (unroll_loop_runtime_iterations): Fix edge
		probabilities.

	2002-11-01  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* loop-unroll.c (unroll_loop_runtime_iterations): New loop
		preconditioning.
		* params.def (PARAM_MAX_PEELED_INSNS,
		PARAM_MAX_COMPLETELY_PEELED_INSNS): Increase default parameter values.
		* toplev.c (dump_file): Sync with dump_file_index.

	2002-10-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* cfgloopanal.c (count_loop_iterations): Undo my previous fix.
		* loop-unroll.c (unroll_loop_runtime_iterations): Better
		preconditioning for preincrement loops.

	2002-10-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* cfgloopanal.c (count_loop_iterations): Use stride instead of
		const1_rtx.
		* loop-unroll.c (unroll_loop_runtime_iterations): Revert the wrong
		fix, fix misleading comment.
		(unroll_or_peel_loop): Add debugging info.

	Sat Oct 26 00:04:54 CEST 2002  Jan Hubicka  <jh@suse.cz>

		* loop-unroll.c (unroll_loop_runtime_iterations):  Compute edge probabilities properly.

	Fri Oct 25 23:31:53 CEST 2002  Jan Hubicka  <jh@suse.cz>

		* loop-unroll.c (unroll_loop_runtime_iterations): Fix.

	Wed Oct 23 16:46:38 CEST 2002  Jan Hubicka  <jh@suse.cz>

		* loop-unroll.c (unroll_or_peel_loop): Do complete unrolling
		when -funroll-loop is specified.

	2002-10-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* cfgloopmanip.c (fix_bb_placement, fix_bb_placements): New.
		(remove_path): Use them.
		(record_exit_edges): Prototype changed.

	2002-10-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* params.def (PARAM_MAX_COMPLETELY_PEEL_TIMES): Fix spelling typo
		in comment.

	2002-10-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* loop-unroll.c (unroll_or_peel_loop): Modify loop peeling decision.
		* params.def (PARAM_MAX_COMPLETELY_PEELED_INSNS,
		PARAM_MAX_COMPLETELY_PEEL_TIMES, PARAM_MAX_ONCE_PEELED_INSNS): New.
		* cfgloop.h (UAP_UNROLL_ALL, UAP_PEEL_COMPLETELY,
		UAP_PEEL_ONCE_ROLLING): New.

	2002-10-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

		* Makefile.in (cfgloopanal.o): New.
		(doloop.o, predict.o, toplev.o, loop.o, unroll.o, cfgloop.o): Include
		cfgloop.h
		* basic-block.h (loop, loops): Forward declare.
		(flow_loops_find, flow_loops_update, flow_loops_free, flow_loops_dump,
		flow_loop_dump, flow_loop_scan, flow_loop_tree_node_add,
		flow_loop_tree_node_remove, LOOP_*, flow_loop_outside_edge_p,
		flow_loop_nested_p, flow_bb_inside_loop_p, get_loop_body,
		dfs_enumerate_from, loop_preheader_edge, loop_latch_edge,
		add_bb_to_loop, remove_bb_from_loops, find_common_loop,
		verify_loop_structure, VLS_*): Move to ...
		(BB_IRREDUCIBLE): New flag.
		* cfgloop.h: ... here; new file;
		(struct loop_desc, simple_loop_p, count_iterations): Declare.
		* cfgloop.c: Include cfgloop.h
		* doloop.c: Likewise.
		* predict.c: Likewise.
		(estimate_probability): Predict number of iterations.
		* loop.c: Likewise.
		(strength_reduce): kill PRED_LOOP_ITERATIONS prediction
		* toplev.c: Include cfgloop.h
		* unroll.c: Likewise.
		* cfgloopanal.c: New file.

		* Makefile.in (cfgloopmanip.o): New.
		* cfglayout.c (cfg_layout_redirect_edge): Return exit status.
		(cfg_layout_duplicate_bb): Set copy field.
		* cfglayout.h (cfg_layout_redirect_edge): Declaration changed.
		(struct reorder_block_def): Added new fields.
		* cfgloop.c (cancel_loop, cancel_loop_tree): New functions.
		* cfgloop.h: Reformated.
		(struct loop): Added new field.
		(cancel_loop, cancel_loop_tree, can_duplicate_loop_p,
		duplicate_loop_to_header_edge, loopify, remove_path, split_loop_bb):
		Declare.
		* cfgloopmanip.c: New.

		* Makefile.in (loop-unswitch.o, loop-init.o): New.
		(cfglayout.o): Add dependency on cfgloop.h.
		(cfgloopmanip.o): Add dependency on output.h.
		* basic-block.h (BB_SUPERBLOCK): New flag.
		* cfglayout.h (cfg_layout_initialize): Declaration changed.
		* cfglayout.c (cfgloop.h): Include.
		(cleanup_unconditional_jumps, cfg_layout_initialize): Update loop data.
		(break_superblocks): New.
		(cfg_layout_finalize): Call it.
		* bb_reorder.c (reorder_basic_blocks): Add parameter to
		cfg_layout_initialize call.
		* cfgloop.c (verify_loop_structure): Add irreducible loop info
		verification.
		* cfgloop.h (VLS_EXPECR_PREHEADERS, VLS_EXPECT_SIMPLE_LATCHES):
		Merged to enum together with...
		(VLS_EXPECT_MARKED_IRREDUCIBLE_LOOPS, VLS_FOR_LOOP): New flags.
		(CP_SIMPLE_PREHEADERS, CP_INSIDE_CFGLAYOUT): New flags.
		(num_loop_insns, loop_split_edge_with, fix_loop_placement,
		create_preheaders, force_single_succ_latches, expected_loop_iterations,
		loop_optimizer_init, loop_optimizer_finalize, unswitch_loops): Declare.
		* cfgloopanal.c (num_loop_insns, expected_loop_iterations):
		New functions.
		* cfgloopmanip.c (output.h): Include.
		(fix_loop_placement): Declaration moved to cfgloop.h.
		(create_preheader, create_preheaders, force_sinle_succ_latches,
		loop_split_edge_with): New functions.
		* loop-init.c: New.
		* loop-unswitch: New.
		* params.def (PARAM_MAX_UNSWITCH_INSNS, PARAM_MAX_UNSWITCH_LEVEL): New.
		* toplev.c (DFI_loop2): New.
		(flag_unswitch_loops): New.
		(rest_of_compilation): Add loop unswitching pass.
		(parse_options_and_default_flags): Enable it at -O3.

		* Makefile.in (loop-unroll.o): New.
		* cfgloop.h (UAP_PEEL, UAP_UNROLL, UAP_UNROLL_ALL): New flags.
		(unroll_and_peel_loops): Declare.
		* loop-unroll.c: New.
		* params.def (PARAM_MAX_UNROLL_TIMES, PARAM_MAX_PEELED_INSNS,
		PARAM_MAX_PEEL_TIMES): New.
		* toplev.c (flag_old_unroll_loops, flag_old_unroll_all_loops): Used
		instead of ...
		(flag_unroll_loops, flag_unroll_all_loops): Used for new loop optimizer.
		(flag_peel_loops): New.
		(parse_options_and_default_flags): Turn them on with -O3.
		(process_options): Modified.
		(rest_of_compilation): Add unrolling/peeling pass.

Mon Dec  2 22:24:16 CET 2002  Jan Hubicka  <jh@suse.cz>

	* cselib.c (cselib_current_insn_in_libcall): New static variable.
	(new_elt_loc_list, cselib_process_insn, cselib_init): Keep track on whether
	we are inside libcall.
	* cselib.h (elt_loc_list): Add in_libcall.
	* gcse.c (do_local_cprop): Do not copy propagate using insns
	in libcalls.

Mon Dec  2 20:26:21 CET 2002  Jan Hubicka  <jh@suse.cz>

	* unroll.c (copy_loop_body): Copy CONST_OR_PURE_CALL_P.

Mon Dec  2 19:21:37 CET 2002  Jan Hubicka  <jh@suse.cz>

	* i386.c (ix86_expand_int_movcc):  Avoid overflow.

Mon Dec  2 18:06:41 CET 2002  Jan Hubicka  <jh@suse.cz>

	* cfgrtl.c (force_nonfallthru_and_redirect):  Allow abnormal edge
	to be forced into nonfallthru.

Fri Nov 29 00:06:17 CET 2002  JAn Hubicka  <jh@suse.cz>

	Merge from BIB branch:
	Thu Nov 28 23:56:24 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (ix86_expand_int_movcc): Add copy_rtx to avoid invalid RTX
		sharing when operand is SUBREG.

	Thu Nov 28 08:57:26 CET 2002  Jan Hubicka  <jh@suse.cz>

		* athlon.md (athlon-decodev): New reservation unit.
		(athlon-direct0): New reservation.
		(athlon-vector): New use athlon-decodev.
		(athlon-double, athlon-direct): Better model.
		(athlon_imul_k8): Use athlon-direct0.
		(athlon_movlpd_load): New insn reservation.

	Wed Nov 27 20:34:13 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (x86_sse_partial_regs_for_cvtsd2ss): New.
		* i386.h (x86_sse_partial_regs_for_cvtsd2ss): Declare.
		(TARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS): New macro.
		* i386.md (truncdfsf patterns and splitters): Use
		TARGET_SSE_PARTIAL_REGS_FOR_CVTSD2SS

	Tue Nov 26 22:43:50 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (ix86_expand_int_movcc):  Do not emit lea for short mode on
		partial_reg_stall target.

	Tue Nov 26 22:27:47 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (movhicc): Allow general operand.
		(movqicc): New expander.
		(movqicc_noc): New pattern.
		* i386.c (ix86_expand_carry_flag_compare): New function.
		(ix86_expand_int_movcc): Optimize harder using sbb; support more
		HImode conversion; support QImode conditional moves

	Tue Nov 26 16:30:59 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (FAST_PROLOGUE_INSN_COUNT): Set to 20.
		(ix86_expand_prologue): Multiply the count by amount of registers to be
		pushed.

	Tue Nov 26 15:55:27 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (override_options): Error about wrong -mcpu on x86-64
		compilation.

	Tue Nov 26 00:14:20 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386-protos.h (x86_extended_QIreg_mentioned_p,
		x86_extended_reg_mentioned_p): Declare.
		* i386.c (extended_reg_mentioned_1): New static function.
		(x86_extended_QIreg_mentioned_p,
		x86_extended_reg_mentioned_p): New global functions.
		* i386.h (REX_SSE_REGNO_P): New macro.
		* i386.md (prefix_rex): New attribute.
		(length attribute): Add rex.

Thu Nov 28 23:50:23 CET 2002  Jan Hubicka  <jh@suse.cz>

	bb-reorder.c:  Merge from rtlopt-branch.

2002-11-27  Andreas Jaeger  <aj@suse.de>

	* version.c: Add -hammer to version_string.

Tue Nov 26 15:42:46 CET 2002  Jan Hubicka  <jh@suse.cz>

	Merge from 3.4-BIB:
	* config.guess:  Default to k8 for k8.

Tue Nov 26 00:24:17 CET 2002  Jan Hubicka  <jh@suse.cz>
	Merge from 3.4-BIB:

	Mon Nov 25 18:32:37 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (pushsf_rex64): Fix typo.

	Sun Nov 24 10:38:04 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (x86_use_ffreep): New global variable.
		* i386.h (x86_use_frfeep): Declare
		(TARGET_USE_FFREEP): New macro
		* i386.md  (movs?f*): Use freep when asked for.
		(push?f): Remove dead code.

	Wed Nov 20 19:07:17 CET 2002  Jan Hubicka  <jh@suse.cz>

		* config.gcc: Add k8 target alias support
		* i386.c (_cost): Declare costs for various variants of divides and
		multiplies.
		(k8_cost): New.
		(m_K8, m_ATHLON_K8): New macros.
		(x86_use_leave, x86_push_memory, x86_movx, x86_unroll_strlen,
		x86_cmove, x86_3dnow_a, x86_deep_branch, x86_use_fiop,
		x86_promote_QImode, x86_sub_esp_?, x86_add_esp_?,
		x86_integer_DFmode_moves, x86_partial_reg_dependency,
		x86_memory_mismatch_stall, x86_accumulate_outgoing_args,
		x86_prologue_using_move, x86_epilogue_using_move,
		x86_arch_always_fancy_math_387, x86_sse_partial_regs,
		x86_sse_typeless_stores): Set for K8
		(override_options): Add k8 support; fix athlon alignment;
		complain about non-x86-64 capable CPU being used in x86-64 compilation.
		(ix86_issue_rate): Set for K8.
		(ix86_adjust_cost, ia32_use_dfa_pipeline_interface,
		x86_machine_dependent_reorg): Handle K8 like
		* i386.h
		(x86_costs):  Change mult_init and divide into array.
		(TARGET_K8, TARGET_ATHLON): New macros.
		(MODE_INDEX): New macro.
		(RTX_COST): Use new costs.
		(TARGET_CPU_CPP_BUILTINS):  Define __k8__ and __tune_k8__.
		(TARGET_CPU_DEFAULT_NAMES): Add k8
		(TARGET_CPU_DEFAULT_k8): New constant
		(enum processor_type): Add PROCESSOR_K8.
		* i386.md (cpu attribute): Add k8.

		* invoke.texi: Document -march=k8.

		* i386.md (type attribute): Add leave
		(mode attribute): Remove unknownfp.
		(length_immediate, modrm, memory attributes): Handle leave correctly.
		(fp comparison patterns): Determine FP mode.
		(leave, leave_rex64): Remove special cases.
		* ppro.md (ppro_uops, ppro_p2): Add leave
		* pentiun.md (pent_pop): Handle leave too.
		* k6.md (k6_load): Handle leave.
		* athlon.md (athlon_leave, athlon_pop): Fix.
		(athlon_decode): Handle leave.

Mon Nov 25 18:00:50 CET 2002  Jan Hubicka  <jh@suse.cz>
	Merge from mainline (hammer-3_3-merge-20022511 branch)

Mon Nov 18 23:42:28 CET 2002  Jan Hubicka  <jh@suse.cz>
	Merge from mainline (hammer-3_3-merge-20021811 branch)

	Merge from 3.4-BIB:

	Sun Nov 17 14:01:09 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (negsf2_ifs, negdf2_ifs, negdf2_ifs_rex64, abssf2_ifs,
		absdf2_ifs, absdf2_ifs_rex64): Fix constraints.
		(neg?f2_ifs, abs?f2_ifs splitters): Refuse memory operand; do not
		generate unnecesary subregs.

	Sat Nov 16 16:49:58 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (truncdfsf2_1_sse, truncdfsf2_1_sse_nooverlap, truncdfsf2_2,
		floats?dff2_i387):
		Work around regclass stupidity.
		(truncdfsf_2_1_sse splitter):  Accept !TARGET_PARTIAL_SSE_REGS

	Sat Nov 16 02:17:48 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (fop_df_6): New pattern.
		(fop_xf_4, fop_xf_5): Handle both SF and DFmode extensions.
		(fop_xf_6): Rewrite
		(fop_xf_7): Delete.
		(fop_tf_4, fop_tf_5): Handle both SF and DFmode extensions.
		(fop_tf_6): Rewrite
		(fop_tf_7): Delete.


Wed Nov 13 12:08:08 CET 2002  Jan Hubicka  <jh@suse.cz>
	Merge i386 specific optimizations for 3.4-BIB branch.

	Sat Nov  9 00:10:54 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (x86_machine_dependent_reorg): Fix even more side cases.

	Fri Nov  8 13:33:58 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (sse_loadss, sse2_loadsd): Fix expander.

	Fri Nov  8 13:25:41 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (x86_machine_dependent_reorg): Fix handling of empty functions.

	Fri Nov  8 11:36:11 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (sse_movdfcc, sse_movsfcc): Fix typo in previous patch.

	Thu Nov  7 21:54:22 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (sse_movdfcc, sse_movsfcc): Avoid overactive matching.
		* i386.c (ix86_expand_fp_movcc): Match the reversed cases.

	Tue Nov  5 14:34:36 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (float_truncate SSE splitter): Ensure that operand is not
		stack register.
		(float SSE splitters): Reorder conditional.

	Thu Oct 31 18:20:50 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (sse_loadss, sse_loadsd):  Canonicalize; add expander
		(movps, movpd splitters): Use canonical form.
		(movv2di): Fix merge problem.

	Wed Nov  6 17:16:48 CET 2002  Jan Hubicka  <jh@.suse.cz>

		* i386.md (negsf splitter): Accept memory operand in second register.
		(abssf/absdf splitters): Simplify
		(sse_loadss, sse_loadsd): Turn into expander.

	Thu Oct 31 16:09:44 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (negdf2_ifs_rex64): Don't allow GPR operand.

	Tue Oct 29 23:28:10 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (negdf splitter): Fix construction of the constant.

	Tue Oct 29 20:47:06 CET 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (negsf, negdf): Reorganize to use vector modes
		for SSE variants.
		(abssf, absdf): Use force_reg.
		(movv4sf, movv2df): New splitters.
		* i386.h (PREDICATE_CODES): add zero_extended_scalar_load_operand
		* i386.c (zero_extended_scalar_load_operand

	Wed Oct 23 22:48:44 CEST 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (abs splitters): Do not produce nested subregs.

	Wed Oct 23 12:42:32 CEST 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (movti_rex64): Fix constraints.

	Wed Oct 23 12:01:21 CEST 2002  Jan Hubicka  <jh@suse.cz>

		* i386.md (abssf,absdf): Use vector operands for SSE
		(abssf2_ifs, absdf2_ifs, absdf2_ifs_rex64 and splitters): Update for
		vector operand.

	Wed Oct  9 21:18:43 CEST 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (*_cost): Add branch costs.
		(override_options): set ix86_branch_cost.
		(ix86_expand_int_movcc): Use BRANCH_COST.
		* i386.h (costs): Add branch_cost.

	Tue Oct  8 01:24:19 CEST 2002  Jan Hubicka  <jh@suse.cz>

		* i386.c (x86_sse_partial_reg_dependency, x86_sse_partial_regs,
		x86_sse_typeless_stores, x86_sse_load0_by_pxor): New global
		variables.
		(safe_vector_operand): Update sse_clrv4sf call.
		(ix86_expand_buildin): Likewise
		* i386.h (x86_sse_partial_reg_dependency, x86_sse_partial_regs,
		x86_sse_typeless_stores, x86_sse_load0_by_pxor): Declare.
		(TARGET_SSE_PARTIAL_REG_DEPENDENCY, TARGET_SSE_PARTIAL_REGS,
		TARGET_SSE_TYPELESS_STORES, TARGET_SSE_TYPELESS_LOAD0): New
		macros.
		* i386.md (movsf*, movdf*, movti, movv4sf, movv2df, movv16qi, movv8hi,
		movv4si):  Obey the new flags.
		(floatsi2sf, floatdi2sf, truncatedf2sf): Emit extra load of 0 to avoid
		reformating penalty.
		(anddf, cmov patterns): Avoid reformating by first converting.
		(sse_cvtsd2ss): Fix predicate.
		(sse2_clrti): Fix mode,
		(sse_clrv4sf): Avoid unspec.

	Sat Oct  5 22:48:06 CEST 2002  Jan Hubicka  <jh@suse.cz>

		* athlon.md: rewrite to DFA.
		* i386 (ix86_adjust_cost): Drop memory latency code.
		(ia32_use_dfa_pipeline_interface): Return true for Athlon.
Thu Nov  7 11:18:01 CET 2002  Jan Hubicka  <jh@suse.cz>

	* reg-stack.c (compensate_edge): Fix sanity check.
