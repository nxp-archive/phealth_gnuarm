2008-09-04  Richard Sandiford <rsandifo@nildram.co.uk>

	* ira-int.h (ira_zero_hard_reg_set, ira_one_hard_reg_set): Delete.
	* ira-color.c (setup_allocno_left_conflicts_num): Use
	hard_reg_set_equal_p instead of a comparison with
	ira_zero_hard_reg_set.
	* ira.c (setup_reg_subclasses): Likewise.
	(setup_cover_and_important_classes): Likewise.
	(setup_class_translate): Likewise.
	(setup_reg_class_intersect_union): Likewise.
	(ira_zero_hard_reg_set, ira_one_hard_reg_set): Delete.
	(ira_init_once): Don't initialize them.

2008-09-03  Vladimir Makarov  <vmakarov@redhat.com>

	PR middle-end/37359
	* ira-lives.c (process_bb_node_lives): Check setjmp.

2008-09-03  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-opt/37296
	* ira-int.h (ira_sort_insn_chain): Remove.

	* ira.c (basic_block_order_nums, chain_insn_order,
	chain_freq_compare, chain_bb_compare, ira_sort_insn_chain): Remove.
	(ira): Don't call ira_sort_insn_chain.

	* reload1.c (reload): Don't call ira_sort_insn_chain.

2008-09-02  Richard Sandiford <rsandifo@nildram.co.uk>

	* ira-build.c (form_loop_tree): Use FOR_EACH_BB instead of
	FOR_EACH_BB_REVERSE.
	(create_bb_allocnos): Use FOR_BB_INSNS_REVERSE instead of
	FOR_BB_INSNS.

	* ira-lives.c (make_regno_born_and_dead): Removed.
	(regs_set): Likewise.
	(mark_reg_store): Likewise.
	(mark_reg_clobber): Likewise.
	(mark_reg_conflicts): Likewise.
	(mark_reg_death): Likewise.
	(mark_ref_live): New.
	(def_conflicts_with_inputs_p): Likewise.
	(mark_ref_dead): Likewise.
	(process_bb_node_lives): Updated to use DF instead.
	(ira_create_allocno_live_ranges): Updated.

2008-09-02  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-opt/37243
	* ira-int.h (ira_loop_tree_node): Rename mentioned_allocnos to
	all_allocnos.

	* ira-color.c (print_loop_title): Use all_allocnos.
	(color_pass): Ditto.  Don't add border_allocnos.  Check that
	subloop allocno in the correspdoning bitmap all_allocnos.

	* ira-emit.c (change_loop): Use all_allocnos.

	* ira-build.c (create_loop_tree_nodes, finish_loop_tree_node):
	Ditto.
	(ira_create_allocno): Set up all_allocnos bit for the created
	allocno.
	(create_cap_allocno): Remove setting mentioned_allocnos.
	(create_insn_allocnos): Ditto.
	(remove_unnecessary_allocnos): Use all_allocnos.
	(check_allocno_creation): Check that allocnos are in the
	corresponding bitmap all_allocnos.

2008-09-02  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-opt/37243
	* ira-conflicts.c (REG_SUBREG_P, go_through_subreg): New.
	(process_regs_for_copy): Process subregs.  Refine check when cost
	is taken into account in ira-costs.c.
	(process_reg_shuffles): Use REG_SUBREG_P.
	(add_insn_allocno_copies): Ditto.  Ignore modes.

	* ira-color.c (conflict_allocno_vec): New.
	(COST_HOP_DIVISOR): New macro.
	(update_copy_costs_1): Use it.
	(update_conflict_hard_regno_costs): New function.
	(assign_hard_reg): Use it.
	(ira_color): Allocate and free conflict_allocno_vec.

2008-09-02  H.J. Lu  <hongjiu.lu@intel.com>

	Backport from mainline:
	2008-09-01  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	* ira.c (setup_eliminable_regset): Only declare i if ELIMINABLE_REGS is
	defined.

	2008-08-29  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-opt/37251
	* ira-color.c (push_allocnos_to_stack): Truncate
	removed_splay_allocno_vec.

	2008-08-29  Vladimir Makarov  <vmakarov@redhat.com>

	PR rtl-opt/37243
	* ira-color (ira_fast_allocation): Don't assign hard registers to
	global allocnos.
