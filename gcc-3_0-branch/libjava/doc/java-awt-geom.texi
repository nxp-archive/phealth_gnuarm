@deftypemethod AffineTransform {public static AffineTransform} getTranslateInstance (double@w{ }@var{tx}, double@w{ }@var{ty}) 

@end deftypemethod
@deftypemethod AffineTransform {public static AffineTransform} getRotateInstance (double@w{ }@var{theta}) 

@end deftypemethod
@deftypemethod AffineTransform {public static AffineTransform} getRotateInstance (double@w{ }@var{theta}, double@w{ }@var{x}, double@w{ }@var{y}) 

@end deftypemethod
@deftypemethod AffineTransform {public static AffineTransform} getScaleInstance (double@w{ }@var{sx}, double@w{ }@var{sy}) 

@end deftypemethod
@deftypemethod AffineTransform {public static AffineTransform} getShearInstance (double@w{ }@var{shx}, double@w{ }@var{shy}) 

@end deftypemethod
@deftypemethod AffineTransform {public int} getType () 

@end deftypemethod
@deftypemethod AffineTransform {public double} getDeterminant () 

@end deftypemethod
@deftypemethod AffineTransform {public void} getMatrix (double[]@w{ }@var{flatmatrix}) 

@end deftypemethod
@deftypemethod AffineTransform {public double} getScaleX () 

@end deftypemethod
@deftypemethod AffineTransform {public double} getScaleY () 

@end deftypemethod
@deftypemethod AffineTransform {public double} getShearX () 

@end deftypemethod
@deftypemethod AffineTransform {public double} getShearY () 

@end deftypemethod
@deftypemethod AffineTransform {public double} getTranslateX () 

@end deftypemethod
@deftypemethod AffineTransform {public double} getTranslateY () 

@end deftypemethod
@deftypemethod AffineTransform {public void} translate (double@w{ }@var{tx}, double@w{ }@var{ty}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} rotate (double@w{ }@var{theta}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} rotate (double@w{ }@var{theta}, double@w{ }@var{x}, double@w{ }@var{y}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} scale (double@w{ }@var{sx}, double@w{ }@var{sy}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} shear (double@w{ }@var{shx}, double@w{ }@var{shy}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} setToIdentity () 

@end deftypemethod
@deftypemethod AffineTransform {public void} setToTranslation (double@w{ }@var{tx}, double@w{ }@var{ty}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} setToRotation (double@w{ }@var{theta}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} setToScale (double@w{ }@var{sx}, double@w{ }@var{sy}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} setToShear (double@w{ }@var{shx}, double@w{ }@var{shy}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} setTransform (java.awt.geom.AffineTransform@w{ }@var{tx}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} setTransform (double@w{ }@var{m00}, double@w{ }@var{m10}, double@w{ }@var{m01}, double@w{ }@var{m11}, double@w{ }@var{m02}, double@w{ }@var{m12}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} concatenate (java.awt.geom.AffineTransform@w{ }@var{tx}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} preConcatenate (java.awt.geom.AffineTransform@w{ }@var{tx}) 

@end deftypemethod
@deftypemethod AffineTransform {public AffineTransform} createInverse () @*throws NoninvertibleTransformException

@end deftypemethod
@deftypemethod AffineTransform {public Point2D} transform (java.awt.geom.Point2D@w{ }@var{src}, java.awt.geom.Point2D@w{ }@var{dst}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} transform (java.awt.geom.Point2D[]@w{ }@var{src}, int@w{ }@var{srcOff}, java.awt.geom.Point2D[]@w{ }@var{dst}, int@w{ }@var{dstOff}, int@w{ }@var{num}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} transform (float[]@w{ }@var{srcPts}, int@w{ }@var{srcOff}, float[]@w{ }@var{dstPts}, int@w{ }@var{dstOff}, int@w{ }@var{num}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} transform (double[]@w{ }@var{srcPts}, int@w{ }@var{srcOff}, double[]@w{ }@var{dstPts}, int@w{ }@var{dstOff}, int@w{ }@var{num}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} transform (float[]@w{ }@var{srcPts}, int@w{ }@var{srcOff}, double[]@w{ }@var{dstPts}, int@w{ }@var{dstOff}, int@w{ }@var{num}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} transform (double[]@w{ }@var{srcPts}, int@w{ }@var{srcOff}, float[]@w{ }@var{dstPts}, int@w{ }@var{dstOff}, int@w{ }@var{num}) 

@end deftypemethod
@deftypemethod AffineTransform {public Point2D} inverseTransform (java.awt.geom.Point2D@w{ }@var{src}, java.awt.geom.Point2D@w{ }@var{dst}) @*throws NoninvertibleTransformException

@end deftypemethod
@deftypemethod AffineTransform {public void} inverseTransform (double[]@w{ }@var{srcPts}, int@w{ }@var{srcOff}, double[]@w{ }@var{dstPts}, int@w{ }@var{dstOff}, int@w{ }@var{num}) @*throws NoninvertibleTransformException

@end deftypemethod
@deftypemethod AffineTransform {public Point2D} deltaTransform (java.awt.geom.Point2D@w{ }@var{src}, java.awt.geom.Point2D@w{ }@var{dst}) 

@end deftypemethod
@deftypemethod AffineTransform {public void} deltaTransform (double[]@w{ }@var{srcPts}, int@w{ }@var{srcOff}, double[]@w{ }@var{dstPts}, int@w{ }@var{dstOff}, int@w{ }@var{num}) 

@end deftypemethod
@deftypemethod AffineTransform {public Shape} createTransformedShape (java.awt.Shape@w{ }@var{pSrc}) 

@end deftypemethod
@deftypemethod AffineTransform {public String} toString () 

@end deftypemethod
@deftypemethod AffineTransform {public boolean} isIdentity () 

@end deftypemethod
@deftypemethod AffineTransform {public Object} clone () 

@end deftypemethod
@deftypemethod AffineTransform {public int} hashCode () 

@end deftypemethod
@deftypemethod AffineTransform {public boolean} equals (java.lang.Object@w{ }@var{obj}) 

@end deftypemethod
@deftypemethod Dimension2D {public abstract double} getWidth () 

@end deftypemethod
@deftypemethod Dimension2D {public abstract double} getHeight () 

@end deftypemethod
@deftypemethod Dimension2D {public abstract void} setSize (double@w{ }@var{width}, double@w{ }@var{height}) 

@end deftypemethod
@deftypemethod Dimension2D {public void} setSize (java.awt.geom.Dimension2D@w{ }@var{dim}) 

@end deftypemethod
@deftypemethod Dimension2D {public Object} clone () 

@end deftypemethod
@deftypemethod Ellipse2D {public boolean} contains (double@w{ }@var{x}, double@w{ }@var{y}) 

@end deftypemethod
@deftypemethod Ellipse2D {public boolean} contains (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 

@end deftypemethod
@deftypemethod Ellipse2D {public PathIterator} getPathIterator (java.awt.geom.AffineTransform@w{ }@var{at}) 

@end deftypemethod
@deftypemethod Ellipse2D {public boolean} intersects (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 

@end deftypemethod
@deftypemethod Ellipse2D.Double {public Rectangle2D} getBounds2D () 

@end deftypemethod
@deftypemethod Ellipse2D.Double {public double} getHeight () 

@end deftypemethod
@deftypemethod Ellipse2D.Double {public double} getWidth () 

@end deftypemethod
@deftypemethod Ellipse2D.Double {public double} getX () 

@end deftypemethod
@deftypemethod Ellipse2D.Double {public double} getY () 

@end deftypemethod
@deftypemethod Ellipse2D.Double {public boolean} isEmpty () 

@end deftypemethod
@deftypemethod Ellipse2D.Double {public void} setFrame (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 

@end deftypemethod
@deftypemethod Ellipse2D.Float {public Rectangle2D} getBounds2D () 

@end deftypemethod
@deftypemethod Ellipse2D.Float {public double} getHeight () 

@end deftypemethod
@deftypemethod Ellipse2D.Float {public double} getWidth () 

@end deftypemethod
@deftypemethod Ellipse2D.Float {public double} getX () 

@end deftypemethod
@deftypemethod Ellipse2D.Float {public double} getY () 

@end deftypemethod
@deftypemethod Ellipse2D.Float {public boolean} isEmpty () 

@end deftypemethod
@deftypemethod Ellipse2D.Float {public void} setFrame (float@w{ }@var{x}, float@w{ }@var{y}, float@w{ }@var{w}, float@w{ }@var{h}) 

@end deftypemethod
@deftypemethod Ellipse2D.Float {public void} setFrame (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 

@end deftypemethod
@deftypemethod PathIterator {public int} currentSegment (double[]@w{ }@var{coords}) 

@end deftypemethod
@deftypemethod PathIterator {public int} currentSegment (float[]@w{ }@var{coords}) 

@end deftypemethod
@deftypemethod PathIterator {public int} getWindingRule () 

@end deftypemethod
@deftypemethod PathIterator {public boolean} isDone () 

@end deftypemethod
@deftypemethod PathIterator {public void} next () 

@end deftypemethod
@deftypemethod Point2D {public abstract double} getX () 

@end deftypemethod
@deftypemethod Point2D {public abstract double} getY () 

@end deftypemethod
@deftypemethod Point2D {public abstract void} setLocation (double@w{ }@var{x}, double@w{ }@var{y}) 

@end deftypemethod
@deftypemethod Point2D {public void} setLocation (java.awt.geom.Point2D@w{ }@var{pt}) 

@end deftypemethod
@deftypemethod Point2D {public static double} distanceSq (double@w{ }@var{X1}, double@w{ }@var{Y1}, double@w{ }@var{X2}, double@w{ }@var{Y2}) 

@end deftypemethod
@deftypemethod Point2D {public static double} distance (double@w{ }@var{X1}, double@w{ }@var{Y1}, double@w{ }@var{X2}, double@w{ }@var{Y2}) 

@end deftypemethod
@deftypemethod Point2D {public double} distanceSq (double@w{ }@var{PX}, double@w{ }@var{PY}) 

@end deftypemethod
@deftypemethod Point2D {public double} distance (double@w{ }@var{PX}, double@w{ }@var{PY}) 

@end deftypemethod
@deftypemethod Point2D {public double} distanceSq (java.awt.geom.Point2D@w{ }@var{pt}) 

@end deftypemethod
@deftypemethod Point2D {public double} distance (java.awt.geom.Point2D@w{ }@var{pt}) 

@end deftypemethod
@deftypemethod Point2D {public int} hashCode () 

@end deftypemethod
@deftypemethod Point2D {public Object} clone () 

@end deftypemethod
@deftypemethod Point2D {public boolean} equals (java.lang.Object@w{ }@var{o}) 

@end deftypemethod
@deftypemethod Point2D.Double {public double} getX () 

@end deftypemethod
@deftypemethod Point2D.Double {public double} getY () 

@end deftypemethod
@deftypemethod Point2D.Double {public void} setLocation (double@w{ }@var{x}, double@w{ }@var{y}) 

@end deftypemethod
@deftypemethod Point2D.Double {public String} toString () 

@end deftypemethod
@deftypemethod Point2D.Float {public double} getX () 

@end deftypemethod
@deftypemethod Point2D.Float {public double} getY () 

@end deftypemethod
@deftypemethod Point2D.Float {public void} setLocation (double@w{ }@var{x}, double@w{ }@var{y}) 

@end deftypemethod
@deftypemethod Point2D.Float {public void} setLocation (float@w{ }@var{x}, float@w{ }@var{y}) 

@end deftypemethod
@deftypemethod Point2D.Float {public String} toString () 

@end deftypemethod
@deftypemethod Rectangle2D {public abstract void} setRect (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 
Set the bounding box of this rectangle.
@end deftypemethod
@deftypemethod Rectangle2D {public void} setRect (java.awt.geom.Rectangle2D@w{ }@var{r}) 
Set the bounding box of this rectangle.
@end deftypemethod
@deftypemethod Rectangle2D {public boolean} intersectsLine (double@w{ }@var{x1}, double@w{ }@var{y1}, double@w{ }@var{x2}, double@w{ }@var{y2}) 
Returns true if line segment intersects interior of this
 rectangle.
@end deftypemethod
@deftypemethod Rectangle2D {public abstract int} outcode (double@w{ }@var{x}, double@w{ }@var{y}) 
Return true if line segment intersects interior of this
 rectangle.
@end deftypemethod
@deftypemethod Rectangle2D {public int} outcode (java.awt.geom.Point2D@w{ }@var{p}) 

@end deftypemethod
@deftypemethod Rectangle2D {public void} setFrame (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 
Set bounding frame for this rectangle.
@end deftypemethod
@deftypemethod Rectangle2D {public Rectangle2D} getBounds2D () 

@end deftypemethod
@deftypemethod Rectangle2D {public boolean} contains (double@w{ }@var{x}, double@w{ }@var{y}) 

@end deftypemethod
@deftypemethod Rectangle2D {public boolean} intersects (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 

@end deftypemethod
@deftypemethod Rectangle2D {public boolean} contains (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 

@end deftypemethod
@deftypemethod Rectangle2D {public abstract Rectangle2D} createIntersection (java.awt.geom.Rectangle2D@w{ }@var{r}) 

@end deftypemethod
@deftypemethod Rectangle2D {public static void} intersect (java.awt.geom.Rectangle2D@w{ }@var{src1}, java.awt.geom.Rectangle2D@w{ }@var{src2}, java.awt.geom.Rectangle2D@w{ }@var{dest}) 

@end deftypemethod
@deftypemethod Rectangle2D {public abstract Rectangle2D} createUnion (java.awt.geom.Rectangle2D@w{ }@var{r}) 

@end deftypemethod
@deftypemethod Rectangle2D {public static void} union (java.awt.geom.Rectangle2D@w{ }@var{src1}, java.awt.geom.Rectangle2D@w{ }@var{src2}, java.awt.geom.Rectangle2D@w{ }@var{dest}) 

@end deftypemethod
@deftypemethod Rectangle2D {public void} add (double@w{ }@var{newx}, double@w{ }@var{newy}) 

@end deftypemethod
@deftypemethod Rectangle2D {public void} add (java.awt.geom.Point2D@w{ }@var{p}) 

@end deftypemethod
@deftypemethod Rectangle2D {public void} add (java.awt.geom.Rectangle2D@w{ }@var{r}) 

@end deftypemethod
@deftypemethod Rectangle2D {public PathIterator} getPathIterator (java.awt.geom.AffineTransform@w{ }@var{at}) 

@end deftypemethod
@deftypemethod Rectangle2D.Double {public double} getX () 

@end deftypemethod
@deftypemethod Rectangle2D.Double {public double} getY () 

@end deftypemethod
@deftypemethod Rectangle2D.Double {public double} getWidth () 

@end deftypemethod
@deftypemethod Rectangle2D.Double {public double} getHeight () 

@end deftypemethod
@deftypemethod Rectangle2D.Double {public boolean} isEmpty () 

@end deftypemethod
@deftypemethod Rectangle2D.Double {public void} setRect (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 

@end deftypemethod
@deftypemethod Rectangle2D.Double {public void} setRect (java.awt.geom.Rectangle2D@w{ }@var{r}) 

@end deftypemethod
@deftypemethod Rectangle2D.Double {public int} outcode (double@w{ }@var{x}, double@w{ }@var{y}) 

@end deftypemethod
@deftypemethod Rectangle2D.Double {public Rectangle2D} getBounds2D () 

@end deftypemethod
@deftypemethod Rectangle2D.Double {public Rectangle2D} createIntersection (java.awt.geom.Rectangle2D@w{ }@var{r}) 

@end deftypemethod
@deftypemethod Rectangle2D.Double {public Rectangle2D} createUnion (java.awt.geom.Rectangle2D@w{ }@var{r}) 

@end deftypemethod
@deftypemethod Rectangle2D.Double {public String} toString () 

@end deftypemethod
@deftypemethod Rectangle2D.Float {public double} getX () 

@end deftypemethod
@deftypemethod Rectangle2D.Float {public double} getY () 

@end deftypemethod
@deftypemethod Rectangle2D.Float {public double} getWidth () 

@end deftypemethod
@deftypemethod Rectangle2D.Float {public double} getHeight () 

@end deftypemethod
@deftypemethod Rectangle2D.Float {public boolean} isEmpty () 

@end deftypemethod
@deftypemethod Rectangle2D.Float {public void} setRect (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 

@end deftypemethod
@deftypemethod Rectangle2D.Float {public void} setRect (java.awt.geom.Rectangle2D@w{ }@var{r}) 

@end deftypemethod
@deftypemethod Rectangle2D.Float {public int} outcode (double@w{ }@var{x}, double@w{ }@var{y}) 

@end deftypemethod
@deftypemethod Rectangle2D.Float {public Rectangle2D} getBounds2D () 

@end deftypemethod
@deftypemethod Rectangle2D.Float {public Rectangle2D} createIntersection (java.awt.geom.Rectangle2D@w{ }@var{r}) 

@end deftypemethod
@deftypemethod Rectangle2D.Float {public Rectangle2D} createUnion (java.awt.geom.Rectangle2D@w{ }@var{r}) 

@end deftypemethod
@deftypemethod Rectangle2D.Float {public String} toString () 

@end deftypemethod
@deftypemethod RectangularShape {public abstract double} getX () 

@end deftypemethod
@deftypemethod RectangularShape {public abstract double} getY () 

@end deftypemethod
@deftypemethod RectangularShape {public abstract double} getWidth () 

@end deftypemethod
@deftypemethod RectangularShape {public abstract double} getHeight () 

@end deftypemethod
@deftypemethod RectangularShape {public double} getMinX () 

@end deftypemethod
@deftypemethod RectangularShape {public double} getMinY () 

@end deftypemethod
@deftypemethod RectangularShape {public double} getMaxX () 

@end deftypemethod
@deftypemethod RectangularShape {public double} getMaxY () 

@end deftypemethod
@deftypemethod RectangularShape {public double} getCenterX () 

@end deftypemethod
@deftypemethod RectangularShape {public double} getCenterY () 

@end deftypemethod
@deftypemethod RectangularShape {public Rectangle2D} getFrame () 

@end deftypemethod
@deftypemethod RectangularShape {public abstract boolean} isEmpty () 

@end deftypemethod
@deftypemethod RectangularShape {public abstract void} setFrame (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 

@end deftypemethod
@deftypemethod RectangularShape {public void} setFrame (java.awt.geom.Point2D@w{ }@var{loc}, java.awt.geom.Dimension2D@w{ }@var{size}) 

@end deftypemethod
@deftypemethod RectangularShape {public void} setFrame (java.awt.geom.Rectangle2D@w{ }@var{r}) 

@end deftypemethod
@deftypemethod RectangularShape {public void} setFrameFromDiagonal (double@w{ }@var{x1}, double@w{ }@var{y1}, double@w{ }@var{x2}, double@w{ }@var{y2}) 

@end deftypemethod
@deftypemethod RectangularShape {public void} setFrameFromDiagonal (java.awt.geom.Point2D@w{ }@var{p1}, java.awt.geom.Point2D@w{ }@var{p2}) 

@end deftypemethod
@deftypemethod RectangularShape {public void} setFrameFromCenter (double@w{ }@var{centerX}, double@w{ }@var{centerY}, double@w{ }@var{cornerX}, double@w{ }@var{cornerY}) 

@end deftypemethod
@deftypemethod RectangularShape {public void} setFrameFromCenter (java.awt.geom.Point2D@w{ }@var{center}, java.awt.geom.Point2D@w{ }@var{corner}) 

@end deftypemethod
@deftypemethod RectangularShape {public boolean} contains (java.awt.geom.Point2D@w{ }@var{p}) 

@end deftypemethod
@deftypemethod RectangularShape {public boolean} intersects (java.awt.geom.Rectangle2D@w{ }@var{r}) 

@end deftypemethod
@deftypemethod RectangularShape {public boolean} contains (java.awt.geom.Rectangle2D@w{ }@var{r}) 

@end deftypemethod
@deftypemethod RectangularShape {public Rectangle} getBounds () 

@end deftypemethod
@deftypemethod RectangularShape {public PathIterator} getPathIterator (java.awt.geom.AffineTransform@w{ }@var{at}, double@w{ }@var{flatness}) 

@end deftypemethod
@deftypemethod RectangularShape {public Object} clone () 

@end deftypemethod
@deftypemethod RoundRectangle2D {public abstract double} getArcHeight () 
Return the arc height of this round rectangle.
@end deftypemethod
@deftypemethod RoundRectangle2D {public abstract double} getArcWidth () 
Return the arc width of this round rectangle.
@end deftypemethod
@deftypemethod RoundRectangle2D {public abstract void} setRoundRect (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}, double@w{ }@var{arcWidth}, double@w{ }@var{arcHeight}) 
Set the values of this round rectangle
@end deftypemethod
@deftypemethod RoundRectangle2D {public boolean} contains (double@w{ }@var{x}, double@w{ }@var{y}) 
Return true if this object contains the specified point.
@end deftypemethod
@deftypemethod RoundRectangle2D {public boolean} contains (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 
Return true if this object contains the specified rectangle
@end deftypemethod
@deftypemethod RoundRectangle2D {public PathIterator} getPathIterator (java.awt.geom.AffineTransform@w{ }@var{at}) 
Return a new path iterator which iterates over this rectangle.
@end deftypemethod
@deftypemethod RoundRectangle2D {public boolean} intersects (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 
Return true if the given rectangle intersects this shape.
@end deftypemethod
@deftypemethod RoundRectangle2D {public void} setFrame (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}) 
Set the boundary of this round rectangle.
@end deftypemethod
@deftypemethod RoundRectangle2D {public void} setRoundRect (java.awt.geom.RoundRectangle2D@w{ }@var{rr}) 
Set the values of this round rectangle to be the same as those
 of the argument.
@end deftypemethod
@deftypemethod RoundRectangle2D.Float {public double} getArcHeight () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Float {public double} getArcWidth () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Float {public Rectangle2D} getBounds2D () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Float {public double} getX () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Float {public double} getY () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Float {public double} getWidth () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Float {public double} getHeight () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Float {public boolean} isEmpty () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Float {public void} setRoundRect (float@w{ }@var{x}, float@w{ }@var{y}, float@w{ }@var{w}, float@w{ }@var{h}, float@w{ }@var{arcWidth}, float@w{ }@var{arcHeight}) 

@end deftypemethod
@deftypemethod RoundRectangle2D.Float {public void} setRoundRect (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}, double@w{ }@var{arcWidth}, double@w{ }@var{arcHeight}) 

@end deftypemethod
@deftypemethod RoundRectangle2D.Double {public double} getArcHeight () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Double {public double} getArcWidth () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Double {public Rectangle2D} getBounds2D () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Double {public double} getX () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Double {public double} getY () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Double {public double} getWidth () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Double {public double} getHeight () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Double {public boolean} isEmpty () 

@end deftypemethod
@deftypemethod RoundRectangle2D.Double {public void} setRoundRect (double@w{ }@var{x}, double@w{ }@var{y}, double@w{ }@var{w}, double@w{ }@var{h}, double@w{ }@var{arcWidth}, double@w{ }@var{arcHeight}) 

@end deftypemethod
