@deftypemethod Process {public abstract void} destroy () 

@end deftypemethod
@deftypemethod Process {public abstract int} exitValue () 

@end deftypemethod
@deftypemethod Process {public abstract InputStream} getErrorStream () 

@end deftypemethod
@deftypemethod Process {public abstract InputStream} getInputStream () 

@end deftypemethod
@deftypemethod Process {public abstract OutputStream} getOutputStream () 

@end deftypemethod
@deftypemethod Process {public abstract int} waitFor () @*throws InterruptedException

@end deftypemethod
@deftypemethod Runnable {public void} run () 

@end deftypemethod
@deftypemethod Runtime {public Process} exec (java.lang.String@w{ }@var{prog}) @*throws IOException

@end deftypemethod
@deftypemethod Runtime {public Process} exec (java.lang.String@w{ }@var{prog}, java.lang.String[]@w{ }@var{envp}) @*throws IOException

@end deftypemethod
@deftypemethod Runtime {public Process} exec (java.lang.String[]@w{ }@var{progarray}) @*throws IOException

@end deftypemethod
@deftypemethod Runtime {public Process} exec (java.lang.String[]@w{ }@var{progarray}, java.lang.String[]@w{ }@var{envp}) @*throws IOException

@end deftypemethod
@deftypemethod Runtime {public native void} exit (int@w{ }@var{status}) 

@end deftypemethod
@deftypemethod Runtime {public native long} freeMemory () 

@end deftypemethod
@deftypemethod Runtime {public native void} gc () 

@end deftypemethod
@deftypemethod Runtime {public InputStream} getLocalizedInputStream (java.io.InputStream@w{ }@var{in}) 

@end deftypemethod
@deftypemethod Runtime {public OutputStream} getLocalizedOutputStream (java.io.OutputStream@w{ }@var{out}) 

@end deftypemethod
@deftypemethod Runtime {public static Runtime} getRuntime () 

@end deftypemethod
@deftypemethod Runtime {public void} load (java.lang.String@w{ }@var{pathname}) 

@end deftypemethod
@deftypemethod Runtime {public void} loadLibrary (java.lang.String@w{ }@var{libname}) 

@end deftypemethod
@deftypemethod Runtime {public native void} runFinalization () 

@end deftypemethod
@deftypemethod Runtime {public static void} runFinalizersOnExit (boolean@w{ }@var{run}) 

@end deftypemethod
@deftypemethod Runtime {public native long} totalMemory () 

@end deftypemethod
@deftypemethod Runtime {public native void} traceInstructions (boolean@w{ }@var{on}) 

@end deftypemethod
@deftypemethod Runtime {public native void} traceMethodCalls (boolean@w{ }@var{on}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkAccept (java.lang.String@w{ }@var{host}, int@w{ }@var{port}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkAccess (java.lang.Thread@w{ }@var{thrd}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkAccess (java.lang.ThreadGroup@w{ }@var{thrdGroup}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkAwtEventQueueAccess () 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkConnect (java.lang.String@w{ }@var{host}, int@w{ }@var{prt}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkConnect (java.lang.String@w{ }@var{host}, int@w{ }@var{prt}, java.lang.Object@w{ }@var{ctx}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkCreateClassLoader () 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkDelete (java.lang.String@w{ }@var{fileName}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkExec (java.lang.String@w{ }@var{prog}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkExit (int@w{ }@var{stat}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkLink (java.lang.String@w{ }@var{lib}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkListen (int@w{ }@var{lport}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkMemberAccess (java.lang.Class@w{ }@var{cl}, int@w{ }@var{mtype}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkMulticast (java.net.InetAddress@w{ }@var{maddr}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkMulticast (java.net.InetAddress@w{ }@var{maddr}, byte@w{ }@var{ttl}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkPackageAccess (java.lang.String@w{ }@var{pkg}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkPackageDefinition (java.lang.String@w{ }@var{pkg}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkPermission (java.security.Permission@w{ }@var{perm}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkPrintJobAccess () 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkPropertiesAccess () 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkPropertyAccess (java.lang.String@w{ }@var{prop}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkPropertyAccess (java.lang.String@w{ }@var{prop}, java.lang.String@w{ }@var{defval}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkRead (java.io.FileDescriptor@w{ }@var{fd}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkRead (java.lang.String@w{ }@var{fileName}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkRead (java.lang.String@w{ }@var{fileName}, java.lang.Object@w{ }@var{ctx}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkSecurityAccess (java.lang.String@w{ }@var{action}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkSetFactory () 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkSystemClipboardAccess () 

@end deftypemethod
@deftypemethod SecurityManager {public boolean} checkTopLevelWindow (java.lang.Object@w{ }@var{window}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkWrite (java.io.FileDescriptor@w{ }@var{fd}) 

@end deftypemethod
@deftypemethod SecurityManager {public void} checkWrite (java.lang.String@w{ }@var{fileName}) 

@end deftypemethod
@deftypemethod SecurityManager {protected int} classDepth (java.lang.String@w{ }@var{className}) 

@end deftypemethod
@deftypemethod SecurityManager {protected int} classLoaderDepth () 

@end deftypemethod
@deftypemethod SecurityManager {protected ClassLoader} currentClassLoader () 

@end deftypemethod
@deftypemethod SecurityManager {protected Class} currentLoadedClass () 

@end deftypemethod
@deftypemethod SecurityManager {protected Class} getClassContext () 

@end deftypemethod
@deftypemethod SecurityManager {public boolean} getInCheck () 

@end deftypemethod
@deftypemethod SecurityManager {public Object} getSecurityContext () 

@end deftypemethod
@deftypemethod SecurityManager {public ThreadGroup} getThreadGroup () 

@end deftypemethod
@deftypemethod SecurityManager {protected boolean} inClass (java.lang.String@w{ }@var{className}) 

@end deftypemethod
@deftypemethod SecurityManager {protected boolean} inClassLoader () 

@end deftypemethod
@deftypemethod Short {public byte} byteValue () 

@end deftypemethod
@deftypemethod Short {public short} shortValue () 

@end deftypemethod
@deftypemethod Short {public int} intValue () 

@end deftypemethod
@deftypemethod Short {public long} longValue () 

@end deftypemethod
@deftypemethod Short {public float} floatValue () 

@end deftypemethod
@deftypemethod Short {public double} doubleValue () 

@end deftypemethod
@deftypemethod Short {public static Short} decode (java.lang.String@w{ }@var{str}) @*throws NumberFormatException

@end deftypemethod
@deftypemethod Short {public static short} parseShort (java.lang.String@w{ }@var{str}, int@w{ }@var{radix}) @*throws NumberFormatException

@end deftypemethod
@deftypemethod Short {public static short} parseShort (java.lang.String@w{ }@var{str}) @*throws NumberFormatException

@end deftypemethod
@deftypemethod Short {public static Short} valueOf (java.lang.String@w{ }@var{str}, int@w{ }@var{radix}) @*throws NumberFormatException

@end deftypemethod
@deftypemethod Short {public static Short} valueOf (java.lang.String@w{ }@var{str}) @*throws NumberFormatException

@end deftypemethod
@deftypemethod Short {public int} compareTo (java.lang.Short@w{ }@var{anotherShort}) 

@end deftypemethod
@deftypemethod Short {public int} compareTo (java.lang.Object@w{ }@var{o}) @*throws ClassCastException

@end deftypemethod
@deftypemethod Short {public boolean} equals (java.lang.Object@w{ }@var{obj}) 

@end deftypemethod
@deftypemethod Short {public int} hashCode () 

@end deftypemethod
@deftypemethod Short {public String} toString () 

@end deftypemethod
@deftypemethod Short {public static String} toString (short@w{ }@var{value}) 

@end deftypemethod
@deftypemethod String {public static String} copyValueOf (char[]@w{ }@var{data}) 

@end deftypemethod
@deftypemethod String {public static String} copyValueOf (char[]@w{ }@var{data}, int@w{ }@var{offset}, int@w{ }@var{count}) 

@end deftypemethod
@deftypemethod String {public String} toString () 

@end deftypemethod
@deftypemethod String {public native boolean} equals (java.lang.Object@w{ }@var{anObject}) 

@end deftypemethod
@deftypemethod String {public native int} hashCode () 

@end deftypemethod
@deftypemethod String {public int} length () 

@end deftypemethod
@deftypemethod String {public native char} charAt (int@w{ }@var{index}) 

@end deftypemethod
@deftypemethod String {public native void} getChars (int@w{ }@var{srcBegin}, int@w{ }@var{srcEnd}, char[]@w{ }@var{dst}, int@w{ }@var{dstBegin}) 

@end deftypemethod
@deftypemethod String {public byte} getBytes () 

@end deftypemethod
@deftypemethod String {public native byte} getBytes (java.lang.String@w{ }@var{enc}) @*throws UnsupportedEncodingException

@end deftypemethod
@deftypemethod String {public native void} getBytes (int@w{ }@var{srcBegin}, int@w{ }@var{srcEnd}, byte[]@w{ }@var{dst}, int@w{ }@var{dstBegin}) 

@end deftypemethod
@deftypemethod String {public native char} toCharArray () 

@end deftypemethod
@deftypemethod String {public native boolean} equalsIgnoreCase (java.lang.String@w{ }@var{anotherString}) 

@end deftypemethod
@deftypemethod String {public native int} compareTo (java.lang.String@w{ }@var{anotherString}) 

@end deftypemethod
@deftypemethod String {public int} compareTo (java.lang.Object@w{ }@var{obj}) 

@end deftypemethod
@deftypemethod String {public int} compareToIgnoreCase (java.lang.String@w{ }@var{str}) 

@end deftypemethod
@deftypemethod String {public native boolean} regionMatches (int@w{ }@var{toffset}, java.lang.String@w{ }@var{other}, int@w{ }@var{ooffset}, int@w{ }@var{len}) 

@end deftypemethod
@deftypemethod String {public native boolean} regionMatches (boolean@w{ }@var{ignoreCase}, int@w{ }@var{toffset}, java.lang.String@w{ }@var{other}, int@w{ }@var{ooffset}, int@w{ }@var{len}) 

@end deftypemethod
@deftypemethod String {public boolean} startsWith (java.lang.String@w{ }@var{prefix}) 

@end deftypemethod
@deftypemethod String {public native boolean} startsWith (java.lang.String@w{ }@var{prefix}, int@w{ }@var{toffset}) 

@end deftypemethod
@deftypemethod String {public boolean} endsWith (java.lang.String@w{ }@var{suffix}) 

@end deftypemethod
@deftypemethod String {public int} indexOf (int@w{ }@var{ch}) 

@end deftypemethod
@deftypemethod String {public native int} indexOf (int@w{ }@var{ch}, int@w{ }@var{fromIndex}) 

@end deftypemethod
@deftypemethod String {public int} indexOf (java.lang.String@w{ }@var{str}) 

@end deftypemethod
@deftypemethod String {public native int} indexOf (java.lang.String@w{ }@var{str}, int@w{ }@var{fromIndex}) 

@end deftypemethod
@deftypemethod String {public int} lastIndexOf (int@w{ }@var{ch}) 

@end deftypemethod
@deftypemethod String {public native int} lastIndexOf (int@w{ }@var{ch}, int@w{ }@var{fromIndex}) 

@end deftypemethod
@deftypemethod String {public int} lastIndexOf (java.lang.String@w{ }@var{str}) 

@end deftypemethod
@deftypemethod String {public int} lastIndexOf (java.lang.String@w{ }@var{str}, int@w{ }@var{fromIndex}) 

@end deftypemethod
@deftypemethod String {public String} substring (int@w{ }@var{beginIndex}) 

@end deftypemethod
@deftypemethod String {public native String} substring (int@w{ }@var{beginIndex}, int@w{ }@var{endIndex}) 

@end deftypemethod
@deftypemethod String {public native String} concat (java.lang.String@w{ }@var{str}) 

@end deftypemethod
@deftypemethod String {public native String} replace (char@w{ }@var{oldChar}, char@w{ }@var{newChar}) 

@end deftypemethod
@deftypemethod String {public native String} toLowerCase (java.util.Locale@w{ }@var{locale}) 

@end deftypemethod
@deftypemethod String {public native String} toUpperCase (java.util.Locale@w{ }@var{locale}) 

@end deftypemethod
@deftypemethod String {public String} toLowerCase () 

@end deftypemethod
@deftypemethod String {public String} toUpperCase () 

@end deftypemethod
@deftypemethod String {public native String} trim () 

@end deftypemethod
@deftypemethod String {public static String} valueOf (java.lang.Object@w{ }@var{obj}) 

@end deftypemethod
@deftypemethod String {public static String} valueOf (char[]@w{ }@var{data}) 

@end deftypemethod
@deftypemethod String {public static native String} valueOf (char[]@w{ }@var{data}, int@w{ }@var{offset}, int@w{ }@var{count}) 

@end deftypemethod
@deftypemethod String {public static String} valueOf (boolean@w{ }@var{b}) 

@end deftypemethod
@deftypemethod String {public static native String} valueOf (char@w{ }@var{c}) 

@end deftypemethod
@deftypemethod String {public static String} valueOf (int@w{ }@var{i}) 

@end deftypemethod
@deftypemethod String {public static String} valueOf (long@w{ }@var{l}) 

@end deftypemethod
@deftypemethod String {public static String} valueOf (float@w{ }@var{f}) 

@end deftypemethod
@deftypemethod String {public static String} valueOf (double@w{ }@var{d}) 

@end deftypemethod
@deftypemethod String {public native String} intern () 

@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} append (boolean@w{ }@var{bool}) 
Append the @code{String} value of the argument to this @code{StringBuffer}.
  Uses @code{String.valueOf()} to convert to
  @code{String}.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized StringBuffer} append (char@w{ }@var{ch}) 
Append the @code{char} to this @code{StringBuffer}.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} append (int@w{ }@var{inum}) 
Append the @code{String} value of the argument to this @code{StringBuffer}.
  Uses @code{String.valueOf()} to convert to
  @code{String}.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} append (long@w{ }@var{lnum}) 
Append the @code{String} value of the argument to this @code{StringBuffer}.
  Uses @code{String.valueOf()} to convert to
  @code{String}.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} append (float@w{ }@var{fnum}) 
Append the @code{String} value of the argument to this @code{StringBuffer}.
  Uses @code{String.valueOf()} to convert to
  @code{String}.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} append (double@w{ }@var{dnum}) 
Append the @code{String} value of the argument to this @code{StringBuffer}.
  Uses @code{String.valueOf()} to convert to
  @code{String}.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} append (java.lang.Object@w{ }@var{obj}) 
Append the @code{String} value of the argument to this @code{StringBuffer}.
  Uses @code{String.valueOf()} to convert to
  @code{String}.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized StringBuffer} append (java.lang.String@w{ }@var{str}) 
Append the @code{String} to this @code{StringBuffer}.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} append (char[]@w{ }@var{data}) 
Append the @code{char} array to this @code{StringBuffer}.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized StringBuffer} append (char[]@w{ }@var{data}, int@w{ }@var{offset}, int@w{ }@var{count}) 
Append the @code{char} array to this @code{StringBuffer}.
@end deftypemethod
@deftypemethod StringBuffer {public int} capacity () 
Get the total number of characters this @code{StringBuffer}
  can support before it must be grown.  Not to be confused with
  <em>length</em>.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized char} charAt (int@w{ }@var{index}) 
Get the character at the specified index.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized StringBuffer} delete (int@w{ }@var{start}, int@w{ }@var{end}) 
Delete characters from this @code{StringBuffer}.
  @code{delete(10, 12)} will delete 10 and 11, but not 12.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} deleteCharAt (int@w{ }@var{index}) 
Delete a character from this @code{StringBuffer}.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized void} ensureCapacity (int@w{ }@var{minimumCapacity}) 
Increase the capacity of this @code{StringBuffer}.
  This will ensure that an expensive growing operation will not occur
  until @code{minimumCapacity} is reached.
  If the capacity is actually already greater than @code{minimumCapacity}
@end deftypemethod
@deftypemethod StringBuffer {public synchronized void} getChars (int@w{ }@var{srcOffset}, int@w{ }@var{srcEnd}, char[]@w{ }@var{dst}, int@w{ }@var{dstOffset}) 
Get the specified array of characters.
  The characters will be copied into the array you pass in.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} insert (int@w{ }@var{offset}, boolean@w{ }@var{bool}) 
Insert the @code{String} value of the argument into this @code{StringBuffer}.
  Uses @code{String.valueOf()} to convert to
  @code{String}.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized StringBuffer} insert (int@w{ }@var{offset}, char@w{ }@var{ch}) 
Insert the @code{char} argument into this @code{StringBuffer}.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} insert (int@w{ }@var{offset}, int@w{ }@var{inum}) 
Insert the @code{String} value of the argument into this @code{StringBuffer}.
  Uses @code{String.valueOf()} to convert to
  @code{String}.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} insert (int@w{ }@var{offset}, long@w{ }@var{lnum}) 
Insert the @code{String} value of the argument into this @code{StringBuffer}.
  Uses @code{String.valueOf()} to convert to
  @code{String}.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} insert (int@w{ }@var{offset}, float@w{ }@var{fnum}) 
Insert the @code{String} value of the argument into this @code{StringBuffer}.
  Uses @code{String.valueOf()} to convert to
  @code{String}.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} insert (int@w{ }@var{offset}, double@w{ }@var{dnum}) 
Insert the @code{String} value of the argument into this @code{StringBuffer}.
  Uses @code{String.valueOf()} to convert to
  @code{String}.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} insert (int@w{ }@var{offset}, java.lang.Object@w{ }@var{obj}) 
Insert the @code{String} value of the argument into this @code{StringBuffer}.
  Uses @code{String.valueOf()} to convert to
  @code{String}.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized StringBuffer} insert (int@w{ }@var{offset}, java.lang.String@w{ }@var{str}) 
Insert the @code{String} argument into this @code{StringBuffer}.
@end deftypemethod
@deftypemethod StringBuffer {public StringBuffer} insert (int@w{ }@var{offset}, char[]@w{ }@var{data}) 
Insert the @code{char[]} argument into this
  @code{StringBuffer}.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized StringBuffer} insert (int@w{ }@var{offset}, char[]@w{ }@var{str}, int@w{ }@var{str_offset}, int@w{ }@var{len}) 
Insert the @code{char[]} argument into this
  @code{StringBuffer}.
@end deftypemethod
@deftypemethod StringBuffer {public int} length () 
Get the length of the @code{String} this
  @code{StringBuffer} would create.  Not to be confused with the
  <em>capacity</em> of the @code{StringBuffer}.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized StringBuffer} replace (int@w{ }@var{start}, int@w{ }@var{end}, java.lang.String@w{ }@var{str}) 
Replace characters between index @code{start} (inclusive) and 
  @code{end} (exclusive) with @code{str}. If @code{end} 
  is larger than the size of this StringBuffer, all characters after
  @code{start} are replaced.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized StringBuffer} reverse () 
Reverse the characters in this StringBuffer.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized void} setCharAt (int@w{ }@var{index}, char@w{ }@var{ch}) 
Set the character at the specified index.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized void} setLength (int@w{ }@var{newLength}) 
Set the length of this StringBuffer.
  


  If the new length is greater than the current length, all the new
  characters are set to '\0'.
  


  If the new length is less than the current length, the first
  @code{newLength} characters of the old array will be
@end deftypemethod
@deftypemethod StringBuffer {public String} substring (int@w{ }@var{beginIndex}) 
Creates a substring of this StringBuffer, starting at a specified index
 and ending at the end of this StringBuffer.
@end deftypemethod
@deftypemethod StringBuffer {public synchronized String} substring (int@w{ }@var{beginIndex}, int@w{ }@var{endIndex}) 
Creates a substring of this StringBuffer, starting at a specified index
 and ending at one character before a specified index.
@end deftypemethod
@deftypemethod StringBuffer {public String} toString () 
Convert this @code{StringBuffer} to a @code{String}.
@end deftypemethod
@deftypemethod System {public static native void} arraycopy (java.lang.Object@w{ }@var{src}, int@w{ }@var{srcOffset}, java.lang.Object@w{ }@var{dst}, int@w{ }@var{dstOffset}, int@w{ }@var{count}) 

@end deftypemethod
@deftypemethod System {public static native long} currentTimeMillis () 

@end deftypemethod
@deftypemethod System {public static void} exit (int@w{ }@var{status}) 

@end deftypemethod
@deftypemethod System {public static void} gc () 

@end deftypemethod
@deftypemethod System {public static String} getenv (java.lang.String@w{ }@var{name}) 

@end deftypemethod
@deftypemethod System {public static Properties} getProperties () 

@end deftypemethod
@deftypemethod System {public static String} getProperty (java.lang.String@w{ }@var{property}) 

@end deftypemethod
@deftypemethod System {public static String} getProperty (java.lang.String@w{ }@var{property}, java.lang.String@w{ }@var{defval}) 

@end deftypemethod
@deftypemethod System {public static SecurityManager} getSecurityManager () 

@end deftypemethod
@deftypemethod System {public static native int} identityHashCode (java.lang.Object@w{ }@var{obj}) 

@end deftypemethod
@deftypemethod System {public static void} load (java.lang.String@w{ }@var{pathname}) 

@end deftypemethod
@deftypemethod System {public static void} loadLibrary (java.lang.String@w{ }@var{libname}) 

@end deftypemethod
@deftypemethod System {public static void} runFinalization () 

@end deftypemethod
@deftypemethod System {public static void} runFinalizersOnExit (boolean@w{ }@var{run}) 

@end deftypemethod
@deftypemethod System {public static native void} setErr (java.io.PrintStream@w{ }@var{newErr}) 

@end deftypemethod
@deftypemethod System {public static native void} setIn (java.io.InputStream@w{ }@var{newIn}) 

@end deftypemethod
@deftypemethod System {public static native void} setOut (java.io.PrintStream@w{ }@var{newOut}) 

@end deftypemethod
@deftypemethod System {public static void} setProperties (java.util.Properties@w{ }@var{props}) 

@end deftypemethod
@deftypemethod System {public static String} setProperty (java.lang.String@w{ }@var{key}, java.lang.String@w{ }@var{value}) 

@end deftypemethod
@deftypemethod System {public static void} setSecurityManager (java.lang.SecurityManager@w{ }@var{s}) 

@end deftypemethod
@deftypemethod Thread {public static int} activeCount () 

@end deftypemethod
@deftypemethod Thread {public final void} checkAccess () 

@end deftypemethod
@deftypemethod Thread {public native int} countStackFrames () 

@end deftypemethod
@deftypemethod Thread {public static native Thread} currentThread () 

@end deftypemethod
@deftypemethod Thread {public native void} destroy () 

@end deftypemethod
@deftypemethod Thread {public static void} dumpStack () 

@end deftypemethod
@deftypemethod Thread {public static int} enumerate (java.lang.Thread[]@w{ }@var{threads}) 

@end deftypemethod
@deftypemethod Thread {public final String} getName () 

@end deftypemethod
@deftypemethod Thread {public final int} getPriority () 

@end deftypemethod
@deftypemethod Thread {public final ThreadGroup} getThreadGroup () 

@end deftypemethod
@deftypemethod Thread {public native void} interrupt () 

@end deftypemethod
@deftypemethod Thread {public static boolean} interrupted () 

@end deftypemethod
@deftypemethod Thread {public boolean} isInterrupted () 

@end deftypemethod
@deftypemethod Thread {public final boolean} isAlive () 

@end deftypemethod
@deftypemethod Thread {public final boolean} isDaemon () 

@end deftypemethod
@deftypemethod Thread {public final void} join () @*throws InterruptedException

@end deftypemethod
@deftypemethod Thread {public final void} join (long@w{ }@var{timeout}) @*throws InterruptedException

@end deftypemethod
@deftypemethod Thread {public final native void} join (long@w{ }@var{timeout}, int@w{ }@var{nanos}) @*throws InterruptedException

@end deftypemethod
@deftypemethod Thread {public final native void} resume () 

@end deftypemethod
@deftypemethod Thread {public void} run () 

@end deftypemethod
@deftypemethod Thread {public final void} setDaemon (boolean@w{ }@var{status}) 

@end deftypemethod
@deftypemethod Thread {public synchronized ClassLoader} getContextClassLoader () 

@end deftypemethod
@deftypemethod Thread {public synchronized void} setContextClassLoader (java.lang.ClassLoader@w{ }@var{cl}) 

@end deftypemethod
@deftypemethod Thread {public final void} setName (java.lang.String@w{ }@var{n}) 

@end deftypemethod
@deftypemethod Thread {public final native void} setPriority (int@w{ }@var{newPriority}) 

@end deftypemethod
@deftypemethod Thread {public static void} sleep (long@w{ }@var{timeout}) @*throws InterruptedException

@end deftypemethod
@deftypemethod Thread {public static native void} sleep (long@w{ }@var{timeout}, int@w{ }@var{nanos}) @*throws InterruptedException

@end deftypemethod
@deftypemethod Thread {public native synchronized void} start () 

@end deftypemethod
@deftypemethod Thread {public final void} stop () 

@end deftypemethod
@deftypemethod Thread {public final native synchronized void} stop (java.lang.Throwable@w{ }@var{e}) 

@end deftypemethod
@deftypemethod Thread {public final native void} suspend () 

@end deftypemethod
@deftypemethod Thread {public String} toString () 

@end deftypemethod
@deftypemethod Thread {public static native void} yield () 

@end deftypemethod
@deftypemethod ThreadGroup {public final String} getName () 
Get the name of this ThreadGroup.
@end deftypemethod
@deftypemethod ThreadGroup {public final ThreadGroup} getParent () 
Get the parent of this ThreadGroup.
@end deftypemethod
@deftypemethod ThreadGroup {public final synchronized void} setMaxPriority (int@w{ }@var{maxpri}) 
Set the maximum priority for Threads in this ThreadGroup. setMaxPriority
  can only be used to reduce the current maximum. If maxpri
  is greater than the current Maximum, the current value is not changed.
  Calling this does not effect threads already in this ThreadGroup.
@end deftypemethod
@deftypemethod ThreadGroup {public final int} getMaxPriority () 
Get the maximum priority of Threads in this ThreadGroup.
@end deftypemethod
@deftypemethod ThreadGroup {public final void} setDaemon (boolean@w{ }@var{daemon}) 
Set whether this ThreadGroup is a daemon group.  A daemon
  group will be destroyed when its last thread is stopped and
  its last thread group is destroyed.
@end deftypemethod
@deftypemethod ThreadGroup {public final boolean} isDaemon () 
Tell whether this ThreadGroup is a daemon group.  A daemon
 group will be destroyed when its last thread is stopped and
 its last thread group is destroyed.
@end deftypemethod
@deftypemethod ThreadGroup {public synchronized boolean} isDestroyed () 
Tell whether this ThreadGroup has been destroyed or not.
@end deftypemethod
@deftypemethod ThreadGroup {public final boolean} parentOf (java.lang.ThreadGroup@w{ }@var{tg}) 
Check whether this ThreadGroup is an ancestor of the
 specified ThreadGroup, or if they are the same.
@end deftypemethod
@deftypemethod ThreadGroup {public synchronized int} activeCount () 
Return the total number of active threads in this ThreadGroup
 and all its descendants.



 This cannot return an exact number, since the status of threads
 may change after they were counted.  But it should be pretty
 close.


@end deftypemethod
@deftypemethod ThreadGroup {public synchronized int} activeGroupCount () 
Get the number of active groups in this ThreadGroup.  This group
 itself is not included in the count.
@end deftypemethod
@deftypemethod ThreadGroup {public int} enumerate (java.lang.Thread[]@w{ }@var{threads}) 
Copy all of the active Threads from this ThreadGroup and
 its descendants into the specified array.  If the array is
 not big enough to hold all the Threads, extra Threads will
 simply not be copied.
@end deftypemethod
@deftypemethod ThreadGroup {public int} enumerate (java.lang.Thread[]@w{ }@var{threads}, boolean@w{ }@var{useDescendants}) 
Copy all of the active Threads from this ThreadGroup and,
 if desired, from its descendants, into the specified array.
 If the array is not big enough to hold all the Threads,
 extra Threads will simply not be copied.
@end deftypemethod
@deftypemethod ThreadGroup {public int} enumerate (java.lang.ThreadGroup[]@w{ }@var{groups}) 
Copy all active ThreadGroups that are descendants of this
 ThreadGroup into the specified array.  If the array is not
 large enough to hold all active ThreadGroups, extra
 ThreadGroups simply will not be copied.
@end deftypemethod
@deftypemethod ThreadGroup {public int} enumerate (java.lang.ThreadGroup[]@w{ }@var{groups}, boolean@w{ }@var{recurse}) 
Copy all active ThreadGroups that are children of this
 ThreadGroup into the specified array, and if desired, also
 copy all active descendants into the array.  If the array
 is not large enough to hold all active ThreadGroups, extra
 ThreadGroups simply will not be copied.
@end deftypemethod
@deftypemethod ThreadGroup {public final synchronized void} interrupt () 
Interrupt all Threads in this ThreadGroup and its sub-groups.
@end deftypemethod
@deftypemethod ThreadGroup {public final synchronized void} stop () 
Stop all Threads in this ThreadGroup and its descendants.
@end deftypemethod
@deftypemethod ThreadGroup {public final synchronized void} suspend () 
Suspend all Threads in this ThreadGroup and its descendants.
@end deftypemethod
@deftypemethod ThreadGroup {public final synchronized void} resume () 
Resume all Threads in this ThreadGroup and its descendants.
@end deftypemethod
@deftypemethod ThreadGroup {public final synchronized void} destroy () 
Destroy this ThreadGroup.  There can be no Threads in it,
 and none of its descendants (sub-groups) may have Threads in them.
 All its descendants will be destroyed as well.
@end deftypemethod
@deftypemethod ThreadGroup {public void} list () 
Print out information about this ThreadGroup to System.out.
@end deftypemethod
@deftypemethod ThreadGroup {public void} uncaughtException (java.lang.Thread@w{ }@var{thread}, java.lang.Throwable@w{ }@var{t}) 
When a Thread in this ThreadGroup does not catch an exception,
 this method of the ThreadGroup is called.



 ThreadGroup's implementation does the following:<BR>
 
@itemize @bullet

 
@item
If there is a parent ThreadGroup, call uncaughtException()
	  in the parent.

 
@item
If the Throwable passed is a ThreadDeath, don't do
	  anything.

 
@item
Otherwise, call @code{exception.printStackTrace().}

 
@end itemize

@end deftypemethod
@deftypemethod ThreadGroup {public boolean} allowThreadSuspension (boolean@w{ }@var{allow}) 
Tell the VM whether it may suspend Threads in low memory
 situations.
@end deftypemethod
@deftypemethod ThreadGroup {public String} toString () 
Get a human-readable representation of this ThreadGroup.
@end deftypemethod
@deftypemethod ThreadGroup {public final void} checkAccess () 
Find out if the current Thread can modify this ThreadGroup.
 Calls the current SecurityManager's checkAccess() method to
 find out.  If there is none, it assumes everything's OK.
@end deftypemethod
@deftypemethod Throwable {public native Throwable} fillInStackTrace () 

@end deftypemethod
@deftypemethod Throwable {public String} getLocalizedMessage () 

@end deftypemethod
@deftypemethod Throwable {public String} getMessage () 

@end deftypemethod
@deftypemethod Throwable {public void} printStackTrace () 

@end deftypemethod
@deftypemethod Throwable {public void} printStackTrace (java.io.PrintStream@w{ }@var{ps}) 

@end deftypemethod
@deftypemethod Throwable {public void} printStackTrace (java.io.PrintWriter@w{ }@var{wr}) 

@end deftypemethod
@deftypemethod Throwable {public String} toString () 

@end deftypemethod
