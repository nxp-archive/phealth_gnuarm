2004-07-22  Ben Elliston  <bje@au.ibm.com>

	* ifcvt.c (find_if_block): Check else_succ edge count.
	* gcse.c (remove_reachable_equiv_notes): Assign NULL to `act' if
	the iterator overruns the end of the vector.

2004-07-22  Ben Elliston  <bje@au.ibm.com>

	* except.c (connect_post_landing_pads): Use EDGE_COUNT.
	* ifcvt.c (find_if_case_2): Only access edge 0 if the edge count
	is non-zero.
	* cfghooks.c (delete_basic_block): Truncate unconditionally as it
	is now safe to do so.

2004-07-21  Ben Elliston  <bje@au.ibm.com>

	* cfganal.c (remove_fake_predecessors): Decrement the iterator if
	an edge is removed so that we re-examine the current vector slot.
	* except.c (finish_eh_generation): Likewise.
	* cfgexpand.c (expand_block): Likewise.
	* cfghooks.c (delete_basic_block): Likewise.
	(merge_blocks): Likewise.
	* profile.c (compute_branch_probabilities): Use EDGE_COUNT, not
	a FOR_EACH_EDGE loop with an increment in the loop body.
	* cfgloopmanip.c (fix_irreducible_loops): Use EDGE_COUNT.
	* bb-reorder.c (copy_bb_p): Directly test if edge count exceeds 8.
	* ifcvt.c (merge_if_block): Use EDGE_COUNT for clarity.

2004-07-21  Ben Elliston  <bje@au.ibm.com>

	* cfg.c (clear_edges): Truncate the bb->succ, bb->pred vectors.
	Likewise for EXIT_BLOCK_PTR->succ and EXIT_BLOCK_PTR->pred.

2004-07-20  Ben Elliston  <bje@au.ibm.com>

	* config/ia64/ia64.c (ia64_expand_prologue): Iterate over edge
	vector instead of traversing a linked list.
	* config/rs6000/rs6000.c (rs6000_emit_prologue): Use EDGE_COUNT to
	count elements rather than testing the basic_block->pred member.
	* config/frv/frv.c (frv_ifcvt_modify_tests): Use edge accessor.

2004-07-20  Ben Elliston  <bje@au.ibm.com>	

	* Ben to add a large ChangeLog entry soon!

