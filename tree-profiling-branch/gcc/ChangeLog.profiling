2004-04-02  Jan Hubicka  <jh@suse.cz>

	* builtins.def (expect): Make const/notrhow.
	* predict.c (process_note_prediction): Rename to:
	(predict_paths_leading_to): ... this one.
	(expr_expected_value): New function.
	(tree_predict_by_opcode): Analyze builtin_expect.
	(return_prediction): New function.
	(tree_bb_level_predictions): New function.
	(strip_builtin_expect): New function.
	(tree_esitmate_probability): Add noreturn edges; do
	bb_level_predictions; enable return heuristics; strip
	builtin_expect_calls.

2004-03-31  Jan Hubicka  <jh@suse.cz>

	* cfgbuild.c (control_flow_insn_p):  Conditional noreturn call is not
	control flow insn.

2004-03-31  Jan Hubicka  <jh@suse.cz>

	* Merge from tree-ssa (tree-profiling-merge-20030330)

2004-03-18  Jan Hubicka  <jh@suse.cz>

	* predict.c (tree_estimate_probability): Temporarily disable return
	predictor.

2004-03-18  Jan Hubicka  <jh@suse.cz>

	* predict.c (propagate_freq): Compute correctly frequency of
	EXIT_BLOCK.

2004-03-18  Jan Hubicka  <jh@suse.cz>

	* merge with tree-ssa branch.

2004-03-17  Jan Hubicka  <jh@suse.cz>

	* tree-optimize.c (pass_cleanup_cfg): New.
	(init_tree_optimization_passes): add cleanupcfg pass after profilng.

2004-03-16  Jan Hubicka  <jh@suse.cz>

	* cfgexpand.c (expand_block): DO not expand COND_EXPR twice;
	fix profile updating.
	(construct_init_block, construct_exit_block): Fix profile updating.

2004-03-16  Jan Hubicka  <jh@suse.cz>

	* opts.c (common_handle_option): Disable value profilng until it is
	updated for tree-ssa.

2004-03-15  Jan Hubicka  <jh@suse.cz>

	* gimple-low.c (lower_cond_expr):  Do not re-use explicit gotos.
	* profile.c (branch_prob): Do not verify flow info; re-invent fallthru
	flags on trees; output coverage info for trees.
	* toplev.c (flag_tree_based_profiling): Enable it by default.
	(process_options): Do not sorry about coverage on trees.
	* tree-cfg.c (make_edges): Only delete unreachable block or mess the
	coverage info.
	(make_goto_expr_edges): Preserve locators for elliminated explicit
	gotos.
	(tree_find_edge_insert_loc): Deal with inserting just before return
	statement.
	* tree-optimize.c (init_tree_optimization_passes): Make tree-profilng
	to be run even when not optimizing.
	* tree-profile.c (do_tree_profiling): Don't run profilng when we are
	not profilng.

2004-03-15  Jan Hubicka  <jh@suse.cz>

	* cfgrtl.c (rtl_create_basic_block): Pre-allocate basic_block_info
	array.

2004-03-15  Jan Hubicka  <jh@suse.cz>

	* cfgexpand.c (tree_expand_cfg): Do not cleanup control flow.

2004-03-15  Jan Hubicka  <jh@suse.cz>

	* cfgcleanup.c (try_forward_edges): Take into account PRE_LOOP flag
	only when loop optimizer is run.

2004-03-14  Jan Hubicka  <jh@suse.cz>

	* tree-ssa.c (rewrite_into_ssa, compute_global_livein): Fix.

2004-03-14  Jan Hubicka  <jh@suse.cz>

	* opts.c (decode_options): Disable flag_loop_optimize.

2004-03-07  Jan Hubicka  <jh@suse.cz>

	* except.c (emit_to_new_bb_before):  Break fallthru edges.

	* except.c (can_throw_internal): Notice RESX instructions.

	* cfgexpand.c (tree_expand_cfg): Do not destroy the CFG.
	* passes.c (rest_of_compilation):  Do not call init_flow;
	do not build CFG.
	* tree-cfg.c (delete_tree_cfg_annotations): Clear RBI pointers.

	* tree-cfg.c (label_to_block): Emit missing langes
	* tree-optimize.c (tree_rest_of_compilation): Revert patch disabling
	compilation with errorcount/sorrycount.

2004-03-05  Steven Bosscher  <stevenb@suse.de>

	* cfgexpand.c (expand_block, construct_init_block): Minor code
	cleanups.  Use macros from tree.h.  Use extract_true_false_edge.
	Comment updates.

	* version.c: Rename to tree-profiling.

2004-03-03  Jan Hubicka  <jh@suse.cz>

	* Merge from tree-ssa (tree-profilng-merge-20040303)

2004-02-25  Stuart Hastings  <stuart@apple.com>

	* gimple-low.c (expand_var_p) Remove redundant call.
	
2004-02-25  Stuart Hastings  <stuart@apple.com>

	* tree-optimize.c (execute_inline) New.
	Make inliner into a PASS, move after first gimplification step.
	
2004-02-22  Jan Hubicka  <jh@suse.cz>

	* Merge from tree-ssa (tree-profilng-merge-20040222)

2004-02-22  Jan Hubicka  <jh@suse.cz>

	* cfgexpand.c:  Include flags.h
	(tree_expand_cfg): Do cleanup only when optimizing.
	* tree-optimize.c (init_tree_optimization_passes): Always build cfg.
	(tree_rest_of_compilation): Don't get into RTL when errorcount/sorrycount
	is set.

2004-02-21  Jan Hubicka  <jh@suse.cz>

	* Makefile.in (builtins.o): Include basic-blocks.h.
	(cfgexpand.o): New file.
	* builtins.c: Inlucde basic-blocks.h
	(entry_of_function): New static function.
	(expand_builtin_saveregs, expand_builtin_apply_args): Use it.
	* cfgexpand.c: New file.
	* tree-cfg.c (cleanup_control_flow): Make global.
	(delete_tree_annotations): Break out from...
	(delete_tree_cfg): ... this one.
	* tree-dump.c (dump_files): Add expanded.
	* tree-flow.h (delete_tree_cfg_annotations): Declare.
	(tree_expand_cfg, cleanup_control_flow): Declare.
	* tree-optimize.c (execute_del_cfg): Do not delete the basic block
	datastructure.
	(tree_rest_of_compilation): Use tree_expand_cfg if needed.

2004-02-20  Jan Hubicka  <jh@suse.cz>

	* cfgcleanup.c (try_optimize_cfg): Do not merge blocks separated by
	tablejump.

	* tree-cfg.c (cleanup_control_expr_graph): Update profile.

	* tree-cfg.c (disband_implicit_edges): Set fallthru edges correctly.

	* cfg.c (dump_flow_info): Work on trees too.

	* tree-pretty-print.c (dump_generic_bb_stuff):  Do not touch bb
	annotations when not allocated.

2004-02-16  Jan Hubicka  <jh@suse.cz>

	* Merge from tree-ssa branch  (tree-profilng-merge-20040216)

2004-02-16  Jan Hubicka  <jh@suse.cz>

	* cfgbuild.c (find_bb_boundaries): Add extra argument.
	collect list of labels whose address has been taken
	(control_flow_insn_p): Recognize noreturn call instructions
	and EH instructions followed by barrier as control flow insns.

