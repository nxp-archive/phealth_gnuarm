
// DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-

#ifndef __gnu_java_awt_peer_gtk_CairoSurfaceGraphics__
#define __gnu_java_awt_peer_gtk_CairoSurfaceGraphics__

#pragma interface

#include <gnu/java/awt/peer/gtk/CairoGraphics2D.h>
extern "Java"
{
  namespace gnu
  {
    namespace java
    {
      namespace awt
      {
        namespace peer
        {
          namespace gtk
          {
              class CairoSurface;
              class CairoSurfaceGraphics;
          }
        }
      }
    }
  }
  namespace java
  {
    namespace awt
    {
        class Graphics;
        class GraphicsConfiguration;
      namespace geom
      {
          class Rectangle2D;
      }
    }
  }
}

class gnu::java::awt::peer::gtk::CairoSurfaceGraphics : public ::gnu::java::awt::peer::gtk::CairoGraphics2D
{

public:
  CairoSurfaceGraphics(::gnu::java::awt::peer::gtk::CairoSurface *);
private:
  CairoSurfaceGraphics(::gnu::java::awt::peer::gtk::CairoSurfaceGraphics *);
public:
  virtual ::java::awt::Graphics * create();
  virtual ::java::awt::GraphicsConfiguration * getDeviceConfiguration();
public: // actually protected
  virtual ::java::awt::geom::Rectangle2D * getRealBounds();
public:
  virtual void copyAreaImpl(jint, jint, jint, jint, jint, jint);
public: // actually protected
  ::gnu::java::awt::peer::gtk::CairoSurface * __attribute__((aligned(__alignof__( ::gnu::java::awt::peer::gtk::CairoGraphics2D)))) surface;
private:
  jlong cairo_t;
public:
  static ::java::lang::Class class$;
};

#endif // __gnu_java_awt_peer_gtk_CairoSurfaceGraphics__
