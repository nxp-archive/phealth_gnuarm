[gcc changes]
2008-11-15  Ben Elliston  <bje@au.ibm.com>
	    Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/spu/t-spu-elf (MULTILIB_OPTIONS): Add -mea64 multilib.
	(EXTRA_MULTILIB_PARTS): Add libgcc_cachemgr.a,
	libgcc_cachemgr_nonatomic.a, libgcc_cache8k.a, libgcc_cache16k.a,
	libgcc_cache32k.a, libgcc_cache64k.a, libgcc_cache128k.a.
	(cachemgr.o, %/cachemgr.o): New targets.
	(cachemgr_nonatomic.o, %/cachemgr_nonatomic.o): Likewise.
	(libgcc_%.a, %/libgcc_%.a): Likewise.
	(cache8k.o, cache16k.o, cache32k.o, cache64k.o, cache128k.o,
	%/cache8k.o, %/cache16k.o, %/cache32k.o, %/cache64k.o,
	%/cache128k.o): Likewise.

	* config/spu/spu.c (ADDR_SPACE_GENERIC): New macro for the generic
	address space.
	(ADDR_SPACE_EA): New macro for __ea named address space.
	(TARGET_ADDR_SPACE_POINTER_NAME): Add named address support.
	(TARGET_ADDR_SPACE_NAME): Ditto.
	(TARGET_ADDR_SPACE_NUMBER): Ditto.
	(TARGET_ADDR_SPACE_SECTION_NAME): Ditto.
	(TARGET_SECTION_TYPE_FLAGS): Ditto.
	(TARGET_ADDR_SPACE_VALID_P): Ditto.
	(TARGET_ASM_ALGNED_DI_OP): Use .quad.
	(ea_symbol_ref): Return true for __ea qualified SYMBOL_REF.
	(spu_legitimate_constant_p): Add suupport for __ea named address
	space.
	(EAmode): New macro for pointer mode for __ea addresses.
	(cache_fetch): New static to hold __cache_fetch function.
	(cache_fetch_dirty): New static to hold __cache_fetch_dirty
	function.
	(ea_alias_set): New static to hold the alias set for __ea named
	address apce.
	(ea_load_store): New function to generate code to fetch a __ea
	address to local memory.
	(ea_load_store_inline): Generate inline code for moving __ea
	memory to local memory.
	(expand_ea_mem): New function expand __ea addresses.
	(spu_expand_mov): Add __ea address space support.
	(spu_ea_pointer_mode): Return the appropriate modes for pointers.
	(spu_valid_pointer_mode): Return modes that can be used for
	pointers.
	(spu_section_type_flags): New function to set the section flags
	for the __ea section.
	(spu_addr_space_name): New target hook to convert an address space
	to a string.
	(spu_addr_space_convert): New target hook to convert to/from the
	__ea named address space.
	(spu_ea_identifer): New static to remember the token __ea.
	(spu_addr_space_valid_p): New target hook to validate the __ea
	keyword.
	(spu_addr_space_number): New target hook to map an identifier into
	a named address identifier.
	(spu_ea_name): New static to remember the string ._ea.
	(spu_addr_space_section_name): New hook to return the section name
	for the __ea named address space.

	* config/spu/spu-elf.h (DRIVER_SELF_SPECS): Add support for
	-mcache-size=, -matomic-updates switches.
	(LIB_SPEC): Ditto.

	* config/spu/spu_cache.h: New file for __ea cache support.
	* config/spu/cachemgr.c: Ditto.
	* config/spu/cache.S: Ditto.

	* config/spu/spu.h (TEXT_SECTION_ASM_OP): Add a tab in front of
	the directive.
	(DATA_SECTION_ASM_OP): Ditto.
	(ASM_OUTPUT_SYMBOL_REF): Strip array types on arg.

	* config/spu/spu.md (to_ea): New expanders for __ea named address
	space support.
	(from_ea): Ditto.

	* doc/extend.texi (Named Address Spaces): New section, describing
	named address spaces.

	* doc/tm.texi (Named Address Spaces):  New section to talk about
	named address space support.
	(TARGET_ADDR_SPACE_POINTER_MODE): New target hook to return the
	pointer mode for a given address space.
	(TARGET_ADDR_SPACE_NAME): New target hook to return a string that
	describes an address space.
	(TARGET_ADDR_SPACE_NUMBER): New target hook to return the address
	space number for a given address space.
	(TARGET_ADDR_SPACE_CONVERT): New target hook to convert a pointer
	from one address space to another.
	(TARGET_ADDR_SPACE_VALID_P): New target hook to validate a named
	address space.
	(TARGET_ADDR_SPACE_SECTION_NAME): New target hook to return the
	section name for a named address space.

	* doc/invoke.texi (-mfixed-range=): New SPU switch.
	(-mea32): Ditto.
	(-mea64): Ditto.
	(-mcache-size=): Ditto.
	(-matomic-updates): Ditto.
	(-mno-atomic-updates): Ditto.

	* doc/rtl.texi (MEM_ADDR_SPACE): Memory space accessor.

	* tree-ssa.c (useless_type_conversion_p_1): Add support for named
	address spaces.
	(useless_type_conversion_p): Ditto.

	* targhooks.c (default_addr_space_name): New default hook for
	named address space support.
	(default_addr_space_conversion_rtl): Ditto.
	(default_addr_space_number): Ditto.

	* targhooks.h (default_addr_space_name): New default hook for
	named address space support.
	(default_addr_space_conversion_rtl): Ditto.
	(default_addr_space_number): Ditto.

	* tree-pretty-print.c (toplevel): Include target.h and
	target-def.h.
	(op_prio): Add support for named address spaces.
	(dump_generic_node): Ditto.

	* tree.c (integer_pow2p): Add support for named address spaces.
	(tree_log2): Ditto.
	(tree_floor_log2): Ditto.
	(set_type_quals): Ditto.
	(build_pointer_type): Ditto.

	* tree.h (OTHER_ADDR_SPACE_POINTER_TYPE_P): New macro that returns
	true if a pointer points to a non-generic address space.
	(GENERIC_ADDR_SPACE_POINTER_TYPE_P): New macro that returns true
	if a pointer points to the generic address space.
	(TYPE_ADDR_SPACE): Accessor macro for named address space.
	(ENCODE_QUAL_ADDR_SPACE): New macro to encode the named address
	space as part of the type qualifiers.
	(DECODE_QUAL_ADDR_SPACE): New macro to decode the named address
	space from the type qualifiers.
	(TYPE_QUALS): Encode the named address space.
	(struct tree_type): Add address_space field.  Move alias_set field
	earlier in the structure.

	* coretypes.h (addr_space_t): New type for named address spaces.

	* target.h (struct gcc_target): Add valid_pointer_mode,
	addr_space_name, addr_space_conversion_rtl, addr_space_valid_p
	target hooks for named address spaces.

	* fold-const.c (toplevel): Include target.h.
	(fit_double_type): Add named address space support.

	* tree-ssa-loop-ivopts.c (generic_type_for): Add support for named
	address spaces.

	* c-objc-common.c (c_types_compatible_p): Two types that are in
	different address spaces aren't compatible.

	* c-tree.h (struct c_declspecs): Add address_space field.
	(declspecs_add_addrspace): New declaration.

	* dwarf2out.c (modified_type_die): Add support for named address
	spaces.

	* expr.c (expand_expr_addr_expr): Add named address space
	support.
	(expand_expr_real_1): Ditto.

	* c-decl.c (toplevel): Include targhooks.h.
	(shadow_tag_warned): Add support for named address spaces.
	(quals_from_declspecs): Ditto.
	(grokdeclarator): Ditto.
	(start_decl): Warn about unknown address spaces.
	(declspecs_add_addrspace): New function to print message about
	incompatible address spaces.

	* c-pretty-print.c (toplevel): Include target.h and target-def.h.
	(pp_c_type_qualifier): Add support for named address spaces.

	* langhooks.c (lhd_tree_dump_dump_tree): Use CONST_CAST_TREE.

	* print-rtl.c (print_rtx): Print out the address space if it
	exists.

	* c-typeck.c (comptypes_internal): Use CONST_CAST_TREE.
	(build_binary_op): Add support for named address spaces.

	* emit-rtl.c (get_mem_attrs): Add parameter for address space.
	(mem_attrs_htab_hash): Include address space in hash.
	(mem_attrs_htab_eq): Compare address spaces.
	(set_mem_attributes_minus_bitpos): Add address space argument to
	get_mem_attrs call.
	(set_mem_attrs_from_reg): Ditto.
	(set_mem_alias_set): Ditto.
	(set_mem_align): Ditto.
	(set_mem_expr): Ditto.
	(set_mem_offset): Ditto.
	(set_mem_size): Ditto.
	(change_address): Ditto.
	(adjust_address_1): Ditto.
	(offset_address): Ditto.
	(widen_memory_address): Ditto.
	(get_spill_slot_decl): Ditto.
	(set_mem_attrs_for_spill): Ditto.
	(set_mem_addr_space): New function to set the address space
	attribute.

	* emit-rtl.h (set_mem_expr): Add declaration.

	* explow.c (memory_address): Add support for named address spaces.

	* varasm.c (make_decl_rtl): Add support for named address spaces.
	(default_addr_space_pointer_mode): New default hook for named
	address space pointer mode.

	* target-def.h (TARGET_ADDR_SPACE_POINTER_MODE): New named address
	target hook.
	(TARGET_ADDR_SPACE_NAME): Ditto.
	(TARGET_ADDR_SPACE_NUMBER): Ditto.
	(TARGET_ADDR_SPACE_CONVERT): Ditto.
	(TARGET_ADDR_SPACE_SECTION_NAME): Ditto.
	(TARGET_ADDR_SPACE_HOOKS): Group all of the target address space
	hooks into one initializer.
	(TARGET_INITIALIZER): Add named address space hooks.

	* rtl.h (struct mem_attrs): Move alignment field.  Add address
	space field.
	(MEM_ADDR_SPACE): New accessor macro for address space.

	* output.h (default_addr_space_pointer_mode): Add declaration.

	* config.gcc (spu*-elf*): Add spu_cache.h.

	* Makefile.in (c-decl.o): Add targhooks.h dependency.
	(c-pretty-print.o): Add $(TARGET_DEF_H), $(TARGET_H)
	dependencies.
	(convert.o): Add $(TARGET_H) dependency.
	(tree-pretty-print.o): Ditto.
	(fold-const.o): Ditto.

	* c-parser.c (enum c_id_kind): Add C_ID_ADDRSPACE.
	(c_lex_one_token): Add support for named address spaces.
	(c_token_starts_typename): Ditto.
	(c_token_starts_declspecs): Ditto.
	(c_parser_asm_definition): Ditto.
	(c_parser_declspecs): Ditto.
	(c_parser_postfix_expression_after_paren_finish_init): Ditto.

	* convert.c (toplevel): Include target.h.
	(convert_to_pointer): Add support for named addresses.
	(convert_to_integer): Ditto.


[gcc/testsuite changes]
2007-11-15  Ben Elliston  <bje@au.ibm.com>
	    Michael Meissner  <meissner@linux.vnet.ibm.com>

	* gcc.target/spu/cache.c: New file.
	* gcc.target/spu/ea/ea.exp: Likewise.
	* gcc.target/spu/ea/cppdefine32.c: Likewise.
	* gcc.target/spu/ea/cppdefine64.c: Likewise.
	* gcc.target/spu/ea/compile.c: Likewise.
	* gcc.target/spu/ea/cast1.c: Likewise.
	* gcc.target/spu/ea/errors.c: Likewise.
	* gcc.target/spu/ea/options1.c: Likewise.
