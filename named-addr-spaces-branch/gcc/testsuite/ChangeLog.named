2008-12-30  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* gcc.target/spu/ea/errors3.c (ea_init): Move tests to errors4.c.
	(lm_init): Ditto.
	(ea_init2): Ditto.
	(lm_init2): Ditto.
	
	* gcc.target/spu/ea/errors4.c: New static initialization tests.

	* gcc.target/spu/ea/compile3.c (ea_init): Delete tests.
	(lm_init): Ditto.
	(ea_init2): Ditto.
	(lm_init2): Ditto.

	* gcc.target/spu/ea/execute1.c: Update execution tests.
	* gcc.target/spu/ea/execute2.c: Ditto.
	* gcc.target/spu/ea/execute3.c: Ditto.
	* gcc.target/spu/ea/execute1-m64.c: Ditto.
	* gcc.target/spu/ea/execute2-m64.c: Ditto.
	* gcc.target/spu/ea/execute3-m64.c: Ditto.

	* gcc.target/spu/ea/execute4.c: Delete tests that rely on
	initialization of pointers within the __ea named address space or
	pointers to the __ea named address space.
	* gcc.target/spu/ea/execute5.c: Ditto.
	* gcc.target/spu/ea/execute6.c: Ditto.
	* gcc.target/spu/ea/execute4-m64.c: Ditto.
	* gcc.target/spu/ea/execute5-m64.c: Ditto.
	* gcc.target/spu/ea/execute6-m64.c: Ditto.

2008-12-16  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* gcc.target/spu/ea/compile3.c: Add static initializations.
	* gcc.target/spu/ea/errors3.c: Ditto.
	
	* gcc.target/spu/ea/compile4.c: New file to make sure __ea
	structure references work.

	* gcc.target/spu/ea/execute1.c: New file to make sure various
	static initializations work for -mea32.
	* gcc.target/spu/ea/execute2.c: Ditto.
	* gcc.target/spu/ea/execute3.c: Ditto.
	* gcc.target/spu/ea/execute4.c: Ditto.
	* gcc.target/spu/ea/execute5.c: Ditto.
	* gcc.target/spu/ea/execute6.c: Ditto.

	* gcc.target/spu/ea/execute1-m64.c: New file to make sure various
	static initializations work for -mea64.
	* gcc.target/spu/ea/execute2-m64.c: Ditto.
	* gcc.target/spu/ea/execute3-m64.c: Ditto.
	* gcc.target/spu/ea/execute4-m64.c: Ditto.
	* gcc.target/spu/ea/execute5-m64.c: Ditto.
	* gcc.target/spu/ea/execute6-m64.c: Ditto.
	
2008-12-04  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* gcc.target/spu/ea/errors2.c: Add comment saying this is the same
	as compile2.c without the switch to induce errors.  Change the
	switch to induce the errors to -mno-ea-to-generic-conversion.

	* gcc.target/spu/ea/compile2.c: New file to make sure the tests in
	error2.c compile cleanly with -mea-to-generic-conversion.

	* gcc.target/spu/ea/errors3.c: New file to test the subset hooks
	by making the compiler not convert pointers in different named
	address spaces automatically.

	* gcc.target/spu/ea/compile3.c: New file to test that the code in
	errors3.c compiles cleanly without the switch.

	* gcc.target/spu/ea/compile.c: Compile with optimization.

2008-11-29  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* gcc.target/spu/ea/errors2.c: New test to test
	-mno-local-ea-conversion switch.

2008-11-28  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* gcc.target/spu/ea/cache-common.h (init_mem): Use proper
	prototype.
	(test1): Ditto.
	(test2): Ditto.
	(test3): Ditto.
	(LINE_SIZE): For -mea64, make the type be long long.

2008-11-25  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* gcc.target/spu/ea/errors.c (ea_var): Check for conflicting named
	address spaces.

2008-11-21  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* gcc.target/spu/ea/ea.exp (check_effective_target_ea64): Reenable
	support.
	(check_effective_target_ea32): Ditto.
	(DEFAULT_CFLAGS): Add -O2 to the default flags.

	* gcc.target/spu/ea/ea.exp (check_effective_target_ea64): New
	procedure to see if we have full support for -mea64.  Disable
	temporarily.
	(check_effective_target_ea32): Ditto.

	* gcc.target/spu/cache.c: Delete cache test from here, move it to
	the ea subdirectory.

	* gcc.target/spu/ea/cache-common.h: Move cache test here, split
	into -mea32 and -mea64 tests.
	* gcc.target/spu/ea/cache32.c: Ditto.
	* gcc.target/spu/ea/cache64.c: Ditto.

	* gcc.target/spu/ea/cast1.c: Use check_effective_target_ea32 to
	require support for -mea32.

2008-11-20  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* gcc.target/spu/ea/cast1.c (main): Add -mea64 support.

	* gcc.target/spu/ea/test-sizes.c: New test to test the size of
	host and __ea pointers.

2008-08-29  Ben Elliston  <bje@au.ibm.com>

	* gcc.target/spu/ea/compile.c: Add tests for duplicate __ea
	qualifiers, both directly and via typedefs.

2008-08-28  Ben Elliston  <bje@au.ibm.com>

	* gcc.target/spu/ea/compile.c: Test a static __ea declaration
	using a typedef defined in an outer scope.
	* lib/target-supports.exp (check_effective_target_ea): Remove.

2008-08-22  Ben Elliston  <bje@au.ibm.com>

	* gcc.target/spu/ea/ea.exp: Correct copyright date.

2008-08-20  Ben Elliston  <bje@au.ibm.com>

	* gcc.target/spu/cache.c: New test.
	* gcc.target/spu/ea/ea.exp: New test driver.
	* gcc.target/spu/ea/cast1.c: New test.
	* gcc.target/spu/ea/compile.c: Likewise.
	* gcc.target/spu/ea/cppdefine32.c: Likewise.
	* gcc.target/spu/ea/cppdefine64.c: Likewise.
	* gcc.target/spu/ea/errors.c: Likewise.
	* gcc.target/spu/ea/options1.c: Likewise.
	
2008-08-20  Ben Elliston  <bje@au.ibm.com>

	* lib/target-supports.exp (check_effective_target_ea): New.

2008-08-15  Ben Elliston  <bje@au.ibm.com>

	* gcc.target/spu/ea/compile.c: Add dg-options directive.

2008-08-08  Ben Elliston  <bje@au.ibm.com>

	* gcc.target/spu/cache.c: Include <stdlib.h> and <string.h>.
	(malloc_ea, memset_ea, memcpy_ea): Define wrapper macros.
	(size_ea_t): Typedef for 32-bit and 64-bit __ea modes.
	(__malloc_ea32, __malloc_ea64): Prototype.
	(__memset_ea32, __memset_ea64): Likewise.
	(__memcpy_ea32, __memcpy_ea64): Likewise.

2008-08-01  Ben Elliston  <bje@au.ibm.com>

	* gcc.target/spu/ea/ea.exp: Guard against non-SPU targets.

2007-11-09  Ben Elliston  <bje@au.ibm.com>

	* gcc.target/spu/ea/errors.c: Add int * __ea case.

2007-11-02  Ben Elliston  <bje@au.ibm.com>

	* gcc.target/spu/ea/compile.c: Remove struct with __ea pointer.
	* gcc.target/spu/ea/errors.c: Move here; annotate with dg-error.

2007-10-29  Ben Elliston  <bje@au.ibm.com>

	* gcc.target/spu/ea/cast1.c: Avoid <stdio.h>.

2007-10-29  Ben Elliston  <bje@au.ibm.com>

	* gcc.target/spu/ea/ea.exp: New file.
	* gcc.target/spu/ea/cppdefine32.c: Likewise.
	* gcc.target/spu/ea/cppdefine64.c: Likewise.
	* gcc.target/spu/ea/compile.c: Likewise.
	* gcc.target/spu/ea/cast1.c: Likewise.
	* gcc.target/spu/ea/errors.c: Likewise.
	* gcc.target/spu/ea/options1.c: Likewise.
	* lib/target-supports.exp (check_effective_target_ea): New.
