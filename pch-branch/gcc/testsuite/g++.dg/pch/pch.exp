#   Copyright (C) 1997, 2002 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  

# GCC testsuite for precompiled header interaction,
# that uses the `dg.exp' driver.

# Load support procs.
load_lib "g++-dg.exp"

# Initialize `dg'.
dg-init

# Main loop.
foreach test [lsort [glob -nocomplain $srcdir/$subdir/*.C]] {
    global runtests torture_without_loops dg-do-what-default

    # If we're only testing specific files and this isn't one of them, skip it.
    if ![runtest_file_p $runtests $test] {
	continue
    }
    set nshort [file tail [file dirname $test]]/[file tail $test]
    set bname "[file rootname [file tail $test]]"

    verbose "Testing $nshort" 1

    catch { file delete "$bname.Hp.pch" }
    catch { file delete "$bname.H.pch" }

    # For the header files, the default is to precompile.
    set old_dg_do_what_default "${dg-do-what-default}"
    set dg-do-what-default precompile
    dg-test -keep-output "[file rootname $test].H" "" ""
    set dg-do-what-default "$old_dg_do_what_default"
    
    if { [ file exists "$bname.H.pch" ] } {
	# To ensure that the PCH is used, not the original header,
	# the actual PCH file is renamed to "<foo>.hp.pch".
	file rename "$bname.H.pch" "$bname.Hp.pch"
	if { [ is_remote host ] } {
	    remote_download host "$bname.Hp.pch"
	}
	
	dg-test $test "" "-I."
	file delete "$bname.Hp.pch"
    } else {
	untested $test
    }
}

# All done.
dg-finish
