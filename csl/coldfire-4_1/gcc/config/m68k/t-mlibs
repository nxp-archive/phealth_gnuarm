# multilibs  -*- mode:Makefile -*-

# add multilibs for each distinct cpu family and float support variant

# An awk command to extract lines from the m68k-devices.def file that
# match $1 and then print the string defined by $2.  Leading and
# trailing whitespace is removed.  $1 & $2 can make use of
# CPU -- the cpu identifier (has leading 'm'/'mcf')
# FLAGS -- the cpu capability flags
# CPU_NAME -- the cpu name (has no leading m/mcf)
# MLIB_NAME -- the multilib cpu name (no leading m/mcf)
# This is intended to be used as $(call M68K_AWK,predicate,string)
M68K_AWK = $(strip $(shell $(AWK) 'BEGIN { FS="[ \t]*[,()][ \t]*"; ORS=" " }; \
	/^M68K_DEVICE/ { CPU=$$3; FLAGS=$$8; \
	CPU_NAME=substr($$2,2,length($$2)-2); \
	MLIB=substr($$5,2,length($$5)-2); \
	if ($1) print $2 }' $(srcdir)/config/m68k/m68k-devices.def))

# Add a multilib for each distinct architecture
M68K_MLIB_CPUS := $(call M68K_AWK,\
	(CPU_NAME == MLIB) $(M68K_MLIB_CPU), \
	"m"MLIB)

# Make the default cpu the default multilib.
M68K_MLIB_DEFAULT := $(call M68K_AWK,\
	CPU == "$(target_cpu_default:TARGET_CPU_%=%)",\
	MLIB)

ifeq ($(filter m$(M68K_MLIB_DEFAULT),$(M68K_MLIB_CPUS)),)
$(error Error default cpu '$(target_cpu_default)' is not in multilib set '$(M68K_MLIB_CPUS)')
endif

MULTILIB_DIRNAMES := $(filter-out m$(M68K_MLIB_DEFAULT),$(M68K_MLIB_CPUS))
MULTILIB_OPTIONS := $(shell echo $(MULTILIB_DIRNAMES:m%=mcpu=%) | sed 's| |/|g')

# Add subtarget specific options & dirs
MULTILIB_DIRNAMES += $(M68K_MLIB_DIRNAMES)
MULTILIB_OPTIONS += $(M68K_MLIB_OPTIONS)

MULTILIB_MATCHES :=

ifneq ($(M68K_ARCH),cf)
# The legacy m68k cpus
MULTILIB_MATCHES += mcpu?68000=m68000 mcpu?68000=march?68000 \
		    mcpu?68000=mc68000 mcpu?68000=m68302 \
		    mcpu?cpu32=m68332 mcpu?68020=mc68020 \
		    mcpu?68020=m68020 mcpu?68020=march?68020 \
		    mcpu?68030=m68030 mcpu?68030=mc68030 \
		    mcpu?68040=m68040 mcpu?68040=march?68040 \
		    mcpu?68060=m68060 mcpu?68060=march?68060 \
		    mcpu?cpu32=march?68332 mcpu?68020=march?68030
endif

ifneq ($(M68K_ARCH),m68k)
# the legacy coldfire cpus
MULTILIB_MATCHES += mcpu?5206=m5200 mcpu?5206e=m5206e mcpu?5208=m528x \
		    mcpu?5307=m5300 mcpu?5307=m5307 \
		    mcpu?5407=m5400 mcpu?5407=m5407 \
		    mcpu?5475=mcfv4e
# generic ISA selection
MULTILIB_MATCHES += mcpu?5206e=march?isaa mcpu?5208=march?isaaplus \
		    mcpu?5407=march?isab
endif

# the new core options
MULTILIB_MATCHES += $(call M68K_AWK,(CPU_NAME != MLIB) $(M68K_MLIB_CPU),\
 "mcpu?"MLIB"=mcpu?"CPU_NAME)

# Add all non-sensical multilibs
MULTILIB_EXCEPTIONS := 

ifeq ($(firstword $(M68K_MLIB_OPTIONS)),msoft-float)
# Add all soft variants for cpus with no fp regs.  That is all
# mcfNNNN chips without an FL_CF_FPU option or cpu32
MULTILIB_EXCEPTIONS += $(call M68K_AWK,\
	(CPU_NAME == MLIB) $(M68K_MLIB_CPU) \
	 && (((CPU ~ "^mcf") && !match(FLAGS, "FL_CF_FPU")) \
	     || CPU == "cpu32"), "mcpu="MLIB"/msoft-float*")
endif

# Finally remove the default CPU from the explicit exceptions.
MULTILIB_EXCEPTIONS := \
	$(patsubst mcpu=$(M68K_MLIB_DEFAULT)/%,%,$(MULTILIB_EXCEPTIONS))

LIBGCC = stmp-multilib
INSTALL_LIBGCC = install-multilib
