2006-03-29  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k-cores.def (532x, 537x): Use 532x multilib.
	* gcc/config/m68k/t-m68kelf (MULTILIB_OPTIONS): Remove m68k
	options.  Add mcpu=532x.
	(MULTILIB_DIRNAMES): Likewise.
	(MULTILIB_EXCEPTIONS): Likewise.
	* gcc/config/m68k/t-uclinux (MULTILIB_OPTIONS): Add mcpu=532x
	(MULTILIB_DIRNAMES): Likewise.

	* gcc/gcc.c (LINK_COMMAND_SPEC): Place T* options before
	endfile_spec.
	* gcc/doc/invoke.texi (M680x0 Options): Revert previous change.
	* gcc/config/m68kenb.h (LIB_SPEC): Revert previous change.
	* gcc/config/m68k.opt (mboard, mbsp): Revert previous change.

2006-03-29  Richard Sandiford  <richard@codesourcery.com>

	* gcc/testuite/lib/target-supports.exp (check_no_compiler_messages):
	New procedure.
	(check_visibility_available): Use it.
	(check_effective_target_default_packed): Likewise.
	(check_effective_target_pcc_bitfield_type_matters): Likewise.
	(check_effective_target_freorder): Likewise.
	(check_effective_target_fpic): Likewise.
	(check_named_sections_available): Likewise.
	(check_effective_target_ilp32): Likewise.
	(check_effective_target_lp64): Likewise.

2006-03-29  Richard Sandiford  <richard@codesourcery.com>

	* gcc/testsuite/gcc.c-torture/execute/builtins/lib/chk.c (vsnprintf):
	Don't define for uClinux targets.
	* gcc/testsuite/gcc.c-torture/execute/20030125-1.x: Restrict the
	test *-linux* rather than *linux* targets.
	* gcc/testsuite/g++.dg/init/array15.C: Don't run on m68k-uclinux.
	* gcc/testsuite/g++.dg/init/array16.C: Likewise.

2006-03-28  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/gcc.c (do_spec_1): <case '*'> Don't append space here.
	(process_marked_switches): Put a space between each marked switch.
	(process_brace_body): Put a space between each live switch.
	(give_switch): Don't append space here.
	* gcc/config/m68k/m68kemb.h (LIB_SPEC): Add BSP lib and linker
	script here.  Group with LIBGCC spec.
	* gcc/config/m68k/m68k.opt (mboard, mbsp): New switches.
	* gcc/config/m68k/m68020-elf.h (LIB_SPEC): Do not define here.
	* gcc/doc/invoke.texi (M680x0 Options): Document new switches.

2006-03-28  Richard Sandiford  <richard@codesourcery.com>

	Merge from csl/sourcerygxx-4_1 branch:

	2006-03-27  Jim Blandy	<jimb@codesourcery.com>

	* include/libiberty.h (pex_write_input): New declaration.

	* libiberty/pex-common.c (pex_write_input): New function.
	* libiberty/pexecute.txh (pex_write_input): Document it.
	* libiberty/pex-common.h (struct pex_funcs): New function ptr fdopenw.
	* libiberty/pex-unix.c (pex_unix_fdopenw): New function.
	(funcs): List it as our fdopenw function.
	* libiberty/pex-win32.c (pex_win32_fdopenw): New function.
	(funcs): List it as our fdopenw function.
	* libiberty/pex-djgpp.c (funcs): Leave fdopenw null.
	* libiberty/pex-msdos (funcs): Same.
	* libiberty/functions.texi: Regenerated.

	* libiberty/pex-common.h (struct pex_obj): Doc fixes.

	* libiberty/functions.texi: Regenerate.

	2006-03-27  Mark Mitchell  <mark@codesourcery.com>

	* libiberty/pex-win32.c (pex_win32_exec_child): Close stdout/stderr
	in parent.

2006-03-28  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k.h (DWARF_FRAME_RETURN_COLUMN): Define.
	* gcc/config/m68k/m68k.c (m68k_output_function_prologue): Output
	dwarf to allow unwinding from interrupt_handlers.

2006-03-27  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config.gcc (m68k-*-linux*): Add default --with-cpu.
	* gcc/config/m68k/netbsd-elf.h (FUNCTION_VALUE_REGNO_P): Fix thinko
	in previous change.
	* gcc/testsuite/gcc.dg/m68k-pic-1.c: New.

2006-03-26  Nathan Sidwell  <nathan@codesourcery.com>

	* libstdc++-v3/config/cpu/m68k/atomicity.h (__exchange_and_add): Add
	coldfire fragments.

	* gcc/config/gcc (m68k-*-linux*): Add t-linux.
	(m68k/t-rtems): Reorder include files.
	* gcc/config/m68k/linux.h (TARGET_DEFAULT): Do not define.
	(TARGET_CPU_DEFAULT, ASM_CPU_DEFAULT_SPEC): Default to 68040.
	(STRICT_ALIGNMENT): Do not define here.
	(ASM_SPEC): Define earlier.
	(TARGET_OS_CPP_BUILTINS): Do not define mc68000 or mc68020 here.
	(CPP_SPEC): Simplify.
	(FUNCTION_VALUE_REGNO_P): fp0 is only a return on 68k, not
	coldfire.
	(TARGET_ASM_FILE_START_APP_OFF): Undef.
	(MULTILB_DEFAULTS, SYSROOT_SUFFIX_SPEC,
	SYSROOT_HEADERS_SUFFIX_SPEC): Define.
	* gcc/config/m68k/m68k-none.h (TARGET_DEFAULT, ASM_CPU_DEFAULT,
	OPTION_DEFAULT_SPECS): Do not process here, move to m68k.h.
	(EXTRA_SPECS, CPP_SUBTARGET_SPEC, SUBTARGET_EXTRA_SPECS):
	Likewise.
	* gcc/config/m68k/m68k.h (OPTION_DEFAULT_SPECS, TARGET_DEFAULT,
	ASM_CPU_DEFAULT_SPEC, EXTRA_SPECS, CPP_SUBTARGET_SPECS,
	SUBTARGET_EXTRA_SPECS): Moved here from m68k-none.h.
	* gcc/config/m68k/t-linux: New.
	* gcc/config/netbsd-elf.h (FUNCTION_VALUE_REGNO_P): fp0 is not a
	return reg on coldfire.

	* gcc/config/m68k/t-mlib-matches (MULTILIB_MATCHES): m5206e is
	equivalent to isaa.
	* gcc/config/m68k/t-m68kelf (MULTILIB_OPTIONS): Add 5211.
	(MULTILIB_DIRNAMES): Likewise.
	(MULTILIB_EXCEPTIONS): Inhibit all 68k multilibs.  Allow
	m547x/soft-float.

	* gcc/config/m68k/m68k.md (cmpsi): Split symbol+const for Coldfire.

2006-03-25  Richard Sandiford  <richard@codesourcery.com>

	Merge from csl/sourcerygxx-4_1 branch:

	2006-03-24  Mark Mitchell  <mark@codesourcery.com>
	            Joseph S. Myers  <joseph@codesourcery.com>

	PR libstdc++/20448
	PR libstdc++/20451
	* libstdc++-v3/scripts/testsuite_flags.in (--cxxflags): Don't
	define LOCALEDIR.
	* libstdc++-v3/testsuite/lib/libstdc++.exp (libstdc++_init):
	Always define LOCALEDIR to ".".
	(v3-build_support): Build MO files.

	2006-03-20  Mark Mitchell  <mark@codesourcery.com>

	* libiberty/pex-win32.c (<errno.h>): Include.
	(fix_argv): Remove.
	(argv_to_cmdline): New function.
	(std_suffixes): New variable.
	(no_suffixes): Likewise.
	(find_executable): New function.
	(win32_spawn): Likewise.
	(spawn_script): Use win32_spawn instead of _spawnv[p].
	(pex_win32_exec_child): Replace MSVCRT calls with Win32 API calls.
	(pex_win32_wait): Likewise.

	2006-03-17  Joseph Myers  <joseph@codesourcery.com>

	* gcc/dwarf2.h (DW64_CIE_ID): Define.
	* gcc/dwarf2out.c (DWARF_CIE_ID): Define.
	(output_call_frame_info): Output 0xffffffff before standard 8-byte
	length header.  Use DWARF_CIE_ID.
	(value_format): Use DW_FORM_data4 or DW_FORM_data8 for
	dw_val_class_loc_list depending on DWARF_OFFSET_SIZE.

	2006-03-17  Carlos O'Donell  <carlos@codesourcery.com>

	* gcc/doc/invoke.texi: Define -femit-class-debug-always.
	* gcc/common.opts: Likewise.
	* gcc/cp/search.c (maybe_suppress_debug_info): Suppress
	debug info if flag_emit_class_debug_always is zero.

	2006-03-17  Richard Sandiford  <richard@codesourcery.com>

	Backport from mainline:
	* gcc/config.gcc (mips64*-*-linux*): Keep existing tm_defines.
	(mips*-*-linux*): Likewise.

	2006-03-16  Joseph S. Myers  <joseph@codesourcery.com>

	* gcc/config.gcc (tm_defines): Always add to previous value rather
	than replacing it.

	2006-03-15  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* gcc/config/arm/arm.c (minipool_pad): New.
	(add_minipool_forward_ref): Unclude pool alignment padding in address
	calculation.
	(push_minipool_fix): Set minipool_pad.
	(minipool_pad): Ditto.

	2006-02-27  Nathan Sidwell  <nathan@potter.codesourcery.com>

	Backport the following
	* gcc/config.gcc (mt-*-*): Add --with-arch support.
	(--with): Print accepted options on error.
	* gcc/config/mt/mt.h (OPTION_DEFAULT_SPECS): Define.

	* gcc/config/mt/mt.c (DEF_VEC_P(basic_block),
	DEF_VEC_ALLOC_P(basic_bloc,heap)): Remove from here.

	* gcc/config/mt/mt.md (UNSPEC_LOOP): New constant.
	(loop_end, loop_init, doloop_end): New insns.
	* gcc/config/mt/mt.h (LOOP_FIRST, LOOP_LAST): New.
	(SPECIAL_REG_FIRST, FIRST_PSEUDO_REGISTER): Adjust.
	(FIXED_REGISTERS, CALL_USED_REGISTERS): Adjust.
	(REG_CLASS_CONTENTS, REGISTER_NAMES): Adjust.
	* gcc/config/mt/mt.c: #include basic-block.h
	(struct machine_function): Add has_loops field.
	(mt_add_loop): New.
	(MAX_LOOP_DEPTH, MAX_LOO_LENGTH): New.
	(struct loop_info, struct loop_work): New.
	(mt_loop_nesting, ms1_block_length, ms1_scan_loop): New workers.
	(mt_reorg_loops): New loop optimization.
	(mt_machine_reorg): Call it.
	* gcc/config/mt/mt-protos.h (mt_add_loop): Declare.

	* gcc/vec.h (VEC_block_remove): New.

	* gcc/loop-doloop.c (add_test): Only add jump notes if we did emit a
	jump.

	2006-02-18  Joseph S. Myers  <joseph@codesourcery.com>

	PR target/24837
	* gcc/config.gcc: Define UCLIBC_DEFAULT to 0 or 1.
	* gcc/opth-gen.awk: Handle Var and InverseMask together.
	* gcc/config/linux.opt (muclibc, mglibc): Use Var(linux_uclibc).
	* gcc/config/linux.h: Use #if not #ifdef for testing
	UCLIBC_DEFAULT.
	(TARGET_C99_FUNCTIONS): Test OPTION_GLIBC not TARGET_GLIBC.
	(CHOOSE_DYNAMIC_LINKER): Give an error for -mglibc and -muclibc
	used together.
	(UCLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER64,
	LINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.
	* gcc/config/alpha/linux-elf.h (GLIBC_DYNAMIC_LINKER,
	UCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER): Define.
	(ELF_DYNAMIC_LINKER): Define to LINUX_DYNAMIC_LINKER.
	* gcc/config/alpha/linux.h (TARGET_C99_FUNCTIONS): Define to
	TARGET_GLIBC.
	* gcc/config/cris/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(CRIS_LINK_SUBTARGET_SPEC): Pass a -dynamic-linker option.
	* gcc/config/frv/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	(TARGET_C99_FUNCTIONS): Don't define.
	* gcc/config/i386/linux.h (DYNAMIC_LINKER): Rename to
	GLIBC_DYNAMIC_LINKER.
	(SUBTARGET_EXTRA_SPECS): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/i386/linux64.h (GLIBC_DYNAMIC_LINKER32,
	GLIBC_DYNAMIC_LINKER64): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER32 and
	LINUX_DYNAMIC_LINKER64.
	* gcc/config/ia64/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/m32r/linux.h (GLIBC_DYNAMIC_LINKE): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/m68k/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/mips/linux64.h (GLIBC_DYNAMIC_LINKER32,
	GLIBC_DYNAMIC_LINKER64, GLIBC_DYNAMIC_LINKERN32,
	UCLIBC_DYNAMIC_LINKERN32, LINUX_DYNAMIC_LINKERN32): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKERN32, LINUX_DYNAMIC_LINKER64
	and LINUX_DYNAMIC_LINKER32.
	* gcc/config/mn10300/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/pa/pa-linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/rs6000/linux.h (TARGET_C99_FUNCTIONS): Define to
	TARGET_GLIBC.
	* gcc/config/rs6000/linux64.h (TARGET_C99_FUNCTIONS): Likewise.
	(GLIBC_DYNAMIC_LINKER32, GLIBC_DYNAMIC_LINKER64,
	UCLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER64,
	CHOOSE_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.
	(LINK_OS_LINUX_SPEC32): Use LINUX_DYNAMIC_LINKER32.
	(LINK_OS_LINUX_SPEC64): Use LINUX_DYNAMIC_LINKER64.
	* gcc/config/rs6000/sysv4.h (GLIBC_DYNAMIC_LINKER,
	UCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER): Define.
	(LINK_OS_LINUX_SPEC): Use LINUX_DYNAMIC_LINKE.
	* gcc/config/s390/linux.h (GLIBC_DYNAMIC_LINKER32,
	GLIBC_DYNAMIC_LINKER64): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER32 and
	LINUX_DYNAMIC_LINKER64.
	* gcc/config/sh/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(SUBTARGET_LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/sparc/linux.h (GLIBC_DYNAMIC_LINKER,
	UCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	(TARGET_C99_FUNCTIONS): Define to TARGET_GLIBC.
	* gcc/config/sparc/linux64.h (GLIBC_DYNAMIC_LINKER32,
	GLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER32,
	UCLIBC_DYNAMIC_LINKER64, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.
	(LINK_ARCH32_SPEC): Use LINUX_DYNAMIC_LINKER32.
	(LINK_ARCH64_SPEC, LINK_SPEC): Use LINUX_DYNAMIC_LINKER64.
	(TARGET_C99_FUNCTIONS): Define to TARGET_GLIBC.
	* gcc/config/xtensa/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/doc/invoke.texi (-muclibc): Remove caveat about supported
	targets.
	* gcc/testsuite/gcc.dg/glibc-uclibc-1.c,
	gcc/testsuite/gcc.dg/glibc-uclibc-2.c: New tests.

	2006-02-16  Joseph S. Myers  <joseph@codesourcery.com>

	PR libstdc++/14939
	PR target/20353
	PR target/24578
	PR target/24837
	* gcc/config/linux.opt: New file.
	* gcc/config/linux.h (CHOOSE_DYNAMIC_LINKER,
	UCLIBC_DYNAMIC_LINKER, LINUX_DYNAMIC_LINKER): Define.
	(TARGET_C99_FUNCTIONS): Define depending on TARGET_GLIBC.
	* gcc/config.gcc (*-*-linux*): Define extra_options.
	(*-*-*uclibc*): Define UCLIBC_DEFAULT.
	(arm*-*-linux-gnueabi): Change to arm*-*-linux-*eabi.
	* gcc/config/arm/linux-eabi.h (LINUX_TARGET_INTERPRETER): Change
	to GLIBC_DYNAMIC_LINKER.
	* gcc/config/arm/linux-elf.h (LINUX_TARGET_INTERPRETER): Likewise.
	(LINUX_TARGET_LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/mips/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/doc/invoke.texi (GNU/Linux Options): New section.
	* gcc/testsuite/gcc.dg/builtins-config.h (HAVE_C99_RUNTIME): Don't
	define if __UCLIBC__ is defined.
	* libstdc++-v3/config/os/uclibc/ctype_base.h,
	libstdc++-v3/config/os/uclibc/ctype_inline.h,
	libstdc++-v3/config/os/uclibc/ctype_noninline.h,
	libstdc++-v3/config/os/uclibc/os_defines.h: New.
	* libstdc++-v3/acinclude.m4 (GLIBCXX_CONFIGURE): Test whether
	using uClibc.
	* libstdc++-v3/configure.host: Use os/uclibc for uClibc.
	* libstdc++-v3/crossconfig.m4 (*-linux*): Use link tests.  Don't
	hardcode presence of math functions.
	* libstdc++-v3/configure: Regenerate.

	2005-02-16  Paul Brook  <paul@codesourcery.com>

	* reload1.c (emit_reload_insns): Invalidate dead input registers used
	for reloads.

	2006-02-01  Paul Brook  <paul@codesourcery.com>

	Backport form mainline.
	* gcc/function.c (assign_parm_setup_reg): Use function argument
	promotion rules.
	* gcc/expr.c (expand_expr_real_1): Use function argument promotion
	rules for PARM_DECLs.

	2006-01-27  Paul Brook  <paul@codesourcery.com>

	* version.c: Mark as CodeSourcery build.

	2006-01-24  Joseph Myers  <joseph@codesourcery.com>

	Backport from mainline.
	2006-01-23  Adam Nemet  <anemet@caviumnetworks.com>

	* fix-header.c (read_scan_file): Add new parameter imultilib when
	calling register_include_chains.

	2006-01-23  Julian Brown  <julian@codesourcery.com>

	Backport from mainline.
	2006-01-23  Kazu Hirata  <kazu@codesourcery.com>
	PR testsuite/25590
	* gcc/testsuite/gcc.dg/tree-ssa/gen-vect-11.c: Add -fwrapv.

2006-03-25  Richard Sandiford  <richard@codesourcery.com>

	* gcc/config/m68k/uclinux.h (CPLUSPLUS_CPP_SPEC): Override and
	define _GNU_SOURCE.

2006-03-23  Richard Sandiford  <richard@codesourcery.com>

	* gcc/doc/tm.texi (TARGET_USE_COMDAT_GROUPS): Document.
	* gcc/target.h (use_comdat_groups): New hook.
	* gcc/crtstuff.c (USE_PT_GNU_EH_FRAME): Don't define if
	OBJECT_FORMAT_FLAT.
	* gcc/varasm.c (default_function_rodata_section): Test the
	use_comdat_groups target hok instead of HAVE_COMDAT_GROUP.
	(default_elf_asm_named_section): Likewise.
	(default_unique_section): Likewise.
	* gcc/target-def.h (TARGET_USE_COMDAT_GROUPS): Define if undefined.
	(TARGET_INITIALIZER): Include it.
	* gcc/config.gcc (m68k-*-uclinux*): Add flat.h to tm_defines.
	Remove t-crtstuff from tmake_file.
	* gcc/config/flat.h: New file.
	* gcc/config/m68k/t-uclinux (EXTRA_MULTILIB_PARTS): Define.
	* gcc/config/m68k/uclinux.h (EH_FRAME_IN_DATA_SECTION): Delete.

2006-03-23  Richard Sandiford  <richard@codesourcery.com>

	* gcc/config/m68k/m68k.h (M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P):
	Move definition outside !REG_OK_STRICT block.

2006-03-21  Richard Sandiford  <richard@codesourcery.com>

	* gcc/config/m68k/m68k.c (TARGET_ASM_FILE_START_APP_OFF): Don't
	override here.
	* gcc/config/m68k/m68k.h (TARGET_ASM_FILE_START_APP_OFF): Define.
	* gcc/config/m68k/uclinux.h (TARGET_ASM_FILE_START_APP_OFF): Override.
	(M68K_NO_ASM_FILE_START_APP_OFF): Delete.

2006-03-21  Richard Sandiford  <richard@codesourcery.com>
	    Nathan Sidwell <nathan@codesourcery.com>

	* gcc/rtlanal.c: Include tree.h.
	(offset_within_block_p): New function, taken from
	mips_offset_within_object_p.
	(constant_may_be_outside_section_p): Likewise.
	* gcc/rtl.h (offset_within_section_p): New function.
	(constant_may_be_outside_section_p): Likewise.
	* gcc/Makefile.in (rtlanal.o): Depend on $(TREE_H).
	* gcc/config/m68k/m68k.md (movsi): Split possbily out-of-section
	constants if M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P.
	* gcc/config/m68k/m68k.c (TARGET_CANNOT_FORCE_CONST_MEM): Override.
	(m68k_cannot_force_const_mem): New function.
	* gcc/config/m68k/m68k.h (CONSTANT_ADDRESS_P): Check
	LEGITIMATE_CONSTANT_P.
	(LEGITIMATE_CONSTANT_P): Reject possibly out-of-section constants if
	M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P.
	(M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P): New macro.
	* gcc/config/m68k/uclinux.h (M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P):
	Override.
	* gcc/config/mips/mips.c (mips_offset_within_object_p): Delete.
	(mips_symbolic_constant_p): Use offset_within_section_p.

2006-03-17  Richard Sandiford  <richard@codesourcery.com>

	* gcc/config.gcc (m68k-*-uclinux*): Set with_cpu to 5206 by default.
	* gcc/config/m68k/m68k-cores.def (5211, 5212, 5213): Use the -mcpu=5211
	multilibs instead of the -mcpu=5207 ones.
	* gcc/config/m68k/t-uclinux (MULTILIB_OPTIONS): Restrict to coldfire
	cores.
	(MULTILIB_DIRNAMES, MULTILIB_EXCEPTIONS): Update accordingly.
	(NATIVE_SYSTEM_HEADER_DIR): Override default.
	* gcc/config/m68k/uclinux.h (MULTILIB_DEFAULTS): Define.
	(SYSROOT_SUFFIX_SPEC): Define.
	(SYSROOT_HEADERS_SUFFIX_SPEC): Define.

2006-03-16  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k-protos.h (m68k_out_of_object_offset): New.
	* gcc/config/m68k/m68k.c (m68k_out_of_object_offset): New.
	(m68k_legitimate_address_p): Check out of object offset.
	* gcc/config/m68k/m68k.md (movsi): Split if out of object offset.
	* gcc/config/m68k/predicates.md (general_src_operand): Check out of
	object offset.
	* gcc/config/m68k/uclinux.h (M68K_NO_OUT_OF_OBJECT_OFFSETS): Declare.
	
	* gcc/config/m68k/m68k.c (m68k_output_function_epilogue): Prevent
	compilation warning.

	* gcc/config/m68k/m68k-protos.h (m68k_legitimize_reload_address): Declare.
	* gcc/config/m68k/m68k.c (m68k_legitimize_reload_address): New.
	* gcc/config/m68k/m68k.h (LEGITIMIZE_RELOAD_ADDRESS): New.
	* gcc/testsuite/gcc.dg/m68k-fp-1.c: New.
	
	* gcc/config/m68k/m68k-protos.h (m68k_legitimiate_address_p): Declare.
	* gcc/config/m68k/m68k.c (REG_OK_FOR_INDEX_STRICT,
	REG_OK_FOR_BASE_STRICT, LEGITIMATE_BASE_REG_P,
	LEGTIMATE_INDEX_REG_P): Copied & adjusted from m68k.h.
	(m68k_legitimate_address_p): New, converted from
	GO_IF_LEGITIMATE_ADDRESS.
	* gcc/config/m68k/m68k.hh (PCREL_GENERAL_OPERAND_OK,
	LEGTIMIATE_PIC_OPERAND_P): Remove.
	(GO_IF_LEGITIMATE_ADDRESS): Call m68k_legitimate_address_p.
	(LEGTIMIATE_BASE_REG_P, INDIRECTABLE_1_ADDRESS_P,
	GO_IF_NONINDEXED_ADDRESS, GO_IF_INDEXABLE_BASE, GO_IF_INDEXING,
	GO_IF_INDEXED_ADDRESS, LEGTIMIATE_INDEX_REG_P, LEGITIMATE_INDEX_P,
	GO_IF_COLDFIRE_FPU_LEGITIMATE_ADDRESS): Remove.

2006-03-14  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/fpgnulib.c (__truncdfsf2): Implement round to
	nearest even, fix denormal rounding overflow.

2006-03-10  Nathan Sidwell  <nathan@codesourcery.com>

	* libstdc++-v2/configure.ac (LIBSUPCXX_PRONLY): Protect against unset
	environment variable.
	* libstdc++-v3/configure: Rebuilt.

	* gcc/config.gcc (m68k-*-uclinux*): Include t-crtstuff.
	* gcc/config/m68k/t-uclinux (MULITLIB_EXCEPTIONS): Disable
	mid-shared-library & msep-data on coldfire chips without 32bit PC
	rel addressing.
	(EXTRA_MULTILIB_PARTS): Don't define here.
	* gcc/config/m68k/m68k.c (TARGET_ASM_FILE_START_APP_OFF): Protect
	with M68K_NO_ASM_FUILE_START_APP_OFF.
	(override_options): Avoid signed/unsigned warning. Give more
	informative error message when TARGET_SEP_DATA or
	TARGET_ID_SHARED_LIBRARY are unsupported.
	* gcc/config/m68k/uclinux.h (STARTFILE_SPEC): Define here.
	(ENDFILE_SPEC): Likewise.
	(INIT_SECTION_ASM_OP, FINI_SECTION_ASM_OP): Don't define.
	(TARGET_OS_CP_BUILTINS): Remove duplicared mc68000 #define.
	(M68K_NO_ASM_FILE_START_APP_OFF): New.

2006-03-08  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k-none.h (ASM_SPEC): Pass -mno-float for
	soft-float.

2006-03-07  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Detect -mtune
	usage to set multiple 68k core #defines.

2006-03-06  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k-cores.def: Set FL_PCREL_16 as appropriate.
	* gcc/config/m68k/m68k.c (FL_NOPIC): Remove.
	(FL_PCREL_16): Define.
	(all_architectures): Set FL_PCREL_16 as appropriate.
	(all_tunings): Likewise.
	(override_options): Replace 68k specific FL_NOPIC test with general
	FL_PCREL_16 one.

2006-02-26  Nathan Sidwell  <nathan@potter.codesourcery.com>

	* libstdc++-v3/testsuite/lib/libstdc++.exp (check_v3_target_fileio,
	check_v3_target_time): New.
	* libstdc++-v3/testsuite/lib/dg-options.exp (dg-require-fileio,
	dg-require-time): New.
	* libstdc++-v3/testsuite/ext/stdio_sync_filebuf/char/12048-1.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_sync_filebuf/char/12048-2.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_sync_filebuf/char/12048-3.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_sync_filebuf/char/12048-4.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_sync_filebuf/char/1.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_filebuf/char/2.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_filebuf/char/10063-1.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_filebuf/char/10063-2.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_filebuf/char/10063-3.cc: Use it.
	* libstdc++-v3/testsuite/22_locale/time_put/put/char/12439_1.cc: Use it.
	* libstdc++-v3/testsuite/22_locale/time_put/put/char/12439_3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ofstream/open/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ofstream/cons/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/objects/char/12048-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/objects/char/12048-4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/objects/char/12048-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/objects/char/12048-3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/objects/char/10.cc: Use it.
	* libstdc++-v3/testsuite/27_io/objects/char/12048-5.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/get/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/ignore/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/ignore/char/3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/getline/char/5.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/seekg/char/sstream.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/seekg/char/fstream.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/readsome/char/6746-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/extractors_other/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/tellg/char/sstream.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/tellg/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/tellg/char/fstream.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/extractors_character/char/4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ostream/inserters_other/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ostream/tellp/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ostream/seekp/char/2346-fstream.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ifstream/open/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ifstream/cons/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputbackc/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputbackc/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputbackc/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputbackc/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/12790-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/12790-3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/12790-4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/1-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/2-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/3-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/3-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/3-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/11543.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/12790-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/12790-3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/12790-4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/in_avail/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/in_avail/char/9701-3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/setbuf/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/setbuf/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/setbuf/char/3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/setbuf/char/12875-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/setbuf/char/12875-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sbumpc/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sbumpc/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sbumpc/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sbumpc/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sbumpc/char/9825.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/is_open/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputc/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputc/char/1-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputc/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputc/char/2-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/open/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/open/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/open/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/open/char/3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/overflow/char/2-unbuf.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/overflow/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/overflow/char/9988.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/overflow/char/9182-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/overflow/char/9169.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/snextc/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/snextc/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/snextc/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/snextc/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetc/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetc/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetc/char/1-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetc/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetc/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/12790-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/12790-3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/12790-4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/underflow/10096.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/underflow/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sungetc/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sungetc/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sungetc/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sungetc/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/12790-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/12790-3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/12790-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/12790-4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/1-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/2-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/3-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/3-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/3-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputn/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputn/char/1-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputn/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputn/char/2-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputn/char/9339.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/pbackfail/char/9761.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sync/char/9182-1.cc: Use it.
	* libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/10.cc: Use it.
	* libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/11.cc: Use it.
	* libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/5.cc: Use it.

2006-02-23  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/doc/invoke.text (M680x0 Options): Update.
	* gcc/config/m68k/m68k.opt (mdiv): Rename from mhwdiv, to match
	assembler.
	(musp): Remove.
	(mbitfield, mrtd, mshort): Allow negated.
	* gcc/config/m68k/m68k.c (m68k_cf_usp): Remove.
	(all_architectures): isaa defaults to HWDIV and 5206e. isaa+
	defaults to HWDIV.
	(override_options): Remove m68k_cf_usp setting.
	* gcc/config/m68k/m68k.h (m68k_cf_usp): Remove.

	* gcc/config/m68k/m68k-cores.def: Add 5202, 5204, 5250.

	* gcc/config/m68k/m68k.h (TARGET_COLDFIRE): Remove, use
	m68k_arch_coldfire directly.  Update all users.
	* gcc/config/m68k/m68k.c: Update all users.
	* gcc/config/m68k/m58k.md: Update all users.
	* gcc/config/m68k/linux.h (ASM_RETURN_CASE_JUMP): Update.
	* gcc/config/m68k/coff.h (ASM_RETURN_CASE_JUMP): Update.
	* gcc/config/m68k/m68kelf.h (ASM_RETURN_CASE_JUMP): Update.
	* gcc/config/m68k/netbsd-elf.h (ASM_RETURN_CASE_JUMP): Update.

2006-02-22  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k.c (m68k_cpu_cpp_builtins): Move to ...
	* gcc/config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): ... here.
	* gcc/config/m68k/m68k-protos.h (m68k_cpu_cpp_builtins): Remove.

2005-02-21  Julian Brown  <julian@codesourcery.com>

	* gcc/config/m68k/m68k.c (fpu_impl, fpu_select): Remove.
	(m68k_handle_option): Remove msoft-float, mhard-float, m68881 handling
	from here.
	(override_options): Handle default CPU setting. Handle bitfield, hwdiv,
	usp options. Use FL_NOPIC.
	* gcc/config/m68k/m68k.h (TARGET_BITFIELD): Define to m68k_bitfield,
	temporarily.
	(target_cpus): New enumeration of CPU identifiers, TARGET_CPU_<core>.
	* gcc/config/m68k/m68k-none.h: Remove old TARGET_CPU_DEFAULT handling.
	(OPTION_DEFAULT_SPECS): Define macro for handling default CPU/float.
	(EXTRA_SPECS): Remove CC1_CPU_DEFAULT_SPEC.
	* gcc/config/m68k/m68k.opt (mbitfield): Use m68k_flag_bitfield.
	(mnobitfield): Likewise.
	(mhwdiv, musp): Fix options.
	(m68881, msoft-float, mhard-float): Use m68k_flag_hardfloat.
	(mfpu): Remove.
	* gcc/config/m68k/t-m68kelf (MULTILIB_EXCEPTIONS): Add msoft-float,
	mhard-float.
	* gcc/config.gcc (m68k*-linux*): Rename to...
	(m68k*-*): Implement --with-cpu, --with-float. Remove old
	compile-time CPU selection options.

2006-02-16  Julian Brown  <julian@codesourcery.com>

	* gcc/config.gcc (m68k-*-aout*): Use t-mlib-matches file.
	(m68k-*-coff*): Likewise.
	(m68010-*-netbsdelf*, m68k*-*-netbsdelf*): Likewise.
	(m68k-*-uclinux*): Likewise.
	(m68k-*-linux*): Likewise.
	(m68k-*-rtems*): Likewise.
	* gcc/config/m68k/t-rtems: Use -mcpu= options for multilibs.
	* gcc/config/m68k/t-m68kelf: Likewise.
	* gcc/config/m68k/t-m68kbare: Likewise.
	* gcc/config/m68k/t-uclinux: Likewise.
	* gcc/config/m68k/m68k-cores.def: Add multilib field. Add missing HWDIV
	flag to various cores. Replace 5280, 5281, 5282 with 528x.
	* gcc/config/m68k/t-mlib-matches: Find canonical multilib for
	CPU/arch settings.
	* gcc/config/m68k/m68k-none.h (ASM_SPEC): Add -mcpu/-march options.
	* gcc/config/m68k/m68k.c (all_cores): Ignore new multilib field in
	m68k-cores.def.
	(m68k_handle_option): Use 528x instead of 5280.
	(override_options): Don't set CPU/arch if tuning option only is given.
	* gcc/config/m68k/m68k.h (processor_type): Ignore new multilib field in
	m68k-cores.def.

2006-02-13  Julian Brown  <julian@codesourcery.com>

	* gcc/config/m68k/m68k.h (CONST_OK_FOR_LETTER_P): Implement 'R'
	constraint for immediates which can be handled by mov3q.

2006-02-10  Julian Brown  <julian@codesourcery.com>

	* gcc/config/m68k/m68k.md: Replace uses of TARGET_68020, TARGET_68040,
	TARGET_68060, TARGET_68040_ONLY, TARGET_CPU32, TARGET_CFV4 with
	TUNE_68000, TUNE_68020, TUNE_68040, TUNE_CFV4, m68k_arch_68020,
	m68k_arch_68040, m68k_arch_68060, m68k_arch_isab as appropriate,
	throughout.
	* gcc/config/m68k/linux.h (MASK_68881): Change spelling to MASK_HARDFP.
	* gcc/config/m68k/m68k-cores.def (68020-40, 68020-60): Remove CPU
	names.
	(68332, cpu32): Use cpu32 as microarchitecture.
	* gcc/config/m68k/m68k-protos.h (m68k_cpu_cpp_builtins): Add prototype.
	* gcc/config/m68k/m68k-none.h (MASK_68881): Change spelling to
	MASK_HARDFP. Use -mhard-float instead of -m68881.
	* gcc/config/m68k/m68k.opt (-m5200, -m5206e, -m528x, -m5307, -m5407)
	(-mcfv4e, -m68881): Don't use target flags to handle legacy options.
	(-mhard-float): Add option to enable ColdFire FPU or 68881 depending
	on context.
	(-msoft-float): Negation of above.
	(-mhwdiv): Enable/disable ColdFire hardware divide instructions
	(unimplemented).
	* gcc/config/m68k/m68k.c (m68k_cpu, m68k_arch_68020, m68k_arch_68040)
	(m68k_arch_68060, m68k_arch_coldfire, m68k_arch_isaaplus)
	(m68k_arch_isab, m68k_arch_isac, m68k_tune, m68k_fpu, m68k_bitfield)
	(m68k_cf_hwdiv, m68k_cf_usp): New variables describing target
	capabilities.
	(FL_FOR_isa_40, FL_FOR_isa_60): Alter definitions.
	(FL_FOR_isa_20_40, FL_FOR_isa_20_60): Remove.
	(m68k_isa): Remove isa_20_40 and isa_20_60.
	(all_cores): Alter last entry.
	(all_architectures): Reformat. Update various fields. Remove 68020-40
	and 68020-60. Remove cfvX entries.
	(all_tunings): New array. Describe different tuning options.
	(m68k_select): Tune for microarch not CPU.
	(MASK_ALL_CPU_BITS): Remove.
	(m68k_handle_option): Handle legacy options using new CPU/tuning
	selection code. Add support for -mhard-float and fix support for
	-msoft-float, -m68881.
	(override_options): Add tuning support. Remove legacy target flag
	support.
	(m68k_cpu_cpp_builtins): New function (from TARGET_CPU_CPP_BUILTINS
	in m68k.h). Handle legacy defines, and support new __mcfisaX__ and
	__mcfvX__ defines to be used in new code.
	(m68k_output_function_prologue): Use TUNE_* macros and m68k_arch_*
	predicates.
	(m68k_output_function_epilogue): Likewise.
	(m68k_output_pic_call): Likewise.
	(output_scc_di): Likewise.
	(const_method): Likewise.
	(m68k_rtx_costs): Likewise.
	(output_move_simode_const): Likewise.
	(output_move_himode): Likewise.
	(output_move_qimode): Likewise.
	(output_move_stricthi): Likewise.
	(output_move_strictqi): Likewise.
	(output_addsi3): Likewise.
	(standard_68881_constant_p): Likewise.
	(print_operand): Likewise.
	(m68k_output_mi_thunk): Likewise.
	* gcc/config/m68k/netbsd-elf.h (MASK_68881): Spell MASK_HARDFP.
	* gcc/config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Implement as
	function call to m68k_cpu_cpp_builtins.
	(TARGET_CPU32): Remove.
	(TARGET_COLDFIRE): Define as m68k_arch_coldfire.
	(TARGET_COLDFIRE_FPU, TARGET_68881, TARGET_HARD_FLOAT): Define in terms
	of m68k_fpu.
	(TARGET_FLT_EVAL_METHOD): Use m68k_arch_68040.
	(CONST_OK_FOR_LETTER_P): Add 'R' constraint.
	(INDIRECTABLE_1_ADDRESS_P, GO_IF_INDEXED_ADDRESS, LEGITIMATE_INDEX_P):
	Use m68k_arch_68020.
	(uarch_type): Remove u68030, ucfv2m. Add ucpu32.
	(TUNE_68000, TUNE_68020, TUNE_68040, TUNE_68060, TUNE_68040_60)
	(TUNE_CPU32, TUNE_CFV2, TUNE_CFV3, TUNE_CFV4): Add tuning macros.
	(m68k_cpu, m68k_arch_68020, m68k_arch_68040, m68k_arch_68060)
	(m68k_arch_coldfire, m68k_arch_isaaplus, m68k_arch_isab)
	(m68k_arch_isac, m68k_tune, m68k_fpu, m68k_bitfield, m68k_cf_hwdiv)
	(m68k_cf_usp): Declare extern variables describing target capabilities.

2006-02-01  Nathan Sidwell  <nathan@voldemort.voldemort.codesourcery.com>

	* gcc/config/m68k/lb1sf68.asm (__divsf3, __divdf3, __mulsf3,
	__muldf3): Return a correctly signed zero.

2006-01-31  Nathan Sidwell  <nathan@voldemort.voldemort.codesourcery.com>

	* gcc/config/m68k/lb1sf68.asm: Use moveq to load small constants.

2006-01-30  Julian Brown  <julian@codesourcery.com>

	* gcc/config/m68k/m68k-cores.def: New file. Define various 68k/ColdFire
	cores.
	* gcc/config/m68k/m68k.opt (-mcpu, -march, -mtune, -mfpu): New
	options.
	* gcc/config/m68k/m68k.c (FL_NOPIC, FL_BITFIELD, FL_68881, FL_COLDFIRE)
	(FL_CF_HWDIV, FL_CF_MAC, FL_CF_EMAC, FL_CF_EMAC_B, FL_CF_USP)
	(FL_CF_FPU, FL_ISA_68000, FL_ISA_68020, FL_ISA_68040, FL_ISA_68060)
	(FL_ISA_A, FL_ISA_APLUS, FL_ISA_B, FL_ISA_C): Define flags for
	m68k-cores.def.
	(FL_FOR_isa_00, FL_FOR_isa_20, FL_FOR_isa_40, FL_FOR_isa_60)
	(FL_FOR_isa_20_40, FL_FOR_isa_20_60, FL_FOR_isa_a, FL_FOR_isa_aplus)
	(FL_FOR_isa_b, FL_FOR_isa_c): Define base flags for ISAs.
	(m68k_isa): New enumerated type for instruction-set architectures.
	(processors): New type for processors.
	(all_cores): New array. All m68k cores, read from m68k-cores.def.
	(all_architectures): New array. All m68k architectures.
	(m68k_cpu_select): New type for selecting cpu/arch.
	(m68k_select): New array for selecting cpu/arch/tuning.
	(fpu_impl): New type for floating-point units.
	(fpu_select): New array for selecting FPU.
	(M68K_OPT_SET_TUNE, M68K_OPT_SET_ARCH, M68K_OPT_SET_CPU): New defines
	for indices into m68k_select array.
	(m68k_handle_option): Handle -mcpu=, -march=, -mtune=.
	(override_options): Handle new -mcpu, -march options. Translate to old
	target flags.
	* gcc/config/m68k/m68k.h (uarch_type): New enumeration for
	microarchitecture types.
	(processor_type): New enumeration for processor core identifications.
	(fpu_type): New enumeration for FPU types.

2006-01-27  Paul Brook  <paul@codesourcery.com>

	* version.c: Mark as CodeSourcery build.

2006-01-23  Julian Brown  <julian@codesourcery.com>

	Backport from mainline.
	2006-01-23  Kazu Hirata  <kazu@codesourcery.com>
	PR testsuite/25590
	* gcc.dg/tree-ssa/gen-vect-11.c: Add -fwrapv.

2006-01-23  Julian Brown  <julian@codesourcery.com>

	* gcc/config/m68k/netbsd-elf.h (LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Make
	64-bit on Coldfire.
	* gcc/config/m68k/m68k.h (LONG_DOUBLE_TYPE_SIZE): Likewise.
	(LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Likewise. 

2006-01-23  Julian Brown  <julian@codesourcery.com>

	* Merge from csl/sourcerygxx-4_1 branch, revision 110050.

2006-01-22  Paul Brook  <paul@codesourcery.com>
	Peter Barada  <peter@the-baradas.com>

	* gcc/config/m68k/m68k.md: Add Coldfire FPU support.
	Define FP mode macro and associated attributes.
	Use it for float mode patterns.
	* gcc/config/m68k/linux.h (FUNCTION_VALUE): Use m68k_function_value.
	(LIBCALL_VALUE): Use m68k_libcall_value.
	* gcc/config/m68k/m68k-protos.h (m68k_libcall_value): Add prototype.
	(m68k_function_value): Ditto.
	(emit_move_sequence): Ditto.
	* gcc/config/m68k/m68kemb.h (LIBCALL_VALUE): Use m68k_libcall_value.
	* gcc/config/m68k/m68k-none.h (ASM_SPEC): Add mcfv4e.
	* gcc/config/m68k/t-m68kelf (MULTILIB_OPTIONS): Add mcfv4e.
	(MULTILIB_EXCEPTIONS): Ditto.
	* gcc/config/m68k/m68k.opt: Add mcfv4e.
	* gcc/config/m68k/m68k.c (m68k_handle_option): Handle OPT_mcfv4e.
	(m68k_compute_frame_layout): Include space for ColdFire FPU regs.
	(m68k_output_function_prologue): Save ColdFire FPU registers.
	(m68k_output_function_epilogue): Restore ColdFire FPU registers.
	(force_mode, fp_reg_operand, emit_move_sequence): New functions.
	(m68k_regno_mode_ok): Don't allow types larget than 8 bytes in
	ColdFire FPU registers.
	(m68k_libcall_value, m68k_function_value): New functions.
	* gcc/config/m68k/netbsd-elf.h (FUNCTION_VALUE): Use
	m68k_function_value.
	(LIBCALL_VALUE): Use m68k_libcall_value.
	* gcc/config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Define __mcfv4e__.
	(MASK_COLDFIRE): Add MASK_CFV4E.
	(TARGET_COLDFIRE_FPU, TARGET_HARD_FLOAT, TARGET_FP_REG_SIZE): New.
	(MODES_TIEABLE_P): Use TARGET_HARD_FLOAT.
	(REG_CLASS_FROM_LETTER, PREFERRED_RELOAD_CLASS): Ditto.
	(GO_IF_COLDFIRE_FPU_LEGITIMATE_ADDRESS): Define.
	(GO_IF_LEGITIMATE_ADDRESS): Use it.
	(LEGITIMIZE_ADDRESS): Handle ColdFire FPU addresses.
	* gcc/doc/invoke.tex: Document -mcfv4e on m68k.

=======
>>>>>>> .merge-right.r112375
2006-01-20  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch.
	2005-09-21  Kazu Hirata  <kazu@codesourcery.com>
	* gcc/config/arm/arm.md (movdi): Force operands[1] to a register
	if we have a non-register source.
	(*arm_movdi, *movdf_soft_insn): Require that one of the
	operands be a register.
	* gcc/config/arm/iwmmxt.md (*iwmmxt_arm_movdi): Likewise.
	* gcc/config/arm/vfp.md (*arm_movdi_vfp, *movdf_vfp): Likewise.

2006-01-20  Joseph S. Myers  <joseph@codesourcery.com>

	PR libstdc++/25524
	* gcc/cppdefault.h (struct default_include): Add multilib flag.
	* gcc/cppdefault.c (cpp_include_defaults): Set it.
	* gcc/c.opt (-imultilib): New option.
	* gcc/c-opts.c (imultilib): New.
	(c_common_handle_option): Handle -imultilib.
	(c_common_post_options): Likewise.
	* gcc/c-incpath.c (add_standard_paths, register_include_chains):
	Likewise.
	* gcc/c-incpath.h (register_include_chains): Add extra parameter.
	* gcc/gcc.c (do_spec_1): Generate -imultilib option.
	(The Specs Language): Update %I description.
	(process_command): Update copyright notice.
	* gcc/doc/cppopts.texi (-imultilib): Document.
	* gcc/doc/invoke.texi (-imultilib): Include in option summary.
	(%I): Update specs documentation.
	* libstdc++-v3/include/Makefile.am: Install host-specific headers
	in multilib subdirectory.
	* libstdc++-v3/include/Makefile.in: Regenerate.

2006-01-20  Julian Brown  <julian@codesourcery.com>

	Merge from csl-gxxpro-3_4-branch.
	2005-11-28  Mark Mitchell  <mark@codesourcery.com>
	Backport:
	2004-10-28  Pascal Obry  <obry@act-europe.fr>
	* unwind-dw2-fde.c: Import from MingW build for ZCX support.
	* unwind-sjlj.c: Idem.
	* config/i386/cygming.h: Idem.
	* config/i386/mingw32.h: Idem.
	* config/i386/t-cygming: Idem.
	* config/i386/t-mingw32: Idem.
	* config/i386/win32-ehfb.c: New file to support unwinding through
	signals on Windows.
	Provides support for ZCX on Windows platforms. This set of patch
	comes from the MingW compiler (Danny Smith) adapted and enhanced to
	support unwinding through signals for example.
	2005-07-29  Pascal Obry  <obry@act-europe.fr>
	Support for crtbegin/crtend.o on MingW.
	* config.gcc: Add crtbegin.o and crtend.o as extra_parts on MingW.
	* crtstuff.c: Add support for MingW.
	Provides support for ZCX on Windows platforms. This set of patch
	comes from the MingW compiler (Danny Smith) adapted to GCC 3.4.

2006-01-20  Julian Brown  <julian@codesourcery.com>

	Backport from mainline.
	2006-01-02  Mark Mitchell  <mark@codesourcery.com>
	* libstdc++-v3/src/Makefile.am (LTLDFLAGS): New variable.
	(CXXLINK): Use LTLDFLAGS.
	* libstdc++-v3/src/Makefile.in: Regenerated.
	* libstdc++-v3/libsupc++/Makefile.am (LTLDFLAGS): New variable.
	(CXXLINK): Use LTLDFLAGS.
	* libstdc++-v3/libsupc++/Makefile.in: Regenerated.

	2006-01-02  Mark Mitchell  <mark@codesourcery.com>
	* libtool-ldflags: New script.

2006-01-20  Julian Brown  <julian@codesourcery.com>

	Merge from csl-gxxpro-3_4-branch:
	2005-09-14  Mark Mitchell  <mark@codesourcery.com>
	* gcc/config/vx-common.h (DBX_DEBUGGING_INFO): Define to 1.

2006-01-20  Julian Brown  <julian@codesourcery.com>

	Backport from mainline.
	2005-11-23  Mark Mitchell  <mark@codesourcery.com>
	* gcc/doc/invoke.texi: For man pages, include gcc-vers.texi.
	List @file in the option summary.  Include the libiberty documentation
	for @file.
	* gcc/gcc.c (main): Call expandargv.
	* gcc/Makefile.in (gcc-vers.texi): Define srcdir.

	2005-11-23  Mark Mitchell  <mark@codesourcery.com>
	* maintainer-scripts/update_web_docs_svn: Set @srcdir in gcc-vers.texi.

2006-01-20  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch.
	2005-10-20  Paul Brook  <paul@codesourcery.com>
	* config/arm/arm.c (arm_default_cpu): New.
	(arm_override_options): Set arm_default_cpu.
	(arm_file_start): Output EABI attribute directives.

2006-01-20  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch.
	2005-10-20  Paul Brook  <paul@codesourcery.com>
	* config/arm/arm.c (arm_elf_asm_constructor): Remove ATTRIBUTE_UNUSED
	from priority argument.  Use different section names for non-default
	priority.
	* config/arm/elf.h: Remove definition of SUPPORTS_INIT_PRIORITY.

2006-01-18  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch.
	2005-03-14  Julian Brown  <julian@codesourcery.com>
	* gcc/config/arm/lib1funcs.asm (ashldi3): Don't define on SymbianOS.
	(aeabi_llsl): Likewise.
	(ashrdi3): Likewise.
	(aeabi_lasr): Likewise.
	(lshrdi3): Likewise.
	(aeabi_llsr): Likewise. 
	2005-03-10  Julian Brown  <julian@codesourcery.com>
	* gcc/config.gcc: Disable shared libgcc for SymbianOS.
	* gcc/config/arm/t-symbian (LIB2ADDEH): Include config/arm/pr-support.c.

2006-01-18  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch
	2005-03-10  Julian Brown  <julian@codesourcery.com>
	* libstdc++configure.ac (LIBSUPCXX_PRONLY): New AM_CONDITIONAL: yes
	if we are compiling for SymbianOS on ARM.
	* libstdc++include/Makefile.am: Don't install C++ headers if
	LIBSUPCXX_PRONLY is true.
	* libstdc++libsupc++/Makefile.am: Include only eh_personality.cc
	in libsupc++ if LIBSUPCXX_PRONLY is true.
	* libstdc++Makefile.in: Regenerate.
	* libstdc++configure: Regenerate.
	* libstdc++include/Makefile.in: Regenerate.
	* libstdc++libmath/Makefile.in: Regenerate.
	* libstdc++libsupc++/Makefile.in: Regenerate.
	* libstdc++po/Makefile.in: Regenerate.
	* libstdc++src/Makefile.in: Regenerate.
	* libstdc++testsuite/Makefile.in: Regenerate.

2005-01-17  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	2005-12-13  Carlos O'Donell <carlos@codesourcery.com>
	* gcc/c-cppbuiltin.c (builtin_define_float_constants): Add
	fp_cast parameter, pass to builtin_define_with_hex_fp_value.
	Define __FLT_HAS_DENORM__, __DBL_HAS_DENORM__, __LDBL_HAS_DENORM__.
	(builtin_define_with_hex_fp_value): Use fp_cast when building macro.
	(c_cpp_builtins): If flag_single_precision_constant then set fp_cast
	to "((double)%sL)" otherwise "%s".
	* gcc/testsuite/gcc.dg/single-precision-constant.c: New test.
	* libstdc++-v3/include/std/std_limits.h (struct numeric_limits):
	Use __DBL_HAS_DENORM__, __FLT_HAS_DENORM__, __LDBL_HAS_DENORM__.

2005-01-17  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	2005-12-15  Richard Sandiford  <richard@codesourcery.com>
	* gcc/config/arm/predicates.md (call_memory_operand): New.
	* gcc/config/arm/arm.md (*call_mem, *call_value_mem): Use it.
	* gcc/testsuite/gcc.dg/20051215-1.c: New file.

	* gcc/config/arm/arm.md: Provide a big-endian version of the
	(zero_extend:SI (subreg:QI ...)) splitter.

2006-01-16  Paul Brook  <paul@codesourcery.com>

	* config/m68k/m68k.c (output_move_const_into_data_reg):
	Output correct mnemonic for mvz and mvs.

2006-01-03  Paul Brook  <paul@codesourcery.com>

	* config/m68k/m68k.c (m68k_output_mi_thunk): Use jmp, not jsr.

2005-12-30  Paul Brook  <paul@codesourcery.com>

	* config/m68k/m68k.md: Convert define_peephole to define_peephole2.
	(UNSPEC_MOVEQ_MEM): New constant.
	(movsi_smallconst): New pattern.
	* config/m68k/m68k.h (HARD_FP_REG_P): Define.

2005-12-30  Paul Brook  <paul@codesourcery.com>

	PR target/23482
	* doc/md.texi: Document m68k Q, S, T and U constraints.
	* config/m68k/m68k.h (EXTRA_CONSTRAINTS): Restrict U to 16-bit
	offsets.

2005-12-29  Paul Brook  <paul@codesourcery.com>

	* config/m68k/m68k.h (RETURN_ADDR_RTX): Define.
	* config/m68k/m68k.c (m68k_initial_elimination_offset): Remove FIXME.
	Include offset due to FIRST_PARM_OFFSET.

2005-12-29  Paul Brook  <paul@codesourcery.com>

	* config/m68k/lb1sf68.asm (__cmpdf2): Fix typo in immediate mask.
	Create wrapper and rename body...
	(__cmpdf2_internal): ... to this.  Return correct value for unordered
	result.
	(__cmpsf2): Create wrapper and rename body...
	(__cmpsf2_internal): ... to this.  Return corerct value for unordered
	result.
	(__eqdf2, __nedf2, __gtdf2, __gedf2, __ltdf2, __ledf2): Use
	__cmpdf2_internal.
	(__eqsf2, __nesf2, __gtsf2, __gesf2, __ltsf2, __lesf2): Use
	__cmpsf2_internal.

2005-12-29  Paul Brook  <paul@codesourcery.com>

	* config/m68k/fpgnulib.c (__extendsfdf2): Handle negative zero.
	(__truncdfsf2): Ditto.
	(__extenddfxf2): Ditto.
	(__truncxfdf2): Ditto.
	* config/m68k/lb1sf68.asm (__addsf3): Return -0.0 for -0.0 + -0.0.
	(__adddf3): Ditto.

2005-12-29  Daniel Jacobowitz  <dan@codesourcery.com>
	Paul Brook  <paul@codesourcery.com>

	* gcc/config/m68k/m68k.c (m68k_output_pic_call): Don't use bsr.l for
	!TARGET_68020.
	* gcc/config/m68k/t-m68kelf (EXTRA_PARTS): Remove.
	(EXTRA_MULTILIB_PARTS): Set.
	* gcc/config/m68k/t-uclinux (EXTRA_PARTS): Remove.
	(EXTRA_MULTILIB_PARTS): Set.

2005-12-21  Paul Brook  <paul@codesourcery.com>

	* gcc/testsuite/gcc.dg/pr19340.c: Skip on m68k targets.

2005-12-20  Paul Brook  <paul@codesourcery.com>

	* gcc/testsuite/lib/target-supports.exp (check_profiling_available):
	Add m68k-*-elf.

2005-12-17  Paul Brook  <paul@codesourcery.com>

	* gcc/config/m68k/m68k.md (m68k_output_function_prologue): Always call
	dwarf2out_def_cfa. Only add space for frame pointer to cfa_offset
	when frame_pointer_needed. 

2005-12-02  Paul Brook  <paul@codesourcery.com>

	* config/m68k/fpgnulib.c (__unordsf2, __unorddf2, __unordxf2,
	__floatunsidf, __floatunsisf, __floatunsixf): New functions.

2005-11-28  Paul Brook  <paul@codesourcery.com>

	* config.gcc: Don't use fixproto on m68k-elf.

