2006-06-23  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k.c (override_options): Remove unneeded brackets
	from the !flag_pic settings of m68k_symbolic_call and
	m68k_symbolic_jump.  Use %p0 instead of %a0@PLTPC.
	(print_operand): Add a 'p' operand code.

2006-06-23  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/linux-unwind.h (rt_sigframe_footer): Remove special
	case for __mcoldfire__.
	(m68k_fallback_frame_state): Update coldfire code for new kernel
	signal trampolines.  Index individual elements of f_fpregs.

2006-06-22  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/uclinux.h (STARTFILE_SPEC): Use Scrt1.o instead of
	crt1.o for shared libraries.
	(LIB_SPEC): Remove -elf2flt and -shared-lib-id 0 options.
	(LINK_SPEC): Map -mshared-library-id=N to -shared-lib-id N.
	Provide a default -shared-lib-id of 0.
	(TARGET_OS_CPP_BUILTINS): Define __GXX_MERGED_TYPEINFO_NAMES=0
	for -mid-shared-library.
	(DRIVER_SELF_SPECS): Map unadorned PIC options to -msep-data.
	* config/m68k/t-uclinux (MULTILIB_OPTIONS): Add -msep-data and
	-mid-shared-library multilibs.
	(MULTILIB_DIRNAMES): Update accordingly.

2006-06-21  Richard Sandiford  <richard@codesourcery.com>

	* acinclude.m4 (GLIBCXX_ENABLE_C99): Use -lm for link tests in
	GCC_TRY_COMPILE_OR_LINK.  Fall back to compile-only tests if
	-lm is not available.
	* libstdc++-v3/configure: Regenerate.

2006-06-20  Richard Sandiford  <richard@codesourcery.com>

	Backport from mainline:

	gcc/
	2006-05-23  Richard Sandiford  <richard@codesourcery.com>

	* combine.c (replaced_rhs_value): New variable.
	(combine_instructions): Set it.
	(distribute_notes): When distributing a note in replaced_rhs_insn,
	check whether the value was used in replaced_rhs_value.

2006-06-20  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* postreload.c (reload_combine): Fix calculation of index_regs set.

2006-06-16  Nathan Sidwell  <nathan@codesourcery.com>

	gcc/
	* config/m68k/m68k.h (PCC_STATIC_STRUCT_RETURN): Don't define here.
	* config/m68k/m68kemb.h (PCC_STATIC_STRUCT_RETURN): Don't undefine
	here ...
	* config/m68k/m68kelf.h (PCC_STATIC_STRUCT_RETURN): ... or here ...
	* config/m68k/netbsd-elf.h (PCC_STATIC_STRUCT_RETURN): ... or here.
	* /config/m68k/openbsd.h (PCC_STATIC_STRUCT_RETURN): Define here.
	
2006-06-16  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/print-sysroot-suffix.sh: Rewrite to be more flexible.
	Take the sysroot, MULTILIB_MATCHES and MULTILIB_OPTIONS as arguments.
	* config/m68k/t-mlib-matches (sysroot-suffix.h): Update accordingly.

2006-06-16  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k.c (override_options): Don't check FL_PCREL_16
	for -msep-data and -mid-shared-library.

2006-06-16  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k.h (ASM_PREFERRED_EH_DATA_FORMAT): Don't use
	indirect or pc-relative references to code or globals if either
	TARGET_SEP_DATA or TARGET_ID_SHARED_LIBRARY is in effect.

2006-06-16  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/lb1sf68.asm (PICCALL): Use an lea and pc-relative
	jump sequence for ISA A and ISA A+.
	(PICJUMP): Likewise.

2006-06-16  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/predicates.md (call_operand): Define.
	* config/m68k/m68k.md (call): Remove SYMBOL_REF_FLAG handilng.
	Call m68k_legitimize_call_address.  Replace the separate flag_pic
	and !flag_pic define_insns with a unified pattern.  Make the
	target operand match the address inside the MEM rather than
	the MEM itself.  Provide two alternatives, one for direct jumps
	and one for indirect jumps.  Use output_call.
	(call_value): Likewise, but copy operand 1 to operand 0 before
	invoking output_call.
	* config/m68k/m68k-protos.h (m68k_output_pic_call): Delete.
	(output_call): Declare.
	(m68k_legitimize_call_address): Declare.
	* config/m68k/m68k.c (m68k_symbolic_call): New variable.
	(m68k_symbolic_jump): Likewise.
	(override_options): Initialize m68k_symbolic_call and
	m68k_symbolic_jump.  Only set function_no_cse for PIC
	if symbolic calls and jumps are supported.
	(m68k_output_pic_call): Delete.
	(m68k_legitimize_call_address): New function.
	(m68k_legitimate_address_p): Remove SYMBOL_REF_FLAG handling.
	(output_call): New function.
	(m68k_output_mi_thunk): Change operand 0 of the call from a
	memory reference to an address.  Use mips_symbolic_jump if
	non-null, otherwise load the address from the GOT.
	* config/m68k/m68k.h (EXTRA_CONSTRAINT): Add a 'W' constraint.
	Remove superfluous brackets.
	(m68k_symbolic_call): Declare.
	(m68k_symbolic_jump): Declare.

2006-05-25  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k-cores.def: Add 52235 & 5225 cores.
	* gcc/doc/invoke.texi (M680x0 Options): Add 52235 & 5225.

2006-05-22  Richard Sandiford  <richard@codesourcery.com>

	Merge from branches/csl/sourcerygxx-4_1:

	2006-05-19  Nathan Sidwell  <nathan@codesourcery.com>

	* libiberty/make-relative-prefix.c (split_directories): Add
	ignore_final arg.
	(make_relative_prefix): Keep the final path component if it was a
	directory.  Adjust calls to split_directories.

	2006-05-20  Richard Sandiford  <richard@codesourcery.com>

	Merge from mainline:
	gcc/
	2006-05-19  Richard Sandiford  <richard@codesourcery.com>

	* config/mips/linux-unwind.h: Include <asm/unistd.h>
	(mips_fallback_frame_state): Use syscall numbers to determine
	the appropriate li instruction for the current ABI.  Only use
	__NR_sigreturn for o32.

	2006-05-11  Joseph S. Myers  <joseph@codesourcery.com>

	* gcc/testsuite/lib/target-supports.exp
	(check_effective_target_powerpc_fprs,
	check_effective_target_powerpc_altivec_ok): New.
	* gcc/testsuite/g++.dg/eh/simd-2.C,
	gcc/testsuite/g++.dg/ext/altivec-1.C,
	gcc/testsuite/g++.dg/ext/altivec-10.C,
	gcc/testsuite/g++.dg/ext/altivec-11.C,
	gcc/testsuite/g++.dg/ext/altivec-12.C,
	gcc/testsuite/g++.dg/ext/altivec-13.C,
	gcc/testsuite/g++.dg/ext/altivec-2.C,
	gcc/testsuite/g++.dg/ext/altivec-3.C,
	gcc/testsuite/g++.dg/ext/altivec-4.C,
	gcc/testsuite/g++.dg/ext/altivec-5.C,
	gcc/testsuite/g++.dg/ext/altivec-6.C,
	gcc/testsuite/g++.dg/ext/altivec-7.C,
	gcc/testsuite/g++.dg/ext/altivec-8.C,
	gcc/testsuite/g++.dg/ext/altivec-9.C,
	gcc/testsuite/g++.dg/ext/altivec-types-1.C,
	gcc/testsuite/g++.dg/ext/altivec-types-2.C,
	gcc/testsuite/g++.dg/ext/altivec-types-3.C,
	gcc/testsuite/g++.dg/ext/altivec-types-4.C,
	gcc/testsuite/gcc.dg/simd-3.c,
	gcc/testsuite/gcc.dg/vect/vect-82_64.c,
	gcc/testsuite/gcc.dg/vect/vect-83_64.c,
	gcc/testsuite/gcc.dg/vmx/vmx.exp,
	gcc/testsuite/gcc.target/powerpc/980827-1.c,
	gcc/testsuite/gcc.target/powerpc/altivec-1.c,
	gcc/testsuite/gcc.target/powerpc/altivec-10.c,
	gcc/testsuite/gcc.target/powerpc/altivec-11.c,
	gcc/testsuite/gcc.target/powerpc/altivec-12.c,
	gcc/testsuite/gcc.target/powerpc/altivec-13.c,
	gcc/testsuite/gcc.target/powerpc/altivec-14.c,
	gcc/testsuite/gcc.target/powerpc/altivec-15.c,
	gcc/testsuite/gcc.target/powerpc/altivec-16.c,
	gcc/testsuite/gcc.target/powerpc/altivec-17.c,
	gcc/testsuite/gcc.target/powerpc/altivec-18.c,
	gcc/testsuite/gcc.target/powerpc/altivec-19.c,
	gcc/testsuite/gcc.target/powerpc/altivec-2.c,
	gcc/testsuite/gcc.target/powerpc/altivec-21.c,
	gcc/testsuite/gcc.target/powerpc/altivec-22.c,
	gcc/testsuite/gcc.target/powerpc/altivec-3.c,
	gcc/testsuite/gcc.target/powerpc/altivec-4.c,
	gcc/testsuite/gcc.target/powerpc/altivec-5.c,
	gcc/testsuite/gcc.target/powerpc/altivec-6.c,
	gcc/testsuite/gcc.target/powerpc/altivec-7.c,
	gcc/testsuite/gcc.target/powerpc/altivec-8.c,
	gcc/testsuite/gcc.target/powerpc/altivec-9.c,
	gcc/testsuite/gcc.target/powerpc/altivec-consts.c,
	gcc/testsuite/gcc.target/powerpc/altivec-pr22085.c,
	gcc/testsuite/gcc.target/powerpc/altivec-splat.c,
	gcc/testsuite/gcc.target/powerpc/altivec-types-1.c,
	gcc/testsuite/gcc.target/powerpc/altivec-types-2.c,
	gcc/testsuite/gcc.target/powerpc/altivec-types-3.c,
	gcc/testsuite/gcc.target/powerpc/altivec-types-4.c,
	gcc/testsuite/gcc.target/powerpc/altivec-varargs-1.c,
	gcc/testsuite/gcc.target/powerpc/altivec-vec-merge.c,
	gcc/testsuite/gcc.target/powerpc/ppc-vector-memcpy.c,
	gcc/testsuite/gcc.target/powerpc/ppc-vector-memset.c,
	gcc/testsuite/gcc.target/powerpc/ppc64-abi-2.c,
	gcc/testsuite/gcc.target/powerpc/pr16155.c,
	gcc/testsuite/gcc.target/powerpc/pr16286.c: Use these effective
	targets.
	* gcc/testsuite/gcc.dg/20020103-1.c: XFAIL on powerpc*-*-*.

	2006-05-08  Paul Brook  <paul@codesourcery.com>

	* gcc/cofnig/arm/arm.c (output_move_vfp): Fix typo.

	2006-05-07  Nathan Sidwell  <nathan@codesourcery.com>

	* configure.in (TOPLEVEL_CONFIGURE_ARGS): Protect args with active
	characters.
	(baseargs): Simplify protection, use ac_arg temp name, correct $
	to $$ conversion.
	* configure: Rebuilt.

	2006-05-05  Joseph Myers  <joseph@codesourcery.com>

	* gcc/testsuite/gcc.c-torture/execute/loop-2f.x,
	gcc/testsuite/gcc.c-torture/execute/loop-2g.x: New.  XFAIL on
	mips*-*-linux*.

	2006-05-05  Mark Mitchell  <mark@codesourcery.com>

	* configure.in: Do not mangle arguments like "--with-foo=A B C" when
	storing in baseargs.
	* configure: Regenerated.
	* gcc/configure.ac: Add --with-versuffix and --with-bugurl.
	* gcc/version.c (VERSUFFIX): Remove.
	(bug_report_url): Do not hard-code initializer.
	* gcc/Makefile.in (VERSUFFIX_s): Define.
	(BUGURL_s): Likewise.
	(version.o): Define VERSUFFIX and BUGURL.
	* gcc/doc/install.texi: Document them.
	* gcc/configure: Regenerated.

	2006-05-04  Kazu Hirata  <kazu@codesourcery.com>

	Backport:
	2006-05-04  Richard Sandiford  <richard@codesourcery.com>
	PR target/26765
	* gcc/config/mips/mips.c (mips_symbolic_address_p): Return true
	for SYMBOL_TLSGD, SYMBOL_TLSLDM, SYMBOL_DTPREL, SYMBOL_TPREL,
	SYMBOL_GOTTPREL, and SYMBOL_TLS.

	2006-05-04  Kazu Hirata  <kazu@codesourcery.com>
	PR target/26765
	* gcc/testsuite/gcc.target/mips/pr26765.c: New.

	2006-05-04  Paul Brook  <paul@codesourcery.com>

	* gcc/version.c: Revert back to Sourcery G++.

	2006-05-03  Paul Brook  <paul@codesourcery.com>

	Merge from branches/csl/arm-4_1 r113476.
	2006-05-02  Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/arm.c (add_minipool_forward_ref): Check if insn
	and pool overlap.
	(create_fix_barrier): Check that a suitable barrier location is
	found.
	(arm_reorg): Include ftmp->address in allowable range of addresses.

	2006-05-01  Kazu Hirata  <kazu@codesourcery.com>
	Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/vfp.md (arm_movdi_vfp): Correct the output templates
	for case 3 and 4.
	(thumb2_movdi_vfp): Ditto.

	2006-04-21  Kazu Hirata  <kazu@codesourcery.com>
	* gcc/config/arm/arm-protos.h: Add a prototype for
	output_move_vfp.
	* gcc/config/arm/arm.c (arm_coproc_mem_operand): When WB is
	false, accept PRE_DEC and POST_INC.
	(output_move_vfp): New.
	* gcc/config/arm/vfp.md (*arm_movsi_vfp, *thumb2_movsi_vfp,
	*arm_movdi_vfp, *thumb2_movdi_vfp, *movsf_vfp,
	*thumb2_movsf_vfp, *movdf_vfp, *thumb2_movdf_vfp): Call
	output_move_vfp on loads to and stores from VFP registers.
	* gcc/testsuite/gcc.target/arm/arm.exp,
	gcc/testsuite/gcc.target/arm/vfp-ldmdbd.c,
	gcc/testsuite/gcc.target/arm/vfp-ldmdbs.c,
	gcc/testsuite/gcc.target/arm/vfp-ldmiad.c,
	gcc/testsuite/gcc.target/arm/vfp-ldmias.c,
	gcc/testsuite/gcc.target/arm/vfp-stmdbd.c,
	gcc/testsuite/gcc.target/arm/vfp-stmdbs.c,
	gcc/testsuite/gcc.target/arm/vfp-stmiad.c,
	gcc/testsuite/gcc.target/arm/vfp-stmias.c: New.

	2006-04-02  Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/ieee754-df.S (adddf3): Avoid clobbering yl.


	2006-04-02  Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/arm.c (arm_file_start): Output additional object
	attribute directives.

	2006-03-31  Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/thumb2.md (thumb2_shiftsi3_short): Disallow rotate by
	immediate.
	(divsi3, udivsi3): Remove bogus length attribute.

	2006-03-31  Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/arm.c (arm_output_shift): Fix typo in condition
	modifier characters.

	2006-03-31  Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/arm.c (arm_output_shift): Handle Thumb register shifts.

	2006-03-30  Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/arm.c (arm_output_shift): Change set_flags to
	tristate option.  Use modified shift value.
	* gcc/config/arm/thumb2.md (thumb2_shiftsi3_short): Use
	arm_output_shift.
	* gcc/config/arm/arm.md (arm_shiftsi3, shiftsi3_compare0,
	shiftsi3_compare0_scratch): Adjust arguments to arm_output_shift.

	2006-03-29  Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/vfp.md (movsf_vfp): Disparage w<->r alternatives.
	(thumb2_movsf_vfp, movdf_vfp, thumb2_movdf_vfp): Ditto.

	2005-03-21  Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/thumb2.md (divsi3, udivsi3): New define_insn.
	* gcc/config/arm/arm.c (arm_arch_hwdiv): Define.
	(arm_override_options): Set arm_arch_hwdiv.
	* gcc/config/arm/arm.h (arm_arch_hwdiv): Declare.


	2006-03-14  Paul Brook  <paul@codesourcery.com>
	* doc/install.texi: Docuemnt --with-mode.
	* config.gcc: Add --with-mode for arm*-*-*.
	* config/arm/arm.h (OPTION_DEFAULT_SPECS): Add "mode".

	2006-03-13  Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/arm.c (arm_dwarf_handle_frame_unspec): New function.
	(TARGET_DWARF_HANDLE_FRAME_UNSPEC): Define.
	(arm_compute_save_reg0_reg12_mask): Save r0 if dynamic stack
	alignment is required.
	(arm_output_epilogue): Restore sp from r0.
	(arm_expand_prologue): Save sp in r0 before aligning stack.
	(arm_unwind_emit_sequence): Remove redundant SP push code.
	(arm_unwind_emit_set): Handle UNSPEC_STACK_ALIGN.
	* gcc/config/arm/arm.md (UNSPEC_STACK_ALIGN): Define.

	2006-03-01  Paul Brook  <paul@codesourcery.com>
	* gcc/doc/extend.texi: Document ARMv7 interrupt attribute.
	* gcc/config/arm/arm.c (arm_isr_value): Check arm_arch_notm.
	(use_return_insn): Return 0 is SP needs realignment.
	(arm_function_ok_for_sibcall): Ditto.
	(arm_output_function_prologue): Add IS_STACKALIGN comment.
	(arm_output_epilogue): Restore SP from stack if it needed realignment.
	(arm_expand_prologue): Add dynamic stack alignment code.
	(-arm_unwind_emit_stm): Rename...
	(arm_unwind_emit_sequence): ... to this.  Handle popping SP.
	* gcc/config/arm/arm.h (ARM_FT_STACKALIGN, IS_STACKALIGN): Define.
	* gcc/g++.dg/other/armv7m-1.c: New test.

	2006-02-27  Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/t-arm-elf: Fix backwards MULTILIB_MATCHES.

	2006-02-24  Paul Brook  <paul@codesourcery.com>
	* gcc/config/arm/arm.c (FL_NOTM, FL_DIV, FL_FOR_ARCH7, FL_FOR_ARCH7A,
	FL_FOR_ARCH7R, FL_FOR_ARCH7M): New defines.
	(arm_arch_notm): New variable.
	(arm_override_options): Check if CPU supports ARM mode.
	Set arm_arch_notm.
	* gcc/config/arm/lib1funcs.asm: Recognise V7 architecture variants.
	* gcc/config/arm/arm.h (TARGET_DSP_MULTIPLY, TARGET_INT_SIMD): Define.
	(arm_arch_notm): Declare.
	* gcc/config/arm/arm-cores.def: Add cortex-a8, cortex-r4 and cortex-m3.
	* gcc/config/arm/arm-cores.def: Regenerate.
	* gcc/config/arm/t-arm-elf: Add Armv7 Thumb-2 multilib.
	* gcc/config/arm/arm.md (mulhisi3, mulhisi3tb, mulhisi3bt, mulhisi3tt,
	mulhisi3addsi, mulhidi3adddi): Depend on TARGET_DSP_MULTIPLY.
	(arm_zero_extendhisi2addsi, arm_zero_extendqisi2addsi,
	arm_extendhisi2addsi, arm_extendqisi2addsi): Depend on
	TARGET_INT_SIMD.

	2006-02-07  Paul Brook  <paul@codesourcery.com>
	* config/gcc/arm/lib1funcs.asm: Use unified assembly syntax.
	Assemble "Arm" code as Thumb-2 where appropriate.
	* config/gcc/arm/ieee754-df.S: Use unified assembly syntax for Arm
	code.  Add Thumb-2 code.
	* config/gcc/arm/ieee754-df.S: Ditto.
	* config/gcc/arm/libunwind.S: Ditto.
	* config/gcc/arm/bpabi.S: Ditto.

	2006-01-27  Paul Brook  <paul@codesourcery.com>
	* version.c: Mark as CodeSourcery build.

	2006-01-26  Paul Brook  <paul@codesourcery.com>
	Thumb-2 support.
	* gcc/doc/invoke.texi: Document -cpu=arm1156t2-s and -march=armv6t2
	Document that -mthumb may enable Thumb-2.
	* gcc/config/arm/aof.h (ASM_OUTPUT_ADDR_DIFF_ELT,
	ASM_OUTPUT_ADDR_VEC_ELT): Set Thumb bit on Thumb-2 addresses.
	* gcc/config/arm/out.h (ASM_OUTPUT_ADDR_DIFF_ELT,
	ASM_OUTPUT_ADDR_VEC_ELT): Ditto.
	* gcc/config/arm/arm-cores.def: Add arm1156t2-s.
	* gcc/config/arm/arm-protos.h: Update and add function prototypes.
	* gcc/config/arm/arm-tune.md: Regenerate.
	* gcc/config/arm/arm.c (TARGET_ASM_FILE_START, FL_THUMB2,
	FL_FOR_ARCH6T2): Define.
	(arm_arch_thumb2, arm_condexec_count, arm_condexec_mask,
	arm_condexec_masklen): New variables.
	(ARM_LSL_NAME): Define.
	(THUMB2_WORK_REGS): Define.
	(all_architectures): Add 6T2.
	(arm_override_options): Set arm_arch_thumb2. Allow use of 
	coprocessors in Thumb-2.
	(use_return_insn): Only use StrongARM workaround in Arm mode.
	(const_ok_for_arm): Handle Thumb-2 constants.
	(arm_gen_constant): Ditto.
	(legitimize_pic_address): Add Thumb-2.
	(arm_load_pic_register): Generate Thumb-2 sequence.
	(arm_call_tls_get_addr): Ditto.
	(legitimize_tls_address): Ditto.
	(thumb2_legitimate_address_p): New function.
	(thumb2_index_mul_operand): New function.
	(thumb2_legitimate_index_p): New function.
	(thumb_base_register_rtx_p, thumb_index_register_rtx_p,
	thumb_legitimate_address_p, thumb_rtx_costs,
	thumb_compute_save_reg_mask, thumb_final_prescan_insn,
	thumb_expand_prologue, thumb_expand_epilogue,
	thumb_output_function_prologue, thumb_cmp_operand,
	thumb_cmpneg_operand): Rename ...
	(thumb1_base_register_rtx_p, thumb1_index_register_rtx_p,
	thumb1_legitimate_address_p, thumb1_rtx_costs,
	thumb1_compute_save_reg_mask, thumb1_final_prescan_insn,
	thumb1_expand_prologue, thumb1_expand_epilogue,
	thumb1_output_function_prologue, thumb1_cmp_operand,
	thumb1_cmpneg_operand): ... to this.  Update callers.
	(arm_address_cost): Use arm routine for Thumb-2.
	(load_multiple_sequence): Only allow ldmib and ldmda in Arm mode.
	(emit_ldm_seq): Output unified assembly.
	(emit_stm_seq): Ditto.
	(arm_select_cc_mode): Treat Thumb-2 like Arm.
	(print_multi_reg): Don't print comma.
	(output_mov_long_double_fpa_from_arm): Output unified assebly.
	(output_mov_double_arm_from_fpa): Ditto.
	(output_move_double): Ditto.  Disallow Arm specific addressing modes
	in Thumb-2 mode.
	(arm_shift_nmem): New function.
	(arithmetic_instr, shift_op): Use it.  Use ARM_LSL_NAME.
	(arm_compute_save_reg0_reg12_mask): Handle Thumb-2 frames.
	(arm_compute_save_reg_mask): Don't create apcs frame for Thumb-2.
	Create scratch register if needed for PIC.
	(output_return_instruction): Only use StrongARM workaround in Arm mode.
	(arm_output_function_prologue): Threat Thumb-2 like Arm.
	(arm_output_epilogue): Implement Thumb-2.
	(arm_output_function_epilogue): Treat Thumb-2 like Arm.
	(arm_get_frame_offsets): Ditto.
	(arm_save_coproc_regs, thumb_set_frame_pointer): New function.
	(arm_expand_prologue): Use them.  Handle Thumb-2.
	(arm_print_condition): New function.
	(arm_print_operand): Use it.  Implement '(', ')', '.', '!' and 'L'.
	(thumb2_final_prescan_insn): New function.
	(thumb2_asm_output_opcode): New function.
	(arm_hard_regno_mode_ok): Treat Thumb-2 like Arm.
	(arm_regno_class): Implement thumb2 classes.
	(arm_file_start): New function.
	(arm_output_mi_thunk): Treat Thumb-2 like Arm.
	(thumb_set_return_address): Implement Thumb-2.
	(arm_output_shift): New function.
	* gcc/config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Add __thumb2__.
	(TARGET_THUMB1, TARGET_THUMB2, TARGET_32BIT, TARGET_UNIFIED_ASM):
	Define.
	(arm_arch_thumb2): Declare;
	(CONDITIONAL_REGISTER_USAGE): Enable coprocessor registers on Thumb-2.
	(STATIC_CHAIN_REGNUM, HARD_REGNO_NREGS, MODE_BASE_REG_CLASS,
	SMALL_REGISTER_CLASSES, CONST_DOUBLE_OK_FOR_LETTER_P,
	EXTRA_CONSTRAINT_STR, SECONDARY_OUTPUT_RELOAD_CLASS,
	SECONDARY_INPUT_RELOAD_CLASS, REGISTER_MOVE_COST, LIBCALL_VALUE,
	FUNCTION_VALUE_REGNO_P, REGNO_MODE_OK_FOR_BASE_P,
	LEGITIMATE_CONSTANT_P, REG_MODE_OK_FOR_BASE_P, REG_OK_FOR_INDEX_P,
	GO_IF_MODE_DEPENDENT_ADDRESS, MEMORY_MOVE_COST, BRANCH_COST,
	(HAVE_PRE_INCREMENT, HAVE_POST_DECREMENT, HAVE_PRE_DECREMENT,
	HAVE_PRE_MODIFY_DISP, HAVE_POST_MODIFY_DISP, HAVE_PRE_MODIFY_REG,
	HAVE_POST_MODIFY_REG, PRINT_OPERAND_ADDRESS): Treat Thumb-2 like Arm.
	(CONST_OK_FOR_THUMB2_LETTER): Define.
	(CONST_OK_FOR_THUMB_LETTER, THUMB_TRAMPOLINE_TEMPLATE,
	THUMB_REGNO_MODE_OK_FOR_BASE_P, THUMB_REG_MODE_OK_FOR_BASE_P,
	THUMB_REG_MODE_OK_FOR_BASE_P, THUMB_REG_OK_FOR_INDEX_P,
	THUMB_GO_IF_LEGITIMATE_ADDRESS): Rename ...
	(CONST_OK_FOR_THUMB1_LETTER, THUMB_TRAMPOLINE_TEMPLATE,
	THUMB1_REGNO_MODE_OK_FOR_BASE_P, THUMB1_REG_MODE_OK_FOR_BASE_P,
	THUMB1_REG_MODE_OK_FOR_BASE_P, THUMB1_REG_OK_FOR_INDEX_P,
	THUMB1_GO_IF_LEGITIMATE_ADDRESS): ... to this.
	(CONST_OK_FOR_LETTER_P, TRAMPOLINE_TEMPLATE, TRAMPOLINE_SIZE,
	INITIALIZE_TRAMPOLINE, GO_IF_LEGITIMATE_ADDRESS, LEGITIMIZE_ADDRESS,
	ASM_APP_OFF, ARM_DECLARE_FUNCTION_NAME): Handle Thumb-2.
	(THUMB2_TRAMPOLINE_TEMPLATE): Define.
	(TRAMPOLINE_ADJUST_ADDRESS, ASM_OUTPUT_OPCODE,
	THUMB2_GO_IF_LEGITIMATE_ADDRESS, THUMB2_LEGITIMIZE_ADDRESS,
	ADJUST_INSN_LENGTH): Define.
	(PRINT_OPERAND_PUNCT_VALID_P): Add '(', ')', '.' and '!'.
	(PREFERRED_RELOAD_CLASS): Prefer LO_REGS for core integer reg
	classes.
	* gcc/config/arm/arm.md: Rename thumb_* thumb1_*.  Make 16-bit thumb
	patterns conditional on TARGET_THUMB1. Replace '%?' with
	'%(', '%)' and '%.' as appropriate for unified assembly syntax.
	Enable many Arm patterns/expanders for Thumb-2.
	Add new "ce_count" attribute.
	Include thumb2.md
	(incscc, decscc, smaxsi3, sminsi3, umaxsi3, sminsi3, zero_extendsidi2,
	zero_extendqidi2, extendsidi2): Divide into
	define_expand and define_insn.
	(ne_zeroextractsi, minmax_arithsi): Insert IT instructions for Thumb-2.
	(arm_shiftsi3, shiftsi3_compare0, shiftsi3_compare0_scratch): Use
	arm_output_shift.
	(movhi, indirect_jump): Handle thumb2.
	(push_multi): Use push and pop for thumb2.
	(nop): Output "nop" in unified assembly.
	* gcc/config/arm/cirrus.md: Enable arithmetic patterns for Thumb-2.
	(cirrus_thumb2_movdi, cirrus_thumb2_movsi_insn,
	thumb2_cirrus_movsf_hard_insn, thumb2_cirrus_movdf_hard_insn): New.
	* gcc/config/arm/fpa.md: Enable arithmetic patterns for Thumb-2.
	(thumb2_movsf_fpa, thumb2_movdf_fpa, thumb2_movxf_fpa): New.
	(thumb2_movsfcc_fpa, thumb2_movdfcc_fpa): New.
	* gcc/config/arm/vfp.md: Enable arithmetic patterns for Thumb-2.
	(thumb2_movsi_vfp, thumb2_movdi_vfp, thumb2_movsf_vfp,
	thumb2_movdf_vfp, thumb2_movsfcc_vfp, thumb2_movdfcc_vfp): New.
	* gcc/config/arm/predicates.md (low_register_operand): New predicate.
	(low_reg_or_int_operand, thumb_16bit_operator): New predicates.
	(thumb_cmp_operand, thumb_cmpneg_operand): Rename...
	(thumb1_cmp_operand, thumb1_cmpneg_operand): ... to this.
	* gcc/config/arm/lib1funcs.asm: Add __ARM_ARCH_6T2__.
	* gcc/config/arm/t-arm (MD_INCLUDES): Add thumb2.md
	* gcc/config/arm/thumb2.md: New file.

	2006-05-02  Kazu Hirata  <kazu@codesourcery.com>

	Backport:
	2006-05-02  Kazu Hirata  <kazu@codesourcery.com>
	PR target/27387
	* arm.c (arm_output_mi_thunk): Use pc-relative addressing when
	-mthumb -fPIC are used.

	2006-05-02  Kazu Hirata  <kazu@codesourcery.com>
	PR target/27387
	* gcc.target/arm/arm.exp: New.
	* gcc.target/arm/pr27387.C: Likewise.

	2006-05-02  Kazu Hirata  <kazu@codesourcery.com>

	Backport:
	2006-05-01  Kazu Hirata  <kazu@codesourcery.com>
	PR target/27374
	* gcc/config/arm/vfp.md (*arm_movdi_vfp): Correct the output
	templates for case 3 and 4.

	2006-04-30  Mark Mitchell  <mark@codesourcery.com>

	Backport:
	2004-10-28  Pascal Obry  <obry@act-europe.fr>     
	* w32-shared-ptr.c: New file.
	* w32-shared-ptr.h: Likewise.

	2006-04-28  Joseph S. Myers  <joseph@codesourcery.com>

	* gcc/gcc.c (process_command): Add program name to GCC_EXEC_PREFIX
	value before passing to make_relative_prefix.

2006-05-19  Nathan Sidwell  <nathan@codesourcery.com>

	* libiberty/make-relative-prefix.c (split_directories): Add
	ignore_final arg.
	(make_relative_prefix): Keep the final path component if it was a
	directory.  Adjust calls to split_directories.

2006-05-13  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k.md (movdf_cf_hard): Use output_move_double for
	GPR<-GPR moves.

2006-05-12  Sandra Loosemore <sandra@codesourcery.com>

        * gcc/config/m68k/m68k.md ("clzsi2"):  Define for ColdFire
        architectures that support ff1 instruction.
        * gcc/config/m68k/m68k.h (CLZ_DEFINED_VALUE_AT_ZERO): Ditto.
        * gcc/longlong.h (count_leading_zeros, COUNT_LEADING_ZEROS_0): Ditto.

2006-05-11  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k.c (m68k_output_function_epilogue): Fix the lea
	instruction that restores the stack pointer from the frame pointer.

2006-05-09  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k-none.h (ASM_CPU_DEFAULT_SPEC): Undefine it
	before setting it.

2006-05-07  Nathan Sidwell  <nathan@codesourcery.com>

	* configure.in (TOPLEVEL_CONFIGURE_ARGS): Protect args with active
	characters.
	(baseargs): Simplify protection, use ac_arg temp name, correct $
	to $$ conversion.
	* configure: Rebuilt.

2006-05-05  Mark Mitchell  <mark@codesourcery.com>

	* configure.in: Do not mangle arguments like "--with-foo=A B C" when
	storing in baseargs.
	* configure: Regenerated.
	* gcc/configure.ac: Add --with-versuffix and --with-bugurl.
	* gcc/version.c (VERSUFFIX): Remove.
	(bug_report_url): Do not hard-code initializer.
	* gcc/Makefile.in (VERSUFFIX_s): Define.
	(BUGURL_s): Likewise.
	(version.o): Define VERSUFFIX and BUGURL.
	* gcc/doc/install.texi: Document them.
	* gcc/configure: Regenerated.

2006-04-28  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/linux.h (MD_UNWIND_SUPPORT): Define.
	* config/m68k/linux-unwind.h: New file.

2006-04-28  Richard Sandiford  <richard@codesourcery.com>

	Merge from csl/sourcerygxx-4_1 branch:

	2006-04-26  Joseph Myers  <joseph@codesourcery.com>

	From Bugzilla:
	2006-04-26  Joshua Kinard  <kumba@gentoo.org>

	PR target/25871
	* gcc/config/mips/mips.h (TRAMPOLINE_TEMPLATE): Avoid 32-bit moves
	with 64-bit pointers.

	2006-04-25  Joseph Myers  <joseph@codesourcery.com>

	* gcc/config/mips/linux64.h (DWARF_OFFSET_SIZE): Remove.

	2006-04-22  Carlos O'Donell  <carlos@codesourcery.com>

	* gcc/Makefile.in: Correct dependencies for gcc, cpp, 
	gccint, and cppinternals html manuals.

	2006-04-22  Joseph Myers  <joseph@codesourcery.com>

	* gcc/testsuite/gcc.c-torture/compile/20060421-1.c: New testcase.

	2006-04-21  Carlos O'Donell  <carlos@codesourcery.com>

	* Makefile.tpl: Add install-html to install target.
	* Makefile.in: Regenerate.

	2006-04-21  Carlos O'Donell  <carlos@codesourcery.com>

	* Makefile.tpl: Add install-html target.
	* Makefile.def: Add install-html target.
	* Makefile.in: Regenerate.
	* configure.in: Add --with-datarootdir, --with-docdir,
	and --with-htmldir options. AC_SUBST datarootdir, docdir and htmldir.
	* configure: Regenerate.
	* gcc/Makefile.in: Rename htmldir to gcc_htmldir. Add install-html 
	target. Define HTMLS for all manuals. Simplify html target.
	* gcc/configure.ac: AC_SUBST datarootdir, docdir, and htmldir.
	* gcc/configure: Regenerate.
	* gcc/fortran/Make-lang.in: Rename htmldir to gcc_htmldir.
	* gcc/java/Make-lang.in: Likewise.
	* gcc/treelang/Make-lang.in: Likewise.
	* fixincludes/Makefile.in: Add install-html target.
	Fixup .PHONY listing.
	* intl/Makefile.in: Add html info ps pdf and dvi and install-html 
	to .PHONY. Add install-html target.
	* libcpp/Makefile.in: Add install-html target. Add install-html to
	.PHONY list.
	* libstdc++-v3/Makefile.am: Add install-html target.
	* libstdc++-v3/aclocal.m4: Regenerate.
	* libstdc++-v3/Makefile.in: Regenerate.
	* libstdc++-v3/include/Makefile.in: Regenerate.
	* libstdc++-v3/libmath/Makefile.in: Regenerate.
	* libstdc++-v3/libsupc++/Makefile.in: Regenerate.
	* libstdc++-v3/po/Makefile.in: Regenerate.
	* libstdc++-v3/src/Makefile.in: Regenerate.
	* libstdc++-v3/testsuite/Makefile.in: Regenerate.
	* libmudflap/Makefile.am: Add install-html target.
	* libmudflap/Makefile.in: Regenerate. 
	* libssp/Makefile.am: Add install-html target.
	* libssp/Makefile.in: Regenerate.
	* fastjar/Makefile.am: Add install-html target.
	* fastjar/Makefile.in: Regenerate.
	* fastjar/aclocal.m4: Regenerate.
	* zlib/Makefile.am: Add install-html target.
	* zlib/Makefile.in: Regenerate.
	* zlib/aclocal.m4: Regenerate.
	* libobjc/Makefile.in: Add install-html target.
	* libffi/Makefile.am: Add install-html target.
	* libffi/Makefile.in: Regenerate.
	* libffi/aclocal.m4: Regenerate.
	* libffi/include/Makefile.in: Regenerate.
	* libffi/testsuite/Makefile.in: Regenerate.
	* libjava/Makefile.am: Add install-html target.
	* libjava/Makefile.in: Regenerate. 
	* libjava/aclocal.m4: Regenerate.
	* libjava/classpath/Makefile.in: Regenerate.
	* libjava/classpath/aclocal.m4: Regenerate.
	* libjava/classpath/doc/Makefile.in: Regenerate.
	* libjava/classpath/doc/api/Makefile.am: Conditionalize html target.
	* libjava/classpath/doc/api/Makefile.in: Regenerate.
	* libjava/classpath/examples/Makefile.in: Regenerate.
	* libjava/classpath/external/Makefile.in: Regenerate.
	* libjava/classpath/external/sax/Makefile.in: Regenerate.
	* libjava/classpath/external/w3c_dom/Makefile.in: Regenerate.
	* libjava/classpath/include/Makefile.in: Regenerate.
	* libjava/classpath/lib/Makefile.in: Regenerate.
	* libjava/classpath/native/Makefile.in: Regenerate.
	* libjava/classpath/native/fdlibm/Makefile.in: Regenerate.
	* libjava/classpath/native/jawt/Makefile.in: Regenerate.
	* libjava/classpath/native/jni/Makefile.in: Regenerate.
	* libjava/classpath/native/jni/classpath/Makefile.in: Regenerate.
	* libjava/classpath/native/jni/gtk-peer/Makefile.in : Regenerate.
	* libjava/classpath/native/jni/java-io/Makefile.in: Regenerate.
	* libjava/classpath/native/jni/java-lang/Makefile.in: Regenerate.
	* libjava/classpath/native/jni/java-net/Makefile.in : Regenerate.
	* libjava/classpath/native/jni/java-nio/Makefile.in : Regenerate.
	* libjava/classpath/native/jni/java-util/Makefile.in: Regenerate.
	* libjava/classpath/native/jni/midi-alsa/Makefile.in: Regenerate.
	* libjava/classpath/native/jni/midi-dssi/Makefile.in: Regenerate.
	* libjava/classpath/native/jni/qt-peer/Makefile.in: Regenerate.
	* libjava/classpath/native/jni/xmlj/Makefile.in: Regenerate.
	* libjava/classpath/native/target/Linux/Makefile.in: Regenerate.
	* libjava/classpath/native/target/Makefile.in: Regenerate.
	* libjava/classpath/native/target/generic/Makefile.in: Regenerate.
	* libjava/classpath/resource/Makefile.in: Regenerate.
	* libjava/classpath/scripts/Makefile.in: Regenerate.
	* libjava/gcj/Makefile.in: Regenerate.
	* libjava/include/Makefile.in : Regenerate.
	* libjava/testsuite/Makefile.in: Regenerate.
	* boehm-gc/Makefile.am: Add install-html target.
	* boehm-gc/Makefile.in: Regenerate.
	* boehm-gc/aclocal.m4: Regenerate.
	* boehm-gc/include/Makefile.in: Regenerate.
	* gnattools/Makefile.in: Add html and install-html targets.
	* libgfortran/Makefile.am: Add install-html target.
	* libgfortran/Makefile.in: Regenerate. 
	* libada/Makefile.in: Add install-html target.
	
	2006-04-21  Carlos O'Donell  <carlos@codesourcery.com>

	Backport from mainline.
	2006-04-06  Carlos O'Donell  <carlos@codesourcery.com>
	* libiberty/Makefile.in: Add install-html, install-html-am, and
	install-html-recursive targets. Define mkdir_p and 
	NORMAL_INSTALL. 
	* libiberty/configure.ac: AC_SUBST datarootdir, docdir, htmldir.
	* libiberty/configure: Regenerate.
	* libiberty/testsuite/Makefile.in: Add install-html and html targets.

	2006-03-30  Carlos O'Donell  <carlos@codesourcery.com>
	* gcc/Makefile.in: Rename docdir to gcc_docdir.
	* gcc/java/Make-lang.in: Rename docdir to gcc_docdir.
	* gcc/ada/Make-lang.in: Rename docdir to gcc_docdir.
	* gcc/fortran/Make-lang.in: Rename docdir to gcc_docdir.
	* gcc/treelang/Make-lang.in: Rename docdir to gcc_docdir.

	2006-04-11  Kazu Hirata  <kazu@codesourcery.com>

	Backport from mainline.
	2006-03-13  Roger Sayle  <roger@eyesopen.com>
	PR middle-end/26557
	* gcc/stmt.c (emit_case_nodes): Handle the case where the
	index is a CONST_INT, where the comparison mode is specified
	by the index type.

	2006-03-13  Roger Sayle  <roger@eyesopen.com>
	PR middle-end/26557
	* gcc/gcc.c-torture/compile/switch-1.c: New test case.

	2006-04-04  Carlos O'Donell  <carlos@codesourcery.com>

	* gcc/testsuite/gcc.dg/struct-parse-1.c: New test case.

	2006-03-31  Nathan Sidwell  <nathan@codesourcery.com>
	* gcc/stor-layout.c: Place invalid field at the current end of
	the structure or start of union, to maintain placement
	invariants.

	2006-04-02  Paul Brook  <paul@codesourcery.com>

	Backport form mainline.
	* gcc/testsuite/gcc.c-torture/execute/loop-ivopts-3.c: New test.

	2006-01-14  Zdenek Dvorak <dvorakz@suse.cz>
	* gcc/tree-ssa-loop-niter.c (number_of_iterations_cond): Split into
	several functions.
	(number_of_iterations_ne, number_of_iterations_lt_to_ne,
	assert_no_overflow_lt, assert_loop_rolls_lt, number_of_iterations_lt,
	number_of_iterations_le): New functions.
	(number_of_iterations_special): Removed.
	(number_of_iterations_exit): Do not use number_of_iterations_special.
	* gcc/tree.c (unsigned_type_for): Always return integer type.
	* gcc/testsuite/gcc.dg/tree-ssa/pr19210-1.c: Update outcome.
	Add new test loop.
	* gcc/testsuite/gcc.dg/tree-ssa/pr19210-2.c: Ditto.

	2005-01-06  Zdenek Dvorak <dvorakz@suse.cz>
	PR tree-optimization/18527
	* gcc/tree-ssa-loop-niter.c (number_of_iterations_cond,
	number_of_iterations_special, number_of_iterations_exit):
	Move base and step of an iv to a single structure.  Add
	no_overflow flag, and use it in # of iterations analysis.
	* gcc/tree-scalar-evolution.c (analyze_scalar_evolution_in_loop): Add
	folded_casts argument.
	(simple_iv): Pass base and step in a structure.  Set no_overflow
	flag.
	(scev_const_prop): Add argument to analyze_scalar_evolution_in_loop.
	Evaluate expensiveness of computing # of iterations instead of
	the final expression.
	* gcc/tree-scalar-evolution.h (affine_iv): New structure.
	(simple_iv): Declaration changed.
	* gcc/tree-chrec.c (chrec_apply): Handle chrecs containing symbols.
	* gcc/tree-ssa-loop-ivopts.c (determine_biv_step,
	find_givs_in_stmt_scev, find_givs_in_stmt): Changed due to simple_iv
	change.

	2006-03-30  Mark Mitchell  <mark@codesourcery.com>

	* libiberty/cygpath.c (fopen): Allocate MAX_PATH + 1 bytes for the
	filename. 
	(open): Likewise.
	(stat): Likewise.
	(access): Likewise.

	2006-03-30  Mark Mitchell <mark@codesourcery.com>

	* libiberty/configure.ac: Add cygpath for mingw hosts.
	* libiberty.configure: Rebuilt.
	* libiberty/Makefile.in: Add cygpath.
	* libiberty/cygpath.c: New.

	2006-03-28  Paul Brook  <paul@codesourcery.com>

	PR middle-end/23623
	* gcc/targhooks.c (default_narrow_bitfield): New fuction.
	* gcc/targhooks.h (default_narrow_bitfield): add prototype.
	* gcc/target-def.h (TARGET_NARROW_VOLATILE_BITFIELD): Define.
	* gcc/doc/tm.texi: Document TARGET_NARROW_VOLATILE_BITFIELDS.
	* gcc/config/arm/arm.c (TARGET_NARROW_VOLATILE_BITFIELD): Define.

	2006-03-28  Paul Brook  <paul@codesourcery.com>

	* gcc/reload1.c (choose_reload_regs): Check for all RTX_AUTOINC
	operators.
	(inc_for_reload): Handle PRE_MODIFY and POST_MODIFY addresses.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/testsuite/
	* lib/target-supports.exp (check_effective_target_tls): Use
	${tool}_target_compile instead of target_compile.
	(check_effective_target_tls_runtime): Likewise.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/testsuite/
	* gcc.dg/m68k-fp-1.c: Use -mcpu=547x instead of -mcpu=m5485.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/testsuite/
	* lib/target-supports.exp (check_effective_target_coldfire_fpu):
	New procedure.
	* gcc.c-torture/execute/ieee/mul-subnormal-single-1.x: XFAIL for
	Coldfire GNU/Linux.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* combine.c (replaced_rhs_insn): New variable.
	(combine_instructions): Set replaced_rhs_insn when trying to replace
	a SET_SRC with a REG_EQUAL note.
	(distribute_notes): Use replaced_rhs_insn when determining the live
	range of a REG_DEAD register.

	gcc/testsute
	* gcc.c-torture/compile/pr25514.c: New test.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k-protos.h (m68k_secondary_reload_class): Declare.
	(m68k_preferred_reload_class): Declare.
	* config/m68k/m68k.c (m68k_regno_mode_ok): Don't prevent address
	registers from storing bytes.  Fix formatting.
	(m68k_secondary_reload_class): New function.
	(m68k_preferred_reload_class): Likewise.
	* config/m68k/m68k.h (HARD_REGNO_MODE_OK): Remove duplicated comment.
	(SECONDARY_RELOAD_CLASS): Define.
	(PREFERRED_RELOAD_CLASS): Use m68k_preferred_reload_class.
	(LIMIT_RELOAD_CLASS): Delete.

	gcc/testsuite/
	* gcc.c-torture/compile/m68k-byte-addr.c: New test.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config.gcc (m68k-*-linux*): Add to tmake_file instead of
	replacing it.  Don't include m68k/t-crtstuff.  Don't include
	m68k/t-slibgcc-elf-ver.
	* config/m68k/linux.h (MULTILIB_DEFAULTS): Delete.
	(SYSROOT_SUFFIX_SPEC): Delete.
	(SYSROOT_HEADERS_SUFFIX_SPEC): Delete.
	* config/m68k/uclinux.h (SYSROOT_HEADERS_SUFFIX_SPEC): Remove undef.
	* config/m68k/t-linux (MULTILIB_OPTIONS): Delete.
	(MULTILIB_DIRNAMES): Delete.
	(MULTILIB_EXCEPTIONS): Delete.
	(NATIVE_SYSTEM_HEADER_DIR): Delete.
	(LIBGCC): Delete.
	(INSTALL_LIBGCC): Delete.
	(EXTRA_MULTILIB_PARTS): Override.
	* config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Define __mcffpu__
	when using the Coldfire FPU.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k.c (override_options): Restrict the -fPIC error
	to -mpcrel.
	(m68k_output_function_prologue): Use a (d8,%pc,Xi) lea to load the
	PIC register on Coldfire targets.
	(m68k_output_pic_call): Use bsr.l for ISA B too.
	(print_operand_address): Only use GOT displacement lengths for
	m68k_arch_68020.
	(m68k_output_mi_thunk): Use bra.l for ISA B too.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k.c (m68k_save_reg): Save the PIC register in
	functions that need a constant pool.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k.c (m68k_save_reg): Save the PIC register in
	functions that call eh_return.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* real.c (encode_ieee_single): Use canonical_nan_lsbs_set instead
	of qnan_msb_set to determine the lower bits of a canonical
	NaN significand.
	(encode_ieee_double): Likewise.
	(encode_ieee_quad): Likewise.
	(ieee_single_format): Initialize canonical_nan_lsbs_set.
	(mips_single_format): Likewise.
	(ieee_double_format): Likewise.
	(mips_double_format): Likewise.
	(ieee_extended_motorola_format): Likewise.
	(ieee_extended_intel_96_format): Likewise.
	(ieee_extended_intel_128_format): Likewise.
	(ieee_extended_intel_96_round_53_format): Likewise.
	(ibm_extended_format): Likewise.
	(mips_extended_format): Likewise.
	(ieee_quad_format): Likewise.
	(mips_quad_format): Likewise.
	(vax_f_format): Likewise.
	(vax_d_format): Likewise.
	(vax_g_format): Likewise.
	(i370_single_format): Likewise.
	(i370_double_format): Likewise.
	(c4x_single_format): Likewise.
	(c4x_extended_format): Likewise.
	(real_internal_format): Likewise.
	(coldfire_single_format): New real_format.
	(coldfire_double_format): Likewise.
	* real.h (real_format): Add a canonical_nan_lsbs_set field.
	(coldfire_single_format): Declare.
	(coldfire_double_format): Likewise.
	* config/pdp11/pdp11.c (pdp11_f_format): Initialize
	canonical_nan_lsbs_set.
	(pdp11_d_format): Likewise.
	* config/m68k/m68k.c (override_options): Override REAL_FORMAT_MODE
	if TARGET_COLDFIRE_CPU.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k.md (cmpsi): Remove PIC handling.
	(movsi): Remove predicates.  Use LEGITIMATE_PIC_OPERAND_P.
	* config/m68k/m68k.h (LEGITIMATE_PIC_OPERAND_P): Define.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k.c (m68k_output_function_epilogue): Use a stack-
	based restore sequence for big frames on Coldfire if we need to
	use a movem or fmovem instruction.  Fix formatting.  Use proper
	MOTOROLA syntax for Coldfire fmoves from %fp + offset.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k.c (m68k_output_function_prologue): Fix handling
	of %sp-based CFA offsets on Coldfire.

2006-04-27  Richard Sandiford  <richard@codesourcery.com>

	gcc/
	* config/m68k/m68k-cores.def (68000, 68010): Remove FL_PCREL_16
	from these isa_00 entries.
	(68020, 68030): Remove FL_BITFIELD from these isa_20 entries.
	(68040): Remove FL_BITFIELD and FL_68881 from this isa_40 entry.
	(68060): Likewise this isa_60 entry.
	(5202, 5204, 5206, 5206e, 5249, 5250, 5272, 5307): Remove FL_PCREL16
	from these isa_a entries.
	(5207, 5208, 5211, 5212, 5213, 5214, 5216, 523x, 5270, 5271, 5274)
	(5275, 528x, 532x): Likewise these isa_aplus entries.
	* config/m68k/m68k.c (FL_FOR_isa_00): Include FL_PCREL_16.
	(FL_FOR_isa_20): Include FL_BITFIELD.
	(FL_FOR_isa_40): Include FL_FOR_isa_20 instead of FL_ISA_68020.
	Include FL_68881.
	(FL_FOR_isa_60): Include FL_FOR_isa_40 instead of FL_ISA_68020
	and FL_ISA_68040.
	(FL_FOR_isa_a): Include FL_PCREL_16.
	(FL_FOR_isa_aplus): Include FL_FOR_isa_a instead of FL_COLDFIRE
	and FL_ISA_A.
	(FL_FOR_isa_b): Likewise.
	(FL_FOR_isa_c): Include FL_FOR_isa_b instead of FL_COLDFIRE,
	FL_ISA_A, FL_ISA_B and FL_CF_HWDIV.
	(m68k_isa): Add isa_cpu32.
	(all_architectures): Use FL_FOR_isa_* macros.  In so doing,
	fix the isab entry so that it includes FL_ISA_A and FL_PCREL_16.
	Likewise include these flags and FL_ISA_B in the isac entry.
	(all_tunings): Use FL_FOR_isa_* macros, and in so doing, add
	the FL_ISA_A and FL_PCREL_16 flags to the cfv4 and cf4ve entries.

2006-04-13  Richard Sandiford  <richard@codesourcery.com>

	gcc/testsuite/
	* lib/target-supports.exp (check_missing_uclibc_feature): Make test
	produce an error unless the required condition is known not to hold.
	(check_effective_target_uclibc): New procedure.
	(check_effective_target_uclibc_lax_strtofp): Likewise.
	(check_effective_target_uclibc_dummy_wcsftime): Likewise.

	libstdc++-v3/testsuite/
	* 22_locale/time_put/put/wchar_t/1.cc: XFAIL if uclibc_dummy_wcsftime.
	* 22_locale/time_put/put/wchar_t/5.cc: Likewise.
	* 22_locale/time_put/put/wchar_t/9.cc: Likewise.
	* 22_locale/time_put/put/wchar_t/10.cc: Likewise.
	* 22_locale/num_get/get/wchar_t/2.cc: XFAIL if uclibc_lax_strtofp.
	* 22_locale/num_get/get/char/2.cc: Likewise.
	* 27_io/basic_istream/extractors_arithmetic/wchar_t/12.cc: Likewise.
	* 27_io/basic_istream/extractors_arithmetic/wchar_t/09.cc: Likewise.
	* 27_io/basic_istream/extractors_arithmetic/char/12.cc: Likewise.
	* 27_io/basic_istream/extractors_arithmetic/char/09.cc: Likewise.
	* 27_io/basic_ostream/inserters_arithmetic/wchar_t/6.cc: Likewise.
	* 27_io/basic_ostream/inserters_arithmetic/char/6.cc: Likewise.
	* 26_numerics/cmath/c99_classification_macros_c++.cc: XFAIL
	for uClibc.
	* 26_numerics/cmath/c99_classification_macros_c.cc: Likewise.

2006-04-08  Richard Sandiford  <richard@codesourcery.com>

	* gcc/regrename.c (scan_rtx_address): Use REG_MODE_OK_FOR_INDEX_P
	instead of REG_OK_FOR_INDEX_P.  Use MODE_INDEX_REG_CLASS instead
	of INDEX_REG_CLASS.
	(replace_oldest_value_addr): Likewise.
	* gcc/doc/tm.texi (MODE_BASE_REG_CLASS): Clarify what a VOIDmode
	argument means.
	(REGNO_MODE_OK_FOR_BASE_P): Likewise.
	(REG_MODE_OK_FOR_BASE_P): Likewise.
	(MODE_INDEX_REG_CLASS): Document.
	(REGNO_MODE_OK_FOR_INDEX_P): Likewise.
	(REG_MODE_OK_FOR_INDEX_P): Likewise.
	* gcc/defaults.h (REGNO_MODE_OK_FOR_INDEX_P): Provide default.
	(REG_MODE_OK_FOR_INDEX_P): Likewise.
	(MODE_INDEX_REG_CLASS): Likewise.
	* gcc/postreload.c (reload_combine): Compute the set of index
	registers that can be used for at least one mode.  Use that set
	instead of INDEX_REG_CLASS.
	* gcc/reload.c (find_reloads): Use operand_mode[i] as the argument
	to MODE_BASE_REG_CLASS.
	(find_reloads_address): Use MODE_INDEX_REG_CLASS instead of
	INDEX_REG_CLASS.  Check MODE_INDEX_REG_CLASS (mode) as well
	as double_reg_address_ok.
	(find_reload_address_1): Use REG_MODE_OK_FOR_INDEX_P instead
	of REG_OK_FOR_INDEX_P.  Use REGNO_MODE_OK_FOR_INDEX_P instead
	of REGNO_OK_FOR_INDEX_P.  Use MODE_INDEX_REG_CLASS instead of
	INDEX_REG_CLASS.
	* gcc/recog.c (preprocess_constraints): Pass recog_data.operand_mode[i]
	as the argument to BASE_REG_CLASS.
	* gcc/regclass.c (record_operand_costs): Pass the mode of the
	addressed data to record_address_regs.
	(scan_one_insn): Likewise.  Also pass the mode of the memory reference
	to MODE_BASE_REG_CLASS.
	(record_reg_classes): Pass the operand mode to MODE_BASE_REG_CLASS.
	(record_address_regs): Add a mode argument.  Update recursive calls.
	Pass the mode argument to REG_MODE_OK_FOR_REG_BASE_P and
	MODE_BASE_REG_REG_CLASS.  Use REG_MODE_OK_FOR_INDEX_P instead
	of REG_OK_FOR_INDEX_P.  Use MODE_INDEX_REG_CLASS instead of
	INDEX_REG_CLASS.
	* gcc/config/m68k/m68k.md (tst<mode>_cf): Use "m" instead of "<Q>U".
	(cmp<mode>_cf): Likewise.
	(movsf_cf_hard): Likewise.
	(movdf_cf_hard): Likewise.
	(extendsfdf2_cf): Likewise.
	(truncdfsf2_cf): Likewise.
	(floatsi<mode>2_cf): Likewise.
	(ftrunc<mode>2_cf): Likewise.
	(add<mode>3_cf): Likewise.
	(sub<mode>3_cf): Likewise.
	(fmul<mode>3_cf): Likewise.
	(div<mode>3_cf): Likewise.
	(neg<mode>2_cf): Likewise.
	(sqrt<mode>2_cf): Likewise.
	(abs<mode>2_cf): Likewise.
	* gcc/config/m68k/m68k-protos.h (m68k_legitimize_reload_address):
	Delete.
	* gcc/config/m68k/m68k.c (REG_OK_FOR_INDEX_STRICT): Add a mode
	argument.  Use REGNO_MODE_OK_FOR_INDEX_P.  Test MODE_OK_FOR_INDEX_P.
	(LEGITIMATE_INDEX_REG_P): Add a mode argument.  Update calls to
	REG_OK_FOR_INDEX_STRICT.
	(LEGITIMATE_INDEX_P): Add a mode argument.  Update calls to
	LEGITIMATE_INDEX_REG_P.
	(m68k_legitimate_address_p): Update calls to LEGITIMATE_INDEX_P.
	(m68k_legitimize_reload_address): Delete.
	* gcc/config/m68k/m68k.h (INDEX_REG_CLASS): Delete in favor of...
	(MODE_INDEX_REG_CLASS): ...this new macro.
	(MODE_OK_FOR_INDEX_P): New macro.
	(REGNO_OK_FOR_INDEX_P): Delete in favor of...
	(REGNO_MODE_OK_FOR_INDEX_P): ...this new macro.
	(REG_OK_FOR_INDEX_P): Delete in favor of...
	(REG_MODE_OK_FOR_INDEX_P): ...this new macro.
	(LEGITIMIZE_RELOAD_ADDRESS): Delete.
	* gcc/reload1.c (maybe_fix_stack_asms): Pass operand_mode[i]
	to MODE_BASE_REG_CLASS.

2006-04-08  Richard Sandiford  <richard@codesourcery.com>

	* gcc/testsuite/gcc.c-torture/execute/builtins/lib/chk.c: Include
	<sys/types.h>.  Use __UCLIBC__ rather than __uClinux__ to guard
	the definition of vsnprintf.

2006-04-04  Richard Sandiford  <richard@codesourcery.com>

	* gcc/config/m68k/m68k.h (PREFERRED_STACK_BOUNDARY): Define to 32
	for Coldfire targets.

2006-04-01  Richard Sandiford  <richard@codesourcery.com>

	* gcc/config/m68k/uclinux.h (STARTFILE_SPEC): Reinstate defintion.
	(END_SPEC): Likewise.
	(LINK_SPEC): Make -elf2flt the default.

2006-03-31  Richard Sandiford  <richard@codesourcery.com>

	* config/no-executables.m4 (GCC_TRY_COMPILE_OR_LINK): New function.
	* libstdc++-v3/aclocal.m4 (GLIBCXX_ENABLE_C99): Temporarily add
	-fno-exceptions to CXXFLAGS.  Use GCC_TRY_COMPILE_OR_LINK.
	Make the tests assign results to volatile variables.
	* libstdc++-v3/libmath/Makefile.in: Regenerate.
	* libstdc++-v3/configure: Regenerate.
	* libstdc++-v3/Makefile.in: Regenerate.
	* libstdc++-v3/include/Makefile.in: Regenerate.
	* libstdc++-v3/src/Makefile.in: Regenerate.
	* libstdc++-v3/libsupc++/Makefile.in: Regenerate.
	* libstdc++-v3/testsuite/Makefile.in: Regenerate.
	* libstdc++-v3/acinclude.m4: Regenerate.
	* libstdc++-v3/po/Makefile.in: Regenerate.

2006-03-30  Mark Mitchell  <mark@codesourcery.com>

	* libiberty/cygpath.c (fopen): Allocate MAX_PATH + 1 bytes for the
	filename. 
	(open): Likewise.
	(stat): Likewise.
	(access): Likewise.

2006-03-30  Mark Mitchell <mark@codesourcery.com>

	* libiberty/configure.ac: Add cygpath for mingw hosts.
	* libiberty.configure: Rebuilt.
	* libiberty/Makefile.in: Add cygpath.
	* libiberty/cygpath.c: New.

2006-03-29  Richard Sandiford  <richard@codesourcery.com>

	* gcc/configure.ac: Allow $tm_file to contain names of the form ./*.
	Look for them in the build directory rather than $srcdir/config.
	* gcc/configure: Regenerate.
	* gcc/config.gcc (tm_file): Update commentary.
	(m68k-*-uclinux*): Add ./sysroot-suffix.h to tm_file.
	* gcc/config/m68k/print-sysroot-suffix.sh: New file.
	* gcc/config/m68k/t-mlib-matches (sysroot-suffix.h): New rule.
	* gcc/config/m68k/t-uclinux (MULTILIB_OPTIONS): Remove -mcpu=5206.
	(MULTILIB_DIRNAMES): Update accordingly.
	(NATIVE_SYSTEM_HEADER_DIR): Delete.
	* gcc/config/m68k/uclinux.h (MULTILIB_DEFAULTS): Delete.
	(SYSROOT_SUFFIX_SPEC): Delete.
	(SYSROOT_HEADERS_SUFFIX_SPEC): Just undefine; don't redefine.

2006-03-29  Richard Sandiford  <richard@codesourcery.com>

	* gcc/config.gcc (m68k-*-uclinux*): Reorder includes to match
	m68k-*-linux.  Include linux.h and m68k/linux.h.  Include linux.opt
	and define UCLIBC_DEFAULT.
	* gcc/config/m68k/uclinux.h (STARTFILE_SPEC): Delete.
	(ENDFILE_SPEC): Delete.
	(HAS_INIT_SECTION): Delete.
	(TARGET_OS_CPP_BUILTINS): Use LINUX_TARGET_OS_CPP_BUILTINS.
	(CPLUSPLUS_CPP_SPEC): Delete.
	(TARGET_ASM_FILE_START_APP_OFF): Delete.
	(MULTILIB_DEFAULTS): Undefine before redefining.
	(SYSROOT_SUFFIX_SPEC): Likewise.
	(SYSROOT_HEADERS_SUFFIX_SPEC): Likewise.

2006-03-29  Richard Sandiford  <richard@codesourcery.com>

	* gcc/testsuite/lib/target-supports.exp (check_missing_uclibc_feature):
	New procedure.
	(check_gc_sections_available): Return false if ldflags includes
	-elf2flt.
	(check_profiling_available): Return false for m68k-*-uclinux.
	(check_effective_target_wchar): New procedure.
	* gcc/testsuite/gcc.dg/wint_t-1.c: Require { target wchar }.
	* gcc/testsuite/gcc.dg/wchar_t-1.c: Likewise.

2006-03-29  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k-none.h (ASM_SPEC): Add some whitespace.
	* gcc/config/m68k/m68k.h (OPTION_DEFAULT_SPECS): Add deprecated
	cpu selectors to inhibit default.

	* gcc/config/m68k/uclinux.h (SYSROOT_SUFFIX_SPEC): Add 532x.

	* gcc/config/m68k/m68k-cores.def (532x, 537x): Use 532x multilib.
	* gcc/config/m68k/t-m68kelf (MULTILIB_OPTIONS): Remove m68k
	options.  Add mcpu=532x.
	(MULTILIB_DIRNAMES): Likewise.
	(MULTILIB_EXCEPTIONS): Likewise.
	* gcc/config/m68k/t-uclinux (MULTILIB_OPTIONS): Add mcpu=532x
	(MULTILIB_DIRNAMES): Likewise.

	* gcc/gcc.c (LINK_COMMAND_SPEC): Place T* options before
	endfile_spec.
	* gcc/doc/invoke.texi (M680x0 Options): Revert previous change.
	* gcc/config/m68kenb.h (LIB_SPEC): Revert previous change.
	* gcc/config/m68k.opt (mboard, mbsp): Revert previous change.

2006-03-29  Richard Sandiford  <richard@codesourcery.com>

	* gcc/testuite/lib/target-supports.exp (check_no_compiler_messages):
	New procedure.
	(check_visibility_available): Use it.
	(check_effective_target_default_packed): Likewise.
	(check_effective_target_pcc_bitfield_type_matters): Likewise.
	(check_effective_target_freorder): Likewise.
	(check_effective_target_fpic): Likewise.
	(check_named_sections_available): Likewise.
	(check_effective_target_ilp32): Likewise.
	(check_effective_target_lp64): Likewise.

2006-03-29  Richard Sandiford  <richard@codesourcery.com>

	* gcc/testsuite/gcc.c-torture/execute/builtins/lib/chk.c (vsnprintf):
	Don't define for uClinux targets.
	* gcc/testsuite/gcc.c-torture/execute/20030125-1.x: Restrict the
	test *-linux* rather than *linux* targets.
	* gcc/testsuite/g++.dg/init/array15.C: Don't run on m68k-uclinux.
	* gcc/testsuite/g++.dg/init/array16.C: Likewise.

2006-03-28  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/gcc.c (do_spec_1): <case '*'> Don't append space here.
	(process_marked_switches): Put a space between each marked switch.
	(process_brace_body): Put a space between each live switch.
	(give_switch): Don't append space here.
	* gcc/config/m68k/m68kemb.h (LIB_SPEC): Add BSP lib and linker
	script here.  Group with LIBGCC spec.
	* gcc/config/m68k/m68k.opt (mboard, mbsp): New switches.
	* gcc/config/m68k/m68020-elf.h (LIB_SPEC): Do not define here.
	* gcc/doc/invoke.texi (M680x0 Options): Document new switches.

2006-03-28  Richard Sandiford  <richard@codesourcery.com>

	Merge from csl/sourcerygxx-4_1 branch:

	2006-03-27  Jim Blandy	<jimb@codesourcery.com>

	* include/libiberty.h (pex_write_input): New declaration.

	* libiberty/pex-common.c (pex_write_input): New function.
	* libiberty/pexecute.txh (pex_write_input): Document it.
	* libiberty/pex-common.h (struct pex_funcs): New function ptr fdopenw.
	* libiberty/pex-unix.c (pex_unix_fdopenw): New function.
	(funcs): List it as our fdopenw function.
	* libiberty/pex-win32.c (pex_win32_fdopenw): New function.
	(funcs): List it as our fdopenw function.
	* libiberty/pex-djgpp.c (funcs): Leave fdopenw null.
	* libiberty/pex-msdos (funcs): Same.
	* libiberty/functions.texi: Regenerated.

	* libiberty/pex-common.h (struct pex_obj): Doc fixes.

	* libiberty/functions.texi: Regenerate.

	2006-03-27  Mark Mitchell  <mark@codesourcery.com>

	* libiberty/pex-win32.c (pex_win32_exec_child): Close stdout/stderr
	in parent.

2006-03-28  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k.h (DWARF_FRAME_RETURN_COLUMN): Define.
	* gcc/config/m68k/m68k.c (m68k_output_function_prologue): Output
	dwarf to allow unwinding from interrupt_handlers.

2006-03-27  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config.gcc (m68k-*-linux*): Add default --with-cpu.
	* gcc/config/m68k/netbsd-elf.h (FUNCTION_VALUE_REGNO_P): Fix thinko
	in previous change.
	* gcc/testsuite/gcc.dg/m68k-pic-1.c: New.

2006-03-26  Nathan Sidwell  <nathan@codesourcery.com>

	* libstdc++-v3/config/cpu/m68k/atomicity.h (__exchange_and_add): Add
	coldfire fragments.

	* gcc/config/gcc (m68k-*-linux*): Add t-linux.
	(m68k/t-rtems): Reorder include files.
	* gcc/config/m68k/linux.h (TARGET_DEFAULT): Do not define.
	(TARGET_CPU_DEFAULT, ASM_CPU_DEFAULT_SPEC): Default to 68040.
	(STRICT_ALIGNMENT): Do not define here.
	(ASM_SPEC): Define earlier.
	(TARGET_OS_CPP_BUILTINS): Do not define mc68000 or mc68020 here.
	(CPP_SPEC): Simplify.
	(FUNCTION_VALUE_REGNO_P): fp0 is only a return on 68k, not
	coldfire.
	(TARGET_ASM_FILE_START_APP_OFF): Undef.
	(MULTILB_DEFAULTS, SYSROOT_SUFFIX_SPEC,
	SYSROOT_HEADERS_SUFFIX_SPEC): Define.
	* gcc/config/m68k/m68k-none.h (TARGET_DEFAULT, ASM_CPU_DEFAULT,
	OPTION_DEFAULT_SPECS): Do not process here, move to m68k.h.
	(EXTRA_SPECS, CPP_SUBTARGET_SPEC, SUBTARGET_EXTRA_SPECS):
	Likewise.
	* gcc/config/m68k/m68k.h (OPTION_DEFAULT_SPECS, TARGET_DEFAULT,
	ASM_CPU_DEFAULT_SPEC, EXTRA_SPECS, CPP_SUBTARGET_SPECS,
	SUBTARGET_EXTRA_SPECS): Moved here from m68k-none.h.
	* gcc/config/m68k/t-linux: New.
	* gcc/config/netbsd-elf.h (FUNCTION_VALUE_REGNO_P): fp0 is not a
	return reg on coldfire.

	* gcc/config/m68k/t-mlib-matches (MULTILIB_MATCHES): m5206e is
	equivalent to isaa.
	* gcc/config/m68k/t-m68kelf (MULTILIB_OPTIONS): Add 5211.
	(MULTILIB_DIRNAMES): Likewise.
	(MULTILIB_EXCEPTIONS): Inhibit all 68k multilibs.  Allow
	m547x/soft-float.

	* gcc/config/m68k/m68k.md (cmpsi): Split symbol+const for Coldfire.

2006-03-25  Richard Sandiford  <richard@codesourcery.com>

	Merge from csl/sourcerygxx-4_1 branch:

	2006-03-24  Mark Mitchell  <mark@codesourcery.com>
	            Joseph S. Myers  <joseph@codesourcery.com>

	PR libstdc++/20448
	PR libstdc++/20451
	* libstdc++-v3/scripts/testsuite_flags.in (--cxxflags): Don't
	define LOCALEDIR.
	* libstdc++-v3/testsuite/lib/libstdc++.exp (libstdc++_init):
	Always define LOCALEDIR to ".".
	(v3-build_support): Build MO files.

	2006-03-20  Mark Mitchell  <mark@codesourcery.com>

	* libiberty/pex-win32.c (<errno.h>): Include.
	(fix_argv): Remove.
	(argv_to_cmdline): New function.
	(std_suffixes): New variable.
	(no_suffixes): Likewise.
	(find_executable): New function.
	(win32_spawn): Likewise.
	(spawn_script): Use win32_spawn instead of _spawnv[p].
	(pex_win32_exec_child): Replace MSVCRT calls with Win32 API calls.
	(pex_win32_wait): Likewise.

	2006-03-17  Joseph Myers  <joseph@codesourcery.com>

	* gcc/dwarf2.h (DW64_CIE_ID): Define.
	* gcc/dwarf2out.c (DWARF_CIE_ID): Define.
	(output_call_frame_info): Output 0xffffffff before standard 8-byte
	length header.  Use DWARF_CIE_ID.
	(value_format): Use DW_FORM_data4 or DW_FORM_data8 for
	dw_val_class_loc_list depending on DWARF_OFFSET_SIZE.

	2006-03-17  Carlos O'Donell  <carlos@codesourcery.com>

	* gcc/doc/invoke.texi: Define -femit-class-debug-always.
	* gcc/common.opts: Likewise.
	* gcc/cp/search.c (maybe_suppress_debug_info): Suppress
	debug info if flag_emit_class_debug_always is zero.

	2006-03-17  Richard Sandiford  <richard@codesourcery.com>

	Backport from mainline:
	* gcc/config.gcc (mips64*-*-linux*): Keep existing tm_defines.
	(mips*-*-linux*): Likewise.

	2006-03-16  Joseph S. Myers  <joseph@codesourcery.com>

	* gcc/config.gcc (tm_defines): Always add to previous value rather
	than replacing it.

	2006-03-15  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* gcc/config/arm/arm.c (minipool_pad): New.
	(add_minipool_forward_ref): Unclude pool alignment padding in address
	calculation.
	(push_minipool_fix): Set minipool_pad.
	(minipool_pad): Ditto.

	2006-02-27  Nathan Sidwell  <nathan@potter.codesourcery.com>

	Backport the following
	* gcc/config.gcc (mt-*-*): Add --with-arch support.
	(--with): Print accepted options on error.
	* gcc/config/mt/mt.h (OPTION_DEFAULT_SPECS): Define.

	* gcc/config/mt/mt.c (DEF_VEC_P(basic_block),
	DEF_VEC_ALLOC_P(basic_bloc,heap)): Remove from here.

	* gcc/config/mt/mt.md (UNSPEC_LOOP): New constant.
	(loop_end, loop_init, doloop_end): New insns.
	* gcc/config/mt/mt.h (LOOP_FIRST, LOOP_LAST): New.
	(SPECIAL_REG_FIRST, FIRST_PSEUDO_REGISTER): Adjust.
	(FIXED_REGISTERS, CALL_USED_REGISTERS): Adjust.
	(REG_CLASS_CONTENTS, REGISTER_NAMES): Adjust.
	* gcc/config/mt/mt.c: #include basic-block.h
	(struct machine_function): Add has_loops field.
	(mt_add_loop): New.
	(MAX_LOOP_DEPTH, MAX_LOO_LENGTH): New.
	(struct loop_info, struct loop_work): New.
	(mt_loop_nesting, ms1_block_length, ms1_scan_loop): New workers.
	(mt_reorg_loops): New loop optimization.
	(mt_machine_reorg): Call it.
	* gcc/config/mt/mt-protos.h (mt_add_loop): Declare.

	* gcc/vec.h (VEC_block_remove): New.

	* gcc/loop-doloop.c (add_test): Only add jump notes if we did emit a
	jump.

	2006-02-18  Joseph S. Myers  <joseph@codesourcery.com>

	PR target/24837
	* gcc/config.gcc: Define UCLIBC_DEFAULT to 0 or 1.
	* gcc/opth-gen.awk: Handle Var and InverseMask together.
	* gcc/config/linux.opt (muclibc, mglibc): Use Var(linux_uclibc).
	* gcc/config/linux.h: Use #if not #ifdef for testing
	UCLIBC_DEFAULT.
	(TARGET_C99_FUNCTIONS): Test OPTION_GLIBC not TARGET_GLIBC.
	(CHOOSE_DYNAMIC_LINKER): Give an error for -mglibc and -muclibc
	used together.
	(UCLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER64,
	LINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.
	* gcc/config/alpha/linux-elf.h (GLIBC_DYNAMIC_LINKER,
	UCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER): Define.
	(ELF_DYNAMIC_LINKER): Define to LINUX_DYNAMIC_LINKER.
	* gcc/config/alpha/linux.h (TARGET_C99_FUNCTIONS): Define to
	TARGET_GLIBC.
	* gcc/config/cris/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(CRIS_LINK_SUBTARGET_SPEC): Pass a -dynamic-linker option.
	* gcc/config/frv/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	(TARGET_C99_FUNCTIONS): Don't define.
	* gcc/config/i386/linux.h (DYNAMIC_LINKER): Rename to
	GLIBC_DYNAMIC_LINKER.
	(SUBTARGET_EXTRA_SPECS): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/i386/linux64.h (GLIBC_DYNAMIC_LINKER32,
	GLIBC_DYNAMIC_LINKER64): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER32 and
	LINUX_DYNAMIC_LINKER64.
	* gcc/config/ia64/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/m32r/linux.h (GLIBC_DYNAMIC_LINKE): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/m68k/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/mips/linux64.h (GLIBC_DYNAMIC_LINKER32,
	GLIBC_DYNAMIC_LINKER64, GLIBC_DYNAMIC_LINKERN32,
	UCLIBC_DYNAMIC_LINKERN32, LINUX_DYNAMIC_LINKERN32): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKERN32, LINUX_DYNAMIC_LINKER64
	and LINUX_DYNAMIC_LINKER32.
	* gcc/config/mn10300/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/pa/pa-linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/rs6000/linux.h (TARGET_C99_FUNCTIONS): Define to
	TARGET_GLIBC.
	* gcc/config/rs6000/linux64.h (TARGET_C99_FUNCTIONS): Likewise.
	(GLIBC_DYNAMIC_LINKER32, GLIBC_DYNAMIC_LINKER64,
	UCLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER64,
	CHOOSE_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.
	(LINK_OS_LINUX_SPEC32): Use LINUX_DYNAMIC_LINKER32.
	(LINK_OS_LINUX_SPEC64): Use LINUX_DYNAMIC_LINKER64.
	* gcc/config/rs6000/sysv4.h (GLIBC_DYNAMIC_LINKER,
	UCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER): Define.
	(LINK_OS_LINUX_SPEC): Use LINUX_DYNAMIC_LINKE.
	* gcc/config/s390/linux.h (GLIBC_DYNAMIC_LINKER32,
	GLIBC_DYNAMIC_LINKER64): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER32 and
	LINUX_DYNAMIC_LINKER64.
	* gcc/config/sh/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(SUBTARGET_LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/sparc/linux.h (GLIBC_DYNAMIC_LINKER,
	UCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	(TARGET_C99_FUNCTIONS): Define to TARGET_GLIBC.
	* gcc/config/sparc/linux64.h (GLIBC_DYNAMIC_LINKER32,
	GLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER32,
	UCLIBC_DYNAMIC_LINKER64, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.
	(LINK_ARCH32_SPEC): Use LINUX_DYNAMIC_LINKER32.
	(LINK_ARCH64_SPEC, LINK_SPEC): Use LINUX_DYNAMIC_LINKER64.
	(TARGET_C99_FUNCTIONS): Define to TARGET_GLIBC.
	* gcc/config/xtensa/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/doc/invoke.texi (-muclibc): Remove caveat about supported
	targets.
	* gcc/testsuite/gcc.dg/glibc-uclibc-1.c,
	gcc/testsuite/gcc.dg/glibc-uclibc-2.c: New tests.

	2006-02-16  Joseph S. Myers  <joseph@codesourcery.com>

	PR libstdc++/14939
	PR target/20353
	PR target/24578
	PR target/24837
	* gcc/config/linux.opt: New file.
	* gcc/config/linux.h (CHOOSE_DYNAMIC_LINKER,
	UCLIBC_DYNAMIC_LINKER, LINUX_DYNAMIC_LINKER): Define.
	(TARGET_C99_FUNCTIONS): Define depending on TARGET_GLIBC.
	* gcc/config.gcc (*-*-linux*): Define extra_options.
	(*-*-*uclibc*): Define UCLIBC_DEFAULT.
	(arm*-*-linux-gnueabi): Change to arm*-*-linux-*eabi.
	* gcc/config/arm/linux-eabi.h (LINUX_TARGET_INTERPRETER): Change
	to GLIBC_DYNAMIC_LINKER.
	* gcc/config/arm/linux-elf.h (LINUX_TARGET_INTERPRETER): Likewise.
	(LINUX_TARGET_LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/mips/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/doc/invoke.texi (GNU/Linux Options): New section.
	* gcc/testsuite/gcc.dg/builtins-config.h (HAVE_C99_RUNTIME): Don't
	define if __UCLIBC__ is defined.
	* libstdc++-v3/config/os/uclibc/ctype_base.h,
	libstdc++-v3/config/os/uclibc/ctype_inline.h,
	libstdc++-v3/config/os/uclibc/ctype_noninline.h,
	libstdc++-v3/config/os/uclibc/os_defines.h: New.
	* libstdc++-v3/acinclude.m4 (GLIBCXX_CONFIGURE): Test whether
	using uClibc.
	* libstdc++-v3/configure.host: Use os/uclibc for uClibc.
	* libstdc++-v3/crossconfig.m4 (*-linux*): Use link tests.  Don't
	hardcode presence of math functions.
	* libstdc++-v3/configure: Regenerate.

	2005-02-16  Paul Brook  <paul@codesourcery.com>

	* reload1.c (emit_reload_insns): Invalidate dead input registers used
	for reloads.

	2006-02-01  Paul Brook  <paul@codesourcery.com>

	Backport form mainline.
	* gcc/function.c (assign_parm_setup_reg): Use function argument
	promotion rules.
	* gcc/expr.c (expand_expr_real_1): Use function argument promotion
	rules for PARM_DECLs.

	2006-01-27  Paul Brook  <paul@codesourcery.com>

	* version.c: Mark as CodeSourcery build.

	2006-01-24  Joseph Myers  <joseph@codesourcery.com>

	Backport from mainline.
	2006-01-23  Adam Nemet  <anemet@caviumnetworks.com>

	* fix-header.c (read_scan_file): Add new parameter imultilib when
	calling register_include_chains.

	2006-01-23  Julian Brown  <julian@codesourcery.com>

	Backport from mainline.
	2006-01-23  Kazu Hirata  <kazu@codesourcery.com>
	PR testsuite/25590
	* gcc/testsuite/gcc.dg/tree-ssa/gen-vect-11.c: Add -fwrapv.

2006-03-25  Richard Sandiford  <richard@codesourcery.com>

	* gcc/config/m68k/uclinux.h (CPLUSPLUS_CPP_SPEC): Override and
	define _GNU_SOURCE.

2006-03-23  Richard Sandiford  <richard@codesourcery.com>

	* gcc/doc/tm.texi (TARGET_USE_COMDAT_GROUPS): Document.
	* gcc/target.h (use_comdat_groups): New hook.
	* gcc/crtstuff.c (USE_PT_GNU_EH_FRAME): Don't define if
	OBJECT_FORMAT_FLAT.
	* gcc/varasm.c (default_function_rodata_section): Test the
	use_comdat_groups target hok instead of HAVE_COMDAT_GROUP.
	(default_elf_asm_named_section): Likewise.
	(default_unique_section): Likewise.
	* gcc/target-def.h (TARGET_USE_COMDAT_GROUPS): Define if undefined.
	(TARGET_INITIALIZER): Include it.
	* gcc/config.gcc (m68k-*-uclinux*): Add flat.h to tm_defines.
	Remove t-crtstuff from tmake_file.
	* gcc/config/flat.h: New file.
	* gcc/config/m68k/t-uclinux (EXTRA_MULTILIB_PARTS): Define.
	* gcc/config/m68k/uclinux.h (EH_FRAME_IN_DATA_SECTION): Delete.

2006-03-23  Richard Sandiford  <richard@codesourcery.com>

	* gcc/config/m68k/m68k.h (M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P):
	Move definition outside !REG_OK_STRICT block.

2006-03-21  Richard Sandiford  <richard@codesourcery.com>

	* gcc/config/m68k/m68k.c (TARGET_ASM_FILE_START_APP_OFF): Don't
	override here.
	* gcc/config/m68k/m68k.h (TARGET_ASM_FILE_START_APP_OFF): Define.
	* gcc/config/m68k/uclinux.h (TARGET_ASM_FILE_START_APP_OFF): Override.
	(M68K_NO_ASM_FILE_START_APP_OFF): Delete.

2006-03-21  Richard Sandiford  <richard@codesourcery.com>
	    Nathan Sidwell <nathan@codesourcery.com>

	* gcc/rtlanal.c: Include tree.h.
	(offset_within_block_p): New function, taken from
	mips_offset_within_object_p.
	(constant_may_be_outside_section_p): Likewise.
	* gcc/rtl.h (offset_within_section_p): New function.
	(constant_may_be_outside_section_p): Likewise.
	* gcc/Makefile.in (rtlanal.o): Depend on $(TREE_H).
	* gcc/config/m68k/m68k.md (movsi): Split possbily out-of-section
	constants if M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P.
	* gcc/config/m68k/m68k.c (TARGET_CANNOT_FORCE_CONST_MEM): Override.
	(m68k_cannot_force_const_mem): New function.
	* gcc/config/m68k/m68k.h (CONSTANT_ADDRESS_P): Check
	LEGITIMATE_CONSTANT_P.
	(LEGITIMATE_CONSTANT_P): Reject possibly out-of-section constants if
	M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P.
	(M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P): New macro.
	* gcc/config/m68k/uclinux.h (M68K_OFFSETS_MUST_BE_WITHIN_SECTIONS_P):
	Override.
	* gcc/config/mips/mips.c (mips_offset_within_object_p): Delete.
	(mips_symbolic_constant_p): Use offset_within_section_p.

2006-03-17  Richard Sandiford  <richard@codesourcery.com>

	* gcc/config.gcc (m68k-*-uclinux*): Set with_cpu to 5206 by default.
	* gcc/config/m68k/m68k-cores.def (5211, 5212, 5213): Use the -mcpu=5211
	multilibs instead of the -mcpu=5207 ones.
	* gcc/config/m68k/t-uclinux (MULTILIB_OPTIONS): Restrict to coldfire
	cores.
	(MULTILIB_DIRNAMES, MULTILIB_EXCEPTIONS): Update accordingly.
	(NATIVE_SYSTEM_HEADER_DIR): Override default.
	* gcc/config/m68k/uclinux.h (MULTILIB_DEFAULTS): Define.
	(SYSROOT_SUFFIX_SPEC): Define.
	(SYSROOT_HEADERS_SUFFIX_SPEC): Define.

2006-03-16  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k-protos.h (m68k_out_of_object_offset): New.
	* gcc/config/m68k/m68k.c (m68k_out_of_object_offset): New.
	(m68k_legitimate_address_p): Check out of object offset.
	* gcc/config/m68k/m68k.md (movsi): Split if out of object offset.
	* gcc/config/m68k/predicates.md (general_src_operand): Check out of
	object offset.
	* gcc/config/m68k/uclinux.h (M68K_NO_OUT_OF_OBJECT_OFFSETS): Declare.
	
	* gcc/config/m68k/m68k.c (m68k_output_function_epilogue): Prevent
	compilation warning.

	* gcc/config/m68k/m68k-protos.h (m68k_legitimize_reload_address): Declare.
	* gcc/config/m68k/m68k.c (m68k_legitimize_reload_address): New.
	* gcc/config/m68k/m68k.h (LEGITIMIZE_RELOAD_ADDRESS): New.
	* gcc/testsuite/gcc.dg/m68k-fp-1.c: New.
	
	* gcc/config/m68k/m68k-protos.h (m68k_legitimiate_address_p): Declare.
	* gcc/config/m68k/m68k.c (REG_OK_FOR_INDEX_STRICT,
	REG_OK_FOR_BASE_STRICT, LEGITIMATE_BASE_REG_P,
	LEGTIMATE_INDEX_REG_P): Copied & adjusted from m68k.h.
	(m68k_legitimate_address_p): New, converted from
	GO_IF_LEGITIMATE_ADDRESS.
	* gcc/config/m68k/m68k.hh (PCREL_GENERAL_OPERAND_OK,
	LEGTIMIATE_PIC_OPERAND_P): Remove.
	(GO_IF_LEGITIMATE_ADDRESS): Call m68k_legitimate_address_p.
	(LEGTIMIATE_BASE_REG_P, INDIRECTABLE_1_ADDRESS_P,
	GO_IF_NONINDEXED_ADDRESS, GO_IF_INDEXABLE_BASE, GO_IF_INDEXING,
	GO_IF_INDEXED_ADDRESS, LEGTIMIATE_INDEX_REG_P, LEGITIMATE_INDEX_P,
	GO_IF_COLDFIRE_FPU_LEGITIMATE_ADDRESS): Remove.

2006-03-14  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/fpgnulib.c (__truncdfsf2): Implement round to
	nearest even, fix denormal rounding overflow.

2006-03-10  Nathan Sidwell  <nathan@codesourcery.com>

	* libstdc++-v2/configure.ac (LIBSUPCXX_PRONLY): Protect against unset
	environment variable.
	* libstdc++-v3/configure: Rebuilt.

	* gcc/config.gcc (m68k-*-uclinux*): Include t-crtstuff.
	* gcc/config/m68k/t-uclinux (MULITLIB_EXCEPTIONS): Disable
	mid-shared-library & msep-data on coldfire chips without 32bit PC
	rel addressing.
	(EXTRA_MULTILIB_PARTS): Don't define here.
	* gcc/config/m68k/m68k.c (TARGET_ASM_FILE_START_APP_OFF): Protect
	with M68K_NO_ASM_FUILE_START_APP_OFF.
	(override_options): Avoid signed/unsigned warning. Give more
	informative error message when TARGET_SEP_DATA or
	TARGET_ID_SHARED_LIBRARY are unsupported.
	* gcc/config/m68k/uclinux.h (STARTFILE_SPEC): Define here.
	(ENDFILE_SPEC): Likewise.
	(INIT_SECTION_ASM_OP, FINI_SECTION_ASM_OP): Don't define.
	(TARGET_OS_CP_BUILTINS): Remove duplicared mc68000 #define.
	(M68K_NO_ASM_FILE_START_APP_OFF): New.

2006-03-08  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k-none.h (ASM_SPEC): Pass -mno-float for
	soft-float.

2006-03-07  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Detect -mtune
	usage to set multiple 68k core #defines.

2006-03-06  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k-cores.def: Set FL_PCREL_16 as appropriate.
	* gcc/config/m68k/m68k.c (FL_NOPIC): Remove.
	(FL_PCREL_16): Define.
	(all_architectures): Set FL_PCREL_16 as appropriate.
	(all_tunings): Likewise.
	(override_options): Replace 68k specific FL_NOPIC test with general
	FL_PCREL_16 one.

2006-02-26  Nathan Sidwell  <nathan@potter.codesourcery.com>

	* libstdc++-v3/testsuite/lib/libstdc++.exp (check_v3_target_fileio,
	check_v3_target_time): New.
	* libstdc++-v3/testsuite/lib/dg-options.exp (dg-require-fileio,
	dg-require-time): New.
	* libstdc++-v3/testsuite/ext/stdio_sync_filebuf/char/12048-1.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_sync_filebuf/char/12048-2.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_sync_filebuf/char/12048-3.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_sync_filebuf/char/12048-4.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_sync_filebuf/char/1.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_filebuf/char/2.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_filebuf/char/10063-1.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_filebuf/char/10063-2.cc: Use it.
	* libstdc++-v3/testsuite/ext/stdio_filebuf/char/10063-3.cc: Use it.
	* libstdc++-v3/testsuite/22_locale/time_put/put/char/12439_1.cc: Use it.
	* libstdc++-v3/testsuite/22_locale/time_put/put/char/12439_3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ofstream/open/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ofstream/cons/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/objects/char/12048-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/objects/char/12048-4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/objects/char/12048-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/objects/char/12048-3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/objects/char/10.cc: Use it.
	* libstdc++-v3/testsuite/27_io/objects/char/12048-5.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/get/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/ignore/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/ignore/char/3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/getline/char/5.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/seekg/char/sstream.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/seekg/char/fstream.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/readsome/char/6746-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/extractors_other/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/tellg/char/sstream.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/tellg/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/tellg/char/fstream.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_istream/extractors_character/char/4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ostream/inserters_other/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ostream/tellp/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ostream/seekp/char/2346-fstream.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ifstream/open/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_ifstream/cons/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputbackc/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputbackc/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputbackc/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputbackc/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetn/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/12790-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/12790-3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/12790-4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/1-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/2-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/3-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/3-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/3-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/11543.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/12790-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/12790-3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekoff/char/12790-4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/in_avail/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/in_avail/char/9701-3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/setbuf/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/setbuf/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/setbuf/char/3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/setbuf/char/12875-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/setbuf/char/12875-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sbumpc/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sbumpc/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sbumpc/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sbumpc/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sbumpc/char/9825.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/is_open/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputc/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputc/char/1-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputc/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputc/char/2-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/open/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/open/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/open/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/open/char/3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/overflow/char/2-unbuf.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/overflow/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/overflow/char/9988.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/overflow/char/9182-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/overflow/char/9169.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/snextc/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/snextc/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/snextc/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/snextc/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetc/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetc/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetc/char/1-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetc/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sgetc/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/12790-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/12790-3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/12790-4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/close/char/4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/underflow/10096.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/underflow/char/2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sungetc/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sungetc/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sungetc/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sungetc/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/12790-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/12790-3.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/12790-1.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/12790-2.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/12790-4.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/1-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/1-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/2-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/2-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/3-in.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/3-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/seekpos/char/3-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputn/char/1-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputn/char/1-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputn/char/2-io.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputn/char/2-out.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sputn/char/9339.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/pbackfail/char/9761.cc: Use it.
	* libstdc++-v3/testsuite/27_io/basic_filebuf/sync/char/9182-1.cc: Use it.
	* libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/10.cc: Use it.
	* libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/11.cc: Use it.
	* libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/5.cc: Use it.

2006-02-23  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/doc/invoke.text (M680x0 Options): Update.
	* gcc/config/m68k/m68k.opt (mdiv): Rename from mhwdiv, to match
	assembler.
	(musp): Remove.
	(mbitfield, mrtd, mshort): Allow negated.
	* gcc/config/m68k/m68k.c (m68k_cf_usp): Remove.
	(all_architectures): isaa defaults to HWDIV and 5206e. isaa+
	defaults to HWDIV.
	(override_options): Remove m68k_cf_usp setting.
	* gcc/config/m68k/m68k.h (m68k_cf_usp): Remove.

	* gcc/config/m68k/m68k-cores.def: Add 5202, 5204, 5250.

	* gcc/config/m68k/m68k.h (TARGET_COLDFIRE): Remove, use
	m68k_arch_coldfire directly.  Update all users.
	* gcc/config/m68k/m68k.c: Update all users.
	* gcc/config/m68k/m58k.md: Update all users.
	* gcc/config/m68k/linux.h (ASM_RETURN_CASE_JUMP): Update.
	* gcc/config/m68k/coff.h (ASM_RETURN_CASE_JUMP): Update.
	* gcc/config/m68k/m68kelf.h (ASM_RETURN_CASE_JUMP): Update.
	* gcc/config/m68k/netbsd-elf.h (ASM_RETURN_CASE_JUMP): Update.

2006-02-22  Nathan Sidwell  <nathan@codesourcery.com>

	* gcc/config/m68k/m68k.c (m68k_cpu_cpp_builtins): Move to ...
	* gcc/config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): ... here.
	* gcc/config/m68k/m68k-protos.h (m68k_cpu_cpp_builtins): Remove.

2005-02-21  Julian Brown  <julian@codesourcery.com>

	* gcc/config/m68k/m68k.c (fpu_impl, fpu_select): Remove.
	(m68k_handle_option): Remove msoft-float, mhard-float, m68881 handling
	from here.
	(override_options): Handle default CPU setting. Handle bitfield, hwdiv,
	usp options. Use FL_NOPIC.
	* gcc/config/m68k/m68k.h (TARGET_BITFIELD): Define to m68k_bitfield,
	temporarily.
	(target_cpus): New enumeration of CPU identifiers, TARGET_CPU_<core>.
	* gcc/config/m68k/m68k-none.h: Remove old TARGET_CPU_DEFAULT handling.
	(OPTION_DEFAULT_SPECS): Define macro for handling default CPU/float.
	(EXTRA_SPECS): Remove CC1_CPU_DEFAULT_SPEC.
	* gcc/config/m68k/m68k.opt (mbitfield): Use m68k_flag_bitfield.
	(mnobitfield): Likewise.
	(mhwdiv, musp): Fix options.
	(m68881, msoft-float, mhard-float): Use m68k_flag_hardfloat.
	(mfpu): Remove.
	* gcc/config/m68k/t-m68kelf (MULTILIB_EXCEPTIONS): Add msoft-float,
	mhard-float.
	* gcc/config.gcc (m68k*-linux*): Rename to...
	(m68k*-*): Implement --with-cpu, --with-float. Remove old
	compile-time CPU selection options.

2006-02-16  Julian Brown  <julian@codesourcery.com>

	* gcc/config.gcc (m68k-*-aout*): Use t-mlib-matches file.
	(m68k-*-coff*): Likewise.
	(m68010-*-netbsdelf*, m68k*-*-netbsdelf*): Likewise.
	(m68k-*-uclinux*): Likewise.
	(m68k-*-linux*): Likewise.
	(m68k-*-rtems*): Likewise.
	* gcc/config/m68k/t-rtems: Use -mcpu= options for multilibs.
	* gcc/config/m68k/t-m68kelf: Likewise.
	* gcc/config/m68k/t-m68kbare: Likewise.
	* gcc/config/m68k/t-uclinux: Likewise.
	* gcc/config/m68k/m68k-cores.def: Add multilib field. Add missing HWDIV
	flag to various cores. Replace 5280, 5281, 5282 with 528x.
	* gcc/config/m68k/t-mlib-matches: Find canonical multilib for
	CPU/arch settings.
	* gcc/config/m68k/m68k-none.h (ASM_SPEC): Add -mcpu/-march options.
	* gcc/config/m68k/m68k.c (all_cores): Ignore new multilib field in
	m68k-cores.def.
	(m68k_handle_option): Use 528x instead of 5280.
	(override_options): Don't set CPU/arch if tuning option only is given.
	* gcc/config/m68k/m68k.h (processor_type): Ignore new multilib field in
	m68k-cores.def.

2006-02-13  Julian Brown  <julian@codesourcery.com>

	* gcc/config/m68k/m68k.h (CONST_OK_FOR_LETTER_P): Implement 'R'
	constraint for immediates which can be handled by mov3q.

2006-02-10  Julian Brown  <julian@codesourcery.com>

	* gcc/config/m68k/m68k.md: Replace uses of TARGET_68020, TARGET_68040,
	TARGET_68060, TARGET_68040_ONLY, TARGET_CPU32, TARGET_CFV4 with
	TUNE_68000, TUNE_68020, TUNE_68040, TUNE_CFV4, m68k_arch_68020,
	m68k_arch_68040, m68k_arch_68060, m68k_arch_isab as appropriate,
	throughout.
	* gcc/config/m68k/linux.h (MASK_68881): Change spelling to MASK_HARDFP.
	* gcc/config/m68k/m68k-cores.def (68020-40, 68020-60): Remove CPU
	names.
	(68332, cpu32): Use cpu32 as microarchitecture.
	* gcc/config/m68k/m68k-protos.h (m68k_cpu_cpp_builtins): Add prototype.
	* gcc/config/m68k/m68k-none.h (MASK_68881): Change spelling to
	MASK_HARDFP. Use -mhard-float instead of -m68881.
	* gcc/config/m68k/m68k.opt (-m5200, -m5206e, -m528x, -m5307, -m5407)
	(-mcfv4e, -m68881): Don't use target flags to handle legacy options.
	(-mhard-float): Add option to enable ColdFire FPU or 68881 depending
	on context.
	(-msoft-float): Negation of above.
	(-mhwdiv): Enable/disable ColdFire hardware divide instructions
	(unimplemented).
	* gcc/config/m68k/m68k.c (m68k_cpu, m68k_arch_68020, m68k_arch_68040)
	(m68k_arch_68060, m68k_arch_coldfire, m68k_arch_isaaplus)
	(m68k_arch_isab, m68k_arch_isac, m68k_tune, m68k_fpu, m68k_bitfield)
	(m68k_cf_hwdiv, m68k_cf_usp): New variables describing target
	capabilities.
	(FL_FOR_isa_40, FL_FOR_isa_60): Alter definitions.
	(FL_FOR_isa_20_40, FL_FOR_isa_20_60): Remove.
	(m68k_isa): Remove isa_20_40 and isa_20_60.
	(all_cores): Alter last entry.
	(all_architectures): Reformat. Update various fields. Remove 68020-40
	and 68020-60. Remove cfvX entries.
	(all_tunings): New array. Describe different tuning options.
	(m68k_select): Tune for microarch not CPU.
	(MASK_ALL_CPU_BITS): Remove.
	(m68k_handle_option): Handle legacy options using new CPU/tuning
	selection code. Add support for -mhard-float and fix support for
	-msoft-float, -m68881.
	(override_options): Add tuning support. Remove legacy target flag
	support.
	(m68k_cpu_cpp_builtins): New function (from TARGET_CPU_CPP_BUILTINS
	in m68k.h). Handle legacy defines, and support new __mcfisaX__ and
	__mcfvX__ defines to be used in new code.
	(m68k_output_function_prologue): Use TUNE_* macros and m68k_arch_*
	predicates.
	(m68k_output_function_epilogue): Likewise.
	(m68k_output_pic_call): Likewise.
	(output_scc_di): Likewise.
	(const_method): Likewise.
	(m68k_rtx_costs): Likewise.
	(output_move_simode_const): Likewise.
	(output_move_himode): Likewise.
	(output_move_qimode): Likewise.
	(output_move_stricthi): Likewise.
	(output_move_strictqi): Likewise.
	(output_addsi3): Likewise.
	(standard_68881_constant_p): Likewise.
	(print_operand): Likewise.
	(m68k_output_mi_thunk): Likewise.
	* gcc/config/m68k/netbsd-elf.h (MASK_68881): Spell MASK_HARDFP.
	* gcc/config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Implement as
	function call to m68k_cpu_cpp_builtins.
	(TARGET_CPU32): Remove.
	(TARGET_COLDFIRE): Define as m68k_arch_coldfire.
	(TARGET_COLDFIRE_FPU, TARGET_68881, TARGET_HARD_FLOAT): Define in terms
	of m68k_fpu.
	(TARGET_FLT_EVAL_METHOD): Use m68k_arch_68040.
	(CONST_OK_FOR_LETTER_P): Add 'R' constraint.
	(INDIRECTABLE_1_ADDRESS_P, GO_IF_INDEXED_ADDRESS, LEGITIMATE_INDEX_P):
	Use m68k_arch_68020.
	(uarch_type): Remove u68030, ucfv2m. Add ucpu32.
	(TUNE_68000, TUNE_68020, TUNE_68040, TUNE_68060, TUNE_68040_60)
	(TUNE_CPU32, TUNE_CFV2, TUNE_CFV3, TUNE_CFV4): Add tuning macros.
	(m68k_cpu, m68k_arch_68020, m68k_arch_68040, m68k_arch_68060)
	(m68k_arch_coldfire, m68k_arch_isaaplus, m68k_arch_isab)
	(m68k_arch_isac, m68k_tune, m68k_fpu, m68k_bitfield, m68k_cf_hwdiv)
	(m68k_cf_usp): Declare extern variables describing target capabilities.

2006-02-01  Nathan Sidwell  <nathan@voldemort.voldemort.codesourcery.com>

	* gcc/config/m68k/lb1sf68.asm (__divsf3, __divdf3, __mulsf3,
	__muldf3): Return a correctly signed zero.

2006-01-31  Nathan Sidwell  <nathan@voldemort.voldemort.codesourcery.com>

	* gcc/config/m68k/lb1sf68.asm: Use moveq to load small constants.

2006-01-30  Julian Brown  <julian@codesourcery.com>

	* gcc/config/m68k/m68k-cores.def: New file. Define various 68k/ColdFire
	cores.
	* gcc/config/m68k/m68k.opt (-mcpu, -march, -mtune, -mfpu): New
	options.
	* gcc/config/m68k/m68k.c (FL_NOPIC, FL_BITFIELD, FL_68881, FL_COLDFIRE)
	(FL_CF_HWDIV, FL_CF_MAC, FL_CF_EMAC, FL_CF_EMAC_B, FL_CF_USP)
	(FL_CF_FPU, FL_ISA_68000, FL_ISA_68020, FL_ISA_68040, FL_ISA_68060)
	(FL_ISA_A, FL_ISA_APLUS, FL_ISA_B, FL_ISA_C): Define flags for
	m68k-cores.def.
	(FL_FOR_isa_00, FL_FOR_isa_20, FL_FOR_isa_40, FL_FOR_isa_60)
	(FL_FOR_isa_20_40, FL_FOR_isa_20_60, FL_FOR_isa_a, FL_FOR_isa_aplus)
	(FL_FOR_isa_b, FL_FOR_isa_c): Define base flags for ISAs.
	(m68k_isa): New enumerated type for instruction-set architectures.
	(processors): New type for processors.
	(all_cores): New array. All m68k cores, read from m68k-cores.def.
	(all_architectures): New array. All m68k architectures.
	(m68k_cpu_select): New type for selecting cpu/arch.
	(m68k_select): New array for selecting cpu/arch/tuning.
	(fpu_impl): New type for floating-point units.
	(fpu_select): New array for selecting FPU.
	(M68K_OPT_SET_TUNE, M68K_OPT_SET_ARCH, M68K_OPT_SET_CPU): New defines
	for indices into m68k_select array.
	(m68k_handle_option): Handle -mcpu=, -march=, -mtune=.
	(override_options): Handle new -mcpu, -march options. Translate to old
	target flags.
	* gcc/config/m68k/m68k.h (uarch_type): New enumeration for
	microarchitecture types.
	(processor_type): New enumeration for processor core identifications.
	(fpu_type): New enumeration for FPU types.

2006-01-27  Paul Brook  <paul@codesourcery.com>

	* version.c: Mark as CodeSourcery build.

2006-01-23  Julian Brown  <julian@codesourcery.com>

	Backport from mainline.
	2006-01-23  Kazu Hirata  <kazu@codesourcery.com>
	PR testsuite/25590
	* gcc.dg/tree-ssa/gen-vect-11.c: Add -fwrapv.

2006-01-23  Julian Brown  <julian@codesourcery.com>

	* gcc/config/m68k/netbsd-elf.h (LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Make
	64-bit on Coldfire.
	* gcc/config/m68k/m68k.h (LONG_DOUBLE_TYPE_SIZE): Likewise.
	(LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Likewise. 

2006-01-23  Julian Brown  <julian@codesourcery.com>

	* Merge from csl/sourcerygxx-4_1 branch, revision 110050.

2006-01-22  Paul Brook  <paul@codesourcery.com>
	Peter Barada  <peter@the-baradas.com>

	* gcc/config/m68k/m68k.md: Add Coldfire FPU support.
	Define FP mode macro and associated attributes.
	Use it for float mode patterns.
	* gcc/config/m68k/linux.h (FUNCTION_VALUE): Use m68k_function_value.
	(LIBCALL_VALUE): Use m68k_libcall_value.
	* gcc/config/m68k/m68k-protos.h (m68k_libcall_value): Add prototype.
	(m68k_function_value): Ditto.
	(emit_move_sequence): Ditto.
	* gcc/config/m68k/m68kemb.h (LIBCALL_VALUE): Use m68k_libcall_value.
	* gcc/config/m68k/m68k-none.h (ASM_SPEC): Add mcfv4e.
	* gcc/config/m68k/t-m68kelf (MULTILIB_OPTIONS): Add mcfv4e.
	(MULTILIB_EXCEPTIONS): Ditto.
	* gcc/config/m68k/m68k.opt: Add mcfv4e.
	* gcc/config/m68k/m68k.c (m68k_handle_option): Handle OPT_mcfv4e.
	(m68k_compute_frame_layout): Include space for ColdFire FPU regs.
	(m68k_output_function_prologue): Save ColdFire FPU registers.
	(m68k_output_function_epilogue): Restore ColdFire FPU registers.
	(force_mode, fp_reg_operand, emit_move_sequence): New functions.
	(m68k_regno_mode_ok): Don't allow types larget than 8 bytes in
	ColdFire FPU registers.
	(m68k_libcall_value, m68k_function_value): New functions.
	* gcc/config/m68k/netbsd-elf.h (FUNCTION_VALUE): Use
	m68k_function_value.
	(LIBCALL_VALUE): Use m68k_libcall_value.
	* gcc/config/m68k/m68k.h (TARGET_CPU_CPP_BUILTINS): Define __mcfv4e__.
	(MASK_COLDFIRE): Add MASK_CFV4E.
	(TARGET_COLDFIRE_FPU, TARGET_HARD_FLOAT, TARGET_FP_REG_SIZE): New.
	(MODES_TIEABLE_P): Use TARGET_HARD_FLOAT.
	(REG_CLASS_FROM_LETTER, PREFERRED_RELOAD_CLASS): Ditto.
	(GO_IF_COLDFIRE_FPU_LEGITIMATE_ADDRESS): Define.
	(GO_IF_LEGITIMATE_ADDRESS): Use it.
	(LEGITIMIZE_ADDRESS): Handle ColdFire FPU addresses.
	* gcc/doc/invoke.tex: Document -mcfv4e on m68k.

=======
>>>>>>> .merge-right.r112375
2006-01-20  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch.
	2005-09-21  Kazu Hirata  <kazu@codesourcery.com>
	* gcc/config/arm/arm.md (movdi): Force operands[1] to a register
	if we have a non-register source.
	(*arm_movdi, *movdf_soft_insn): Require that one of the
	operands be a register.
	* gcc/config/arm/iwmmxt.md (*iwmmxt_arm_movdi): Likewise.
	* gcc/config/arm/vfp.md (*arm_movdi_vfp, *movdf_vfp): Likewise.

2006-01-20  Joseph S. Myers  <joseph@codesourcery.com>

	PR libstdc++/25524
	* gcc/cppdefault.h (struct default_include): Add multilib flag.
	* gcc/cppdefault.c (cpp_include_defaults): Set it.
	* gcc/c.opt (-imultilib): New option.
	* gcc/c-opts.c (imultilib): New.
	(c_common_handle_option): Handle -imultilib.
	(c_common_post_options): Likewise.
	* gcc/c-incpath.c (add_standard_paths, register_include_chains):
	Likewise.
	* gcc/c-incpath.h (register_include_chains): Add extra parameter.
	* gcc/gcc.c (do_spec_1): Generate -imultilib option.
	(The Specs Language): Update %I description.
	(process_command): Update copyright notice.
	* gcc/doc/cppopts.texi (-imultilib): Document.
	* gcc/doc/invoke.texi (-imultilib): Include in option summary.
	(%I): Update specs documentation.
	* libstdc++-v3/include/Makefile.am: Install host-specific headers
	in multilib subdirectory.
	* libstdc++-v3/include/Makefile.in: Regenerate.

2006-01-20  Julian Brown  <julian@codesourcery.com>

	Merge from csl-gxxpro-3_4-branch.
	2005-11-28  Mark Mitchell  <mark@codesourcery.com>
	Backport:
	2004-10-28  Pascal Obry  <obry@act-europe.fr>
	* unwind-dw2-fde.c: Import from MingW build for ZCX support.
	* unwind-sjlj.c: Idem.
	* config/i386/cygming.h: Idem.
	* config/i386/mingw32.h: Idem.
	* config/i386/t-cygming: Idem.
	* config/i386/t-mingw32: Idem.
	* config/i386/win32-ehfb.c: New file to support unwinding through
	signals on Windows.
	Provides support for ZCX on Windows platforms. This set of patch
	comes from the MingW compiler (Danny Smith) adapted and enhanced to
	support unwinding through signals for example.
	2005-07-29  Pascal Obry  <obry@act-europe.fr>
	Support for crtbegin/crtend.o on MingW.
	* config.gcc: Add crtbegin.o and crtend.o as extra_parts on MingW.
	* crtstuff.c: Add support for MingW.
	Provides support for ZCX on Windows platforms. This set of patch
	comes from the MingW compiler (Danny Smith) adapted to GCC 3.4.

2006-01-20  Julian Brown  <julian@codesourcery.com>

	Backport from mainline.
	2006-01-02  Mark Mitchell  <mark@codesourcery.com>
	* libstdc++-v3/src/Makefile.am (LTLDFLAGS): New variable.
	(CXXLINK): Use LTLDFLAGS.
	* libstdc++-v3/src/Makefile.in: Regenerated.
	* libstdc++-v3/libsupc++/Makefile.am (LTLDFLAGS): New variable.
	(CXXLINK): Use LTLDFLAGS.
	* libstdc++-v3/libsupc++/Makefile.in: Regenerated.

	2006-01-02  Mark Mitchell  <mark@codesourcery.com>
	* libtool-ldflags: New script.

2006-01-20  Julian Brown  <julian@codesourcery.com>

	Merge from csl-gxxpro-3_4-branch:
	2005-09-14  Mark Mitchell  <mark@codesourcery.com>
	* gcc/config/vx-common.h (DBX_DEBUGGING_INFO): Define to 1.

2006-01-20  Julian Brown  <julian@codesourcery.com>

	Backport from mainline.
	2005-11-23  Mark Mitchell  <mark@codesourcery.com>
	* gcc/doc/invoke.texi: For man pages, include gcc-vers.texi.
	List @file in the option summary.  Include the libiberty documentation
	for @file.
	* gcc/gcc.c (main): Call expandargv.
	* gcc/Makefile.in (gcc-vers.texi): Define srcdir.

	2005-11-23  Mark Mitchell  <mark@codesourcery.com>
	* maintainer-scripts/update_web_docs_svn: Set @srcdir in gcc-vers.texi.

2006-01-20  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch.
	2005-10-20  Paul Brook  <paul@codesourcery.com>
	* config/arm/arm.c (arm_default_cpu): New.
	(arm_override_options): Set arm_default_cpu.
	(arm_file_start): Output EABI attribute directives.

2006-01-20  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch.
	2005-10-20  Paul Brook  <paul@codesourcery.com>
	* config/arm/arm.c (arm_elf_asm_constructor): Remove ATTRIBUTE_UNUSED
	from priority argument.  Use different section names for non-default
	priority.
	* config/arm/elf.h: Remove definition of SUPPORTS_INIT_PRIORITY.

2006-01-18  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch.
	2005-03-14  Julian Brown  <julian@codesourcery.com>
	* gcc/config/arm/lib1funcs.asm (ashldi3): Don't define on SymbianOS.
	(aeabi_llsl): Likewise.
	(ashrdi3): Likewise.
	(aeabi_lasr): Likewise.
	(lshrdi3): Likewise.
	(aeabi_llsr): Likewise. 
	2005-03-10  Julian Brown  <julian@codesourcery.com>
	* gcc/config.gcc: Disable shared libgcc for SymbianOS.
	* gcc/config/arm/t-symbian (LIB2ADDEH): Include config/arm/pr-support.c.

2006-01-18  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch
	2005-03-10  Julian Brown  <julian@codesourcery.com>
	* libstdc++configure.ac (LIBSUPCXX_PRONLY): New AM_CONDITIONAL: yes
	if we are compiling for SymbianOS on ARM.
	* libstdc++include/Makefile.am: Don't install C++ headers if
	LIBSUPCXX_PRONLY is true.
	* libstdc++libsupc++/Makefile.am: Include only eh_personality.cc
	in libsupc++ if LIBSUPCXX_PRONLY is true.
	* libstdc++Makefile.in: Regenerate.
	* libstdc++configure: Regenerate.
	* libstdc++include/Makefile.in: Regenerate.
	* libstdc++libmath/Makefile.in: Regenerate.
	* libstdc++libsupc++/Makefile.in: Regenerate.
	* libstdc++po/Makefile.in: Regenerate.
	* libstdc++src/Makefile.in: Regenerate.
	* libstdc++testsuite/Makefile.in: Regenerate.

2005-01-17  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	2005-12-13  Carlos O'Donell <carlos@codesourcery.com>
	* gcc/c-cppbuiltin.c (builtin_define_float_constants): Add
	fp_cast parameter, pass to builtin_define_with_hex_fp_value.
	Define __FLT_HAS_DENORM__, __DBL_HAS_DENORM__, __LDBL_HAS_DENORM__.
	(builtin_define_with_hex_fp_value): Use fp_cast when building macro.
	(c_cpp_builtins): If flag_single_precision_constant then set fp_cast
	to "((double)%sL)" otherwise "%s".
	* gcc/testsuite/gcc.dg/single-precision-constant.c: New test.
	* libstdc++-v3/include/std/std_limits.h (struct numeric_limits):
	Use __DBL_HAS_DENORM__, __FLT_HAS_DENORM__, __LDBL_HAS_DENORM__.

2005-01-17  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	2005-12-15  Richard Sandiford  <richard@codesourcery.com>
	* gcc/config/arm/predicates.md (call_memory_operand): New.
	* gcc/config/arm/arm.md (*call_mem, *call_value_mem): Use it.
	* gcc/testsuite/gcc.dg/20051215-1.c: New file.

	* gcc/config/arm/arm.md: Provide a big-endian version of the
	(zero_extend:SI (subreg:QI ...)) splitter.

2006-01-16  Paul Brook  <paul@codesourcery.com>

	* config/m68k/m68k.c (output_move_const_into_data_reg):
	Output correct mnemonic for mvz and mvs.

2006-01-03  Paul Brook  <paul@codesourcery.com>

	* config/m68k/m68k.c (m68k_output_mi_thunk): Use jmp, not jsr.

2005-12-30  Paul Brook  <paul@codesourcery.com>

	* config/m68k/m68k.md: Convert define_peephole to define_peephole2.
	(UNSPEC_MOVEQ_MEM): New constant.
	(movsi_smallconst): New pattern.
	* config/m68k/m68k.h (HARD_FP_REG_P): Define.

2005-12-30  Paul Brook  <paul@codesourcery.com>

	PR target/23482
	* doc/md.texi: Document m68k Q, S, T and U constraints.
	* config/m68k/m68k.h (EXTRA_CONSTRAINTS): Restrict U to 16-bit
	offsets.

2005-12-29  Paul Brook  <paul@codesourcery.com>

	* config/m68k/m68k.h (RETURN_ADDR_RTX): Define.
	* config/m68k/m68k.c (m68k_initial_elimination_offset): Remove FIXME.
	Include offset due to FIRST_PARM_OFFSET.

2005-12-29  Paul Brook  <paul@codesourcery.com>

	* config/m68k/lb1sf68.asm (__cmpdf2): Fix typo in immediate mask.
	Create wrapper and rename body...
	(__cmpdf2_internal): ... to this.  Return correct value for unordered
	result.
	(__cmpsf2): Create wrapper and rename body...
	(__cmpsf2_internal): ... to this.  Return corerct value for unordered
	result.
	(__eqdf2, __nedf2, __gtdf2, __gedf2, __ltdf2, __ledf2): Use
	__cmpdf2_internal.
	(__eqsf2, __nesf2, __gtsf2, __gesf2, __ltsf2, __lesf2): Use
	__cmpsf2_internal.

2005-12-29  Paul Brook  <paul@codesourcery.com>

	* config/m68k/fpgnulib.c (__extendsfdf2): Handle negative zero.
	(__truncdfsf2): Ditto.
	(__extenddfxf2): Ditto.
	(__truncxfdf2): Ditto.
	* config/m68k/lb1sf68.asm (__addsf3): Return -0.0 for -0.0 + -0.0.
	(__adddf3): Ditto.

2005-12-29  Daniel Jacobowitz  <dan@codesourcery.com>
	Paul Brook  <paul@codesourcery.com>

	* gcc/config/m68k/m68k.c (m68k_output_pic_call): Don't use bsr.l for
	!TARGET_68020.
	* gcc/config/m68k/t-m68kelf (EXTRA_PARTS): Remove.
	(EXTRA_MULTILIB_PARTS): Set.
	* gcc/config/m68k/t-uclinux (EXTRA_PARTS): Remove.
	(EXTRA_MULTILIB_PARTS): Set.

2005-12-21  Paul Brook  <paul@codesourcery.com>

	* gcc/testsuite/gcc.dg/pr19340.c: Skip on m68k targets.

2005-12-20  Paul Brook  <paul@codesourcery.com>

	* gcc/testsuite/lib/target-supports.exp (check_profiling_available):
	Add m68k-*-elf.

2005-12-17  Paul Brook  <paul@codesourcery.com>

	* gcc/config/m68k/m68k.md (m68k_output_function_prologue): Always call
	dwarf2out_def_cfa. Only add space for frame pointer to cfa_offset
	when frame_pointer_needed. 

2005-12-02  Paul Brook  <paul@codesourcery.com>

	* config/m68k/fpgnulib.c (__unordsf2, __unorddf2, __unordxf2,
	__floatunsidf, __floatunsisf, __floatunsixf): New functions.

2005-11-28  Paul Brook  <paul@codesourcery.com>

	* config.gcc: Don't use fixproto on m68k-elf.

