2006-03-27  Mark Mitchell  <mark@codesourcery.com>

	* libiberty/pex-win32.c (pex_win32_exec_child): Close stdout/stderr
	in parent.

2006-03-24  Mark Mitchell  <mark@codesourcery.com>
            Joseph S. Myers  <joseph@codesourcery.com>

	PR libstdc++/20448
	PR libstdc++/20451
	* libstdc++-v3/scripts/testsuite_flags.in (--cxxflags): Don't
	define LOCALEDIR.
	* libstdc++-v3/testsuite/lib/libstdc++.exp (libstdc++_init):
	Always define LOCALEDIR to ".".
	(v3-build_support): Build MO files.

2006-03-20  Mark Mitchell  <mark@codesourcery.com>

	* libiberty/pex-win32.c (<errno.h>): Include.
	(fix_argv): Remove.
	(argv_to_cmdline): New function.
	(std_suffixes): New variable.
	(no_suffixes): Likewise.
	(find_executable): New function.
	(win32_spawn): Likewise.
	(spawn_script): Use win32_spawn instead of _spawnv[p].
	(pex_win32_exec_child): Replace MSVCRT calls with Win32 API calls.
	(pex_win32_wait): Likewise.

2006-03-17  Joseph Myers  <joseph@codesourcery.com>

	* gcc/dwarf2.h (DW64_CIE_ID): Define.
	* gcc/dwarf2out.c (DWARF_CIE_ID): Define.
	(output_call_frame_info): Output 0xffffffff before standard 8-byte
	length header.  Use DWARF_CIE_ID.
	(value_format): Use DW_FORM_data4 or DW_FORM_data8 for
	dw_val_class_loc_list depending on DWARF_OFFSET_SIZE.

2006-03-17  Carlos O'Donell  <carlos@codesourcery.com>

	* gcc/doc/invoke.texi: Define -femit-class-debug-always.
	* gcc/common.opts: Likewise.
	* gcc/cp/search.c (maybe_suppress_debug_info): Suppress
	debug info if flag_emit_class_debug_always is zero.

2006-03-17  Richard Sandiford  <richard@codesourcery.com>

	Backport from mainline:
	* gcc/config.gcc (mips64*-*-linux*): Keep existing tm_defines.
	(mips*-*-linux*): Likewise.

2006-03-16  Joseph S. Myers  <joseph@codesourcery.com>

	* gcc/config.gcc (tm_defines): Always add to previous value rather
	than replacing it.

2006-03-15  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	* gcc/config/arm/arm.c (minipool_pad): New.
	(add_minipool_forward_ref): Unclude pool alignment padding in address
	calculation.
	(push_minipool_fix): Set minipool_pad.
	(minipool_pad): Ditto.

2006-02-27  Nathan Sidwell  <nathan@potter.codesourcery.com>

	Backport the following
	* gcc/config.gcc (mt-*-*): Add --with-arch support.
	(--with): Print accepted options on error.
	* gcc/config/mt/mt.h (OPTION_DEFAULT_SPECS): Define.

	* gcc/config/mt/mt.c (DEF_VEC_P(basic_block),
	DEF_VEC_ALLOC_P(basic_bloc,heap)): Remove from here.

	* gcc/config/mt/mt.md (UNSPEC_LOOP): New constant.
	(loop_end, loop_init, doloop_end): New insns.
	* gcc/config/mt/mt.h (LOOP_FIRST, LOOP_LAST): New.
	(SPECIAL_REG_FIRST, FIRST_PSEUDO_REGISTER): Adjust.
	(FIXED_REGISTERS, CALL_USED_REGISTERS): Adjust.
	(REG_CLASS_CONTENTS, REGISTER_NAMES): Adjust.
	* gcc/config/mt/mt.c: #include basic-block.h
	(struct machine_function): Add has_loops field.
	(mt_add_loop): New.
	(MAX_LOOP_DEPTH, MAX_LOO_LENGTH): New.
	(struct loop_info, struct loop_work): New.
	(mt_loop_nesting, ms1_block_length, ms1_scan_loop): New workers.
	(mt_reorg_loops): New loop optimization.
	(mt_machine_reorg): Call it.
	* gcc/config/mt/mt-protos.h (mt_add_loop): Declare.

	* gcc/vec.h (VEC_block_remove): New.

	* gcc/loop-doloop.c (add_test): Only add jump notes if we did emit a
	jump.

2006-02-18  Joseph S. Myers  <joseph@codesourcery.com>

	PR target/24837
	* gcc/config.gcc: Define UCLIBC_DEFAULT to 0 or 1.
	* gcc/opth-gen.awk: Handle Var and InverseMask together.
	* gcc/config/linux.opt (muclibc, mglibc): Use Var(linux_uclibc).
	* gcc/config/linux.h: Use #if not #ifdef for testing
	UCLIBC_DEFAULT.
	(TARGET_C99_FUNCTIONS): Test OPTION_GLIBC not TARGET_GLIBC.
	(CHOOSE_DYNAMIC_LINKER): Give an error for -mglibc and -muclibc
	used together.
	(UCLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER64,
	LINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.
	* gcc/config/alpha/linux-elf.h (GLIBC_DYNAMIC_LINKER,
	UCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER): Define.
	(ELF_DYNAMIC_LINKER): Define to LINUX_DYNAMIC_LINKER.
	* gcc/config/alpha/linux.h (TARGET_C99_FUNCTIONS): Define to
	TARGET_GLIBC.
	* gcc/config/cris/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(CRIS_LINK_SUBTARGET_SPEC): Pass a -dynamic-linker option.
	* gcc/config/frv/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	(TARGET_C99_FUNCTIONS): Don't define.
	* gcc/config/i386/linux.h (DYNAMIC_LINKER): Rename to
	GLIBC_DYNAMIC_LINKER.
	(SUBTARGET_EXTRA_SPECS): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/i386/linux64.h (GLIBC_DYNAMIC_LINKER32,
	GLIBC_DYNAMIC_LINKER64): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER32 and
	LINUX_DYNAMIC_LINKER64.
	* gcc/config/ia64/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/m32r/linux.h (GLIBC_DYNAMIC_LINKE): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/m68k/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/mips/linux64.h (GLIBC_DYNAMIC_LINKER32,
	GLIBC_DYNAMIC_LINKER64, GLIBC_DYNAMIC_LINKERN32,
	UCLIBC_DYNAMIC_LINKERN32, LINUX_DYNAMIC_LINKERN32): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKERN32, LINUX_DYNAMIC_LINKER64
	and LINUX_DYNAMIC_LINKER32.
	* gcc/config/mn10300/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/pa/pa-linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/rs6000/linux.h (TARGET_C99_FUNCTIONS): Define to
	TARGET_GLIBC.
	* gcc/config/rs6000/linux64.h (TARGET_C99_FUNCTIONS): Likewise.
	(GLIBC_DYNAMIC_LINKER32, GLIBC_DYNAMIC_LINKER64,
	UCLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER64,
	CHOOSE_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.
	(LINK_OS_LINUX_SPEC32): Use LINUX_DYNAMIC_LINKER32.
	(LINK_OS_LINUX_SPEC64): Use LINUX_DYNAMIC_LINKER64.
	* gcc/config/rs6000/sysv4.h (GLIBC_DYNAMIC_LINKER,
	UCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER): Define.
	(LINK_OS_LINUX_SPEC): Use LINUX_DYNAMIC_LINKE.
	* gcc/config/s390/linux.h (GLIBC_DYNAMIC_LINKER32,
	GLIBC_DYNAMIC_LINKER64): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER32 and
	LINUX_DYNAMIC_LINKER64.
	* gcc/config/sh/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(SUBTARGET_LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/sparc/linux.h (GLIBC_DYNAMIC_LINKER,
	UCLIBC_DYNAMIC_LINKER, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	(TARGET_C99_FUNCTIONS): Define to TARGET_GLIBC.
	* gcc/config/sparc/linux64.h (GLIBC_DYNAMIC_LINKER32,
	GLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER32,
	UCLIBC_DYNAMIC_LINKER64, CHOOSE_DYNAMIC_LINKER,
	LINUX_DYNAMIC_LINKER32, LINUX_DYNAMIC_LINKER64): Define.
	(LINK_ARCH32_SPEC): Use LINUX_DYNAMIC_LINKER32.
	(LINK_ARCH64_SPEC, LINK_SPEC): Use LINUX_DYNAMIC_LINKER64.
	(TARGET_C99_FUNCTIONS): Define to TARGET_GLIBC.
	* gcc/config/xtensa/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/doc/invoke.texi (-muclibc): Remove caveat about supported
	targets.
	* gcc/testsuite/gcc.dg/glibc-uclibc-1.c,
	gcc/testsuite/gcc.dg/glibc-uclibc-2.c: New tests.

2006-02-16  Joseph S. Myers  <joseph@codesourcery.com>

	PR libstdc++/14939
	PR target/20353
	PR target/24578
	PR target/24837
	* gcc/config/linux.opt: New file.
	* gcc/config/linux.h (CHOOSE_DYNAMIC_LINKER,
	UCLIBC_DYNAMIC_LINKER, LINUX_DYNAMIC_LINKER): Define.
	(TARGET_C99_FUNCTIONS): Define depending on TARGET_GLIBC.
	* gcc/config.gcc (*-*-linux*): Define extra_options.
	(*-*-*uclibc*): Define UCLIBC_DEFAULT.
	(arm*-*-linux-gnueabi): Change to arm*-*-linux-*eabi.
	* gcc/config/arm/linux-eabi.h (LINUX_TARGET_INTERPRETER): Change
	to GLIBC_DYNAMIC_LINKER.
	* gcc/config/arm/linux-elf.h (LINUX_TARGET_INTERPRETER): Likewise.
	(LINUX_TARGET_LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/config/mips/linux.h (GLIBC_DYNAMIC_LINKER): Define.
	(LINK_SPEC): Use LINUX_DYNAMIC_LINKER.
	* gcc/doc/invoke.texi (GNU/Linux Options): New section.
	* gcc/testsuite/gcc.dg/builtins-config.h (HAVE_C99_RUNTIME): Don't
	define if __UCLIBC__ is defined.
	* libstdc++-v3/config/os/uclibc/ctype_base.h,
	libstdc++-v3/config/os/uclibc/ctype_inline.h,
	libstdc++-v3/config/os/uclibc/ctype_noninline.h,
	libstdc++-v3/config/os/uclibc/os_defines.h: New.
	* libstdc++-v3/acinclude.m4 (GLIBCXX_CONFIGURE): Test whether
	using uClibc.
	* libstdc++-v3/configure.host: Use os/uclibc for uClibc.
	* libstdc++-v3/crossconfig.m4 (*-linux*): Use link tests.  Don't
	hardcode presence of math functions.
	* libstdc++-v3/configure: Regenerate.

2005-02-16  Paul Brook  <paul@codesourcery.com>

	* reload1.c (emit_reload_insns): Invalidate dead input registers used
	for reloads.

2006-02-01  Paul Brook  <paul@codesourcery.com>

	Backport form mainline.
	* gcc/function.c (assign_parm_setup_reg): Use function argument
	promotion rules.
	* gcc/expr.c (expand_expr_real_1): Use function argument promotion
	rules for PARM_DECLs.

2006-01-27  Paul Brook  <paul@codesourcery.com>

	* version.c: Mark as CodeSourcery build.

2006-01-24  Joseph Myers  <joseph@codesourcery.com>

	Backport from mainline.
	2006-01-23  Adam Nemet  <anemet@caviumnetworks.com>

	* fix-header.c (read_scan_file): Add new parameter imultilib when
	calling register_include_chains.

2006-01-23  Julian Brown  <julian@codesourcery.com>

	Backport from mainline.
	2006-01-23  Kazu Hirata  <kazu@codesourcery.com>
	PR testsuite/25590
	* gcc/testsuite/gcc.dg/tree-ssa/gen-vect-11.c: Add -fwrapv.

2006-01-20  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch.
	2005-09-21  Kazu Hirata  <kazu@codesourcery.com>
	* gcc/config/arm/arm.md (movdi): Force operands[1] to a register
	if we have a non-register source.
	(*arm_movdi, *movdf_soft_insn): Require that one of the
	operands be a register.
	* gcc/config/arm/iwmmxt.md (*iwmmxt_arm_movdi): Likewise.
	* gcc/config/arm/vfp.md (*arm_movdi_vfp, *movdf_vfp): Likewise.

2006-01-20  Joseph S. Myers  <joseph@codesourcery.com>

	PR libstdc++/25524
	* gcc/cppdefault.h (struct default_include): Add multilib flag.
	* gcc/cppdefault.c (cpp_include_defaults): Set it.
	* gcc/c.opt (-imultilib): New option.
	* gcc/c-opts.c (imultilib): New.
	(c_common_handle_option): Handle -imultilib.
	(c_common_post_options): Likewise.
	* gcc/c-incpath.c (add_standard_paths, register_include_chains):
	Likewise.
	* gcc/c-incpath.h (register_include_chains): Add extra parameter.
	* gcc/gcc.c (do_spec_1): Generate -imultilib option.
	(The Specs Language): Update %I description.
	(process_command): Update copyright notice.
	* gcc/doc/cppopts.texi (-imultilib): Document.
	* gcc/doc/invoke.texi (-imultilib): Include in option summary.
	(%I): Update specs documentation.
	* libstdc++-v3/include/Makefile.am: Install host-specific headers
	in multilib subdirectory.
	* libstdc++-v3/include/Makefile.in: Regenerate.

2006-01-20  Julian Brown  <julian@codesourcery.com>

	Merge from csl-gxxpro-3_4-branch.
	2005-11-28  Mark Mitchell  <mark@codesourcery.com>
	Backport:
	2004-10-28  Pascal Obry  <obry@act-europe.fr>
	* unwind-dw2-fde.c: Import from MingW build for ZCX support.
	* unwind-sjlj.c: Idem.
	* config/i386/cygming.h: Idem.
	* config/i386/mingw32.h: Idem.
	* config/i386/t-cygming: Idem.
	* config/i386/t-mingw32: Idem.
	* config/i386/win32-ehfb.c: New file to support unwinding through
	signals on Windows.
	Provides support for ZCX on Windows platforms. This set of patch
	comes from the MingW compiler (Danny Smith) adapted and enhanced to
	support unwinding through signals for example.
	2005-07-29  Pascal Obry  <obry@act-europe.fr>
	Support for crtbegin/crtend.o on MingW.
	* config.gcc: Add crtbegin.o and crtend.o as extra_parts on MingW.
	* crtstuff.c: Add support for MingW.
	Provides support for ZCX on Windows platforms. This set of patch
	comes from the MingW compiler (Danny Smith) adapted to GCC 3.4.

2006-01-20  Julian Brown  <julian@codesourcery.com>

	Backport from mainline.
	2006-01-02  Mark Mitchell  <mark@codesourcery.com>
	* libstdc++-v3/src/Makefile.am (LTLDFLAGS): New variable.
	(CXXLINK): Use LTLDFLAGS.
	* libstdc++-v3/src/Makefile.in: Regenerated.
	* libstdc++-v3/libsupc++/Makefile.am (LTLDFLAGS): New variable.
	(CXXLINK): Use LTLDFLAGS.
	* libstdc++-v3/libsupc++/Makefile.in: Regenerated.

	2006-01-02  Mark Mitchell  <mark@codesourcery.com>
	* libtool-ldflags: New script.

2006-01-20  Julian Brown  <julian@codesourcery.com>

	Merge from csl-gxxpro-3_4-branch:
	2005-09-14  Mark Mitchell  <mark@codesourcery.com>
	* gcc/config/vx-common.h (DBX_DEBUGGING_INFO): Define to 1.

2006-01-20  Julian Brown  <julian@codesourcery.com>

	Backport from mainline.
	2005-11-23  Mark Mitchell  <mark@codesourcery.com>
	* gcc/doc/invoke.texi: For man pages, include gcc-vers.texi.
	List @file in the option summary.  Include the libiberty documentation
	for @file.
	* gcc/gcc.c (main): Call expandargv.
	* gcc/Makefile.in (gcc-vers.texi): Define srcdir.

	2005-11-23  Mark Mitchell  <mark@codesourcery.com>
	* maintainer-scripts/update_web_docs_svn: Set @srcdir in gcc-vers.texi.

2006-01-20  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch.
	2005-10-20  Paul Brook  <paul@codesourcery.com>
	* config/arm/arm.c (arm_default_cpu): New.
	(arm_override_options): Set arm_default_cpu.
	(arm_file_start): Output EABI attribute directives.

2006-01-20  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch.
	2005-10-20  Paul Brook  <paul@codesourcery.com>
	* config/arm/arm.c (arm_elf_asm_constructor): Remove ATTRIBUTE_UNUSED
	from priority argument.  Use different section names for non-default
	priority.
	* config/arm/elf.h: Remove definition of SUPPORTS_INIT_PRIORITY.

2006-01-18  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch.
	2005-03-14  Julian Brown  <julian@codesourcery.com>
	* gcc/config/arm/lib1funcs.asm (ashldi3): Don't define on SymbianOS.
	(aeabi_llsl): Likewise.
	(ashrdi3): Likewise.
	(aeabi_lasr): Likewise.
	(lshrdi3): Likewise.
	(aeabi_llsr): Likewise. 
	2005-03-10  Julian Brown  <julian@codesourcery.com>
	* gcc/config.gcc: Disable shared libgcc for SymbianOS.
	* gcc/config/arm/t-symbian (LIB2ADDEH): Include config/arm/pr-support.c.

2006-01-18  Paul Brook  <paul@codesourcery.com>

	Merge from csl-arm-branch
	2005-03-10  Julian Brown  <julian@codesourcery.com>
	* libstdc++configure.ac (LIBSUPCXX_PRONLY): New AM_CONDITIONAL: yes
	if we are compiling for SymbianOS on ARM.
	* libstdc++include/Makefile.am: Don't install C++ headers if
	LIBSUPCXX_PRONLY is true.
	* libstdc++libsupc++/Makefile.am: Include only eh_personality.cc
	in libsupc++ if LIBSUPCXX_PRONLY is true.
	* libstdc++Makefile.in: Regenerate.
	* libstdc++configure: Regenerate.
	* libstdc++include/Makefile.in: Regenerate.
	* libstdc++libmath/Makefile.in: Regenerate.
	* libstdc++libsupc++/Makefile.in: Regenerate.
	* libstdc++po/Makefile.in: Regenerate.
	* libstdc++src/Makefile.in: Regenerate.
	* libstdc++testsuite/Makefile.in: Regenerate.

2005-01-17  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	2005-12-13  Carlos O'Donell <carlos@codesourcery.com>
	* gcc/c-cppbuiltin.c (builtin_define_float_constants): Add
	fp_cast parameter, pass to builtin_define_with_hex_fp_value.
	Define __FLT_HAS_DENORM__, __DBL_HAS_DENORM__, __LDBL_HAS_DENORM__.
	(builtin_define_with_hex_fp_value): Use fp_cast when building macro.
	(c_cpp_builtins): If flag_single_precision_constant then set fp_cast
	to "((double)%sL)" otherwise "%s".
	* gcc/testsuite/gcc.dg/single-precision-constant.c: New test.
	* libstdc++-v3/include/std/std_limits.h (struct numeric_limits):
	Use __DBL_HAS_DENORM__, __FLT_HAS_DENORM__, __LDBL_HAS_DENORM__.

2005-01-17  Paul Brook  <paul@codesourcery.com>

	Backport from mainline.
	2005-12-15  Richard Sandiford  <richard@codesourcery.com>
	* gcc/config/arm/predicates.md (call_memory_operand): New.
	* gcc/config/arm/arm.md (*call_mem, *call_value_mem): Use it.
	* gcc/testsuite/gcc.dg/20051215-1.c: New file.

	* gcc/config/arm/arm.md: Provide a big-endian version of the
	(zero_extend:SI (subreg:QI ...)) splitter.

2006-01-16  Paul Brook  <paul@codesourcery.com>

	* config/m68k/m68k.c (output_move_const_into_data_reg):
	Output correct mnemonic for mvz and mvs.

2006-01-03  Paul Brook  <paul@codesourcery.com>

	* config/m68k/m68k.c (m68k_output_mi_thunk): Use jmp, not jsr.

2005-12-30  Paul Brook  <paul@codesourcery.com>

	* config/m68k/m68k.md: Convert define_peephole to define_peephole2.
	(UNSPEC_MOVEQ_MEM): New constant.
	(movsi_smallconst): New pattern.
	* config/m68k/m68k.h (HARD_FP_REG_P): Define.

2005-12-30  Paul Brook  <paul@codesourcery.com>

	PR target/23482
	* doc/md.texi: Document m68k Q, S, T and U constraints.
	* config/m68k/m68k.h (EXTRA_CONSTRAINTS): Restrict U to 16-bit
	offsets.

2005-12-29  Paul Brook  <paul@codesourcery.com>

	* config/m68k/m68k.h (RETURN_ADDR_RTX): Define.
	* config/m68k/m68k.c (m68k_initial_elimination_offset): Remove FIXME.
	Include offset due to FIRST_PARM_OFFSET.

2005-12-29  Paul Brook  <paul@codesourcery.com>

	* config/m68k/lb1sf68.asm (__cmpdf2): Fix typo in immediate mask.
	Create wrapper and rename body...
	(__cmpdf2_internal): ... to this.  Return correct value for unordered
	result.
	(__cmpsf2): Create wrapper and rename body...
	(__cmpsf2_internal): ... to this.  Return corerct value for unordered
	result.
	(__eqdf2, __nedf2, __gtdf2, __gedf2, __ltdf2, __ledf2): Use
	__cmpdf2_internal.
	(__eqsf2, __nesf2, __gtsf2, __gesf2, __ltsf2, __lesf2): Use
	__cmpsf2_internal.

2005-12-29  Paul Brook  <paul@codesourcery.com>

	* config/m68k/fpgnulib.c (__extendsfdf2): Handle negative zero.
	(__truncdfsf2): Ditto.
	(__extenddfxf2): Ditto.
	(__truncxfdf2): Ditto.
	* config/m68k/lb1sf68.asm (__addsf3): Return -0.0 for -0.0 + -0.0.
	(__adddf3): Ditto.

2005-12-29  Daniel Jacobowitz  <dan@codesourcery.com>
	Paul Brook  <paul@codesourcery.com>

	* gcc/config/m68k/m68k.c (m68k_output_pic_call): Don't use bsr.l for
	!TARGET_68020.
	* gcc/config/m68k/t-m68kelf (EXTRA_PARTS): Remove.
	(EXTRA_MULTILIB_PARTS): Set.
	* gcc/config/m68k/t-uclinux (EXTRA_PARTS): Remove.
	(EXTRA_MULTILIB_PARTS): Set.

2005-12-21  Paul Brook  <paul@codesourcery.com>

	* gcc/testsuite/gcc.dg/pr19340.c: Skip on m68k targets.

2005-12-20  Paul Brook  <paul@codesourcery.com>

	* gcc/testsuite/lib/target-supports.exp (check_profiling_available):
	Add m68k-*-elf.

2005-12-17  Paul Brook  <paul@codesourcery.com>

	* gcc/config/m68k/m68k.md (m68k_output_function_prologue): Always call
	dwarf2out_def_cfa. Only add space for frame pointer to cfa_offset
	when frame_pointer_needed. 

2005-12-02  Paul Brook  <paul@codesourcery.com>

	* config/m68k/fpgnulib.c (__unordsf2, __unorddf2, __unordxf2,
	__floatunsidf, __floatunsisf, __floatunsixf): New functions.

2005-11-28  Paul Brook  <paul@codesourcery.com>

	* config.gcc: Don't use fixproto on m68k-elf.

