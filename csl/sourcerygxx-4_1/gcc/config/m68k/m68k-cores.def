/* m68k CPU Cores
   Copyright (C) 2005 Free Software Foundation, Inc.
   Written by CodeSourcery

   This file is part of GCC.
    
   GCC is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   GCC is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GCC; see the file COPYING.  If not, write to the Free
   Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA
   02110-1301, USA.  */

/* Flags to use:
    - coldfire
    - 68881
    - hwdiv
    - bitfield
    - coldfire fpu
    - MAC
    - EMAC

   These instructions can have different costs:
    - MULL
    - MULW
    - DIVW

   Fields mean:
     M68K_CORE(CORE_NAME, CORE_IDENT, CORE_FAMILY, MULTILIB, MICROARCH, ISA, FLAGS)

   Note that isa_* implies certain default base flags: see m68k.c.
*/

/* 680x0 series processors.  */
M68K_CORE("68000", m68000,   "68000", "68000", 68000,    isa_00,    0)
M68K_CORE("68010", m68010,   "68010", "68000", 68000,    isa_00,    0)
M68K_CORE("68020", m68020,   "68020", "68020", 68020,    isa_20,    0)
M68K_CORE("68030", m68030,   "68030", "68020", 68020,    isa_20,    0)
M68K_CORE("68040", m68040,   "68040", "68040", 68040,    isa_40,    0)
M68K_CORE("68060", m68060,   "68060", "68060", 68060,    isa_60,    0)
M68K_CORE("68302", m68302,   "68302", "68000", 68000,    isa_00,    0)
M68K_CORE("68332", m68332,   "68332", "cpu32", cpu32,    isa_cpu32, 0)
M68K_CORE("cpu32", cpu32,    "cpu32", "cpu32", cpu32,    isa_cpu32, 0)

/* Coldfire CFV2 processors.  */
/* FIXME: This information was extracted from several different processor
   manuals, and may be inaccurate.  */
M68K_CORE("5202",  mcf5202,  "5206",  "5206",  cfv2,     isa_a,     0)
M68K_CORE("5204",  mcf5204,  "5206",  "5206",  cfv2,     isa_a,     0)
M68K_CORE("5206",  mcf5206,  "5206",  "5206",  cfv2,     isa_a,     0)
M68K_CORE("5206e", mcf5206e, "5206e", "5206e", cfv2,     isa_a,     FL_CF_HWDIV | FL_CF_MAC)
M68K_CORE("5207",  mcf5207,  "5208",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5208",  mcf5208,  "5208",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5210a", mcf5210a, "5211a", "5211",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_MAC)
M68K_CORE("5211a", mcf5211a, "5211a", "5211",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_MAC)
M68K_CORE("5211",  mcf5211,  "5213",  "5211",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_MAC)
M68K_CORE("5212",  mcf5212,  "5213",  "5211",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_MAC)
M68K_CORE("5213",  mcf5213,  "5213",  "5211",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_MAC)
M68K_CORE("5214",  mcf5214,  "5216",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5216",  mcf5216,  "5216",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("52230", mcf52230, "52235", "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("52231", mcf52231, "52235", "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("52232", mcf52232, "52235", "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("52233", mcf52233, "52235", "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("52234", mcf52234, "52235", "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("52235", mcf52235, "52235", "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5224",  mcf5224,  "5225",  "5211",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_MAC)
M68K_CORE("5225",  mcf5225,  "5225",  "5211",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_MAC)
M68K_CORE("5232",  mcf5232,  "5235",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5233",  mcf5233,  "5235",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5234",  mcf5234,  "5235",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5235",  mcf5235,  "5235",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("523x",  mcf523x,  "5235",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5249",  mcf5249,  "5249",  "5206e", cfv2,     isa_a,     FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5250",  mcf5250,  "5250",  "5206e", cfv2,     isa_a,     FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5270",  mcf5270,  "5271",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5271",  mcf5271,  "5271",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV)
M68K_CORE("5272",  mcf5272,  "5272",  "5206e", cfv2,     isa_a,     FL_CF_HWDIV | FL_CF_MAC)
M68K_CORE("5274",  mcf5274,  "5275",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5275",  mcf5275,  "5275",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5280",  mcf5280,  "5282",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5281",  mcf5281,  "5282",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5282",  mcf5282,  "5282",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("528x",  mcf528x,  "5282",  "5207",  cfv2,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)

/* CFV3 processors.  */
M68K_CORE("5307",  mcf5307,  "5307",  "5307",  cfv3,     isa_a,     FL_CF_HWDIV | FL_CF_MAC)
M68K_CORE("5327",  mcf5327,  "5329",  "532x",  cfv3,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5328",  mcf5328,  "5329",  "532x",  cfv3,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5329",  mcf5329,  "5329",  "532x",  cfv3,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("532x",  mcf532x,  "5329",  "532x",  cfv3,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5372",  mcf5372,  "5373",  "532x",  cfv3,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("5373",  mcf5373,  "5373",  "532x",  cfv3,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)
M68K_CORE("537x",  mcf537x,  "5373",  "532x",  cfv3,     isa_aplus, FL_CF_HWDIV | FL_CF_EMAC)

/* CFV4/CFV4e processors.  */
M68K_CORE("5407",  mcf5407,  "5407",  "5407",  cfv4,     isa_b,     FL_CF_MAC)
M68K_CORE("5470",  mcf5470,  "5475",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("5471",  mcf5471,  "5475",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("5472",  mcf5472,  "5475",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("5473",  mcf5473,  "5475",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("5474",  mcf5474,  "5475",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("5475",  mcf5475,  "5475",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("547x",  mcf547x,  "5475",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("5480",  mcf5480,  "5485",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("5481",  mcf5481,  "5485",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("5482",  mcf5482,  "5485",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("5483",  mcf5483,  "5485",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("5484",  mcf5484,  "5485",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("5485",  mcf5485,  "5485",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
M68K_CORE("548x",  mcf548x,  "5485",  "547x",  cfv4e,    isa_b,     FL_CF_USP | FL_CF_EMAC | FL_CF_FPU)
