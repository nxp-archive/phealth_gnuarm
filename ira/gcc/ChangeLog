2008-03-20  Vladimir Makarov  <vmakarov@redhat.com>

	* ira-int.h (allocno): Rename conflict_allocno_vec and
	conflict_allocno_vec_size into conflict_allocno_array and
	conflict_allocno_array_size.  Remove conflict_allocnos_num.
	Rename total_conflict_allocnos_num into conflict_allocnos_num New
	members child_renamed_p and conflict_vec_p.
	(ALLOCNO_CONFLICT_ALLOCNO_VEC): Rename to
	ALLOCNO_CONFLICT_ALLOCNO_ARRAY.
	(ALLOCNO_CONFLICT_ALLOCNO_VEC_SIZE): Rename to
	ALLOCNO_CONFLICT_ALLOCNO_ARRAY_SIZE.
	(ALLOCNO_CHILD_RENAMED_P, ALLOCNO_CONFLICT_VEC_P): New macros.
	(EXECUTE_IF_SET_IN_ALLOCNO_SET): Change to
	FOR_EACH_ALLOCNO_IN_SET.
	(allocno_set_iterator): New typedef.
	(allocno_set_iter_init, allocno_set_iter_cond,
	allocno_set_iter_next): New functions.
	(conflict_vector_profitable_p, allocate_allocno_conflict_vec): New
	prototypes.
	(allocno_iterator): New typedef.
	(allocno_iter_init, allocno_iter_cond): New functions.
	(FOR_EACH_ALLOCNO): New macro.
	(copy_iterator): New typedef.
	(copy_iter_init, copy_iter_cond): New functions.
	(FOR_EACH_COPY): New macro.
	(allocno_conflict_iterator): New typedef.
	(allocno_conflict_iter_init, allocno_conflict_iter_cond,
	allocno_conflict_iter_next): New functions.
	(conflict_vector_profitable_p, allocate_allocno_conflict_vec): New
	prototypes.
	(FOR_EACH_ALLOCNO_CONFLICT): New macro.

	* ira-conflicts.c (conflicts): Change type.
	(CONFLICT_P): Use one more index for conflicts.
	(build_conflict_bit_table): Change allocation and initialization
	of conflicts.
	(mirror_conflicts): Rewrite.
	(remove_conflict_allocno_copies): Use FOR_EACH_ALLOCNO.
	(build_allocno_conflict_vects): Rename to build_allocno_conflicts.
	Rewrite it.
	(print_conflicts): Use FOR_EACH_ALLOCNO, don't print star.
	(ira_build_conflicts): Use FOR_EACH_ALLOCNO.

	* ira-color.c (assign_hard_reg): Use FOR_EACH_ALLOCNO_CONFLICT.
	Use min_full_cost for finding register profitability.
	(push_allocno_to_stack): Use FOR_EACH_ALLOCNO_CONFLICT.
	(setup_allocno_left_conflicts_num, coalesced_allocno_conflict_p):
	Ditto.
	(move_spill_restore): Use FOR_EACH_ALLOCNO.
	(reassign_conflict_allocnos): Ditto.  Use
	FOR_EACH_ALLOCNO_CONFLICT.
	(sort_regnos_for_alter_reg): Use FOR_EACH_ALLOCNO.
	(reassign_pseudos): Use FOR_EACH_ALLOCNO_CONFLICT.

	* ira-lives.c (make_regno_born, clear_allocno_live,
	mark_reg_death, process_single_reg_class_operands,
	process_bb_node_lives): Use FOR_EACH_ALLOCNO_IN_SET.
	(create_start_finish_chains, print_live_ranges): Use
	FOR_EACH_ALLOCNO.

	* ira-emit.c (set_allocno_reg): Set up ALLOCNO_CHILD_RENAMED_P.
	(set_allocno_somewhere_renamed_p): Use
	ALLOCNO_CONFLICT_ALLOCNO_ARRAY.
	(ira_emit): Use FOR_EACH_ALLOCNO.

	* ira.c (setup_reg_renumber, setup_allocno_assignment_flags,
	calculate_allocation_cost, check_allocation,
	print_redundant_copies, setup_preferred_alternate_classes): Use
	FOR_EACH_ALLOCNO.

	* ira-costs.c (print_costs, setup_allocno_cover_class_and_costs,
	ira_costs, tune_allocno_costs_and_cover_classes): Use
	FOR_EACH_ALLOCNO.

	* ira-build.c (check_allocno_conflict_vec): Remove.
	(add_to_allocno_conflict_vec): Rename to
	allocate_allocno_conflicts.  Rewrite.
	(allocate_allocno_conflict_bit_vec, allocate_allocno_conflicts,
	remove_wrong_conflicts, change_allocno_conflicts): New functions.
	(rebuild_regno_allocno_maps): Use FOR_EACH_ALLOCNO.
	(create_allocno): Initialize ALLOCNO_CHILD_RENAMED_P and
	ALLOCNO_CONFLICT_VEC_P.
	(conflict_vector_profitable_p): New function.
	(compress_allocno_conflict_vec): Use
	ALLOCNO_CONFLICT_ALLOCNO_ARRAY and don't use
	ALLOCNO_TOTAL_CONFLICT_ALLOCNOS_NUM.
	(compress_conflict_vecs): Use FOR_EACH_ALLOCNO.  Check
	ALLOCNO_CONFLICT_VEC_P.
	(propagate_info_to_cap): Use FOR_EACH_ALLOCNO_CONFLICT.
	(finish_allocnos): Use FOR_EACH_ALLOCNO.
	(finish_copies): Use FOR_EACH_COPY.
	(check_and_add_conflicts): Change second parameter.  Use
	add_to_allocno_conflicts instead of add_to_allocno_conflict_vec.
	(temp_change_bit_vec): New variable.
	(ira_flattening): Use FOR_EACH_ALLOCNO and FOR_EACH_COPY.  Use
	remove_wrong_conflicts, change_allocno_conflicts.  Allocate and
	free temp_change_bit_vec.  Nullify `allocnos' elements for removed
	allocnos.  Check ALLOCNO_CHILD_RENAMED_P for removing obsolete
	conflicts.  Don't compress and enumerate allocnos and copies.
	Nullify `copies' elements for removed copies.  Use
	add_to_allocno_conflicts instead of add_to_allocno_conflict_vec.
	(ira_build): Use FOR_EACH_ALLOCNO.
	
2008-03-18  Vladimir Makarov  <vmakarov@redhat.com>

	* common.opt (fira-algorithm): Fix description

	* ira-int.h (allocno): Remove best_class.
	(ALLOCNO_BEST_CLASS): Remove.
	(strict_class_subset_p): Remove.
	
	* ira-color.c (get_coalesced_allocnos_best_class_and_freq): Rename
	to get_coalesced_allocnos_attributes.  Change prototype.
	Calculate available regs.
	(bucket_allocno_compare_func, sort_bucket): New functions.
	(sorted_allocnos_for_spilling): New variable.
	(assign_hard_reg): Don't add prohibited_class_mode_regs to
	conflicting_regs.  Use it in loop for finding the best hard
	register.
	(add_allocno_to_ordered_bucket): Use bucket_allocno_compare_func.
	(push_only_colorable): Call sort_bucket.
	(push_allocnos_to_stack): Use sorted_allocnos_for_spilling instead
	of sorted_allocnos.
	(put_allocno_into_bucket): Use add_allocno_to_bucket instead of
	add_allocno_to_ordered_bucket.
	(initiate_ira_assign): Allocate sorted_allocnos_for_spilling.
	(finish_ira_assign): Free sorted_allocnos_for_spilling.

	* ira-emit.c (modify_move_list): Remove setting ALLOCNO_BEST_CLASS
	up.
	
	* ira-build.c (create_allocno, create_cap_allocno): Ditto.
	
	* ira.c (strict_class_subset_p): Remove.
	(setup_class_subset_and_memory_move_costs): Remove setting
	strict_class_subset_p up.
	
	* ira-costs.c (setup_allocno_cover_class_and_costs): Remove
	setting ALLOCNO_BEST_CLASS up.
	
2008-03-12  Vladimir Makarov  <vmakarov@redhat.com>

	* ira-int.h (allocno_pool, copy_pool, allocno_live_range_pool):
	Remove external definitions.
	(free_allocno_updated_costs, allocate_cost_vector,
	free_cost_vector): New prototypes.
	(allocate_and_set_costs, allocate_and_copy_costs,
	allocate_and_set_or_copy_costs): Change prototypes.  Use
	allocate_cost_vector instead of ira_allocate.

	* ira-conflicts.c (add_insn_allocno_copies): Pass register class
	to allocate_and_set_costs.

	* ira-color.c (update_copy_costs_1): Pass register class to
	allocate_and_set_or_copy_costs.
	(assign_hard_reg): Pass register class to allocate_and_copy_costs.
	Free updated costs.
	(pop_allocnos_from_stack, color_allocnos): Check updated costs.
	(color_pass): Pass register class to allocate_and_set_costs.  Free
	updated costs.
	(move_spill_restore): Check reg equivalences.
	(setup_curr_costs): Pass register class to
	allocate_and_set_or_copy_costs.
	(reassign_conflict_allocnos, allocno_reload_assign): Check updated
	costs.
	(calculate_spill_cost): Use REG_N_REFS after checking regno.

	* ira-lives.c (process_single_reg_class_operands): Pass register
	class to allocate_and_set_costs.

	* ira-build.c (allocno_pool, allocno_live_range_pool): New
	variables.
	(initiate_allocnos): Initiate the pools.
	(free_allocno_updated_costs): New function.
	(finish_allocno): Use free_cost_vector.  Free the pools.
	(copy_pool): New variable.
	(initiate_copies): Initiate the pool.
	(cost_vector_pool): New variable.
	(initiate_cost_vectors, allocate_cost_vector, free_cost_vector,
	finish_cost_vectors): New functions.
	(ira_flattening): Call free_allocno_updated_costs.  Check updated
	costs.
	(ira_build): Call initiate_cost_vectors.
	(ira_destroy): Call finish_cost_vectors.

	* ira.c (find_reg_equiv_invariant_const): Check read only memory.
	(setup_reg_renumber, setup_allocno_assignment_flags): Call
	free_allocno_updated_costs.
	(ira): Remove initializations and freeing allocno_pool, copy_pool,
	and allocno_live_range_pool.  Call generate_setjmp_warnings.

	* ira-costs.c (process_bb_node_for_hard_reg_moves,
	tune_allocno_costs_and_cover_classes): Pass register class to
	allocate_and_set_costs.

	* caller-save.c (save_slots_num, save_slots): New variables.
	(init_save_areas): Initiate save_slots_num.
	(setup_save_areas): Use stack slots from the previous reload
	iteration independetly what slot was used on the previous pass.
	
2008-03-10  Vladimir Makarov  <vmakarov@redhat.com>

	* config/i386/sse.md (ssse3_pmaddubswv8hi3, ssse3_pmaddubswv4hi3):
	Remove commutativity hint.

2008-03-06  Vladimir Makarov  <vmakarov@redhat.com>

	* ira.h (sort_regnos_for_alter_reg): Add parameter.
	
	* reload1.c (reload): Pass additional argument to
	sort_regnos_for_alter_reg.

	* ira-int.h (reg_equiv_len): New global variable.

	* ira-emit.c (change_loop): Add assertion.

	* ira.c (reg_equiv_len): New global variable.
	(setup_reg_renumber): Use reg_equiv_len in assertion.
	(ira): Initialize reg_equiv_len and spilled_reg_stack_slots.

	* ira-color.c (coalesced_pseudo_reg_compare): Rename to
	coalesced_pseudo_reg_freq_compare.
	(coalesced_pseudo_reg_slot_compare,
	setup_coalesced_allocno_costs_and_nums,
	collect_spilled_coalesced_allocnos, coalesce_spill_slots): New
	functions.
	(coalesced_allocno_conflict_p): Add new parameter.  Use live
	ranges to find conflicts for the reload.
	(coalesce_allocnos): Don't coalesce allocnos with equivalences.
	(color_pass): Check reg_quiv_len.
	(regno_max_ref_width): New variable.
	(sort_regnos_for_alter_reg): Add secondary coalescing spilled
	allocnos.  Assign stack slot numbers.  Use costs instead of
	frequencies.
	(mark_allocation_change): Set up allocno hard regno.
	(allocno_reload_assign): Ditto.
	(reuse_stack_slot): Use stack slot numbers.
	(mark_new_stack_slot): Set up allocno slot number.

	* doc/passes.texi: Add more info about IRA.
	
2008-03-03  Vladimir Makarov  <vmakarov@redhat.com>

	* ira-conflicts.c (allocno_conflict_p): Rename to
	allocno_live_ranges_intersect_p.
	(allocno_reg_conflict_p): Rename to
	pseudo_live_ranges_intersect_p.

	* ira-lives.c (high_pressure_start_point): New variable.
	(update_allocno_pressure_excess_length): New function.
	(make_regno_dead): Call it.
	(set_allocno_live): Udpate high_pressure_start_point.
	(clear_allocno_live, mark_reg_store, mark_reg_death): Ditto.
	(process_bb_node_lives): Initialize high_pressure_start_point.
	Consider only allocatable hard regs for liveness.
	
	* ira-costs.c (record_reg_classes): Multiply cost by frequency.
	Use half frequency when memory is allowed.  Remove check for
	prefferred small register classes of pseudo-registers.
	(scan_one_insn): Continue processing operands for moves of
	pseudo-registers with equivalence.  Don't multiply cost by
	frequency.
	(init_ira_costs): Use bigger initial cost value.
	
	* ira-int.h: Ditto.
	(allocno): New members somewhere_renamed_p and
	excess_pressure_points_num.
	(ALLOCNO_SOMEWHERE_RENAMED_P, ALLOCNO_EXCESS_PRESSURE_POINTS_NUM):
	New macros.
	(allocno_reg_conflict_p): Rename to
	pseudo_live_ranges_intersect_p.
	(allocno_conflict_p): Rename to allocno_live_ranges_intersect_p.

	* ira.h (sort_regnos_for_alter_reg, better_spill_reload_regno_p):
	New function prototypes.
	
	* ira-color.c (merge_allocnos): Remove mode check.
	(coalesce_allocnos): Add parameter and modify to use it for
	coalescing spilled allocnos.
	(color_allocnos): Pass parameter to coalesce_allocnos.
	(regno_coalesced_allocno_freq, regno_coalesced_allocno_num): New
	variables.
	(coalesced_pseudo_reg_compare, calculate_spill_cost,
	sort_regnos_for_alter_reg, better_spill_reload_regno_p): New
	functions.
	(mark_allocation_change, allocno_reload_assign, reassign_pseudos
	): Use ALLOCNO_MEMORY_COST instead of ALLOCNO_UPDATED_MEMORY_COST.
	(reuse_stack_slot): Use pseudo_live_ranges_intersect_p instead of
	allocno_reg_conflict_p.
	
	* ira-emit.c (set_allocno_somewhere_renamed_p): New function.
	(renamed_regno_bitmap): New static variable.
	(change_loop): Check register pressure for creating new pseudo.
	Set up ALLOCNO_SOMEWHERE_RENAMED_P and renamed_regno_bitmap.
	(ira_emit): Allocate/deallocate renamed_regno_bitmap.
	Call set_allocno_somewhere_renamed_p.

	* ira-build.c (ira_loops): Move to ira.c.
	(create_allocno): Initialize ALLOCNO_SOMEWHERE_RENAMED_P and
	ALLOCNO_MEMORY_COST.
	(create_cap_allocno): Set up ALLOCNO_MEMORY_COST.
	(check_and_add_conflicts): Use allocno_live_ranges_intersect_p
	instead of allocno_conflict_p.
	(ira_flattening): Check conflicts of allocno renamed somewhere
	locally.  Update ALLOCNO_EXCESS_PRESSURE_POINTS_NUM.
	(ira_build): Move code for finding loops to ira.c.
	(ira_destroy): Move code for freeing loops to ira.c.

	* ira.c (setup_reg_class_intersect_union): Fix calculation of
	reg_class_union.
	(calculate_allocation_cost): Use ALLOCNO_MEMORY_COST instead of
	ALLOCNO_UPDATED_MEMORY_COST.
	(ira_loops): Move from ira-build.c.
	(ira): Move code for finding and freeing loops from ira-build.c.
	Don't use regional RA when there are too many loops.

	* reload1.c (pseudo_reg_compare): Remove.
	(reload): Use sort_regnos_for_alter_reg.
	(hard_regno_to_pseudo_regno): New variable.
	(count_pseudo): Set up hard_regno_to_pseudo_regno.
	(order_regs_for_reload): Initialize hard_regno_to_pseudo_regno.
	(count_spilled_pseudo): Update hard_regno_to_pseudo_regno.
	(find_reg): Use better_spill_reload_regno_p.  Check
	hard_regno_to_pseudo_regno.

	* cfgloopanal.c: Include params.h.
	(estimate_reg_pressure_cost): Check number of loops.

	* params.def (PARAM_IRA_MAX_LOOPS_NUM): New parameter.

	* params.h (IRA_MAX_LOOPS_NUM): New macro.

	* Makefile.in (cfgloopanal.o): Add PARAMS_H.
	
	* doc/invoke.texi (ira-max-loops-num): Describe.
	
2008-02-20  Vladimir Makarov  <vmakarov@redhat.com>

	* ira.h, ira-emit.c: Add year 2008 to the copyright.
	
	* ira-int.h: Ditto.
	(struct copy): Rename move_insn to insn.
	(initiate_ira_assign, finish_ira_assign, debug_allocno_copies):
	New function prototypes.
	
	* ira-build.c: Add year 2008 to the copyright.  Rename member
	move_insn of the copies to insn.
	(find_allocno_copy): New function.
	(propagate_info_to_cap, add_allocno_copy): Use it.
	(print_allocno_copies, debug_allocno_copies): New functions.
	
	* ira-conflicts.c: Add year 2008 to the copyright.  Rename member
	move_insn of the copies to insn.

	* ira.c: Ditto.
	(setup_reg_class_intersect_union): Fix reg_class_union for cover
	classes.
	(ira): Call initiate_ira_assign and finish_ira_assign.  Remove
	setting reload_completed up.
	
	* ira-costs.c: Add year 2008 to the copyright.
	(ira_costs): Check modes of registers.

	* ira-lives.c: Add year 2008 to the copyright.
	(mark_reg_store, mark_reg_death, process_bb_node_lives): Don't use
	REG_N_REFS.
	(process_single_reg_class_operands): Check that the hard reg
	belongs to the cover class.

	* ira-color.c: Add year 2008 to the copyright.  Rename member
	move_insn of the copies to insn.
	(initiate_cost_update, finish_cost_update, update_copy_costs_1):
	New functions.
	(allocno_update_cost_check, update_cost_check): New static
	variables.
	(update_copy_costs): Increment update_cost_check.  Call
	update_copy_costs_1.
	(coalesce_allocnos): Don't coalesce already assigned allocnos or
	copies with null insn.
	(color_pass): Check loop tree node of the subloop allocno.
	(finish_allocno_priorities): Remove.
	(do_coloring): Move allocation/deallocation of
	consideration_allocno_bitmap into initiate_cost_update and
	finish_cost_update.
	(reassign_conflict_allocnos): Remove allocation/deallocation of
	sorted_allocnos.  Remove call of finish_allocno_priorities.
	(reassign_pseudos): Remove allocation/deallocation of
	consideration_allocno_bitmap and sorted_allocnos.  Remove call of
	finish_allocno_priorities.
	(initiate_ira_assign, finish_ira_assign): New fucntions.
	(ira_color): Remove allocation/deallocation of sorted_allocnos.
	Call initiate_ira_assign and finish_ira_assign.
	
	* postreload.c (gate_handle_postreload): Don't do post reload
	optimizations unless the reload is completed.
	
	* cfgloopanal.c (estimate_reg_pressure_cost): Return zero if we
	use regional RA.

	* recog.c (peep2_free_reg_search_ofs): New static variable.
	(peep2_find_free_register): Remove search_ofs.  Use
	peep2_free_reg_search_ofs instead of it.
	(peephole2_optimize): Reset peep2_free_reg_search_ofs.
	
2008-01-10  Vladimir Makarov  <vmakarov@redhat.com>

	* reload1.c (compute_use_by_pseudos): Permits spilled registers in
	FROM.
	(temp_pseudo_reg_arr): New variable.
	(reload): Use instead temp_pseudo_reg_arr of pseudo_regs.  Move
	freeing to the function end.  Don't clear spilled_pseudos for IRA.
	Restore original insn chain for IRA.
	(calculate_needs_all_insns): Call IRA's mark_memory_move_deletion.
	(count_pseudo, count_spilled_pseudo): Check spilled pseudos.
	(alter_reg): Set up spilled_pseudos.
	(finish_spills): Set up pseudo_previous_regs only for spilled
	pseudos.  Call reassign_pseudos once for all spilled pseudos,
	pass more arguments.  Don't clear live_throughout and dead_or_set
	for spilled pseudos.

2008-01-10  Vladimir Makarov  <vmakarov@redhat.com>

	* reload1.c (compute_use_by_pseudos): Permits spilled registers in
	FROM.
	(temp_pseudo_reg_arr): New variable.
	(reload): Use instead temp_pseudo_reg_arr of pseudo_regs.  Move
	freeing to the function end.  Don't clear spilled_pseudos for IRA.
	Restore original insn chain for IRA.
	(calculate_needs_all_insns): Call IRA's mark_memory_move_deletion.
	(count_pseudo, count_spilled_pseudo): Check spilled pseudos.
	(alter_reg): Set up spilled_pseudos.
	(finish_spills): Set up pseudo_previous_regs only for spilled
	pseudos.  Call reassign_pseudos once for all spilled pseudos,
	pass more arguments.  Don't clear live_throughout and dead_or_set
	for spilled pseudos.

	* global.c (reg_becomes_live, build_insn_chain): Don't ignore
	spilled pseudos for IRA.
	
	* caller-save.c (calculate_local_save_info,
	save_call_clobbered_regs): Ignore spilled pseudos for IRA.
	
	* toplev.c (backend_init_target): Call init_ira.
	(backend_init): Move call of init_ira_once before
	backend_init_target.
	
	* ira.h (init_ira, sort_insn_chain, mark_memory_move_deletion):
	New function prototypes.
	(retry_ira_color): Rename to reassign_pseudos.  Change
	signature.

	* ira-int.h (allocno): New member dont_reassign_p.
	(ALLOCNO_DONT_REASSIGN_P): New macro.
	(memory_move_cost): Change element type.
	(register_move_cost): Change type.
	(register_may_move_in_cost, register_may_move_out_cost,
	reg_class_intersect): New arrays.
	(important_class_nums): Fix element type.
	(hard_reg_not_in_set_p): Make it static inline.
	(init_register_move_cost, init_ira_costs): New function
	prototypes.
	(allocno_conflict_index): Remove.
	(allocate_and_set_costs, allocate_and_copy_costs,
	allocate_and_set_or_copy_costs): New static inline functions.
	
	* ira-build.c (compress_allocno_conflict_vec,
	compress_conflict_vecs): New functions.
	(allocno_conflict_index): Remove.
	(allocno_conflict_check, curr_allocno_conflict_check_tick): New
	variables.
	(propagate_info_to_cap): Use allocate_and_copy_costs.
	(check_and_add_conflicts): Don't call allocno_conflict_index.
	(ira_flattening): Add some assertions.  Check that cost vectors
	have been allocated.  Don't call allocno_conflict_index.  Call
	compress_conflict_vecs.

	* ira.c (memory_move_cost, register_move_cost): Change types.
	(register_may_move_in_cost, register_may_move_out_cost,
	strict_class_subset_p): New variables.
	(setup_class_subset_and_move_costs): Rename to
	setup_class_subset_and_memory_move_costs.  Remove
	register_move_cost setup.  Don't consider no_unit_alloc_regs.  Add
	strict_class_subset_p setup.
	(setup_reg_class_intersect): Rename to
	setup_reg_class_intersect_union.  Don't consider
	no_unit_alloc_regs.  Add reg_class_union setup.
	(hard_reg_not_in_set_p): Move to ira-int.h.
	(setup_reg_subclasses): Use no_unit_alloc_regs instead of
	fixed_reg_set.  Don't consider no_unit_alloc_regs.
	(important_class_nums): Fix element type.
	(setup_cover_classes): Use no_unit_alloc_regs instead of
	fixed_reg_set.  Don't consider no_unit_alloc_regs.
	(setup_class_translate): Ditto.
	(reg_class_union): New variable.
	(init_register_move_cost, free_register_move_costs): New
	functions.
	(init_ira_once): Initialize register_move_cost,
	register_may_move_in_cost, register_may_move_out_cost.  Move some
	code to init_ira.
	(init_ira): New function.  Move some code from init_ira_once.
	Call free_register_move_costs and init_ira_costs.
	(calculate_allocation_cost): Check allocation of allocno hard reg
	cost vector.
	(basic_block_order_nums): New variable.
	(chain_freq_compare, chain_bb_compare, sort_insn_chain): New
	functions.
	(ira): Call sort_insn_chain.

	* ira-color.c (allocno_coalesced_p): New variable.
	(update_copy_costs): Use allocate_and_set_or_copy_costs.
	(assign_hard_reg): Clear and use
	processed_coalesced_allocno_bitmap only if allocno_coalesced_p.
	Use allocate_and_copy_costs.  Use allocno cover class cost if the
	hard register cost vector is not allocated.
	(get_coalesced_allocnos_best_class_and_freq): Use
	reg_class_intersect instead of reg_class_subintersect.
	(add_allocno_to_ordered_bucket): Use strict_class_subset_p.
	(push_allocno_to_stack): Clear and use
	processed_coalesced_allocno_bitmap only if allocno_coalesced_p.
	(setup_allocno_left_conflicts_num): Don't setup
	ALLOCNO_UPDATED_HARD_REG_COSTS and
	ALLOCNO_UPDATED_CONFLICT_HARD_REG_COSTS.  Clear and use
	processed_coalesced_allocno_bitmap only if allocno_coalesced_p.
	(put_allocno_into_bucket): Don't setup
	ALLOCNO_UPDATED_HARD_REG_COSTS and
	ALLOCNO_UPDATED_CONFLICT_HARD_REG_COSTS.
	(coalesced_allocno_conflict_p): Clear and use
	processed_coalesced_allocno_bitmap only if allocno_coalesced_p.
	(coalesce_allocnos): Setup allocno_coalesced_p.
	(color_allocnos): Add processing reg class NO_REGS.
	(color_pass): Propagate assignment of spilled allocno not
	mentioned in the subregion for the mixed algorithm.  Use
	allocate_and_set_costs.
	(move_spill_restore, mark_allocation_change): Check unallocated
	hard reg cost vectors.
	(setup_curr_costs): Don't setup ALLOCNO_UPDATED_HARD_REG_COSTS and
	ALLOCNO_UPDATED_CONFLICT_HARD_REG_COSTS.  Use
	allocate_and_set_or_copy_costs.
	(mark_memory_move_deletion, allocno_reload_assign,
	pseudo_reg_compare, reassign_pseudos): New functions.
	(retry_ira_color): Remove.
	
	* ira-conflicts.c (add_insn_allocno_copies): Use
	allocate_and_set_costs.
	(allocno_conflict_p): Simplify the code.
	
	* ira-costs.c: Rename reg_class_subunion to reg_class_union
	everywhere.
	(cost_classes, cost_classes_num, cost_class_nums,
	max_struct_costs_size): New variables.
	(copy_cost): Use init_register_move_cost instead of
	init_move_cost.
	(record_reg_classes): Ditto.  Use cost_classes and
	cost_classes_num instead of important_classes and
	important_classes_num.  Use register_may_move_{in,out}_cost
	instead of may_move_{in,out}_cost.  Check reg class intersection
	for alt_cost.
	(record_address_regs): Use init_register_move_cost instead of
	init_move_cost.  Use cost_classes and cost_classes_num instead of
	important_classes and important_classes_num.  Use
	register_may_move_in_cost instead of may_move_in_cost.
	(scan_one_insn): Use cost_classes_num instead of
	important_classes_num.
	(print_costs): Use cost_classes and cost_classes_num instead of
	important_classes and important_classes_num.
	(find_allocno_class_costs): Initialize cost_classes and
	cost_class_nums.  Use cost_classes and cost_classes_num instead of
	important_classes and important_classes_num.
	(process_bb_node_for_hard_reg_moves): Use allocate_and_set_costs.
	(setup_allocno_cover_class_and_costs): Use cost_classes and
	cost_classes_num instead of important_classes and
	important_classes_num.
	(init_ira_costs_once): Move some code to init_ira_costs.  Initiate
	cost_classes.
	(free_ira_costs: New function.  Move some code from
	finish_ira_costs_once.
	(init_ira_costs): New function.  Move some code from
	init_ira_costs_once.  Use max_struct_costs_size instead of
	struct_costs_size.  Call free_ira_costs.  Allocate cost_classes.
	(finish_ira_costs_once): Move some code to finish_ira_costs.  Call
	free_ira_costs.
	(ira_costs): Use max_struct_costs_size instead of
	struct_costs_size.  Use allocate_and_set_costs.

	* ira-emit.c (modify_move_list): Remove allocation of hard reg
	cost vectors.

	* ira-lives.c (process_single_reg_class_operands): Add new
	parameter freq.  Calculate costs basing on the frequency.
	(process_bb_node_lives): Pass the frequency to
	process_single_reg_class_operands.
	
2007-12-17  Vladimir Makarov  <vmakarov@redhat.com>

	* doc/invoke.texi (fira-algoirthm): Remove prioirity coloring.
	Make mixed the default.

	* flags.h (ira_algorithm): Remove IRA_ALGORITHM_PRIORITY.

	* ira-color.c (priority_coloring):  Remove.
	(do_coloring): Don't call priority_coloring.

	* opts.c (common_handle_option): Remove priority coloring option.

	* toplev.c (flag_ira_algorithm): Assign IRA_ALGORITHM_MIXED.
	
	* ira-build.c (check_and_add_conflicts, ira_flattening): Increase
	threshold for internal_flag_ira_verbose.
	
2007-12-17  Vladimir Makarov  <vmakarov@redhat.com>

	* common.opt (fira-assign-after-call-split, fira-biased-coloring,
	fira-split-around-calls): Remove.
	(fdump-simple-rtl, fira-verbose): New options.
	(fira, fira-coalesce): Initiate by 0.

	* opts.c (common_handle_option):  Process flag_ira_verbose.

	* flags.h (flag_ira_verbose): New external definition.

	* toplev.h (flag_ira_assign_after_call_split,
	flag_ira_biased_coloring, flag_ira_split_around_calls):  Remove.

	* toplev.c (flag_ira_verbose): New external declaration.
	(finalize): Call finish_ira_once.

	* print-rtl.c (flag_simple):  Rename to flag_dump_simple_rtl.

	* doc/invoke.texi (-fno-ira-assign-after-call-split,
	-fira-biased-coloring, -fno-ira-split-around-calls):  Remove.
	(-fdump-simple-rtl, -fira-verbose): New options.

	* caller-save.c (insert_restore, insert_save): Use
	adjust_address_nv instead of adjust_address.  Check the mode by
	reg_save_code.

	* ira-call.c: Remove file.

	* ira-lives.c: New file.

	* Makefile.in (ira-live.o): Add
	(ira-call.o): Remove.
	(IRA_INT_H): Add alloc-pool.h.

	* ira.h (finish_ira_once): New external definition.

	* ira-int.h (internal_flag_ira_verbose, alloc_pool allocno_pool,
	copy_pool, allocno_live_range_pool, ira_loop_tree_height,
	max_point, start_point_ranges, finish_point_ranges,
	prohibited_mode_move_regs, important_class_nums,
	ira_curr_regno_allocno_map, allocno_set_words): New external
	definitions.
	(loop_tree_node_t, allocno_live_range_t): New typedefs.  Use them
	everywhere.
	(ira_loop_tree_node): Rename to loop_tree_node.
	(loop_tree_node): New member level.
	(allocno_live_range): New structure.
	(allocno): New members nrefs, live_ranges,
	total_conflict_hard_regs, conflict_allocnos_num,
	total_conflict_allocnos_num, mem_optimized_dest,
	mem_optimized_dest_p, total_no_stack_reg_p.  Remove members
	conflict_allocno_vec_active_size and original_memory_cost.  Rename
	member curr_hard_reg_costs to updated_hard_reg_costs.
	(ALLOCNO_TOTAL_CONFLICT_ALLOCNOS_NUM,
	ALLOCNO_TOTAL_CONFLICT_HARD_REGS, ALLOCNO_CONFLICT_ALLOCNOS_NUM,
	ALLOCNO_TOTAL_CONFLICT_ALLOCNOS_NUM, ALLOCNO_NREFS,
	ALLOCNO_MEM_OPTIMIZED_DEST, ALLOCNO_MEM_OPTIMIZED_DEST_P,
	ALLOCNO_TOTAL_NO_STACK_REG_P, ALLOCNO_LIVE_RANGES): New access
	macros.
	(ALLOCNO_CONFLICT_ALLOCNO_VEC_ACTIVE_SIZE,
	ALLOCNO_ORIGINAL_MEMORY_COST): Remove.
	(ALLOCNO_CURR_CONFLICT_HARD_REG_COSTS): Rename to
	ALLOCNO_UPDATED_CONFLICT_HARD_REG_COSTS.
	(allocno_copy): New member loop_tree_node.
	(INT_BITS, INT_TYPE, EXECUTE_IF_SET_IN_ALLOCNO_SET): Move from
	ira-conflicts.c.
	(SET_ALLOCNO_SET_BIT, CLEAR_ALLOCNO_SET_BIT,
	TEST_ALLOCNO_SET_BIT): New macros.
	(ira_reallocate, allocno_conflict_index, add_allocno_conflict,
	create_allocno_live_range, finish_allocno_live_range,
	add_allocno_copy_to_list, swap_allocno_copy_ends_if_necessary,
	remove_allocno_copy_from_list, add_allocno_copy, ira_flattening,
	finish_ira_costs_once, rebuild_start_finish_chains,
	print_live_range_list, debug_live_range_list,
	debug_allocno_live_ranges, debug_live_ranges,
	create_allocno_live_ranges, finish_allocno_live_ranges,
	allocno_conflict_p, loop_edge_freq): New external function
	definitions.
	(hard_reg_in_set_p, original_regno_call_crossed_p,
	ira_max_regno_before, ira_max_regno_call_before): Remove.
	(traverse_loop_tree): Add new parameter type.
	(create_copy): Ditto.
	(debug_conflicts, ira_emit, add_allocno_copy): Add parameter.
	(debug_ira_call_data, split_around_calls, get_around_calls_regno):
	Remove.
	
	* ira.c (setup_prohibited_mode_move_regs): New function.
	(internal_flag_ira_verbose, allocno_pool, copy_pool,
	allocno_live_range_pool, important_class_nums): New external
	variables.
	(IRA_NO_OBSTACK): Uncomment it.
	(ira_reallocate): New function.
	(setup_cover_classes): Set up important_class_nums.
	(finish_ira_once): New function.
	(prohibited_mode_move_regs,
	prohibited_mode_move_regs_initialized_p): New global variables.
	(setup_prohibited_mode_move_regs): New function.
	(setup_reg_renumber): Remove parameters.
	(setup_allocno_assignment_from_reg_renumber): Rename to
	setup_allocno_assignment_flags.  Set up ALLOCNO_ASSIGNED_P.
	(calculate_allocation_cost): Use ALLOCNO_UPDATED_MEMORY_COST.
	(ira_max_regno_before, ira_max_regno_call_before): Remove.
	(ira): Set up internal_flag_ira_verbose.  Call
	setup_prohibited_mode_move_regs.  Create and destroy allocno,
	copy, and live range pools.  Remove original_regno_call_crossed_p.
	Report major passes.  Use argument for ira_emit.  Call
	ira_flattening and df_analyze.  Remove live range splitting around
	calls.
	
	* ira-build.c (setup_loop_tree_level, rebuild_regno_allocno_maps,
	expand_calls, compress_calls, allocno_conflict_index,
	add_to_allocno_conflict_vec, propagate_info_to_cap,
	copy_allocno_live_range, copy_allocno_live_range_list,
	finish_allocno, finish_copy,
	propagate_info_to_loop_tree_node_caps, merge_ranges,
	common_loop_tree_node_dominator, check_and_add_conflicts,
	add_conflict_with_underlying_allocnos, ira_flattening): New
	functions.
	(check_coalesced_allocnos): Remove.
	(ira_loop_tree_height): New external variable.
	(form_loop_tree): Call setup_loop_tree_level.
	(initiate_calls): Allocate a bit more.  (create_allocno): Use
	pool_alloc.  Set up ALLOCNO_TOTAL_CONFLICT_ALLOCNOS_NUM,
	ALLOCNO_TOTAL_CONFLICT_HARD_REGS, ALLOCNO_NREFS,
	ALLOCNO_TOTAL_NO_STACK_REG_P, ALLOCNO_MEM_OPTIMIZED_DEST,
	ALLOCNO_MEM_OPTIMIZED_DEST_P, ALLOCNO_UPDATED_MEMORY_COST, and
	ALLOCNO_LIVE_RANGES.  Rename
	ALLOCNO_CONFLICT_ALLOCNO_VEC_ACTIVE_SIZE,
	ALLOCNO_CURR_HARD_REG_COSTS, and
	ALLOCNO_CURR_CONFLICT_HARD_REG_COSTS to
	ALLOCNO_CONFLICT_ALLOCNOS_NUM, ALLOCNO_UPDATED_HARD_REG_COSTS, and
	ALLOCNO_UPDATED_CONFLICT_HARD_REG_COSTS.
	(add_allocno_conflict): Make it external.  Use
	add_to_allocno_conflict_vec.
	(create_cap_allocno): Move part of code to propagate_info_to_cap.
	(finish_allocnos): Use finish_allocno.
	(add_allocno_copy_to_list, remove_allocno_copy_from_list,
	swap_allocno_copy_ends_if_necessary, add_allocno_copy): Move from
	ira-conflicts.c.  Make them external.
	(create_copy): Use pool_alloc.  Add parameter loop_tree_node.
	(finish_copies): Use finish_copy.
	(ira_curr_regno_allocno_map): New external variable.
	(traverse_loop_tree): Add parameter bb_first_p.
	(create_insn_allocnos): Update ALLOCNO_NREFS.
	(create_loop_tree_node_allocnos): Traverse loop tree nodes with
	BBs first.  Update ALLOCNO_NREFS.
	(create_loop_tree_node_caps): Move part of code to
	propagate_info_to_loop_tree_node_cap.
	(regno_top_level_allocno_map): New global variable.
	(ira_build): Create caps before build conflicts.  Call
	create_allocno_live_ranges.  Propagate info to caps.  Report
	statistics.
	(ira_destroy): Call finish_allocno_live_ranges.

	* ira-conflicts.c (set_allocno_live, clear_allocno_live,
	record_regno_conflict, mark_reg_store, mark_reg_clobber,
	mark_reg_conflicts, mark_reg_death): Remove.
	(add_insn_allocno_copies, add_copies): New functions.
	(add_allocno_copy_to_list, remove_allocno_copy_from_list,
	swap_allocno_copy_ends_if_necessary, add_allocno_copy): Remove.
	(add_allocno_copies): Rename to add_insn_allocno_copies.  Use
	ira_curr_regno_allocno_map and add_insn_allocno_copies.
	(single_reg_class, single_reg_operand_class,
	process_single_reg_class_operands, process_bb_node_for_conflicts):
	Remove.
	(INT_BITS, INT_TYPE, EXECUTE_IF_SET_IN_ALLOCNO_SET): Move to
	ira-int.h.
	(allocnos_live_bitmap, SET_ALLOCNO_CONFLICT_ROW,
	CLEAR_ALLOCNO_CONFLICT_ROW, TEST_ALLOCNO_CONFLICT_ROW): Remove.
	(SET_ALLOCNO_LIVE, CLEAR_ALLOCNO_LIVE, TEST_ALLOCNO_LIVE):
	Use {SET, CLEAR, TEST}_ALLOCNO_SET_BIT.
	(allocno_row_words, hard_regs_live, curr_bb_node,
	curr_regno_allocno_map, curr_reg_pressure): Remove.
	(CONFLICTP): Rename to CONFLICT_P.
	(regs_set): Remove.
	(propagate_allocno_info): Use ALLOCNO_TOTAL_CONFLICT_HARD_REGS.
	Set up ALLOCNO_CALLS_CROSSED_START.
	(allocno_conflict_p): New function.
	(allocno_reg_conflict_p): Use allocno_conflict_p.
	(build_allocno_conflict_vects): Divide original and propagated
	conflicts.
	(print_hard_reg_set): New function.
	(print_conflicts): Use print_hard_reg_set.  Set up mark for the
	start of propagated conflicts.
	(debug_conflicts): Add parameter.
	(ira_build_conflicts): Call add_copies.  Set up
	ALLOCNO_TOTAL_CONFLICT_HARD_REGS.

	* ira-costs.c (struct costs): Make cost allocated dynamically.
	(struct_costs_size, temp_cots, op_costs, this_op_costs): New
	variables.
	(costs): Rename to total_costs.
	(COSTS_OF_ALLOCNO): New macro.
	(curr_regno_allocno_map): Remove.  Use ira_curr_regno_allocno_map
	instead.
	(record_reg_classes): Check NO_REGS in allocno_pref.
	(record_address_regs): Use COSTS_OF_ALLOCNO.
	(scan_one_insn): Ditto.
	(print_costs): Ditto.
	(find_allocno_class_costs): Ditto.  Pass additional argument to
	traverse_loop_tree.  Set up NO_REGS if memory is cheaper.
	(setup_allocno_cover_class_and_costs): Use
	ALLOCNO_UPDATED_MEMORY_COST instead of
	ALLOCNO_ORIGINAL_MEMORY_COST, ALLOCNO_UPDATED_HARD_REG_COSTS
	instead of ALLOCNO_CURR_HARD_REG_COSTS, and
	ALLOCNO_UPDATED_CONFLICT_HARD_REG_COSTS instead of
	ALLOCNO_CURR_CONFLICT_HARD_REG_COSTS.  Pass additional argument to
	traverse_loop_tree.
	(init_ira_costs_once): Allocate init_cost, op_costs,
	this_op_costs, temp_costs.
	(finish_ira_costs_once): New function.
	
	* ira-color.c: Use ALLOCNO_UPDATED_MEMORY_COST instead of
	ALLOCNO_ORIGINAL_MEMORY_COST, ALLOCNO_UPDATED_HARD_REG_COSTS
	instead of ALLOCNO_CURR_HARD_REG_COSTS, and
	ALLOCNO_UPDATED_CONFLICT_HARD_REG_COSTS instead of
	ALLOCNO_CURR_CONFLICT_HARD_REG_COSTS.  Use
	ALLOCNO_TOTAL_CONFLICT_HARD_REGS instead of
	ALLOCNO_CONFLICT_HARD_REGS.
	(processed_allocno_bitmap): Rename into
	processed_coalesced_allocno_bitmap.
	(allocno_cost_compare_func): Use ALLOCNO_UPDATED_MEMORY_COST
	instead of ALLOCNO_MEMORY_COST.
	(assign_hard_reg): Remove biased coloring.
	(add_allocno_to_ordered_bucket): Check cover class first.
	(loop_edge_freq): Make it external.
	(setup_allocno_left_conflicts_num): Check that conflicting
	allocnos of one class.
	(allocno_conflict_p): Rename to coalesced_allocno_conflict_p.
	(color_pass): Check pressure in the loop (not in subloops) for
	mixed algorithm.
	(allocno_priorities): New variable.
	(start_allocno_priorities, finish_allocno_priorities): New
	functions.
	(allocno_priority_compare_func): Use allocno_priorities.
	(priority_coloring): Call start_allocno_priorities and
	finish_allocno_priorities.
	(do_coloring): Pass additional argument to traverse_loop_tree.
	
	* ira-emit.c (struct move): Add member insn.
	(create_move): Initialize member insn.
	(generate_edge_moves): Set up ALLOCNO_MEM_OPTIMIZED_DEST and
	ALLOCNO_MEM_OPTIMIZED_DEST_P.
	(change_loop): Check prohibited_mode_move_regs.
	(curr_jump_map, can_move_through_p): Remove.
	(unify_moves): Don't move through jump.
	(modify_move_list): Set up attributes for new allocno used for
	breaking dependency loops.
	(emit_move_list): Set up insn codes.
	(update_costs, add_range_and_copies_from_move_list,
	add_ranges_and_copies): New functions.
	(ira_emit): Add a parameter.  Call add_ranges_and_copies.
	
2007-10-09  Vladimir Makarov  <vmakarov@redhat.com>

	* toplev.h (flag_ira_coalesce): New external variable.

	* ira-int.h (allocno): New members first_coalesced_allocno,
	next_coalesced_allocno.
	(ALLOCNO_FIRST_COALESCED_ALLOCNO, ALLOCNO_NEXT_COALESCED_ALLOCNO):
	New macros.
	(reg_class_subintersect): New external variable.

	* ira-color.c (processed_allocno_bitmap): New variable.
	(allocno_cost_compare_func, print_coalesced_allocno): New
	functions.
	(assign_hard_reg): Process coalesced allocnos.
	(get_coalesced_allocnos_best_class_and_freq): New function.
	(add_allocno_to_ordered_bucket): Use the function.
	(push_allocno_to_stack, push_allocnos_to_stack): Process coalesced
	allocnos.
	(remove_allocno_from_bucket_and_push, pop_allocnos_from_stack):
	Use print_coalesced_allocno.
	(setup_allocno_available_regs_num,
	setup_allocno_left_conflicts_num): Process coalesced allocnos.
	(copy_freq_compare_func, allocno_conflict_p, coalesce_allocnos):
	New functions.
	(color_allocnos): Allocate/free processed_allocno_bitmap.  Call
	coalesce_allocnos.
	(priority_coloring): Allocate/free processed_allocno_bitmap.

	* ira-build.c (check_coalesced_allocnos): New function.
	(create_allocno): Initiate next_coalesced_allocno,
	first_coalesced_allocno.
	(create_cap_allocno): Check  next_coalesced_allocno,
	first_coalesced_allocno.

	* common.opt (fira-coalesce): New option.

	* ira.c (setup_reg_class_intersect): New function.
	(reg_class_subintersect): New global variable.
	(init_ira_once): Call setup_reg_class_intersect.

	* doc/invoke.texi (-fira-coalescing): New option.
	
2007-09-20  Vladimir Makarov  <vmakarov@redhat.com>

	* ira-build.c (create_allocno): Initialize ALLOCNO_BEST_CLASS.

	* ira-color.c (add_allocno_to_ordered_bucket): Use
	ALLOCNO_BEST_CLASS.

	* ira-costs.c (setup_allocno_cover_class_and_costs): Initialize
	ALLOCNO_BEST_CLASS.

	* ira-int.h (allocno): New member best_class.
	(ALLOCNO_BEST_CLASS): New macro.
	
2007-09-19  Vladimir Makarov  <vmakarov@redhat.com>

	* ira-int.h (allocno): Remove calls_crosed.  Add
	calls_crossed_start.
	(ALLOCNO_CALLS_CROSSED): Remove.
	(ALLOCNO_CALLS_CROSSED_START): Add.
	(build_df): Remove.
	(regno_calls, add_regno_call): New.
	
	* ira-build.c (initiate_calls, finish_calls, add_regno_call): New
	functions.
	(regno_calls, regno_calls_num): New globals.
	(build_df): Remove.
	(add_loop_to_tree): Use loop_outer.
	(form_loop_tree): Ditto.
	(initiate_allocnos, create_cap_allocno): Remove
	ALLOCNO_CALLS_CROSSED.  Add ALLOCNO_CALLS_CROSSED_START.
	(finish_allocnos): Remove ALLOCNO_CALLS_CROSSED.
	(create_bb_allocnos, create_loop_allocnos): Use DF_LR_{IN,OUT}
	instead of DF_UPWARD_LIVE_{IN,OUT}.
	(ira_build): Remove adding df problems and call of
	free_dominance_info.  Call initiate_calls.
	(ira_destroy): Add free_dominance_info and finish_calls.  Remove
	df_finish.

	* ira-emit.c (change_regs): Return the result.
	(generate_edge_moves): Use DF_LR_{IN,OUT} instead of
	DF_UPWARD_LIVE_{IN,OUT}.
	(change_loop): Call df_insn_rescan and df_note_rescan if there is
	a change.
	(can_move_through_p): Use hard_reg_set_equal_p instead of
	GO_IF_HARD_REG_EQUAL.

	* ira-costs.c (copy_cost, record_reg_classes,
	record_address_regs): Call init_move_cost if it is necessary.
	(tune_allocno_costs_and_cover_classes): Use regno_calls and
	ALLOCNO_CALLS_CROSSED_START instead of ALLOCNO_CALLS_CROSSED.

	* ira-conflicts.c (n_regs_set): Remove.
	(regs_set): Make it a vector.
	(mark_reg_store, mark_reg_clobber): Change 2nd parameter type.
	(process_bb_node_for_conflicts): Use DF_LR_IN instead of
	DF_UPWARD_LIVE_IN.  Call add_regno_call.  Initialize
	ALLOCNO_CALLS_CROSSED_START.  Remove ALLOCNO_CALLS_CROSSED.
	(build_conflict_bit_table): Initialize and finalize regs_set.
	(propagate_allocno_info): Remove ALLOCNO_CALLS_CROSSED.
	Initialzie ALLOCNO_CALLS_CROSSED_START.
	
	* ira-color.c (setup_allocno_available_regs_num,
	setup_allocno_left_conflicts_num): New functions.
	(update_allocno_avaialable_regs): Remove.
	(sorted_allocnos, allocno_stack_varray): Move upper.
	(assign_hard_reg): Use hard_reg_set_subset_p instead of
	GO_IF_HARD_REG_SUBSET.
	(loop_edge_freq): Use DF_LR_{IN,OUT} instead of
	DF_UPWARD_LIVE_{IN,OUT}.
	(put_allocno_into_bucket): Call setup_allocno_available_regs_num
	and setup_allocno_left_conflicts_num.
	(print_loop_title): Use loop_depth.
	(allocno_priority_compare_func): Remove REG_N_REFS and
	REG_LIVE_LENGTH.
	(retry_ira_color): Use SET_REGNO.  Use ALLOCNO_CALLS_CROSSED_NUM
	instead of ALLOCNO_CALLS_CROSSED.
	(collect_pseudo_call_clobbered_regs):  Use regno_calls and
	ALLOCNO_CALLS_CROSSED_START instead of ALLOCNO_CALLS_CROSSED.

	* ira-call.c (init_ira_call_data): Add argument to
	post_order_compute.
	(n_regs_set): Remove.
	(regs_set): Make it a vector.
	(mark_reg_store, mark_reg_clobber): Change 2nd parameter type.
	(mark_referenced_regs): Check null x.
	(put_save_restore_and_calculate_local_info): Initialize and
	finalize regs_set.  Use DF_LR_{IN,OUT} instead of
	DF_UPWARD_LIVE_{IN,OUT}.  Use loop_outer.
	(do_init_nothing): Remove.
	(save_trans_fun, save_con_fun_0, restore_trans_fun,
	restore_con_fun_0): Remove 1st parameter.
	(save_con_fun_n, restore_con_fun_n): Ditto.  Use
	df_simple_dataflow instead of df_analyze_problem.
	(put_save_restore): Use DF_LR_IN instead of DF_UPWARD_LIVE_IN.
	Call mark_all_referenced_regs for all insn.  Use bitmap progress.
	(get_move_insn): New function.
	(put_save_restore_and_calculate_local_info, put_save_restore): Use
	the function.

	* ira.c (insn_contains_asm_1, insn_contains_asm,
	compute_regs_asm_clobbered, expand_reg_info): New functions.
	(setup_class_subset_and_move_costs): Use hard_reg_set_subset_p
	instead of GO_IF_HARD_REG_SUBSET.
	(setup_reg_subclasses, setup_class_translate): Ditto. Use
	hard_reg_set_equal_p instead of GO_IF_HARD_REG_EQUAL.
	(setup_eliminable_regset): Call compute_regs_asm_clobbered.  Use
	df_set_regs_ever_live instead of regs_ever_live.
	(setup_reg_renumber): Check reg_equiv_const and
	reg_equiv_invariant_p.
	(ira): Remove no_new_pseudos. Add df-problems and analyze.  Call
	regstat_init_n_sets_and_refs and regstat_compute_ri.  Remove
	delete_unreachable_blocks.  Use expand_reg_info.  Move
	setup_preferred_alternate_classes upper.  Remove life_analysis.
	Prepare df-insfrastructure for reload.

	* regclass.c (setup_reg_classes): Don't use reg_pref_buffer.

	* function.[ch] (get_call_invalidated_used_regs): Change 1st
	parameter type.
	
	* gengtype.c (main): Add HARD_REG_SET.

	* alias.c (value_addr_p): New function.
	(nonoverlapping_memrefs_p): Use it.

	* caller-save.c (init_caller_save): Use DF_LR_TOP for IRA instead
	of global_live_at_start.
	
2007-05-04  Vladimir Makarov  <vmakarov@redhat.com>

	* ira-conflicts.c: Change pseudo to allocno.
	* ira-color.c: Ditto.
	* ira-emit.c: Ditto.
	* ira-build.c: Ditto.
	* ira.c: Ditto.
	(important_classes_num, important_classes): New variables.
	(setup_cover_classes): Set up the variable values.
	* ira-costs.c: Ditto.
	(record_reg_classes, record_address_regs, scan_one_insn,
	find_pseudo_class_costs):  Process only important classes.
	* ira-call.c: Ditto.  Add comments about placement optimization.
	* ira-int.h: Ditto.
	(allocno) Use one bit field for boolean members.
	(important_classes_num, important_classes): New external
	definitions.

2007-03-16  Vladimir Makarov  <vmakarov@redhat.com>

	* flags.h (ira_algorithm): Add IRA_ALGORITHM_MIXED.

	* opts.c (common_handle_option): Set up IRA_ALGORITHM_MIXED from
	the option argument.
	
	* common.opt (fira-assign-after-call-split, fira-propagate-cost,
	fira-split-around-calls): New options.
	(fira-ipra): Switch off by default.
	
	* doc/invoke.texi (-fira-algorithm): Add mixed algorithm.
	(-fno-ira-ipra): Rename to -fira-ipra.
	(-fno-ira-assign-after-call-split, -fira-propagate-cost,
	-fno-ira-split-around-calls): Add new options.
	
	* ira-conflicts.c (curr_reg_pressure): New variable.
	(set_pseudo_live, clear_pseudo_live, mark_reg_store,
	mark_reg_death): Update reg pressure.
	(add_pseudo_copies): Decrease cost for copy with dead pseudo.
	(process_bb_node_for_conflicts): Propagate reg pressure.
	(build_conflict_bit_table): Call process_bb_node_for_conflicts in
	preorder.
	(ira_build_conflicts): Add new coloring algorithm.
	(ira_build_conflicts): Add flag_ira_split_around_calls.

	* ira-emit.c (change_loop): Print allocation on the region
	borders.  Use pseudo_cap_member instead of regno.
	(modify_move_list): Add parameter to create pseudo.
	(ira_emit): Use pseudo_cap_member instead of regno.
	
	* ira-build.c (create_loop_tree_nodes): Set up initial reg
	pressure.
	(create_pseudo): Add parameter.  Use the parameter value instead
	of regno.
	(print_expanded_pseudo): Use pseudo_cap_member instead of regno.
	(create_cap_pseudo, create_insn_pseudos, create_bb_pseudos,
	create_loop_pseudos): Add argument to create_pseudo call.
	(create_pseudos, ira_build): Process IRA_ALGORITHM_MIXED.
	(create_loop_tree_node_caps):  Create cap pseudo for all pseudos
	not having father pseudo.
	
	* final.c (rest_of_handle_final): Process INCOMING_REGNO.

	* toplev.h (flag_ira_assign_after_call_split,
	flag_ira_propagate_cost, flag_ira_split_around_calls): New flags.

	* caller-save.c (save_call_clobbered_regs): Move declaration
	this_insn_sets to the function start.
	
	* ira-int.h (ira_loop_tree_node): Add reg_pressure.
	(pseudo): More comments for regno and cap_member
	(original_regno_call_crossed_p, ira_max_regno_before,
	ira_max_regno_call_before): New external variables.
	(create_pseudo): Add parameter.
	(reassign_conflict_pseudos, debug_ira_call_data,
	split_around_calls, get_around_calls_regno): New function
	prototypes.

	* ira-color.c (assign_hard_reg): Set best_hard_regno and
	conflict_regs earlier.  Check register availability earlier.
	Ignore conflict and copy cost for PSEUDO_MAY_BE_SPILLED_P.
	(calculate_pseudo_spill_cost): Use pseudo_cap instead of regno.
	Check father pseudo instead of subloop pseudos.
	(pop_pseudos_from_stack): Set up PSEUDO_ASSIGNED_P for NO_REGS
	pseudo.
	(print_loop_title): Print reg pressure.
	(color_pass): Use PSEUDO_CAP_MEMBER instead of regno.  Add mixed
	coloring algorithm.
	(move_spill_restore): Use PSEUDO_CAP_MEMBER instead of regno.  Use
	subloop pseudos instead of father pseudo for cost calculation.
	(setup_curr_costs, reassign_conflict_pseudos): New functions.
	(retry_ira_color): Don't allocate call used registers when
	flag_caller_saves or flag_ira_split_around_calls.  Call
	setup_curr_cost.  Print about spilling pseudo split around calls.
	(reuse_stack_slot): Choose the slot with minimal memory-memory
	costs.

	* ira.c (setup_reg_renumber): Add 2 parameters.  Use cap_number
	instead of regno.  Initialize caller_save_needed.  Make assertion
	stricter.
	(setup_pseudo_assignment_from_reg_renumber): New function.
	(calculate_allocation_cost): Add assertion.
	(print_redundant_copies): Use cap_number instead of regno.
	(original_regno_call_crossed_p, ira_max_regno_before,
	ira_max_regno_call_before): New global variables.
	(ira): Process IRA_ALGORITHM_MIXED.  Set up
	ira_max_regno_call_before and ira_max_regno_before.  New arguments
	for setup_reg_renumber.  Reassign if pseudo changed its class.
	Split pseudos around the call if necessary.  Reassign if a pseudo
	is split.

	* ira.h: New year for Copyright.

	* ira-costs.c (reg_pref): Rename to pseudo_pref.
	(reg_pref_buffer): rename to pseudo_pref_buffer.
	(find_pseudo_class_costs): Initialize best_cost and best_class.
	Process IRA_ALGORITHM_MIXED.  Find best cover class for regno.
	(process_bb_node_for_hard_reg_moves): Process IRA_ALGORITHM_MIXED.

	* Makefile.in (ira-call.o): Add new file.

	* reload1.c (calculate_needs_all_insns): Remove unnecessary
	memory-memory move.

	* ira-call.c: New file.
	
2007-02-09  Vladimir Makarov  <vmakarov@redhat.com>

	* common.opt (fipra): Rename to fira-ipra.  Make it default.
	(fira-move-spills, fira-share-save-slots, fira-share-spill-slots):
	New.
	* toplev.h (flag_ipra): Rename to flag_ira_ipra.
	(flag_ira_move_spills, flag_ira_share_save_slots,
	flag_ira_share_spill_slots): New external definitions.
	* doc/invoke.texi (-fipra): Rename to -fno-ira-ipra. 
	(-fno-ira-move-spills, -fno-ira-share-save-slots,
	-fno-ira-share-spill-slots): New options.
	* function.c (get_call_invalidated_used_regs): Rename flag_ipra to
	flag_ira_ipra.
	* ira-costs.c (tune_pseudo_costs_and_cover_classes): Ditto.
	* caller-save.c (setup_save_areas): Use flag_ira_share_save_slots.
	Rename flag_ipra to flag_ira_ipra.
	(flag_ira_share_save_slots): Use flag_ira_move_spills.
	* ira-color.c (assign_hard_reg): Skip pseudos with different cover
	class.
	(reuse_stack_slot): Use flag_ira_share_spill_slots.
	* config/arm/arm.h (IRA_COVER_CLASSES): New macro.
	
2007-02-31  Vladimir Makarov  <vmakarov@redhat.com>

	* reload.h (debug_save_data): New definition.
	
	* caller-save.c (struct bb_info): New.
	(BB_INFO, BB_INFO_BY_INDEX): New macros.
	(calculate_local_save_info, set_up_bb_rts_numbers, rpost_cmp,
	calculate_save_in_out, calculate_save_here,
	make_global_save_analysis, print_hard_reg_set_and_mode,
	print_hard_reg_set, print_save_data, debug_save_data,
	set_hard_reg_saved): New functions.
	(save_call_clobbered_regs): Make global save analysis and use it
	to put save/restore code.
	(insert_one_insn): Check CODE_LABEL.

2007-01-19  Vladimir Makarov  <vmakarov@redhat.com>

	* toplev.h (flag_ipra): New external definition.

	* common.opt (fipra): New option.

	* doc/invoke.texi (-fipra); Document the option.

	* cgraph.h (cgraph_node): New member function_used_regs.

	* cgraph.c (cgraph_create_node): Initialize function_used_regs.

	* final.c (update_regs_ever_live): New function.
	(rest_of_handle_final): Set up function_used_regs and
	call_used_regs.

	* ira-build.c (ira_build): Clear function call_used_regs.

	* function.h: Add hard-reg-set.h header.
	(emit_status): New member call_used_regs.
	(get_call_invalidated_used_regs): New definition.

	* function.c (get_call, get_call_invalidated_used_regs): New
	functions.

	* Makefile.in (FUNCTION_H): Add hard-reg-set.h.
	(caller-save.o): Add dependence on output.h and ira.h

	* regrename.c (copyprop_hardreg_forward_1): Use function
	get_call_invalidated_used_regs.

	* ira-conflicts.c (process_bb_node_for_conflicts): Ditto.

	* postreload-gcse.c (record_opr_changes,
	reg_set_between_after_reload_p, reg_used_between_after_reload_p):
	Ditto.

	* postreload.c (reload_combine, reload_cse_move2add): Ditto.

	* rtlanal.c (reg_set_between_p): Ditto.

	* flow.c (propagate_one_insn): Ditto.

	* df-scan.c (df_insn_refs_record): Ditto.

	* gcse.c (compute_hash_table_work, compute_store_table): Ditto.

	* cselib.c (cselib_process_insn): Ditto.

        * loop-iv.c (simplify_using_assignment): Ditto.

	* sched-deps.c (sched_analyze): Ditto.

	* combine.c (record_dead_and_set_regs): Ditto.

	* resource.c (mark_set_resources, mark_set_resources): Ditto.

	* var-tracking.c (var-tracking.c): Ditto.

	* reload1.c (reload): Ditto.

	* cse.c (invalidate_for_call): Ditto.  Add parameter.
	(cse_insn): Pass the parameter.

	* ira.h (try_to_migrate): Remove the definition.
	(collect_pseudo_call_clobbered_regs): New external definition.

	* ira-color.c (collect_pseudo_call_clobbered_regs): New function.

	* ira-costs.c (tune_pseudo_costs_and_cover_classes): Add cost
	calculation when IPRA is used.

	* caller-save.c: Include headers output.h and ira.h.
	(saved_hard_reg): New structure.
	(hard_reg_map, hard_reg_map, all_saved_regs): New variables.
	(all_saved_regs, new_saved_hard_reg, finish_saved_hard_regs,
	saved_hard_reg_compare_func): New functions.
	(setup_save_areas): Add code for sharing stack slots.
	(save_call_clobbered_regs): Use function
	get_call_invalidated_used_regs.
	
2007-01-12  Vladimir Makarov  <vmakarov@redhat.com>

	* doc/tm.texi (IRA_HARD_REGNO_ADD_COST_MULTIPLIER): New macro.

	* ira-conflicts.c (add_pseudo_copies): Add copy between output and
	died operand pseudos.

	* ira.c (setup_cover_classes, setup_class_translate): Define and
	call only when IRA_COVER_CLASSES is defined.
	(no_alloc_regs): Rename to no_unit_alloc_regs.
	(setup_eliminable_regset): Set up no_alloc_regs.

	* ira-costs.c (tune_pseudo_costs_and_cover_classes): Modify cost
	if IRA_HARD_REGNO_ADD_COST_MULTIPLIER is defined.

	* config/s390/s390.h (IRA_COVER_CLASSES,
	IRA_HARD_REGNO_ADD_COST_MULTIPLIER(regno)): Define.
	
2006-12-22  Vladimir Makarov  <vmakarov@redhat.com>

	* rtl.h (setup_reg_classes): New function prototype.
	
	* regclass.c (setup_reg_classes): New function.

	* global.c (global_alloc): Dump information about register
	assigning.

	* ira-int.h (ira_build): Change prototype signature.

	* ira-color.c (pseudo_compare_func): Rename to
	pseudo_priority_compare_func.
	(priority_coloring): Dump information about register
	assigning.

	* ira-build.c (ira_build): Return true if we have loops for the
	allocation.

	* ira.c (setup_preferred_alternate_classes): New function.
	(ira): Use it instead of regclass.  Rebuild only if we have loops.

2006-12-15  Vladimir Makarov  <vmakarov@redhat.com>

        * ira.h, ira-int.h, ira.c, ira-build.c, ira-costs.c
	ira-conflicts.c, ira-color.c, ira-emit.c: New files.

	* flags.h (ira_algorithm): New enumeration.
	(flag_ira_algorithm): New external variable declaration.

	* tree-pass.h (pass_ira): New external variable declaration.

	* toplev.c (ira.h): New include.
	(flag_ira_algorithm): New global variable.
	(backend_init): Call init_ira_once.

	* toplev.h (flag_ira, flag_ira_biased_coloring): New external
	variable declarations.

	* regs.h (contains_reg_of_mode, move_cost, may_move_in_cost,
	may_move_out_cost): New external variable declarations.
	
	* caller-save.c (no_caller_save_reg_set): New global variable.
	(init_caller_save): Set up no_caller_save_reg_set.
	
	* global.c (eliminable_regset): Make it external.
	(gate_handle_global_alloc): New function.
	(pass_global_alloc): Add the gate function.

	* opts.c (decode_options):  Print the warning for -fira.
	(common_handle_option): Process -fira-algorithm option.

	* timevar.def (TV_IRA): New pass.

	* hard-reg-set.h (no_caller_save_reg_set): New external variable
	declaration.

	* regmove.c (regmove_optimize): Don't do replacement of output
	operands by input operands.
        (rest_of_handle_regmove): Don't do CFG cleanup for IRA.

	* local-alloc.c (update_equiv_regs): Make it external.  Return
	true if jump label rebuilding should be done.
	(gate_handle_local_alloc): New function.
	(pass_local_alloc): Add the gate function.

	* alias.c (stack_addr_p): New function.
	(nonoverlapping_memrefs_p): Add code for IRA.

	* common.opt (fira, fira-algorithm, fira-biased-coloring): New
	options.

	* regclass.c (contains_reg_of_mode, move_cost, may_move_in_cost,
	may_move_out_cost): Make the variables external.
	
	* rtl.h (eliminable_regset): New external variable declaration.
	(update_equiv_regs): New external function definition.

	* Makefile.in (IRA_INT_H): New definition.
	(OBJS-common): Add ira.o, ira-build.o, ira-costs.o,
	ira-conflicts.o, ira-color.o, and ira-emit.o.
	(reload1.o, toplev.o): Add dependence on ira.h.
	(ira.o, ira-build.o, ira-costs.o, ira-conflicts.o, ira-color.o,
	ira-emit.o): New entries.

	* passes.c (pass_ira): New pass.

	* reload1.c (alter_reg): Add a new parameter.
	(pseudo_reg_compare): New function.
	(reload): Sort pseudos for IRA.  Call alter_reg with the
	additional parameter.
	(count_spilled_pseudo): New variable freq.  Use it.
	(alter_reg): Add code for IRA.
	(eliminate_regs_1, finish_spills, emit_input_reload_insns,
	delete_output_reload): Use additional parameter for alter_reg.
	(finish_spills, emit_input_reload_insns, delete_output_reload):
	Call mark_allocation_change.
	(finish_spills): Call retry_ira_color.
	
	* doc/invoke.texi: Describe new options -fira,
	-fira-biased-coloring, and -fira-algorithm.
	
	* doc/passes.texi: Decribe IRA.

	* doc/tm.texi:  Decribe macro IRA_COVER_CLASSES.
	
	* config/sparc/sparc.h (IRA_COVER_CLASSES): New macro.

	* config/i386/i386.h (IRA_COVER_CLASSES): Ditto.

	* config/ia64/ia64.h (IRA_COVER_CLASSES): Ditto.

	* config/rs6000/rs6000.h (IRA_COVER_CLASSES): Ditto.
	
	Richard Henderson  <rth@redhat.com>

	* tree-pass.h (pass_lower_subreg): New external definition.
	* toplev.h (flag_lower_subreg): New external definition.
	* rtl.def (CONCATN): New rtl expression.
	* dwarf2out.c (concatn_loc_descriptor): New function.
	(loc_descriptor): Process CONCATN.
	* timevar.def (TV_LOWER_SUBREG): New definition.
	* emit-rtl.c (gen_reg_rtx_offset): New function.
	(gen_lowpart_common): Process CONCATN.
	* simplify-rtx.c (simplify_subreg): Process CONCATN.
	* common.opt (flower-subreg): New options.
	* rtl.h (gen_reg_rtx_offset): New external definition.
	* Makefile.in (OBJS-common): Add lower-subreg.o.
	(lower-subreg.o): New entry.
	* passes.c (pass_lower_subreg): Add new pass.
	* lower-subreg.c: New file.
	
2008-02-11  Kai Tietz  <kai.tietz@onevision.com>

	* config/i386/cygwin.asm: (__alloca): Correct calling
	convention and alignment.
	(__chkstk): Force 8 byte stack alignment.

2008-02-11  Uros Bizjak  <ubizjak@gmail.com>
	    Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/33992
	* tree-ssa-loop-im.c (rewrite_bittest): Fixup the type of
	the zero we compare against.

2008-02-10  Danny Smith  <dannysmith@users.sourceforge.net>

	PR libfortran/35063
	* gthr-win32.h (__gthread_mutex_destroy_function): New function
	to CloseHandle after unlocking to prevent accumulation of handle
	count.

2008-02-09  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	PR middle_end/34150
	* pa.c (legitimize_pic_address): Add REG_EQUAL note on sets with a
	pic_label_operand source.  Similarly, add a REG_LABEL_OPERAND note
	and update LABEL_NUSES during and after reload.

2008-02-08  Steven Bosscher  <stevenb.gcc@gmail.com>

	PR middle-end/34627
	* combine.c (simplify_if_then_else): Make sure the comparison is
	against const0_rtx when simplifying to (abs x) or (neg (abs X)).

2008-02-08  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR bootstrap/35051
	* double-int.h: Don't include gmp.h for GENERATOR_FILEs.
	(mpz_set_double_int, mpz_get_double_int): Hide from GENERATOR_FILEs.
	* real.h: Don't include gmp.h or mpfr.h for GENERATOR_FILEs.
	(real_from_mpfr, mpfr_from_real): Hide from GENERATOR_FILEs.
	* tree.h (get_type_static_bounds): Likewise.

2008-02-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* doc/invoke.texi (Option Summary, C++ Dialect Options)
	(Objective-C and Objective-C++ Dialect Options, Warning Options):
	Make -Wfoo language annotations match what the compiler outputs.

2008-02-08  Sa Liu  <saliu@de.ibm.com>

	* config/spu/spu-builtins.def: Fixed wrong parameter type in spu 
	intrinsics spu_convts, spu_convtu, spu_convtf.
	* testsuite/gcc.target/spu/intrinsics-3.c: New. Test error messages.

2008-02-08  Hans-Peter Nilsson  <hp@axis.com>

	* doc/extend.texi (Function Attributes) <noinline>: Mention
	asm ("") as method to keep calls.

2008-02-07  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	PR other/32754
	* doc/options.texi (Options): Replace references to opts.sh with
	optc-gen.awk.
	* opts-common.c: Likewise.
	* optc-gen.awk: Likewise.
	
2008-02-07  Andreas Krebbel  <krebbel1@de.ibm.com>

	* config/s390/s390.h (FUNCTION_ARG_REGNO_P): Fix fprs for 64 bit.

2008-02-07  Richard Henderson  <rth@redhat.com>

	PR rtl-opt/33410
	* config/alpha/alpha.c (alpha_emit_xfloating_compare): Use an
	EXPR_LIST for the REG_EQUAL instead of a comparison with a 
	funny mode.

2008-02-07  Uros Bizjak  <ubizjak@gmail.com>

	PR tree-optimization/35085
	* tree-ssa-reassoc.c (rewrite_expr_tree): Enable destructive update
	for operand entry oe2 in addition to operand entry oe3 in order to
	expose more opportunities for vectorizer sum reduction.

2008-02-06  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>

	PR other/35107
	* Makefile.in (LIBS): Remove $(GMPLIBS).
	(cc1-dummy, cc1): Add $(GMPLIBS).

2008-02-06  Jan Hubicka  <jh@suse.cz>

	PR target/23322
	* i386.md (moddf_integer): Do not produce partial memory stalls for
	targets where it hurts.

2008-02-06  Uros Bizjak  <ubizjak@gmail.com>

	PR target/35083
	* optabs.c (expand_float): Do not check for decimal modes when
	expanding unsigned integer through signed conversion.

2008-02-06  Nick Clifton  <nickc@redhat.com>

	* config/stormy16/stormy16.md (eqbranchsi): Replace a match_dup
	inside the clobber with a match_operand and duplicated operand
	number in the constraint.
	(ineqbranchsi): Delete redundant comment.

2008-02-06  Ralf Corsepius  <ralf.corsepius@rtems.org>

	* config/arm/rtems-elf.h (TARGET_OS_CPP_BUILTINS): Add 
	builtin_define ("__USE_INIT_FINI__").
	* config/h8300/t-rtems (MULTILIB_OPTION,MULTILIB_DIRNAMES): Add
	-msx multilibs.
	* gthr-rtems.h: Remove __GTHREAD_MUTEX_INIT.

2008-02-06  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	PR documentation/30330
	* doc/invoke.texi (C++ Dialect Options)
	(Objective-C and Objective-C++ Dialect Options, Warning Options):
	For each warning option -Wfoo that allows -Wno-foo, ensure both
	-Wfoo and -Wno-foo are listed in the option index.  Fix index
	entry of -Wswitch-default, index -Wnormalized= including the
	`=', and -Wlarger-than-@var{len} including @var{len}.

2008-02-05  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (floatunssisf2): Use
	ix86_expand_convert_uns_sisf_sse also for TARGET_SSE.
	(floatunssi<mode>2): Rename from floatunssisf2 and floatunssidf2.
	Macroize expander using MODEF mode iterator.

2008-02-05  Diego Novillo  <dnovillo@google.com>

	http://gcc.gnu.org/ml/gcc-patches/2008-02/msg00140.html

	PR 33738
	* tree-vrp.c (vrp_evaluate_conditional): Revert fix for PR 33738.

2008-02-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>

	PR other/35070
	* toplev.c (print_version): Honor `indent' for GMP/MPFR warnings.

2008-02-05  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/35084
	* config/i386/i386.c (ix86_function_sseregparm): Add an arg
	to indicate if a message should be generated.
	(init_cumulative_args): Updated.
	(function_value_32): Likewise.

2008-02-05  Joseph Myers  <joseph@codesourcery.com>

	* doc/include/texinfo.tex: Update to version 2008-02-04.16.

2008-02-05  Uros Bizjak  <ubizjak@gmail.com>

	PR target/35083
	* config/i386/i386.md (floatunsisf2): Enable for TARGET_SSE_MATH only.
	Call ix86_expand_convert_uns_sisf_sse for TARGET_SSE2.

2008-02-04  Diego Novillo  <dnovillo@google.com>

	http://gcc.gnu.org/ml/gcc-patches/2008-02/msg00110.html

	PR 33738
	* tree-vrp.c (vrp_evaluate_conditional): With
	-Wtype-limits, emit a warning when comparing against a
	constant outside the natural range of OP0's type.

2008-02-04  Richard Guenther  <rguenther@suse.de>

	PR middle-end/33631
	* expr.c (count_type_elements): Give for unions instead of
	guessing.

2008-02-04  Richard Guenther  <rguenther@suse.de>

	PR middle-end/35043
	* gimplify.c (gimplify_init_ctor_eval): Convert array indices
	to TYPE_DOMAINs base type instead of using bitsizetype here.

2008-02-03  Jason Merrill  <jason@redhat.com>

	* print-tree.c (print_node) [CONSTRUCTOR]: Print elements.

2008-02-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	PR other/29972
	* doc/invoke.texi (C++ Dialect Options, Optimize Options)
	(HPPA Options, i386 and x86-64 Options, IA-64 Options)
	(RS/6000 and PowerPC Options): Fix typos and markup.
	* doc/passes.texi (Tree-SSA passes): Likewise.

2008-02-02  Michael Matz  <matz@suse.de>

	PR target/35045
	* postreload-gcse.c (record_last_reg_set_info_regno): Renamed
	from record_last_reg_set_info.
	(record_last_reg_set_info): Take an RTX argument, iterate over all
	constituent hardregs.
	(record_last_set_info, record_opr_changes): Change calls to
	new signature or to record_last_reg_set_info_regno.

2008-02-02  Gerald Pfeifer  <gerald@pfeifer.com>

	* doc/extend.texi (X86 Built-in Functions): Fix grammar.

2008-02-01  Hans-Peter Nilsson  <hp@axis.com>

	PR rtl-optimization/34773
	* reg-notes.def (EQUAL): Mention significance of combination of
	REG_EQUAL and REG_RETVAL.
	* fwprop.c (try_fwprop_subst): Don't add REG_EQUAL to an
	insn that has a REG_RETVAL.

2008-02-01  Roger Sayle  <roger@eyesopen.com>

	PR bootstrap/33781
	* configure.ac (--enable-fixed-point): Disable unless explicitly
	requested on IRIX.
	* configure: Regenerate.

2008-02-01  Richard Guenther  <rguenther@suse.de>

	PR other/35042
	* invoke.texi (-finline-limit): Remove no longer true parts
	of the documentation.  Note that there is no default value.

2008-02-01  Andrew Pinski  <pinskia@gmail.com>
	    Mark Mitchell  <mark@codesourcery.com>
	    Ben Elliston  <bje@au.ibm.com>

	PR c/29326
	* doc/extend.texi (Other Builtins): Document.

2008-01-31  Tom Browder <tom.browder@gmail.com>

	* doc/c-tree.texi (Types): Fix grammar.
	(Expression trees): Ditto.
	* doc/passes.texi (Tree-SSA passes): Ditto.
	
	* doc/configterms.texi (Configure Terms): Fix typo.
	* doc/cpp.texi (Common Predefined Macros): Ditto.
	* doc/md.texi (Machine Constraints): Ditto.
	
	* doc/makefile.texi (Makefile): Add comma.

2008-01-31  Tom Browder  <tom.browder@gmail.com>
	    Gerald Pfeifer  <gerald@pfeifer.com>
	
	* doc/sourcebuild.texi (Front End): Remove references to CVS
	and CVSROOT/modules.
	(Texinfo Manuals): Replace reference to CVS by one to SVN.
	(Back End): Remove reference to CVS.

2008-01-31  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR target/34900
	* config/mips/mips.c (gen_load_const_gp): New function, taking a
	comment from...
	(mips16_gp_pseudo_reg): ...here.
	* config/mips/mips.md (load_const_gp): Replace with...
	(load_const_gp_<mode>): ...this :P-based insn.

2008-01-31  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	* doc/invoke.texi (-ansi): Mention explicitly corresponding -std=
	options. Minor fixes.
	(-std): Move reference to standards closer to where language
	standards are first mentioned.
	
2008-01-31  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR rtl-optimization/34995
	* reload.c (alternative_allows_const_pool_ref): Take an rtx
	parameter and return a bool.  If the rtx parameter is nonnull,
	check that it satisfies an EXTRA_MEMORY_CONSTRAINT.
	(find_reloads): Update call accordingly.  Pass the new operand
	if it needed no address reloads, otherwise pass null.

2008-01-30  Richard Henderson  <rth@redhat.com>

	PR c/34993
	* tree.c (build_type_attribute_qual_variant): Skip TYPE_DOMAIN
	for unbounded arrays.

2008-01-30  Silvius Rus  <rus@google.com>

	* config/i386/xmmintrin.h (_mm_prefetch): Add const to first arg.

2008-01-30  Jan Hubicka  <jh@suse.cz>

	PR target/34982
	* i386.c (init_cumulative_args): Use real function declaration when
	calling locally.

2008-01-30  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR rtl-optimization/34998
	* global.c (build_insn_chain): Treat non-subreg_lowpart
	SUBREGs of pseudos as clobbering all the words covered by the
	SUBREG, not just all the bytes.
	* ra-conflict.c (clear_reg_in_live): Likewise.  Take the
	original df_ref rather than an extract parameter.
	(global_conflicts): Update call accordingly.

2008-01-30  Andreas Krebbel  <krebbel1@de.ibm.com>

	* config/s390/fixdfdi.h (__fixunstfdi, __fixtfdi): Rearrange
	the overflow check to make it easier to read.
	(__fixtfdi): Change the type of the ll member in union
	long_double to UDItype_x.

2008-01-30  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/34969
	* cgraph.h (cgraph_update_edges_for_call_stmt): New prototype.
	* cgraph.c (cgraph_update_edges_for_call_stmt): New function.
	* tree-inline.c (fold_marked_statements): Call
	cgraph_update_edges_for_call_stmt if folding a call statement.
	* cgraphunit.c (verify_cgraph_node): Set cfun to this_cfun for
	debug_generic_stmt calls, reset it back afterwards.

	PR c/35017
	* c-decl.c (start_decl): Don't pedwarn about TREE_READONLY
	static decls.
	* c-typeck.c (build_external_ref): Don't pedwarn about
	static vars in current function's scope.

2008-01-29  Joseph Myers  <joseph@codesourcery.com>

	* config.gcc (i[34567]86-*-nto-qnx*): Remove deprecation.

2008-01-29  Bernhard Fischer  <aldot@gcc.gnu.org>

	PR c/35002
	* ipa-struct-reorg.c: Fix spelling.
	* params.def: Ditto.

2008-01-29  Richard Guenther  <rguenther@suse.de>

	PR middle-end/35006
	* tree-inline.h (struct copy_body_data): Add remapping_type_depth
	field.
	* tree-inline.c (remap_type): Increment remapping_type_depth
	around remapping types.
	(copy_body_r): Only add referenced variables if they are referenced
	from code, not types.

2008-01-29  Douglas Gregor  <doug.gregor@gmail.com>

	PR c++/34055
	PR c++/34103
	PR c++/34219
	PR c++/34606
	PR c++/34753
	PR c++/34754
	PR c++/34755
	PR c++/34919
	PR c++/34961
	* c-pretty-print.c (pp_c_type_qualifier_list): Don't try to print
	qualifiers for an ERROR_MARK_NODE or a NULL_TREE.

2008-01-28  Andy Hutchinson   <hutchinsonandy@netscape.net>

	PR target/34412
	* config/avr/avr.c (expand_prologue): Use correct QI mode frame 
	pointer for tiny stack.

2008-01-28  Bernhard Fischer  <aldot@gcc.gnu.org>

	* doc/tree-ssa.texi: Add cindex PHI nodes and improve wording.

2008-01-28  Bernhard Fischer  <aldot@gcc.gnu.org>

	* config/vx-common.h: Fix typo in comment.

2008-01-28  Ian Lance Taylor  <iant@google.com>

	PR c++/34862
	PR c++/33407
	* tree-ssa-copyrename.c (copy_rename_partition_coalesce): Don't
	coalesce pointers if they have different DECL_NO_TBAA_P values.
	* tree-ssa-copy.c (may_propagate_copy): Don't propagate copies
	between variables with different DECL_NO_TBAA_P values.

2008-01-28  Nathan Froyd  <froydnj@codesourcery.com>

	PR 31535
	* config/rs6000/rs6000.c (small_data_operand): Vectors and floats
	are not legitimate small data references on SPE targets.

2008-01-28  David Daney  <ddaney@avtrex.com>

	* doc/install.texi (mips-*-*): Recommend binutils 2.18.

2008-01-28  David Daney  <ddaney@avtrex.com>

	* doc/install.texi (--disable-libgcj-bc):  Reword documentation.

2008-01-27  Joseph Myers  <joseph@codesourcery.com>

	* config.gcc (strongarm*-*, ep9312*-*, xscale*-*, parisc*-*,
	m680[012]0-*, *-*-beos*, *-*-kaos*, *-*-linux*aout*,
	*-*-linux*libc1*, *-*-solaris2.[0-6], *-*-solaris2.[0-6].*,
	*-*-sysv*, *-*-windiss*, alpha*-*-unicosmk*, cris-*-aout,
	hppa1.1-*-pro*, hppa1.1-*-osf*, hppa1.1-*-bsd*,
	i[34567]86-sequent-ptx4*, i[34567]86-*-nto-qnx*,
	i[34567]86-*-sco3.2v5*, i[34567]86-*-uwin*, powerpc-*-chorusos*,
	vax-*-bsd*, vax-*-ultrix*): Mark obsolete.

2008-01-27  Bernhard Fischer  <aldot@gcc.gnu.org>

	* basic-block.h (condjump_equiv_p): Fix comment.

2008-01-27  Bernhard Fischer  <aldot@gcc.gnu.org>

	* tree-pretty-print.c (print_generic_decl, print_generic_stmt,
	print_generic_stmt_indented): Fix comment.

2008-01-27  Bernhard Fischer  <aldot@gcc.gnu.org>

	* configure.ac (__stack_chk_fail): Add detecion for availability
	of SSP in uClibc by checking if __UCLIBC_HAS_SSP__ is defined.
	* configure: Regenerate.

2008-01-26  Maxim Kuvyrkov  <maxim@codesourcery.com>

	PR middle-end/34688
	* final.c (output_addr_const): Handle TRUNCATE.

2008-01-26  Zdenek Dvorak  <ook@ucw.cz>

	PR target/34711
	* tree-ssa-loop-ivopts.c (comp_cost): New type.
	(zero_cost, infinite_cost): New constants.
	(struct cost_pair): Change type of cost to comp_cost.
	(struct iv_ca): Change type of cand_use_cost and cost to comp_cost.
	(new_cost, add_costs, sub_costs, compare_costs, infinite_cost_p):
	New functions.
	(set_use_iv_cost, force_expr_to_var_cost, force_var_cost,
	split_address_cost, ptr_difference_cost, difference_cost,
	get_computation_cost_at, get_computation_cost,
	determine_use_iv_cost_generic, determine_use_iv_cost_address,
	determine_use_iv_cost_condition, determine_use_iv_costs,
	cheaper_cost_pair, iv_ca_recount_cost, iv_ca_set_no_cp,
	iv_ca_set_cp, iv_ca_cost, iv_ca_new, iv_ca_dump, iv_ca_extend,
	iv_ca_narrow, iv_ca_prune, try_improve_iv_set, find_optimal_iv_set):
	Change type of cost to comp_cost.
	(determine_iv_cost): Increase cost of non-original ivs, instead
	of decreasing the cost of original ones.
	(get_address_cost): Indicate the complexity of the addressing mode 
	in comp_cost.
	(try_add_cand_for): Prefer using ivs not specific to some object.
	* tree-flow.h (force_expr_to_var_cost): Declaration removed.

2008-01-26  Peter Bergner  <bergner@vnet.ibm.com>
	    Janis Johnson  <janis187@us.ibm.com>

	PR target/34814
	* doc/tm.texi (TARGET_EXPAND_TO_RTL_HOOK): Document.
	(TARGET_INSTANTIATE_DECLS): Likewise.
	* target.h (expand_to_rtl_hook): New target hook.
	(instantiate_decls): Likewise.
	* function.c (instantiate_decl): Make non-static.  Rename to...
	(instantiate_decl_rtl): ... this.
	(instantiate_expr): Use instantiate_decl_rtl.
	(instantiate_decls_1): Likewise.
	(instantiate_decls): Likewise.
	(instantiate_virtual_regs: Call new instantiate_decls taget hook.
	* function.h (instantiate_decl_rtl): Add prototype.
	* cfgexpand.c (target.h): New include.
	(tree_expand_cfg): Call new expand_to_rtl_hook target hook.
	* target-def.h (TARGET_EXPAND_TO_RTL_HOOK): New define.
	(TARGET_INSTANTIATE_DECLS): Likewise.
	(TARGET_INITIALIZER): New target hooks added.
	* config/rs6000/rs6000-protos.h (rs6000_secondary_memory_needed_rtx):
	New prototype.
	* config/rs6000/rs6000.c (tree-flow.h): New include.
	(machine_function): Add sdmode_stack_slot field.
	(rs6000_alloc_sdmode_stack_slot): New function.
	(rs6000_instantiate_decls): Likewise.
	(rs6000_secondary_memory_needed_rtx): Likewise.
	(rs6000_check_sdmode): Likewise.
	(TARGET_EXPAND_TO_RTL_HOOK): Target macro defined.
	(TARGET_INSTANTIATE_DECLS): Likewise.
	(rs6000_hard_regno_mode_ok): Allow SDmode.
	(num_insns_constant): Likewise.  Handle _Decimal32 constants.
	(rs6000_emit_move): Handle SDmode.
	(function_arg_advance): Likewise.
	(function_arg): Likewise.
	(rs6000_gimplify_va_arg): Likewise.  Add special handling of
	SDmode var args for 32-bit compiles.
	(rs6000_secondary_reload_class): Handle SDmode.
	(rs6000_output_function_epilogue): Likewise.
	(rs6000_function_value): Simplify if statement.
	(rs6000_libcall_value): Likewise.
	* config/rs6000/rs6000.h (SLOW_UNALIGNED_ACCESS): Handle SDmode.
	(SECONDARY_MEMORY_NEEDED_RTX): Add define.
	* config/rs6000/dfp.md (movsd): New define_expand and splitter.
	(movsd_hardfloat): New define_insn.
	(movsd_softfloat): Likewise.
	(movsd_store): Likewise.
	(movsd_load): Likewise.
	(extendsddd2): Likewise.
	(extendsdtd2): Likewise.
	(truncddsd2): Likewise.
	(movdd_hardfloat64): Fixup comment.
	(UNSPEC_MOVSD_LOAD): New constant.
	(UNSPEC_MOVSD_STORE): Likewise.

2008-01-26  Jakub Jelinek  <jakub@redhat.com>

	PR c++/34965
	* c-pretty-print.c (pp_c_exclusive_or_expression): Handle
	TRUTH_XOR_EXPR.
	(pp_c_logical_and_expression): Handle TRUTH_AND_EXPR.
	(pp_c_logical_or_expression): Handle TRUTH_OR_EXPR.
	(pp_c_expression): Handle TRUTH_AND_EXPR, TRUTH_OR_EXPR
	and TRUTH_XOR_EXPR.

2008-01-26  David Edelsohn  <edelsohn@gnu.org>

	PR target/34794
	* config.gcc: Separate AIX 5.3 from AIX 6.1.
	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define
	__LONGDOUBLE128 too.
	* config/rs6000/aix61.h: New file.

2008-01-26  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR rtl-optimization/34959
	* optabs.c (expand_unop): In libcall notes, give ffs, clz, ctz,
	popcount and parity rtxes the same mode as their operand.
	Truncate or extend the result to the return value's mode
	if necessary.

2008-01-26  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR target/34981
	* config/mips/mips-protos.h (mips_expand_call): Return an rtx.
	* config/mips/mips.h (FIRST_PSEUDO_REGISTER): Rename FAKE_CALL_REGNO
	to GOT_VERSION_REGNUM.
	(CALL_REALLY_USED_REGISTERS): Set the GOT_VERSION_REGNUM entry to 0.
	(EPILOGUE_USES): Include GOT_VERSION_REGNUM if TARGET_USE_GOT.
	* config/mips/mips.c (mips_emit_call_insn): New function.
	(mips_call_tls_get_addr): Call mips_expand_call directly.
	(mips16_copy_fpr_return_value): Use mips_emit_call_insn rather than
	emit_call_insn.
	(mips16_build_call_stub): Likewise.  Return the call insn or null.
	(mips_expand_call): Update the call to mips16_build_call_stub
	accordingly and a remove redundant condition.  Assert that MIPS16
	stubs do not use lazy binding.  Use mips_emit_call_insn and return
	the call insn.
	(mips_extra_live_on_entry): Include GOT_VERSION_REGNUM if
	TARGET_USE_GOT.
	(mips_hard_regno_mode_ok_p): Allow SImode for GOT_VERSION_REGNUM.
	(mips_avoid_hazard): Remove hazard_set handling.
	* config/mips/mips.md (UNSPEC_EH_RECEIVER): Rename to...
	(UNSPEC_RESTORE_GP): ...this.
	(UNSPEC_SET_GOT_VERSION, UNSPEC_UPDATE_GOT_VERSION): New constants.
	(FAKE_CALL_REGNO): Rename to...
	(GOT_VERSION_REGNUM): ...this.
	(type): Add "ghost" value.  Add an associated insn reservation.
	(hazard_set): Remove.
	(exception_receiver): Rename to...
	(restore_gp): ...this and update the unspec identifier accordingly.
	(exception_receiver, nonlocal_got_receiver): New expanders.
	(load_call<mode>): Use GOT_VERSION_REGNUM.  Don't set
	FAKE_CALL_REGNO.  Remove hazard_set attribute.
	(set_got_version, update_got_version): New patterns.

2008-01-26  Danny Smith  <dannysmith@users.sourceforge.net>

	PR target/34970
	* config/i386/cygming.h (ASM_OUTPUT_LABELREF): Define.

2008-01-25  Joseph Myers  <joseph@codesourcery.com>

	PR other/31955
	* doc/install.texi2html: Generate gcc-vers.texi.

2008-01-25  DJ Delorie  <dj@redhat.com>

	* config/m32c/m32c.h (ASM_PREFERRED_EH_DATA_FORMAT): Define.

2008-01-25  Joseph Myers  <joseph@codesourcery.com>

	* config/c4x: Remove directory.
	* config.gcc (crx-*, mt-*): Mark obsolete.
	(c4x-*, tic4x-*, c4x-*-rtems*, tic4x-*-rtems*, c4x-*, tic4x-*,
	h8300-*-rtemscoff*, ns32k-*-netbsdelf*, ns32k-*-netbsd*,
	sh-*-rtemscoff*): Remove cases.
	* defaults.h (C4X_FLOAT_FORMAT): Remove.
	* real.c (encode_c4x_single, decode_c4x_single,
	encode_c4x_extended, decode_c4x_extended, c4x_single_format,
	c4x_extended_format): Remove.
	* real.h (c4x_single_format, c4x_extended_format): Remove.
	* doc/extend.texi (interrupt, naked): Remove mention of attributes
	on C4x.
	(Pragmas): Remove comment about c4x pragmas.
	* doc/install.texi (c4x): Remove target-specific instructions.
	* doc/invoke.texi (TMS320C3x/C4x Options): Remove.
	* doc/md.texi (Machine Constraints): Remove C4x documentation.
	* doc/tm.texi (MEMBER_TYPE_FORCES_BLK, c_register_pragma): Do not
	refer to C4x source files as examples.
	(C4X_FLOAT_FORMAT): Remove documentation.

2008-01-25  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (override_options): Reorder tests so that
	flag_pic gets enabled for -msep-data.

2008-01-25  Richard Guenther  <rguenther@suse.de>

	PR middle-end/32244
	* expr.c (expand_expr_real_1): Reduce result of LSHIFT_EXPR
	to its bitfield precision if required.

2008-01-25  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/33880
	* tree-nested.c (walk_omp_for): New function.
	(convert_nonlocal_reference, convert_local_reference): Call
	walk_omp_for on OMP_FOR.
	(convert_call_expr): Call walk_body on OMP_FOR's
	OMP_FOR_PRE_INIT_BODY.

2008-01-25  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34966
	* tree-ssa-math-opts.c (execute_cse_sincos_1): For all but
	default defs and PHI_NODEs we have to insert after the
	defining statement.

2008-01-24  Nick Clifton  <nickc@redhat.com>

	* config/stormy16/stormy16-lib2.c (MIN_UNITS_PER_WORD):
	Provide a default definition.
	(LIBGCC2_UNITS_PER_WORD): Likewise.

	* config/stormy16/stormy16.c: Include df.h for the prototype
	for df_regs_ever_live_p.
	(xstormy16_expand_builtin_va_start): Convert the stack offset
	into a component_ref and then use POINTER_PLUS_EXPR to add it
	to the incoming_virtual_args_rtx.
	(xstormy16_gimplify_va_arg_expr): Rename to
	xstormy16_gimplify_va_arg_expr.
	Use POINTER_PLUS_EXPR when performing pointer arithmetic.
	(TARGET_GIMPLIFY_VA_ARG_EXPR): Use renamed
	xstormy16_gimplify_va_arg_expr.
	Fix up some formatting issues.

	* config/stormy16/stormy16.c: (xstormy16_carry_plus_operand):
	Move to predicates.md.
	(xs_hi_general_operand): Likewise.
	(xs_hi_nonmemory_operand): Likewise.
	* config/stormy16/predicates.md:
	(xstormy16_carry_plus_operand): New predicate.
	(xs_hi_general_operand): New predicate.
	(xs_hi_nonmemory_operand): New predicate.
	* config/stormy16/stormy16-protos.h:
	(xstormy16_carry_plus_operand): Delete prototype.
	(xs_hi_general_operand): Likewise.
	(xs_hi_nonmemory_operand): Likewise.

	* config/storm16/stormy16.md (addhi3): Remove earlyclobber
	modifiers as they are no longer needed and they can trigger
	reload spill failures.

	* config/storm16/stormy16.md (ineqbranchsi): Replace match_dup
	with a match_operand in order to help reload.

	* config/storm16/stormy16.md (movhi_internal): Replace 'r'
	constraint with 'e' for the 8th alternative as this version of
	the mov.w instruction only accepts the lower 8 registers.

2008-01-25  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34856
	* simplifx-rtx.c (simplify_const_binary_operation) [VEC_CONCAT]:
	Consider only CONST_INT, CONST_DOUBLE and CONST_FIXED as constant
	vector elements.

2008-01-25  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/33333
	* gimplify.c (gimplify_omp_for): Gimplify OMP_FOR_PRE_BODY.

2008-01-25  Golovanevsky Olga  <olga@il.ibm.com>

	* ipa-struct-reorg.c (remove_str_allocs_in_func, remove_str_allocs):
	New functions.
	(remove_structure): Update allocations list before removing structure.
	
2008-01-25  Golovanevsky Olga  <olga@il.ibm.com>

	* ipa-struct-reorg.c (is_safe_cond_expr, 
	create_new_stmts_for_cond_expr): Use integer_zerop function,
	that recognize not only zero-pointer, but zero-integer too.

2008-01-25  Ben Elliston  <bje@au.ibm.com>

	PR other/22232
	* fixproto: Escape "." in sed expression that strips leading "./".

2008-01-24  H.J. Lu  <hongjiu.lu@intel.com>

	PR driver/34904
	* gcc.c (SWITCH_OK): Removed.
	(SWITCH_LIVE): Changed to bit.
	(SWITCH_FALSE): Likewise.
	(SWITCH_IGNORE): Likewise.
	(switchstr): Change live_cond to unsigned int.
	(process_command): Replace SWITCH_OK with 0.
	(do_self_spec): Likewise.
	(set_collect_gcc_options): Check the SWITCH_IGNORE bit.
	(give_switch): Likewise.
	(used_arg): Likewise.
	(do_spec_1): Set the SWITCH_IGNORE bit.
	(check_live_switch): Check both SWITCH_LIVE and SWITCH_FALSE
	bits.  Set the SWITCH_LIVE bit.

2008-01-24  Andreas Krebbel  <krebbel1@de.ibm.com>

	* config/s390/s390.h (MOVE_RATIO): Define new target macro.

2008-01-24  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR tree-optimization/34472
	* ipa-struct-reorg.c (safe_cond_expr_check): Change the DATA
	parameter to a "bool *" and set *DATA to false if there is
	an unsafe access.  Do not delete the structure here.
	(check_cond_exprs): Delete it here instead.
	(check_cond_exprs, exclude_cold_structs): Do not increase
	I when removing a structure.

2008-01-24  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34856
	* config/i386/i386.c (ix86_expand_vector_init): Consider only
	CONST_INT, CONST_DOUBLE and CONST_FIXED as constant vector elements.

2008-01-24  Jakub Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/34934
	* tree-stdarg.c (reachable_at_most_once): Use VEC vector instead of
	a fixed vector for stack.

2008-01-24  Ben Elliston  <bje@au.ibm.com>

	PR c++/25701
	* doc/gcc.texi (Software development): Add a direntry for g++.
	
2008-01-23  Hans-Peter Nilsson  <hp@axis.com>

	* config/cris/cris.h (CC1PLUS_SPEC, OPTIMIZATION_OPTIONS): Drop
	stale and straggling -fforce-addr comments above.

	* config/cris/cris.h (CRIS_SUBTARGET_VERSION, TARGET_VERSION): Don't
	define.
	* config/cris/linux.h (CRIS_SUBTARGET_VERSION): Don't define.
	* config/cris/aout.h (CRIS_SUBTARGET_VERSION): Don't define.

2008-01-23  Michael Matz  <matz@suse.de>

	PR debug/34895
	* dwarf2out.c (force_type_die): Use modified_type_die instead of
	gen_type_die.

2008-01-23  Andreas Krebbel  <krebbel1@de.ibm.com>

	* ipa-struct-reorg.c (create_new_malloc): Use pointer type as
	malloc result type.

2008-01-23 Anatoly Sokolov <aesok@post.ru>

	* config/avr/avr.c (avr_current_arch): New variable.
	(avr_arch_types): Add 'avr31' and 'avr51' entries.
	(avr_arch): Add 'ARCH_AVR31' and 'ARCH_AVR51'.
	(avr_mcu_types): Add 'avr31' and 'avr51' architectures.
	(avr_override_options): Init 'avr_current_arch'. 
	(base_arch_s): Move from here...
	* config/avr/avr.h (base_arch_s): ... here. Add new members 
	'have_elpm', 'have_elpmx', 'have_eijmp_eicall', 'reserved'. Rename 
	'mega' to 'have_jmp_call'.
	(TARGET_CPU_CPP_BUILTINS): Define "__AVR_HAVE_JMP_CALL__", 
	"__AVR_HAVE_RAMPZ__", 	"__AVR_HAVE_ELPM__" and  "__AVR_HAVE_ELPMX__"
	macros.
	(LINK_SPEC, CRT_BINUTILS_SPECS, ASM_SPEC): Add 'avr31' and 'avr51' 
	architectures.
	* config/avr/t-avr (MULTILIB_OPTIONS, MULTILIB_DIRNAMES, 
	MULTILIB_MATCHES): (Ditto.).

2008-01-23  Richard Guenther  <rguenther@suse.de>

	PR middle-end/31529
	* cgraphunit.c (cgraph_reset_node): Always mark the node
	not reachable if it is not queued already.

2008-01-23  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin-protos.h (WA_RETS, ENABLE_WA_RETS): New macros.
	* config/bfin/bfin.c (bfin_cpus): Add WA_RETS everywhere.
	(cputype_selected): New static variable.
	(bfin_handle_option): Set it if -mcpu is used.
	(override_option): Select default set of workarounds if no cpu type
	selected on the command line.
	(workaround_rts_anomaly): Only run if ENABLE_WA_RETS.

	From  Michael Frysinger  <michael.frysinger@analog.com>
	* config/bfin/bfin-protos.h (enum bfin_cpu_type): Add
	BFIN_CPU_BF547, BFIN_CPU_BF523, BFIN_CPU_BF524, and BFIN_CPU_BF526.

	* config/bfin/elf.h (LIB_SPEC): Use proper linker script
	for bf547, bf523, bf524, and bf526.
	* config/bfin/bfin.c (bfin_cpus[]): Add bf547,  bf523, bf524, and
	bf526.
	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Define
	__ADSPBF523__ for bf523, __ADSPBF524__ for bf524,
	__ADSPBF526__ for bf526, __ADSPBF52x__ for all three, as well as
	__ADSPBF547__ and __ADSPBF54x__ for bf547.
	* doc/invoke.texi (Blackfin Options): Document that
	-mcpu now accept bf547, bf523, bf524, and bf526.

2008-01-22  Eric Botcazou  <ebotcazou@adacore.com>

	PR rtl-optimization/34628
	* combine.c (try_combine): Stop and undo after the first combination
	if an autoincrement side-effect on the first insn has effectively
	been lost.

2008-01-22  David Edelsohn  <edelsohn@gnu.org>

	PR target/34529
	* config/rs6000/rs6000.c (rs6000_legitimate_offset_address_p):
	Offset addresses are not valid for Altivec or paired float modes.

2008-01-22  Jakub Jelinek  <jakub@redhat.com>

	PR c++/34607
	* c-parser.c (c_parser_omp_for_loop): Don't call c_finish_omp_for
	if DECL_INITIAL (decl) is error_mark_node.

	PR c++/34914
	* c-common.c (handle_vector_size_attribute): Only allow
	integral, scalar float and fixed point types.  Handle OFFSET_TYPE
	the same way as pointer, array etc. types.
	* tree.c (reconstruct_complex_type): Handle OFFSET_TYPE.

	PR c++/34917
	* tree.c (build_type_attribute_qual_variant): Call
	build_qualified_type if attributes are equal, but quals are not.

2008-01-22  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	PR 32102
	* doc/invoke.texi (-Wall): -Wall enables -Wstrict-overflow=1.
	* flags.h (warn_strict_aliasing): Remove.
	(warn_strict_overflow): Remove.
	* opts.c (warn_strict_aliasing): Remove.
	(warn_strict_overflow): Remove.
	* c-opts.c (c_common_handle_option): -Wall only sets
	-Wstrict-aliasing or -Wstrict-overflow if they are uninitialized.
	(c_common_post_options): Give default values to -Wstrict-aliasing
	and -Wstrict-overflow if they are uninitialized.
	* common.opt (Wstrict-aliasing): Specify Var and Init.
	(Wstrict-overflow): Likewise.

2008-01-22  Kenneth Zadeck <zadeck@naturalbridge.com>

	PR rtl-optimization/26854
	PR rtl-optimization/34400
	PR rtl-optimization/34884
	* ddg.c (create_ddg_dep_from_intra_loop_link): Use
	DF_RD->gen.
	* df.h (df_changeable_flags.DF_RD_NO_TRIM): Deleted
	(df_rd_bb_info.expanded_lr_out): Deleted
	* loop_invariant.c (find_defs): Deleted DF_RD_NO_TRIM flag.
	* loop_iv.c (iv_analysis_loop_init): Ditto.  * df-problems.c
	(df_rd_free_bb_info, df_rd_alloc, df_rd_confluence_n,
	df_rd_bb_local_compute, df_rd_transfer_function, df_rd_free):
	Removed code to allocate, initialize or free expanded_lr_out.
	(df_rd_bb_local_compute_process_def): Restructured to make more
	understandable.
	(df_rd_confluence_n): Removed code to no apply invalidate_by_call
	sets if the sets are being trimmed.

2008-01-22  H.J. Lu  <hongjiu.lu@intel.com>

	PR bootstrap/32287
	* configure.ac (ld_vers): Support GNU linker version xx.xx.*
	(as_vers): Likewise.
	* configure: Regenerated.

2008-01-22  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	PR middle-end/33092
	* tree-pass.h (pass_build_alias): New pass.
	* tree-ssa-alias.c (gate_build_alias): New.
	(pass_build_alias): New.
	* passes.c (init_optimization_passes): Add pass_build_alias after
	pass_create_structure_vars.

2008-01-22  Wolfgang Gellerich  <gellerich@de.ibm.com>

	* config/s390/s390.h (S390_TDC_POSITIVE_NORMALIZED_NUMBER):
	Renamed to S390_TDC_POSITIVE_NORMALIZED_BFP_NUMBER.
	(S390_TDC_NEGATIVE_NORMALIZED_NUMBER): Renamed to
	S390_TDC_NEGATIVE_NORMALIZED_BFP_NUMBER.
	(S390_TDC_POSITIVE_DENORMALIZED_NUMBER): Renamed to
	S390_TDC_POSITIVE_DENORMALIZED_BFP_NUMBER.
	(S390_TDC_NEGATIVE_DENORMALIZED_NUMBER): Renamed to
	S390_TDC_NEGATIVE_DENORMALIZED_BFP_NUMBER.
	(S390_TDC_POSITIVE_NORMALIZED_BFP_NUMBER): New constant.
	(S390_TDC_NEGATIVE_NORMALIZED_BFP_NUMBER): New constant.
	(S390_TDC_POSITIVE_DENORMALIZED_BFP_NUMBER): New constant.
	(S390_TDC_NEGATIVE_DENORMALIZED_BFP_NUMBER): New constant.
	* config/s390/s390.md (FP_ALL): New mode iterator.
	(_d): New mode attribute.
	("*signbit<mode>2>"): Changed mode of first operand.
	("isinf<mode>2"): Changed mode of first operand.
	("*TDC_insn"): Adaptation for DFP modes.

2008-01-22  Ben Elliston  <bje@au.ibm.com>

	* tree.c (check_qualified_type): Improve function description.

2008-01-21  Jason Merrill  <jason@redhat.com>

	PR c++/34196
	* tree.h (TRY_CATCH_IS_CLEANUP): New macro.
	* tree-eh.c (honor_protect_cleanup_actions): Strip TRY_CATCH_EXPR
	if it is set.

2008-01-21  DJ Delorie  <dj@redhat.com>

	* doc/tm.texi (HARD_REGNO_NREGS): Note that this macro must not
	return zero.

2008-01-21  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34856
	* tree-cfg.c (verify_expr): Allow all invariant expressions
	instead of just constant class ones as reference argument.
	* tree-ssa-loop-im.c (for_each_index): Handle CONSTRUCTOR
	like any other constant.
	* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Likewise.

2008-01-21  H.J. Lu  <hongjiu.lu@intel.com>

	* regmove.c (fixup_match_1): Update call crossed frequencies.

2008-01-21  Richard Guenther  <rguenther@suse.de>

	PR c/34885
	* tree-inline.c (setup_one_parameter): Deal with mismatched
	types using a VIEW_CONVERT_EXPR.

2008-01-21  Alon Dayan  <alond@il.ibm.com>
	    Olga Golovanevsky  <olga@il.ibm.com>
	
	PR tree-optimization/34701
	* ipa-struct-reorg.c (gen_size): Fix the malloc parameter calculation
	when the structure size is not a power of 2.

2008-01-20  Kenneth Zadeck <zadeck@naturalbridge.com>

	* doc/install.texi: Add doc for --enable-checking=df.
	
2008-01-20  Kaz Kojima  <kkojima@gcc.gnu.org>

	PR rtl-optimization/34808
	* emit-rtl.c (try_split): Handle REG_RETVAL notes.

2008-01-20  Richard Sandiford  <rsandifo@nildram.co.uk>

	* global.c (find_reg): Only compute EH_RETURN_DATA_REGNO once per
	input.

2008-01-19  Kenneth Zadeck <zadeck@naturalbridge.com>

	PR rtl-optimization/26854
	PR rtl-optimization/34400
	* ddg.c (create_ddg_dep_from_intra_loop_link): Do not use
	DF_RD->gen.
	* df.h (df_changeable_flags.DF_RD_NO_TRIM): New.
	(df_rd_bb_info.expanded_lr_out): New.
	* loop_invariant.c (find_defs): Added DF_RD_NO_TRIM flag.
	* loop_iv.c (iv_analysis_loop_init): Ditto.
	* df-problems.c (df_rd_free_bb_info, df_rd_alloc, df_rd_confluence_n,
	df_rd_bb_local_compute, df_rd_transfer_function, df_rd_free):
	Added code to allocate, initialize or free expanded_lr_out.
	(df_rd_bb_local_compute_process_def): Restructured to make
	more understandable.
	(df_rd_confluence_n): Add code to do nothing with fake edges and
	code to no apply invalidate_by_call sets if the sets are being trimmed.
	(df_lr_local_finalize): Renamed to df_lr_finalize.
	(df_live_local_finalize): Renamed to df_live_finalize.

2008-01-20  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR target/34831
	* config/mips/mips.md (div<mode>3): Use <recip_condition> when
	deciding whether to use reciprocal instructions.

2008-01-19  Uros Bizjak  <ubizjak@gmail.com>

	* dwarf2out.c (dwarf2out_switch_text_section): Do not call
	dwarf2out_note_section_used if cold_text_section is NULL.

2008-01-19  Jakub Jelinek  <jakub@redhat.com>

	PR gcov-profile/34610
	* tree-cfg.c (make_edges): Mark both outgoing edges from
	OMP_CONTINUE and from OMP_FOR as EDGE_ABNORMAL.
	* omp-low.c (expand_omp_for): Clear EDGE_ABNORMAL bits
	from OMP_FOR and OMP_CONTINUE outgoing edges.

	* tree-profile.c (tree_profiling): Return early if
	cfun->after_tree_profile != 0.  Set cfun->after_tree_profile
	at the end.
	* omp-low.c (expand_omp_parallel): Copy after_tree_profile
	from cfun to child_cfun.
	* function.h (struct function): Add after_tree_profile bit.

2008-01-19 Anatoly Sokolov <aesok@post.ru>

	* config/avr/avr.S (_exit): Disable interrupt.

2008-01-18  Kenneth Zadeck  <zadeck@naturalbridge.com>
	    Steven Bosscher  <stevenb.gcc@gmail.com>

	PR rtl-optimization/26854
	PR rtl-optimization/34400
	* df-problems.c (df_live_scratch): New scratch bitmap.
	(df_live_alloc): Allocate df_live_scratch when doing df_live.
	(df_live_reset): Clear the proper bitmaps.
	(df_live_bb_local_compute): Only process the artificial defs once
	since the order is not important.
	(df_live_init): Init the df_live sets only with the variables
	found live by df_lr.
	(df_live_transfer_function): Use the df_lr sets to prune the
	df_live sets as they are being computed.  
	(df_live_free): Free df_live_scratch.

2008-01-18  Ian Lance Taylor  <iant@google.com>

	* common.opt: Add fmerge-debug-strings.
	* dwarf2out.c (DEBUG_STR_SECTION_FLAGS): Test
	flag_merge_debug_strings rather than flag_merge_constants.
	* doc/invoke.texi (Option Summary): Mention
	-fmerge-debug-strings.
	(Debugging Options): Document -fmerge-debug-strings.

2008-01-18  Ian Lance Taylor  <iant@google.com>

	PR c++/33407
	* tree.h (DECL_IS_OPERATOR_NEW): Define.
	(struct tree_function_decl): Add new field operator_new_flag.
	* tree-inline.c (expand_call_inline): When inlining a call to
	operator new, force the return value to go into a variable, and
	set DECL_NO_TBAA_P on that variable.
	* c-decl.c (merge_decls): Merge DECL_IS_OPERATOR_NEW flag.

2008-01-18  Uros Bizjak  <ubizjak@gmail.com>

	PR debug/34484
	* dwarf2out.c (dwarf2out_switch_text_section): Do not guard with
	DWARF2_DEBUGGING_INFO.
	(dwarf2out_note_section_used): Ditto.  Add prototype.
	(have_multiple_function_sections, text_section_used,
	cold_text_section_used, *cold_text_sections): Move declarations
	before their uses.

2008-01-17  Bob Wilson  <bob.wilson@acm.org>

	* config/xtensa/unwind-dw2-xtensa.h (_Unwind_FrameState): Remove pc
	field and add signal_ra.
	* config/xtensa/unwind-dw2-xtensa.c (uw_frame_state_for): Remove
	assignments to frame state pc.  Move end of stack check after
	MD_FALLBACK_FRAME_STATE_FOR.
	(uw_update_context_1): Use frame state signal_regs if set, instead
	of checking signal_frame flag.
	(uw_update_context): Use frame state signal_ra if set.
	* config/xtensa/linux.h (MD_UNWIND_SUPPORT): Define.
	* config/xtensa/linux-unwind.h: New file.

2008-01-18  Bernhard Fischer  <aldot@gcc.gnu.org>

	* modulo-sched.c (get_sched_window): Fix comment typo.

2008-01-17  Andrew MacLeod  <amacleod@redhat.com>

	PR tree-optimization/34648
	* tree-ssa-sccvn.c (visit_use): Expressions which can throw are varying.

2008-01-17  Anatoly Sokolov <aesok@post.ru>

	* config/avr/avr.h (LINK_SPEC): Support -mrelax and -mpmem-wrap-around.
	* config/avr/avr.opt (mrelax, mpmem-wrap-around): Add.

2008-01-17  Seongbae Park  <seongbae.park@gmail.com>

	PR rtl-optimization/34400
	* df-core.c (df_worklist_dataflow_overeager,
	df_worklist_dataflow_doublequeue): New functions.
	(df_worklist_dataflow): Two different worklist solvers.
	* params.def (PARAM_DF_DOUBLE_QUEUE_THRESHOLD_FACTOR):
	New param.

2008-01-16  Sebastian Pop  <sebastian.pop@amd.com>

	PR testsuite/34821
	* doc/invoke.texi: Document the dependence on pthread for fopenmp
	and ftree-parallelize-loops.

2008-01-17  Mircea Namolaru  <namolaru@il.ibm.com>

	PR rtl-optimization/34826
	* loop-doloop (doloop_modify): Update the REG_BR_PROB note.

2008-01-17  Andreas Krebbel  <krebbel1@de.ibm.com>

	* global.c (find_reg): Mark the eh regs as used if necessary.
	* ra-conflict.c (global_conflicts): Set no_eh_reg flag.
	* ra.h (struct allocno): no_eh_reg field added.  Changed
	no_stack_reg type to bitfield.

2008-01-17  Eric Botcazou  <ebotcazou@adacore.com>

	* tree.c (substitute_in_expr): Add missing 'break'.

2008-01-17  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34825
	* tree-ssa-math-opts.c (is_division_by): Do not recognize
	x / x as division to handle.

2008-01-16  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	* pa64-hpux.h (LIB_SPEC): Add "-lpthread" in shared links if "-mt" or
	"-pthread" is specified.
	* pa-hpux11.h (LIB_SPEC): Likewise.

2008-01-16  Janis Johnson  <janis187@us.ibm.com>
	    Peter Bergner  <bergner@vnet.ibm.com>

	PR rtl-optimization/33796
	* sparseset.c (sparseset_alloc): Use xcalloc rather than xmalloc.

2008-01-16  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	PR libgfortran/34699
	* pa-hpux.h (LINK_SPEC): Only search /lib/pa1.1 and /usr/lib/pa1.1 on
	static links.
	* pa-hpux10.h (LINK_SPEC): Likewise.
	* pa-hpux11.h (LINK_SPEC): Don't search /lib/pa1.1 and /usr/lib/pa1.1.

2008-01-16  Richard Guenther  <rguenther@suse.de>

	PR middle-end/32628
	* fold-const.c (fold_convert_const_int_from_int): Do not
	set overflow if that occured only because of a sign extension
	change when converting from/to a sizetype with the same
	precision and signedness.

2008-01-16  Uros Bizjak  <ubizjak@gmail.com>

	PR debug/34249
	* dwarf2out.c (output_call_frame_info): Move output of FDE initial
	location address to the correct place.  Update copyright year.

2008-01-16  Sebastian Pop  <sebastian.pop@amd.com>

	* lambda-code.c (lambda_transform_legal_p): Handle the case of
	no dependences in the dependence_relations vector.

2008-01-16  Jan Hubicka  <jh@suse.cz>

	PR rtl-optimization/31396
	* regstat.c (regstat_bb_compute_ri): Compute FREQ_CALLS_CROSSED.
	* cfg.c (dump_reg_info): Print it.
	* regs.h (struct reg_info_t): add freq_calls_crossed.
	(REG_FREQ_CALLS_CROSSED): New macro.
	* global.c (global_alloc): Compute freq_calls_crossed for allocno.
	(find_reg): Update call of CALLER_SAVE_PROFITABLE.
	* regmove.c (optimize_reg_copy_1, optimize_reg_copy_2, fixup_match_2,
	regmove_optimize): Update call crossed frequencies.
	* local-alloc.c (struct qty): Add freq_calls_crossed.
	(alloc_qty): Copute freq_calls_crossed.
	(update_equiv_regs, combine_regs): Update REG_FREQ_CALLS_CROSSED.
	(find_free_reg): Update call of CALLER_SAVE_PROFITABLE.
	* ra.h (struct allocno): Add freq_calls_crossed.

2008-01-16  Sebastian Pop  <sebastian.pop@amd.com>

	* gcc.c (LINK_COMMAND_SPEC): Add includes and link options for
	libgomp when compiling with ftree-parallelize-loops.
	(GOMP_SELF_SPECS): Add -pthread for ftree-parallelize-loops.

2008-01-16  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34769
	* tree-data-ref.c (initialize_matrix_A): Revert fix for PR34458.
	* tree.c (int_cst_value): Instead make this function more
	permissive in what it accepts as valid input.  Document this
	function always sign-extends the value.

2008-01-16  Jakub Jelinek  <jakub@redhat.com>
	    Richard Guenther  <rguenther@suse.de>

	PR c/34668
	* gimplify.c (fold_indirect_ref_rhs): Rename to ...
	(gimple_fold_indirect_ref_rhs): ... this.
	(gimple_fold_indirect_ref): New function with foldings
	that preserve lvalueness.
	(gimplify_modify_expr_rhs): Call gimple_fold_indirect_ref_rhs.
	* tree-flow.h (gimple_fold_indirect_ref): Declare.
	* tree-inline.c (copy_body_r): Use gimple_fold_indirect_ref
	to fold an INDIRECT_REF, fall back to the old use of
	fold_indirect_ref_1.

2008-01-16  Sebastian Pop  <sebastian.pop@amd.com>

	* tree-data-ref.c (subscript_dependence_tester_1): Call 
	free_conflict_function.
	(compute_self_dependence): Same.

2008-01-16  Uros Bizjak  <ubizjak@gmail.com>

	PR debug/34249
	* debug.h (dwarf2out_switch_text_section): Move declaration from ...
	* dwarf2out.c (dwarf2out_switch_text_section): ... here.  Make
	function global.
	* final.c (final_scan_insn) [NOTE_INSN_SWITCH_TEXT_SECTIONS]:
	Depending on dwarf2out_do_frame, call dwarf2out_switch_text_section
	for DWARF2_UNWIND_INFO targets.

2008-01-16  Richard Guenther  <rguenther@suse.de>

	PR c/34768
	* c-typeck.c (common_pointer_type): Do not merge inconsistent
	type qualifiers for function types.

2008-01-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>

	* tree-parloops.c (gen_parallel_loop): Fix ommision of declaration for
	loop_iterator li from previous commit.

2008-01-15  Sebastian Pop  <sebastian.pop@amd.com>

	* tree-parloops.c (gen_parallel_loop): Free loop bound estimations.

2008-01-12  Sebastian Pop  <sebastian.pop@amd.com>

	* tree-parloops.c (loop_has_blocks_with_irreducible_flag): New.
	(parallelize_loops): Don't parallelize irreducible components.

2008-01-14  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	PR c++/24924
	* c-opts (c_common_post_options): Do not enable CPP
	flag_pedantic_errors by default.
	
2008-01-14  Eric Botcazou  <ebotcazou@adacore.com>

	PR rtl-optimization/31944
	* cse.c (remove_pseudo_from_table): New function.
	(merge_equiv_classes): Use above function to remove pseudo-registers.
	(invalidate): Likewise.

2008-01-13  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34601
	* emit-rtl.c (set_reg_attrs_for_decl_rtl): Use DECL_MODE
	instead of TYPE_MODE to deal with calls from expand_one_error_var.

2008-01-13  Uros Bizjak  <ubizjak@gmail.com>

	* gcse.c (cprop_jump): Call validate_unshare_change instead of
	validate_change to unshare the source of the PC set.

2008-01-12  Jan Hubicka  <jh@suse.cz>

	PR middle-end/32135
	* tree-ssa-ccp.c (maybe_fold_offset_to_array_ref): Do not construct
	references above array bounds.  This might trigger bounds checks for
	pointers to arrays.

2008-01-12  Sebastian Pop  <sebastian.pop@amd.com>

	* tree-ssa-ter.c (free_temp_expr_table): Free num_in_part and
	new_replaceable_dependencies.

2008-01-12  Doug Kwan  <dougkwan@google.com>

	* c-decl.c: (grokdeclarator): Use OPT_Wignored_qualifiers
	instead of OPT_Wreturn_type in warning due to ignored return type
	qualifiers.
	* c-opt.c (c_common_post_option): Add -Wignored-qualifiers to
	options included in -Wextra.
	* c.opt: New option -Wignored_qualifiers.
	* doc/invoke.texi (Warning Options, -Wextra): Add new option
	-Wignore_qualifiers.
	(-Wignored-qualifiers): Document.
	(-Wreturn-type): Remove description of functionality now handled
	by -Wignored-qualifiers.

2008-01-12  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/33788
	* fold-const.c (fold_unary) <VIEW_CONVERT_EXPR>: Fold an existing
	NOP_EXPR if it is between integral types with the same precision.

2008-01-12  Jan Hubicka  <jh@suse.cz>

	PR other/28023
	* invoke.texi (max-inline-recursive-depth): Fix default value.

2008-01-12  Zdenek Dvorak  <ook@ucw.cz>

	* tree-parloops.c (transform_to_exit_first_loop): Cast nit to the
	correct type.

2008-01-11  Bob Wilson  <bob.wilson@acm.org>
	
	* config/xtensa/xtensa.c (override_options): Set flag_shlib.
	
2008-01-11  James E. Wilson  <wilson@specifix.com>

	PR target/26015
	* config/vax/elf.h (FRAME_POINTER_CFA_OFFSET): Define.

2008-01-11  Anatoly Sokolov <aesok@post.ru>

	* config/avr/avr.c (expand_prologue, expand_epilogue): Don't 
	save/restore frame pointer register and don't use 'call-prologues' 
	optimization in function with "OS_task" attribute.

2008-01-11  Eric Botcazou  <ebotcazou@adacore.com>

	PR middle-end/31309
	* expr.c (copy_blkmode_from_reg): Use a mode suited to the size
	when copying to memory.

2008-01-11  Steven Bosscher  <stevenb.gcc@gmail.com>

	PR rtl-optimization/30905
	* cfgcleanup.c: Include dce.h
	(crossjumps_occured): New global variable.
	(try_crossjump_bb): Exit loop after finding a fallthru edge.
	If something changed, set crossjumps_occured to true.
	(try_optimize_cfg): Clear crossjumps_occured at the beginning.
	Don't add/remove fake edges to exit here...
	(cleanup_cfg): ...but do it here, when crossjumping.
	Run a fast DCE when successful crossjumps occured in the latest
	iteration of try_optimize_cfg.

2008-01-11  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-sccvn.c (struct vn_binary_op_s): Move hashcode near opcode.
	(struct vn_unary_op_s): Likewise.
	(vn_reference_insert): Free old reference on hash collision.

2008-01-10  Raksit Ashok  <raksit@google.com>

	PR rtl-optimization/27971
	* combine.c (find_split_point): Split PLUS expressions which are
	inside a MEM rtx, and whose first operand is complex.

2008-01-10  DJ Delorie  <dj@redhat.com>

	* config/m32c/m32c.c (m32c_hard_regno_nregs_1): Renamed from...
	(m32c_hard_regno_nregs): ...this, which is now a wrapper.
	(m32c_hard_regno_ok): Call the underlying function.

2008-01-10  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34683
	* tree-cfg.c (tree_merge_blocks): Do not go through the
	full-blown folding and stmt updating path if we just deal
	with virtual operands.
	* tree-ssa-copy.c (may_propagate_copy): Do not short-cut
	test for abnormal SSA_NAMEs.

2008-01-10  Andreas Krebbel  <krebbel1@de.ibm.com>

	PR middle-end/34641
	* reload.c (push_reload): Add assertions.  All constants from
	reg_equiv_constant should have been used for replacing the respective
	pseudo earlier.
	(find_reloads_address): Invoke find_reloads_address_part for
	constant taken from the reg_equiv_constant array.

2008-01-10  Steven Bosscher  <stevenb.gcc@gmail.com>

	* tree-ssa-sccvn.h (struct vn_ssa_aux): Make the most accessed
	field (valnum) the first in the struct.  Replace bools with
	unit bit fields.

2008-01-10  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34651
	* tree-sra.c (sra_build_assignment): Sanitize.  Use the correct
	types and ordering for masking and converting.

2008-01-09  Sebastian Pop  <sebastian.pop@amd.com>

	PR tree-optimization/34017
	* lambda-code.c (lambda_loopnest_to_gcc_loopnest): Generate code
	also for PHI_NODE expressions.

2008-01-09  Jan Hubicka  <jh@suse.cz>

	PR tree-optimization/34708
	* tree-inline.c (estimate_num_insns_1): Compute cost of SWITCH_EXPR
	based on number of case labels.
	(init_inline_once): Remove switch_cost.
	* tree-inline.h (eni_weights_d): Remove switch_cost.

2008-01-09  Richard Guenther  <rguenther@suse.de>
	Andrew Pinski  <andrew_pinski@playstation.sony.com>

	PR middle-end/30132
	* gimplify.c (gimplify_cond_expr): Do not create an addressable
	temporary if an rvalue is ok or an lvalue is not required.

2008-01-09  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34458
	* tree-data-ref.c (initialize_matrix_A): Use tree_low_cst,
	adjust return type.

2008-01-09  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34679
	* tree.c (host_integerp): Check for sizetype only if the
	type is an integer type.

2008-01-09  Steven Bosscher  <stevenb.gcc@gmail.com>

	PR debug/26364
	* opts.c (decode_options): Disable inlining of functions called
	once if not in unit-at-a-time mode.

2008-01-09  Alexandre Oliva  <aoliva@redhat.com>

	* Makefile.in (dse.o): Remove duplicate $(RECOG_H) dependency.

2008-01-08  Richard Guenther  <rguenther@suse.de>

	PR middle-end/31863
	* tree-ssa-structalias.c (push_fields_onto_fieldstack): Bail
	out early if the result will be unused.

2008-01-08  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34709
	Revert:

	2008-01-05  Uros Bizjak  <ubizjak@gmail.com>
	* config/i386/i386.c (ix86_builtin_reciprocal): Remove check
	for TARGET_RECIP.	
	
2008-01-08  Jan Sjodin  <jan.sjodin@amd.com>
	
	* config/i386/i386.c (k8_cost, amdfam10_cost): Branch costs
	for vectorization tuned.
	
2008-01-08  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34683
	* tree-ssa-operands.c (operand_build_cmp): Export.
	* tree-ssa-operands.h (operand_build_cmp): Declare.
	* tree-vn.c (vuses_compare): Remove.
	(sort_vuses): Use operand_build_cmp.
	(sort_vuses_heap): Likewise.
	* tree-ssa-sccvn.c (vuses_to_vec): Use VEC_reserve, not VEC_alloc
	to re-use old VEC if available.  Do not sort already sorted VUSEs.
	(vdefs_to_vec): Do not sort already sorted VDEFs.

2008-01-08  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/34694
	* omp-low.c (copy_var_decl): Copy also DECL_SOURCE_LOCATION.

2008-01-08  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34702
	* doc/invoke.texi (i386 and x86-64 Options) [mrecip]: Document
	limitations of reciprocal sequences on x86 targets.

2008-01-08  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34683
	* tree-flow-inline.h (var_ann): Remove overzealous asserts.

2008-01-07  Jakub Jelinek  <jakub@redhat.com>

	PR target/34622
	* config/darwin.c (darwin_mergeable_string_section): Don't use
	.cstring if int_size_in_bytes != TREE_STRING_LENGTH.

2008-01-07  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34682
	* config/i386/i386.md (neg<mode>2): Rename from negsf2, negdf2 and
	negxf2.  Macroize expander using X87MODEF mode iterator.  Change
	predicates of op0 and op1 to register_operand.
	(abs<mode>2): Rename from abssf2, absdf2 and negxf2.  Macroize
	expander using X87MODEF mode iterator.  Change predicates of
	op0 and op1 to register_operand.
	("*absneg<mode>2_mixed", "*absneg<mode>2_sse"): Rename from
	corresponding patterns and macroize using MODEF macro.  Change
	predicates of op0 and op1 to register_operand and remove
	"m" constraint. Disparage "r" alternative with "!".
	("*absneg<mode>2_i387"): Rename from corresponding patterns and
	macroize using X87MODEF macro.  Change predicates of op0 and op1
	to register_operand and remove "m" constraint.  Disparage "r"
	alternative with "!".
	(absneg splitter with memory operands): Remove.
	("*neg<mode>2_1", "*abs<mode>2_1"): Rename from corresponding
	patterns and macroize using X87MODEF mode iterator.
	* config/i386/sse.md (negv4sf2, absv4sf2, neg2vdf2, absv2df2):
	Change predicate of op1 to register_operand.
	* config/i386/i386.c (ix86_expand_fp_absneg_operator): Remove support
	for memory operands.

2008-01-07  Nathan Froyd  <froydnj@codesourcery.com>

	* config/rs6000/rs6000.h (ASM_CPU_SPEC): Add clause for mcpu=8548.

2008-01-07  Richard Guenther  <rguenther@suse.de>

	* basic-block.h (struct edge_def): Pair dest_idx with goto_locus
	fields.

2008-01-07  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34683
	* tree-ssa-sccvn.c (vuses_to_vec): Pre-allocate the vector of
	VOPs of the needed size to save memory.  Use VEC_quick_push
	to save compile-time.
	(vdefs_to_vec): Likewise.

2008-01-07  Sa Liu  <saliu@de.ibm.com>

	* config/spu/spu.md (divdf3): Genetate inline code for double
	division.  The implementation doesn't handle INF or NAN, therefore it
	only applies when -ffinite-math-only is given.

2008-01-06  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/34680
	* c-cppbuiltin.c (c_cpp_builtins): Define __GXX_RTTI, if appropriate.
	* doc/cpp.texi ([Common Predefined Macros]): Document.

2008-01-06  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_emit_swsqrtsf): Use negative constants in
	order to use commutative addition instead of subtraction.

2008-01-06  Andrew Pinski  <andrew_pinski@playstation.sony.com>
	    Mircea Namolaru  <namolaru@il.ibm.com>
	    Vladimir Yanovsky  <yanov@il.ibm.com>
	    Revital Eres  <eres@il.ibm.com>

	PR tree-optimization/34263
	* tree-outof-ssa.c (process_single_block_loop_latch,
	contains_tree_r): New functions.
	(analyze_edges_for_bb): Call process_single_block_loop_latch
	function to empty single-basic-block latch block if possible.

2008-01-05  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_builtin_reciprocal): Remove check
	for TARGET_RECIP.
	(ix86_emit_swsqrtsf): Do not filter out infinity for rsqrt expansion.

2008-01-05  Richard Sandiford  <rsandifo@nildram.co.uk>

	* c-omp.c (check_omp_for_incr_expr): Handle CONVERT_EXPR.

2008-01-05  Richard Sandiford  <rsandifo@nildram.co.uk>

	* config/mips/mips.c (mips_in_small_data_p): Reinstate size > 0 check.

2008-01-05  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/34618
	* tree-outof-ssa.c (create_temp): Copy over DECL_GIMPLE_REG_P
	flag from T.

2008-01-05  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34673
	* config/i386/i386.c (ix86_emit_swsqrtsf): Swap input operands
	in the call to gen_rtx_NE.  Remove unneeded VECTOR_MODE_P check.
	Update copyright year.

	* config/i386/i386.md (rsqrtsf2): Enable for TARGET_SSE_MATH.
	Update copyright year.
	* config/i386/sse.md (rsqrtv4sf2): Ditto. Unconditionally expand
	using NR fixup.

2008-01-05  Zhouyi Zhou  <zhouzhouyi@FreeBSD.org>

	* tree-vrp.c (find_conditional_asserts): Remove redundant check that
	edge does not point to current bb before changing need_assert.

2008-01-04  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34029
	* tree-cfg.c (verify_expr): Do not look inside ADDR_EXPRs
	for verifying purposes if they are is_gimple_min_invariant.

2008-01-04  Aldy Hernandez  <aldyh@redhat.com>

	PR tree-optimization/34448
	PR tree-optimization/34465
	* gimplify.c (gimplify_init_constructor): Add new parameter
	notify_temp_creation.  Use it.
	(gimplify_modify_expr_rhs): Take volatiles into account when
	optimizing constructors.
	Do not optimize constructors if gimplify_init_constructor will dump to
	memory.
	* gcc.dg/tree-ssa/pr32901.c: Tests const volatiles.
	* gcc.c-torture/compile/pr34448.c: New.

2008-01-04  Jakub Jelinek  <jakub@redhat.com>

	PR gcov-profile/34609
	* tree-inline.c (declare_return_variable): Set TREE_ADDRESSABLE on
	return_slot if result is TREE_ADDRESSABLE.

2008-01-04  Richard Sandiford  <rsandifo@nildram.co.uk>

	* config/mips/mips.md (sqrt_condition): Tweak comment.
	(recip_condition): Likewise.  Require TARGET_FLOAT64 for DFmode.

2008-01-03  Tom Tromey  <tromey@redhat.com>

	PR c/34457
	* c-common.c (c_type_hash): Handle VLAs.

2008-01-03  Jan Hubicka  <jh@suse.cz>

	PR tree-optimization/31081
	* tree-inline.c (remap_ssa_name): Initialize uninitialized SSA vars to
	0 when inlining and not inlining to first basic block.
	(remap_decl): When var is initialized to 0, don't set default_def.
	(expand_call_inline): Set entry_bb.
	* tree-inline.h (copy_body_data): Add entry_bb.

2008-01-03  Jakub Jelinek  <jakub@redhat.com>

	PR c++/34619
	* cgraphunit.c (cgraph_build_static_cdtor): set_cfun back to NULL
	before returning.

	PR tree-optimization/29484
	* tree-inline.c (inline_forbidden_p_2): New function.
	(inline_forbidden_p): Disallow inlining if some static var
	has an address of a local LABEL_DECL in its initializer.
	* doc/extend.texi (Labels as Values): Document &&foo behaviour
	vs. inlining.

2008-01-03  Sebastian Pop  <sebastian.pop@amd.com>

	PR tree-optimization/34635
	* tree-data-ref.c (add_other_self_distances): Make sure that the
	evolution step is constant.

2008-01-03  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/34608
	* omp-low.c (expand_omp_parallel): Purge dead EH edges in the child fn.

2008-01-02  Richard Sandiford  <rsandifo@nildram.co.uk>

	* tree-sra.c (scalarize_init): Insert the generate_element_init
	statements after the generate_element_zero statements.

2008-01-02  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34093
	PR middle-end/31976
	* tree-ssa-operands.c (ssa_operand_alloc): Also allocate a buffer
	for very large number of operands instead of ICEing.

2008-01-02  Arthur Norman <acn1@cam.ac.uk>

	PR target/34013
	* gcc/config/i386/i386.c (ix86_expand_prologue): Save red-zone
	while stack probing.

2008-01-01  Douglas Gregor  <doug.gregor@gmail.com>

	* c-opts.c (sanitize_cpp_opts): Don't warn about "long long" when
	in C++0x mode.

2008-01-01  Volker Reichelt  <v.reichelt@netcologne.de>

	PR libmudflap/26442
	* tree-mudflap.c (mx_register_decls): Guard warning by
	!DECL_ARTIFICIAL check.

2008-01-01  Jakub Jelinek  <jakub@redhat.com>

	* config/i386/sse.md (sse5_pperm, sse5_pperm_pack_v2di_v4si,
	sse5_pperm_pack_v4si_v8hi, sse5_pperm_pack_v8hi_v16qi,
	sse5_perm<mode>): Fix constraints.
