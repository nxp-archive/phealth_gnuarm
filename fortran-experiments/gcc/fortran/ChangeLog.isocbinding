Welcome to the ISO_C_BINDING sandbox!

Please comment here the changes you make to the code, dated with every
commit to the branch, so that we don't get lost.

2007-02-26  Christopher D. Rickett  <crickett@lanl.gov>

	* gcc/testsuite/gfortran.dg/test_bind_c_parens.f03: New test case
	to make sure gfortran requires the parens for a subroutine that is
	marked BIND(C).
	* gcc/testsuite/gfortran.dg/bind_c_usage_5.f03: New test case to
	verify that gfortran catches duplicate BIND(C) attributes.
	* gcc/testsuite/gfortran.dg/bind_c_usage_6.f03: New test case for
	BIND(C) attribute only being applied to variables or common blocks.
	* gcc/testsuite/gfortran.dg/c_size_t_driver.c: Main program for
	c_size_t_test.
	* gcc/testsuite/gfortran.dg/binding_label_tests_2.f03: Updated
	expected error messages.
	* gcc/testsuite/gfortran.dg/c_size_t_test.f03: New test case to
	verify that c_size_t equals sizeof(size_t).
	* gcc/testsuite/gfortran.dg/binding_label_tests_3.f03: New test
	case for verifying that binding labels don't collide with other
	binding labels or global symbol names.
	* gcc/testsuite/gfortran.dg/binding_label_tests_4.f03: Ditto.
	* gcc/testsuite/gfortran.dg/binding_label_tests_5.f03: Ditto.
	* gcc/testsuite/gfortran.dg/binding_label_tests_6.f03: Ditto.
	* gcc/testsuite/gfortran.dg/binding_label_tests_7.f03: Ditto.
	* gcc/testsuite/gfortran.dg/binding_label_tests_8.f03: Ditto.
	* gcc/testsuite/gfortran.dg/bind_c_usage_3.f03: Whitespace.
	* gcc/fortran/symbol.c: Added check to gfc_add_is_bind_c to make
	sure the symbol isn't already marked as BIND(C).  Added flag to
	gfc_add_is_bind_c to say if the BIND(C) is coming from a procedure
	declaration.  Fixed whitespace.
	* gcc/fortran/decl.c: Removed call to gfc_add_is_bind_c from
	gfc_match_bind_c; the call is now in the routines that call
	gfc_match_bind_c. Added another check for preventing multiple
	identifiers for a BIND(C) that has a NAME= specifier (there was
	one case that wasn't being checked).  Split
	gfc_match_attr_spec_stmt into gfc_match_bind_c_stmt and
	gfc_match_proc_decl_stmt.  The two new functions are now called
	from parse.c.  Added error checking for BIND(C).  Improved error
	messages for gfc_match_bind_c.  Fixed whitespace.
	* gcc/fortran/gfortran.h: Updated prototype for
	gfc_add_is_bind_c.  Added a sym_name field to gfc_gsymbol for use
	with global symbols created for binding labels.
	* gcc/fortran/iso-c-binding.def: Set c_size_t equal to
	gfc_index_integer_kind because size_type_node is not set in time
	for gfc_init_kinds.
	* gcc/fortran/resolve.c: Added gfc_verify_binding_labels to
	report errors if binding labels collide with another binding label
	or global symbol name.
	* gcc/fortran/match.c: Improved gfc_match_name_C for better error
	reporting.
	* gcc/fortran/match.h: Removed gfc_match_attr_spec_stmt.  Added
	gfc_match_bind_c_stmt and gfc_match_proc_decl_stmt.
	* gcc/fortran/parse.c: Added calls to gfc_match_bind_c_stmt and
	gfc_match_proc_decl_stmt in decode_statement.

2007-02-21  Christopher D. Rickett  <crickett@lanl.gov>

	* fortran/symbol.c: Whitespace fixes.
	* fortran/decl.c: Ditto.

2007-02-21  Christopher D. Rickett  <crickett@lanl.gov>
	* testsuite/gfortran.dg/c_loc_tests_2.f03: New test case for
	the c_loc function.
	* testsuite/gfortran.dg/bind_c_implicit_vars.f03: New test
	case for warning user about implicitly typed variables if they
	need to be C interoperable.
	* testsuite/gfortran.dg/interop_params.f03: Updated test case
	to change the expected line of the warning messages.
	* testsuite/gfortran.dg/bind_c_array_params.f03: New test case
	to verify that gfortran reports errors if the user declares
	assumed-shape or deferred-shape dummy arguments for a BIND(C)
	procedure.  Only assumed-size or explicitly-shaped arrays are
	allowed.
	* testsuite/gfortran.dg/bind_c_dts_2.f03: New test case that
	shows gfortran accepting a BIND(C) derived type that contains
	another BIND(C) derived type.  This was previously reported as an
	error.
	* testsuite/gfortran.dg/binding_label_tests_2.f03: New test
	case to verify that gfortran reports error messages for invalid
	binding labels (error in the NAME= specifier).
	* testsuite/gfortran.dg/binding_label_tests.f03: New test case
	for verifying that gfortran accepts all valid binding labels.
	* testsuite/gfortran.dg/bind_c_dts_3.f03: New test case for
	verifying that gfortran correctly checks BIND(C) derived types
	that are nested within another BIND(C) derived type for being C
	interoperable.
	* testsuite/gfortran.dg/iso_c_binding_rename_1_driver.c: Main
	program for the iso_c_binding_rename_1 test.
	* testsuite/gfortran.dg/iso_c_binding_rename_1.f03: New test
	case to check that gfortran allows the symbols in iso_c_binding to
	be renamed.
	* testsuite/gfortran.dg/iso_c_binding_rename_2_driver.c: Main
	program for the iso_c_binding_rename_2 test.
	* testsuite/gfortran.dg/iso_c_binding_rename_2.f03: New test
	case to check that gfortran allows the symbols in iso_c_binding to
	be renamed.
	* testsuite/gfortran.dg/bind_c_dts_2_driver.c: Main program
	for the bind_c_dts_2 test case.
	* testsuite/gfortran.dg/bind_c_usage_2.f03: Updated test case.
	* testsuite/gfortran.dg/c_loc_tests_2_funcs.c: C functions
	that go with c_loc_tests_2.f03.
	* testsuite/gfortran.dg/bind_c_usage_3.f03: Updated test case.
	* fortran/symbol.c: Added warnings for implicitly typed
	variables that need to be C interoperable.  Added
	get_iso_c_binding_dt() for retrieving derived types from
	namespace, independent of the type name.  Changed
	verify_bind_c_derived_type to allow type components.  Updated
	warning/error messages in many cases to not use the *_now
	versions.  Removed dead code: gen_c_interop_kind_sym,
	gen_given_kinds, gen_c_interop_int_kinds,
	gen_c_interop_logical_kinds, gen_c_interop_real_kinds,
	gen_special_c_chars, gen_c_interop_char_kinds,
	gen_c_interop_ptr_syms, gen_c_interop_ptr_kinds, gen_iso_c_proc,
	gen_c_interop_int_funcs, gen_c_interop_kinds.  These were removed
	because they have not been necessary since FX added the
	generate_isocbinding_symbol function.  Updated functions to use
	the from_intmod and intmod_sym_id instead of the symbol names.
	This allows the symbols to be renamed by the user.  Added the
	derived types for c_ptr and c_funptr to the namespace
	derived_types list.
	* fortran/decl.c: Updated warning/error messages.  Added test
	cases for preventing assumed-shape and deferred-shape arrays as
	parameters to BIND(C) procedures.  Removed verification of C
	interoperability because it is now done during resolve_sym().
	Added an error check for binding labels where a name specifier was
	given with a zero lengthed string.
	* fortran/gfortran.h: Updated prototypes.
	* fortran/module.c: Added code to put from_intmod and
	intmod_sym_id in the module file.  This is needed to correctly
	recognize renamed iso_c_binding module symbols.
	* fortran/trans-types.c: Updated to use from_intmod and
	intmod_sym_id instead of the names for iso_c_binding symbols c_ptr
	and c_funptr.
	* fortran/resolve.c: Added test in resolve_contained_functions
	to verify the return type of functions that are BIND(C).  Use
	from_intmod and intmod_sym_id to recognize iso_c_binding symbols
	instead of their names.  Added checks to resolve_symbol to verify
	C interoperability for symbols that need to be.  This use to be
	done in decl.c, but it was pointed out that this could be too
	early to check.
	* fortran/match.c: Updated gfc_match_name_C to handle leading
	or trailing spaces in the name specifier.
	* fortran/match.h: Updated prototypes.  Moved some to
	gfortran.h.

2007-02-14  Tobias Burnus  <burnus@net-b.de>

	* fortran/decl.c (build_sym): Remove VALUE check.
	* fortran/resolve.c (resolve_symbol): Add VALUE check.
	* gfortran.dg/value_5: New test.

2007-02-02  Christopher D. Rickett  <crickett@lanl.gov>
	* gfortran.dg/c_kind_tests_2.f03: New test case for
	verifying C interoperable kinds for BIND(C) variables.
	* gfortran.dg/interop_params.f03: New test case for verifying
	C interoperable kinds for dummy args to BIND(C) routines.
	* fortran/symbol.c: Modified call to verify_c_interop in
	verify_bind_c_derived_type to give args for component name and
	location.
	* fortran/decl.c: Modified calls to verify_c_interop to give
	args for symbol name and location.  Slightly changed a couple
	warning messages.  Removed validation of C kind from
	gfc_match_kind_spec.  Added validation of C kind to
	verify_c_interop.  Removed the verification of C interoperability in  
	build_sym since it is done in variable_decl.  Modified checks on
	BIND(C) derived types to include errors for the definition and any
	variable declared with it.
	* fortran/gfortran.h: Changed the prototype for
	verify_c_interop to take args for the symbol/component name and
	location.  These are used for an error message if the validation
	of the C kind fails.


2007-01-24  Christopher D. Rickett  <crickett@lanl.gov>

	* libgfortran/intrincsics/iso_c_binding.h: Fix comments.
	Remove c_null_ptr and c_null_funptr prototypes.

2007-01-24  Christoper D. Rickett  <crickett@lanl.gov>

	* fortran/symbol.c: Removed javadoc style comment blocks and
	converted to GNU style.  Also, put the function type and name on
	separate lines.  Removed commented out return in
	verify_bind_c_derived_type.
	* fortran/decl.c: Converted javadoc to GNU style for functions
	and put the function return type and name on separate lines.
	* fortran/trans-types.c: Ditto on commenting style.
	* fortran/resolve.c: Ditto on commenting style.  Also,
	combined two if statements in gfc_iso_c_sub_interface.
	* fortran/match.c: Ditto on commenting style.
	* fortran/trans-decl.c: Ditto on commenting style.
	* fortran/misc.c: Ditto on commenting style.
	* gfortran.dg/bind_c_usage_3.f03: New test.
	* gfortran.dg/c_ptr_tests_5.f03: Ditto.


2007-01-21  Francois-Xavier Coudert  <coudert@clipper.ens.fr>

	* gfortran.h: Add new fields from_intmod and intmod_sym_id to the
	gfc_symbol structure, to keep track of symbols coming from
	intrinsic modules so we can special-case them when needed.
	* symbol.c (generate_isocbinding_symbol): Set these new fields.
	* module.c: Set these new fields, and use the fact that we know
	have a symbolic id per symbol to rework the code dealing with
	ISO_FORTRAN_ENV.

2007-01-19  Christopher D. Rickett

	* decl.c: Fixed bugs in verifying BIND(C) variables
	and C interoperable kinds.  Modified the way errors for each are
	handled in some cases.
	* gfortran.h: Changed the return type of verify_bind_c_derived_type(). 
	* module.c: Added the ts.f90_type field to the module file. 
	* match.h: Changed the return types of
	verify_com_block_vars_c_interop() and verify_bind_c_sym().
	* libgfortran/intrinsics/iso_c_binding.h: Removed the declarations
	of c_null_ptr and c_null_funptr.
	* symbol.c (generate_isocbinding_symbol): Added function calls for
	generating c_null_ptr and c_null_funptr.
	* gcc/fortran/symbol.c: Fixed bugs in c_null_ptr/c_null_funptr.
	Changed the way errors were handled for checking BIND(C) variables. 
	* gcc/fortran/lang-specs.h: Added options for .f03/.F03 extensions. 
	* options.c (form_from_filename): Added entry for .f03/.F03 extensions.
	* trans-expr.c (gfc_conv_function_call): Whitespace.
	* gfortran.dg/bind_c_usage_2.f03: New test.
	* gfortran.dg/c_ptr_tests.f03: Ditto.
	* gfortran.dg/kind_tests_2.f03: Ditto.
	* gfortran.dg/kind_tests_3.f03: Ditto.

2006-12-27  Steven G. Kargl  <kargl@gcc.gnu.org>

	* Revert revision 120187, 120190, and 120209.

2006-12-19  Tobias Burnus  <burnus@net-b.de>

	* gcc/fortran/iso-c-binding.def: Use NAMED_REALCST, NAMED_CMPXCST,
	  NAMED_LOGCST and NAMED_CHARKNDCST.
	* gcc/fortran/gfortran.h (iso_c_binding_symbol): Use them.
	* gcc/fortran/symbol.c (generate_isocbinding_symbol): Use them.
	* gcc/fortran/trans-types.c (init_c_interop_kinds): Assign the
	  right BT_* type to "f90_type" using the added NAMED_*CST.

	* gcc/testsuite/gfortran.dg/use_iso_c_binding.f90:
	  Fix dg-error.

2006-12-18  FX

	* plenty of files: Initial commit of Christopher's patch,
	slightly reworked by me.
