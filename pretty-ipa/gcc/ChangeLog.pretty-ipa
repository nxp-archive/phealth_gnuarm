
2008-12-09  Jan Hubicka  <jh@suse.cz>

	Merge from mainline.

2008-12-06  Jan Hubicka  <jh@suse.cz>

	* cp/decl2.c (build_java_method_aliases): Ignore everything that is
	not externally visible.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	Bring from lto-branch:
	2008-09-03  Doug Kwan  <dougkwan@google.com>

	* cgraphbuild.c (initialize_inline_failed): Use cgraph_inline_failed_t
	enums instead of reason strings.
	* cgraph.c (cgraph_create_edge): Same.
	(cgraph_inline_failed_string): New function.
	* cgraph.h (cgraph_inline_failed_t): New enum type.
	(cgraph_inline_failed_string): New prototype.
	(struct cgraph_edge): Change type of INLINED_FAILED from constant
	char pointer to cgraph_inline_failed_t.
	(cgraph_inline_p): Adjust prototype to use cgraph_inline_failed_t.
	(cgraph_default_inline_p): Ditto.
	* gcc/cgraphunit.c (cgraph_inline_p): Change type of parameter REASON
	to cgraph_inline_failed_t pointer.
	* cif-code.def: New file.
	* ipa-inline.c (cgraph_mark_inline_edge): Use an enum instead of a
	reason string.
	(cgraph_check_inline_limits): Change type of REASON to pointer to
	cgraph_inline_failed_t.  Replace reason strings with enums.
	(cgraph_default_inline_p): Ditto.
	(cgraph_recursive_inlining_p): Ditto.
	(update_caller_keys): Change type of FAILED_REASON to
	cgraph_inline_failed_t.
	(cgraph_set_inline_failed): Change type of REASON to pointer to
	cgraph_inline_failed_t.  Call cgraph_inline_failed_string to
	convert enums to strings for text output.
	(cgraph_decide_inlining_of_small_function): Change FAILED_REASON
	to be of type cgraph_inline_failed_t.  Replace reason strings with
	enums.  Call cgraph_inline_failed_string to covert enums
	to strings for text output.
	(cgraph_decide_inlining): Replace reason strings with enums.
	(cgraph_decide_inlining_incrementally): Change type of FAILED_REASON
	to cgraph_inline_failed_t type.  Call cgraph_inline_failed_string
	for text output.
	* tree-inline.c (expand_call_inline): Change type of REASON
	to cgraph_inline_failed_t.  Replace reason strings with enums.
	Call cgraph_inline_failed_string for text output.
	* Makefile.in (CGRAPH_H): Add cif-code.def to dependencies.
	(cgraph.o): Ditto.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (cgraph_node, cgraph_remove_node, dump_cgraph_node,
	cgraph_clone_node): Remove master clone handling.
	(cgraph_is_master_clone, cgraph_master_clone): Remove.
	* cgraph.h (master_clone): Remove.
	(cgraph_is_master_clone, cgraph_master_clone): Remove.
	* ipa-type-escape.c (type_escape_execute): Remove use of master clone.
	( tree-ssa-structalias.c (ipa_pta_execute): LIkewise.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (cgraph_function_body_availability): Inline functions are
	always available.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	* doc/invoke.texi (inline-call-cost): Remove.
	(early-inlining-insns): Update.
	* cgraphbuild.c (compute_call_stmt_bb_frequency): Add function argument;
	behave sanely without profile info computed.
	(build_cgraph_edges, rebuild_cgraph_edges): Update.
	* cgraph.c (dump_cgraph_node): Update dumps.
	* cgraph.h (cgraph_local_info): Remove self_insns;
	add self_size, size_inlining_benefit, self_time, time_inlining_benefit.
	(cgraph_global_info): Add time, size field; remove insns field.
	(compute_call_stmt_bb_frequency): Update prototype.
	* ipa-cp.c (ipcp_cloning_candidate_p): Use size instead of insns.
	(ipcp_estimate_growth): Likewise.
	(ipcp_estimate_cloning_cost): Likewise.
	(ipcp_insert_stage): Likewise.
	* ipa-inline.c (MAX_TIME): Add.
	(overall_insns): Remove.
	(overall_size): New static var.
	(cgraph_estimate_time_after_inlining): New function.
	(cgraph_estimate_size_after_inlining): Rewrite to size metrics.
	(cgraph_clone_inlined_nodes): Use size instead of insns.
	(cgraph_mark_inline_edge): Update size and time instead of insns.
	(cgraph_estimate_growth): Use size instead of isnsn.
	(cgraph_check_inline_limits): Use size instead of insns.
	(cgraph_edge_badness): Compute badness based on self time and size.
	(cgraph_decide_recursive_inlining): Use time and size.
	(cgraph_decide_inlining_of_small_function): Bookkeep time and size.
	(cgraph_decide_inlining): Likewise.
	(cgraph_decide_inlining_incrementally): Likewise; handle
	PARAM_EARLY_INLINING_INSNS.
	(likely_eliminated_by_inlining_p): New predicate.
	(estimate_function_body_sizes): New function.
	(compute_inline_parameters): Update.
	(pass_inline_param): Add it a name parameter.
	(cgraph_maybe_hot_edge_p): Return false when optimizing size.
	* ipa-prop.c (ipa_note_param_call): Use compute_call_stmt_bb_frequency.
	* tree-inline.c (eni_inlining_weights): Remove.
	(estimate_num_insns): Recognize loads and stores; be more sane on switch
	statement times; builtin_expect is always free; estimate return value cost.
	(init_inline_once): Kill inlining weights.
	* tree-inline.h (eni_inlining_weights): Remove.
	(eni_weights): Add time_based flag.
	* parms.def (PARAM_INLINE_CALL_COST): Remove.
	(PARAM_EARLY_INLINING_INSNS): Add.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	* tree-pass.h (pass_fixup_cfg, pass_local_pure_const): Declare.
	* ipa-pure-const.c (funct_state_d): Add can throw field; make
	state_set_in_source enum
	(check_decl): Ignore memory tags; do not set fake looping flags;
	dump diagnostics.
	(check_operand, check_tree, check_rhs_var, check_lhs_var,
	get_asm_expr_operands, scan_function_op, scan_function_stmt): Remove.
	(check_call, analyze_function): Rewrite.
	(check_stmt): New.
	(add_new_function): Update call of analyze_function.
	(generate_summary): Add call of analyze_function.
	(propagate): Propagate can_throw; handle state_set_in_source correctly.
	(local_pure_const): New function.
	(pass_local_pure_const): New pass.
	* ipa-inline.c (inline_transform): Set after_inlining.
	* tree-eh.c (stmt_can_throw_external): New.
	* tree-optimize.c (execute_fixup_cfg): Do not set after_inlining;
	work with aliasing built.
	* tree-flow.h (stmt_can_throw_external): New.
	* passes.c (init_optimization_passes): Schedule fixup_cfg pass early;
	and local pure/const pass in early and late optimization queue.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	* ipa-pure-const.c (check_decl): Do not handle used attribute
	on local objects specially; readonly reads are safe.
	(look_for_address_of): Remove.
	(check_rhs_var, check_lhs_var): Remove tree_could_trap check.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	Created the branch.
