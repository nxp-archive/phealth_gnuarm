2008-02-26  Jakub Jelinek  <jakub@redhat.com>

	* trans-openmp.c (gfc_omp_predetermined_sharing): Return
	OMP_CLAUSE_DEFAULT_SHARED for assumed-size arrays.

2008-02-15  Jakub Jelinek  <jakub@redhat.com>

	* trans-openmp.c (gfc_trans_omp_clauses): Don't clear
	OMP_CLAUSE_COLLAPSE_ITERVAR and OMP_CLAUSE_COLLAPSE_COUNT.
	(gfc_trans_omp_do): Add par_clauses argument.  If dovar is
	present in lastprivate clause and do loop isn't simple,
	set OMP_CLAUSE_LASTPRIVATE_STMT.  If dovar is present in
	parallel's lastprivate clause, change it to shared and add
	lastprivate clause to OMP_FOR_CLAUSES.
	(gfc_trans_omp_parallel_do, gfc_trans_omp_directive): Adjust
	gfc_trans_omp_do callers.

2008-02-04  Jakub Jelinek  <jakub@redhat.com>

	* openmp.c (omp_current_do_code): Made static.
	(omp_current_do_collapse): New variable.
	(gfc_resolve_omp_do_blocks): Compute omp_current_do_collapse,
	clear omp_current_do_code and omp_current_do_collapse on return.
	(gfc_resolve_do_iterator): Handle collapsed do loops.
	(resolve_omp_do): Likewise, diagnose errorneous collapsed do loops.
	* trans-openmp.c (gfc_trans_omp_clauses): Clear
	OMP_CLAUSE_COLLAPSE_ITERVAR and OMP_CLAUSE_COLLAPSE_COUNT.
	(gfc_trans_omp_do): Handle collapsed do loops.
	* gfortran.h (gfc_find_sym_in_expr): New prototype.
	* resolve.c (find_sym_in_expr): Rename to...
	(gfc_find_sym_in_expr): ... this.  No longer static.
	(resolve_allocate_expr, resolve_ordinary_assign): Adjust caller.
	* types.def (BT_BOOL): Use integer type with BOOL_TYPE_SIZE rather
	than boolean_type_node.

2007-12-12  Jakub Jelinek  <jakub@redhat.com>

	* gfortran.h (gfc_statement): Add ST_OMP_TASK, ST_OMP_END_TASK
	and ST_OMP_TASKWAIT.
	(gfc_omp_clauses): Add OMP_SCHED_AUTO to sched_kind,
	OMP_DEFAULT_FIRSTPRIVATE to default_sharing.  Add collapse and
	untied fields.
	(gfc_exec_op): Add EXEC_OMP_TASK and EXEC_OMP_TASKWAIT.
	* openmp.c (OMP_CLAUSE_COLLAPSE, OMP_CLAUSE_UNTIED): Define.
	(gfc_match_omp_clauses): Handle default (firstprivate),
	schedule (auto), untied and collapse (n) clauses.
	(OMP_DO_CLAUSES): Add OMP_CLAUSE_COLLAPSE.
	(OMP_TASK_CLAUSES): Define.
	(gfc_match_omp_task, gfc_match_omp_taskwait): New functions.
	* dump-parse-tree.c (gfc_show_omp_node): Handle EXEC_OMP_TASK,
	EXEC_OMP_TASKWAIT, OMP_SCHED_AUTO, OMP_DEFAULT_FIRSTPRIVATE,
	untied and collapse clauses.
	(gfc_show_code_node): Handle EXEC_OMP_TASK and EXEC_OMP_TASKWAIT.
	* trans-openmp.c (gfc_trans_omp_clauses): Handle
	OMP_SCHED_AUTO, OMP_DEFAULT_FIRSTPRIVATE, untied and collapse
	clauses.
	(gfc_trans_omp_parallel_do): Move collapse clause to OMP_FOR
	from OMP_PARALLEL.
	(gfc_trans_omp_task, gfc_trans_omp_taskwait): New functions.
	(gfc_trans_omp_directive): Handle EXEC_OMP_TASK and
	EXEC_OMP_TASKWAIT.
	* trans.c (gfc_trans_code): Handle EXEC_OMP_TASK and
	EXEC_OMP_TASKWAIT.
	* resolve.c (gfc_resolve_blocks, resolve_code): Likewise.
	* st.c (gfc_free_statement): Likewise.
	* match.h (gfc_match_omp_task, gfc_match_omp_taskwait): New
	prototypes.
	* parse.c (decode_omp_directive): Handle !$omp task, !$omp taskwait
	and !$omp end task.
	(case_executable): Add ST_OMP_TASKWAIT.
	(case_exec_markers): Add ST_OMP_TASK.
	(gfc_ascii_statement): Handle ST_OMP_TASK, ST_OMP_END_TASK and
	ST_OMP_TASKWAIT.
	(parse_omp_structured_block, parse_executable): Handle ST_OMP_TASK.

2007-11-30  Jakub Jelinek  <jakub@redhat.com>

	* types.def (BT_FN_VOID_OMPFN_PTR_BOOL_BOOL): New.

