2007-11-30  Jakub Jelinek  <jakub@redhat.com>

	* gimplify.c (new_omp_context): Set default_kind to
	OMP_CLAUSE_DEFAULT_UNSPECIFIED for OMP_TASK regions.
	(omp_notice_variable): Handle vars that are supposed
	to be implicitly determined firstprivate for task regions.

	* builtin-types.def (BT_FN_VOID_OMPFN_PTR_BOOL_BOOL): New.
	* omp-builtins.def (BUILT_IN_GOMP_TASK): New builtin.
	* gimplify.c (omp_region_type): New enum.
	(struct gimplify_omp_ctx): Remove is_parallel and is_combined_parallel
	fields, add region_type.
	(new_omp_context): Take region_type as argument instead of is_parallel
	and is_combined_parallel.
	(gimple_add_tmp_var, omp_firstprivatize_variable, omp_notice_variable,
	omp_is_private, omp_check_private): Adjust ctx->is_parallel and
	ctx->is_combined_parallel checks.
	(gimplify_scan_omp_clauses): Take region_type as last argument instead
	of in_parallel and in_combined_parallel.
	(gimplify_omp_parallel, gimplify_omp_for, gimplify_omp_workshare): Adjust
	callers.
	(gimplify_omp_task): New function.
	(gimplify_expr): Handle OMP_TASK.
	* tree-inline.c (estimate_num_insns_1): Handle OMP_TASK.
	* tree.h (OMP_TASKREG_CHECK, OMP_TASKREG_BODY, OMP_TASKREG_CLAUSES,
	OMP_TASKREG_FN, OMP_TASKREG_DATA_ARG): Define.
	* omp-low.c (parallel_nesting_level): Rename to...
	(taskreg_nesting_level): ... this.
	(is_taskreg_ctx): New function.
	(build_outer_var_ref, omp_copy_decl, scan_sharing_clauses,
	scan_sharing_clauses): Use is_taskreg_ctx instead of is_parallel_ctx.
	(scan_omp_parallel, execute_lower_omp): Rename parallel_nesting_level to
	taskreg_nesting_level.
	(scan_omp_1): Likewise.  Handle OMP_TASK.
	(scan_omp_task): New function.
	(expand_task_call): New function.
	(expand_omp_parallel): Rename to...
	(expand_omp_taskreg): ... this.  Use OMP_TASKREG_* macros where needed.
	Call omp_task_call for OMP_TASK regions.
	(expand_omp): Adjust caller, handle OMP_TASK.
	(lower_omp_parallel): Rename to...
	(lower_omp_taskreg): ... this.  Use OMP_TASKREG_* macros where needed.
	(lower_omp_1): Adjust caller, handle OMP_TASK.
	(diagnose_sb_1, diagnose_sb_2): Handle OMP_TASK.
	* tree-cfg.c (make_edges): Handle OMP_TASK.

2007-11-14  Jakub Jelinek  <jakub@redhat.com>

	* c-parser.c (c_parser_omp_clause_collapse): Include correct
	location in the error message.  Ensure the argument is reasonable
	positive integer and set OMP_CLAUSE_COLLAPSE_EXPR to it.
	(c_parser_omp_clause_schedule): Include correct location in the
	error message.
	(c_parser_omp_for_loop): Add clauses argument, on success set
	OMP_FOR_CLAUSES to it.  Look up collapse count in clauses.
	(c_parser_omp_for, c_parser_omp_parallel): Adjust callers.
	(OMP_FOR_CLAUSE_MASK): Add 1 << PRAGMA_OMP_CLAUSE_COLLAPSE.
	* omp-builtins.def (BUILT_IN_GOMP_LOOP_AUTO_START,
	BUILT_IN_GOMP_LOOP_ORDERED_AUTO_START, BUILT_IN_GOMP_LOOP_AUTO_NEXT,
	BUILT_IN_GOMP_LOOP_ORDERED_AUTO_NEXT,
	BUILT_IN_GOMP_PARALLEL_LOOP_AUTO_START): New.
	* gimplify.c (gimplify_scan_omp_clauses, gimplify_adjust_omp_clauses):
	Handle OMP_CLAUSE_COLLAPSE and OMP_CLAUSE_UNTIED.
	* omp-low.c (scan_sharing_clauses): Likewise.
	(expand_omp_for): Adjust fn_index computation for the addition of
	schedule(auto).

2007-11-13  Jakub Jelinek  <jakub@redhat.com>

	* c-parser.c (c_parser_pragma): Handle PRAGMA_OMP_TASKWAIT.
	(c_parser_omp_clause_name): Handle collapse and untied clauses.
	(c_parser_omp_clause_collapse, c_parser_omp_clause_untied): New
	functions.
	(c_parser_omp_clause_schedule): Handle schedule(auto).
	(c_parser_omp_all_clauses): Handle PRAGMA_OMP_CLAUSE_COLLAPSE
	and PRAGMA_OMP_CLAUSE_UNTIED.
	(OMP_TASK_CLAUSE_MASK): Define.
	(c_parser_omp_task, c_parser_omp_taskwait): New functions.
	(c_parser_omp_construct): Handle PRAGMA_OMP_TASK.
	* tree-gimple.c (is_gimple_stmt): Handle OMP_TASK.
	* tree.def (OMP_TASK): New tree code.
	* c-tree.h (c_begin_omp_task, c_finish_omp_task): New prototypes.
	* omp-builtins.def (BUILT_IN_GOMP_TASKWAIT): New builtin.
	* tree.h (OMP_DIRECTIVE_P): Add OMP_TASK.
	(OMP_CLAUSE_COLLAPSE, OMP_CLAUSE_UNTIED): New clause codes.
	(OMP_TASK_BODY, OMP_TASK_CLAUSES, OMP_TASK_FN, OMP_TASK_DATA_ARG):
	Define.
	(OMP_CLAUSE_COLLAPSE_EXPR): Define.
	(OMP_CLAUSE_SCHEDULE_AUTO): New schedule kind.
	* tree.c (omp_clause_num_ops, omp_clause_code_name): Add
	OMP_CLAUSE_COLLAPSE and OMP_CLAUSE_UNTIED entries.
	(walk_tree_1): Handle OMP_CLAUSE_COLLAPSE and OMP_CLAUSE_UNTIED.
	* c-pragma.h (PRAGMA_OMP_TASK, PRAGMA_OMP_TASKWAIT): New.
	(PRAGMA_OMP_CLAUSE_COLLAPSE, PRAGMA_OMP_CLAUSE_UNTIED): New.
	* c-typeck.c (c_begin_omp_task, c_finish_omp_task): New functions.
	(c_finish_omp_clauses): Handle OMP_CLAUSE_COLLAPSE and
	OMP_CLAUSE_UNTIED.
	* c-pragma.c (init_pragma): Init omp task and omp taskwait pragmas.
	* c-common.h (c_finish_omp_taskwait): New prototype.
	* gimple-low.c (lower_stmt): Handle OMP_TASK.
	* tree-pretty-print.c (dump_omp_clause): Handle
	OMP_CLAUSE_SCHEDULE_AUTO, OMP_CLAUSE_UNTIED and OMP_CLAUSE_COLLAPSE.
	(dump_generic_node): Handle OMP_TASK.
	* c-omp.c (c_finish_omp_taskwait): New function.
	(c_split_parallel_clauses): Put OMP_CLAUSE_COLLAPSE clause to
	ws_clauses.

