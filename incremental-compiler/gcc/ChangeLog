2008-03-29  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_translation_unit): Clear
	current_hunk_binding after finishing hunk.

2008-03-27  Tom Tromey  <tromey@redhat.com>

	* c-tree.h (c_parser_print_job_statistics): Declare.
	* c-parser.c (struct job_statistics): New struct.
	(update_shared_from_hunk): New function.
	(update_shared_from_job): Likewise.
	(c_parser_print_job_statistics): Likewise.

2008-03-27  Tom Tromey  <tromey@redhat.com>

	* server.c (server_start): Use fileno.
	* toplev.c (server_callback): Use fileno.

2008-03-24  Tom Tromey  <tromey@redhat.com>

	* c-opts.c (clean_up): Clear more globals.

2008-03-24  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_lex_all): Fix off-by-one error.
	(can_reuse_hunk): Handle end-of-file.

2008-03-24  Tom Tromey  <tromey@redhat.com>

	* c-typeck.c (build_binary_op) <LE_EXPR>: Look at smashed type
	variant.

2008-03-24  Tom Tromey  <tromey@redhat.com>

	* toplev.c (lang_independent_params): Update for params.h change.
	(DEFPARAM): Likewise.
	* opts.c (option_value): New typedef.
	(default_values, defaults_saved): New globals.
	(verbose): Move out of function scope.
	(type_explicit): Likewise.
	(clean_up): Call restore_default_option_values, reset_params.
	(decode_options): Call save_default_option_values.
	(common_handle_option): Move 'verbose' to file scope.
	(set_debug_level): Move 'type_explicit' to file scope.
	(save_default_option_values): New function.
	(restore_default_option_values): Likewise.
	* params.c (reset_params): New function.
	* params.h (param_info) <default_value>: New field.
	(reset_params): Declare.

2008-03-19  Tom Tromey  <tromey@redhat.com>

	* toplev.c (do_compile): Set ggc_protect_identifiers here...
	(compile_file): ... not here.
	* tree.h (struct tree_identifier): Fix typo.
	* tree.c (tree_code_size): Disallow identifiers.

2008-03-13  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (hand_off_decls) <VAR_DECL>: Call
	rewrite_types_and_globals on the DECL_INITIAL.

2008-03-12  Tom Tromey  <tromey@redhat.com>

	* passes.c (pass_do_nothing_but_lower) <name>: Set to NULL.
	<todo_flags_finish>: Set to 0.
	* tree-pass.h (struct tree_opt_pass) <name>: Document NULL.

2008-03-12  Tom Tromey  <tromey@redhat.com>

	* passes.c (do_nothing_but_lower): New function.
	(pass_do_nothing_but_lower): New global.
	(init_optimization_passes): Add pass_do_nothing_but_lower at
	beginning of all_lowering_passes.

2008-03-11  Tom Tromey  <tromey@redhat.com>

	* dwarf2out.c (hash_type_die_entry): Use TYPE_UID.
	(reference_to_unused): Use seen_decl_p.
	(gen_type_die_with_usage): Use seen_decl_p and mark_decl.

2008-03-05  Tom Tromey  <tromey@redhat.com>

	* c-opts.c (finish_options): Set input_location.
	* toplev.c (general_init): Create builtins location.
	* input.h (BUILTINS_LOCATION): Change value.

2008-02-29  Tom Tromey  <tromey@redhat.com>

	* cgraphunit.c (cgraph_unit_reset): Use NULL, not NULL_TREE.

2008-02-29  Tom Tromey  <tromey@redhat.com>

	* diagnostic.c (diagnostic_action_after_output) <DK_ICE>: Print
	stack trace.

2008-02-27  Tom Tromey  <tromey@redhat.com>

	* Makefile.in (c-format.o): Depend on gt-c-format.h.
	* c-format.c (struct format_state): Mark with GTY.
	(global_format_state): Likewise.
	(construct_format_state): Allocate global_format_state via GC.
	(c_format_finalize): Don't free global_format_state.
	Include gt-c-format.h.
	(init_dynamic_diag_info): Use global diag_t, not '&t'.
	* c-config-lang.in (gtfiles): Add c-format.h, c-format.c.

2008-02-25  Tom Tromey  <tromey@redhat.com>

	* c-common.c (handle_alias_attribute): Handle error_mark_node as
	function's DECL_INITIAL.
	(handle_no_instrument_function_attribute): Likewise.
	(handle_no_limit_stack_attribute): Likewise.

2008-02-21  Tom Tromey  <tromey@redhat.com>

	* c-gimplify.c (c_gimplify_expr) <VIEW_CONVERT_EXPR>: Update
	assertion.
	* c-decl.c (all_global_decls): New global.
	(pop_scope_internal): New function.
	(pop_scope): Use it.
	(pop_file_scope): Initialize all_global_decls.  Use
	pop_scope_internal.
	(c_clear_binding_stack): Use pop_scope_internal.
	(ext_block): Remove.
	(c_smash_decls): Change type of 'result'.  Remove 'list'
	argument; add 'globals' argument.  Smash field types of records
	and unions.
	(get_smashed_type): Don't smash field types of records and
	unions.
	(hand_off_decls): Walk DECL_ARGUMENTS of function.
	(c_write_global_declarations): Use all_global_decls.
	(c_init_decl_processing): Initialize all_global_decls.
	* c-parser.c (struct can_reuse_hunk_data) <parser>: Remove.
	(traverse_check_statics): New function.
	(can_reuse_hunk): Call traverse_check_statics.

2008-02-18  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_hack_token): Pop timevar in early return.

2008-02-15  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (get_smashed_type): Don't mix declaration with code.
	(duplicate_decls): Apply attributes to new decl.

2008-02-13  Tom Tromey  <tromey@redhat.com>

	* c-parser.c: Include pointer-set.h.
	(c_parser) <smash_map>: Removed.
	(global_smash_map): New global.
	(struct mark_one_hunk_binding_info): Define.
	(mark_one_hunk_binding): Change argument types.  Use
	htab_clear_slot.
	(c_parser_mark_hunk_set): Update.
	(struct smash_value): Define.
	(struct smash_entry) <value>: Change type.
	(c_parser_find_binding): Update.
	(hash_c_tree_map_entry): New function.
	(eq_c_tree_map_entry): Likewise.
	(copy_to_pointer_map): Likewise.
	(c_parser_create_smash_map): Likewise.
	(c_parser_note_smash): Track canonical definition.
	(c_parse_file): Create global_smash_map.
	* c-common.h: Update comment.
	* c-gimplify.c (c_gimplify_expr) <CALL_EXPR, FDESC_EXPR,
	ADDR_EXPR>: Remove cases.
	<VIEW_CONVERT_EXPR>: Handle C_SMASHED_P.
	* c-typeck.c (build_component_ref): Set C_SMASHED_P.
	(build_indirect_ref): Likewise.
	(build_array_ref): Likewise.
	(build_external_ref): Likewise.
	(build_function_call): Likewise.
	(wrap_pointer_int_sum): Likewise.
	(readonly_error): Remove VIEW_CONVERT_EXPRs.
	* c-decl.c: Include server.h, pointer-set.h.
	(c_decl_re_bind): Don't hand off decls.
	(merge_decls): Don't call cgraph_finalize_function.
	(duplicate_decls): Copy C_FIRST_DEFINITION_P.
	(clone_underlying_type): Update comment.
	(start_decl): Set C_FIRST_DEFINITION_P.
	(finish_decl): Don't call rest_of_decl_compilation for file-scope
	decls.
	(finish_struct): Likewise.
	(start_struct): Set C_FIRST_DEFINITION_P.
	(start_enum): Likewise.
	(finish_enum): Don't call rest_of_type_compilation for file-scope
	type.
	(start_function): Set C_FIRST_DEFINITION_P.
	(finish_function): Don't call cgraph_finalize_function.
	(c_merge_decls): New function.
	(get_smashed_type): Likewise.
	(c_smash_decls): Likewise.
	(rewrite_types_and_globals): Likewise.
	(hand_off_decls): Likewise.
	(c_write_global_declarations_1): Change argument type.
	(c_write_global_declarations_2): Likewise.
	(lowering_smash_map): New global.
	(c_write_global_declarations): Call c_smash_decls.
	* c-tree.h (c_parser_create_smash_map, c_merge_decls): Declare.
	(C_FIRST_DEFINITION_P): New macro.
	(C_SMASHED_P): Likewise.
	(struct c_tree_map_entry): Define.
	* cgraphunit.c (cgraph_analyze_functions): Handle case where child
	is also deleted.
	* cgraph.h (cgraph_note_duplicate, cgraph_canonical_decl):
	Remove.
	* cgraph.c (duplicate_map): Remove.
	(cgraph_reset): Update.
	(cgraph_canonical_decl): Remove.
	(cgraph_note_duplicate): Remove.
	* cgraphbuild.c (record_reference): Don't call
	cgraph_canonical_decl.

2008-02-01  Tom Tromey  <tromey@redhat.com>

	* Makefile.in (TAGS): Also tag tree.def.

2008-01-29  Tom Tromey  <tromey@redhat.com>

	* server.c (forget_socket_name): New function.
	(send_command_and_wait): Close connection.

2008-01-28  Tom Tromey  <tromey@redhat.com>

	* c-typeck.c (wrap_pointer_int_sum): New function.
	(pointer_diff): Use C_SMASHED_TYPE_VARIANT.
	(wrap_pointer_int_sum): New function.
	(build_binary_op): Use it.

2008-01-28  Tom Tromey  <tromey@redhat.com>

	* toplev.c (server_callback): Save and restore stderr.

2008-01-28  Tom Tromey  <tromey@redhat.com>

	* c-typeck.c (build_array_ref): Wrap pointer in
	VIEW_CONVERT_EXPR.

2008-01-23  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parse_file_wrapper): Only save jobs with names.

2008-01-23  Tom Tromey  <tromey@redhat.com>

	* c-lang.c (LANG_HOOKS_PARSE_FILE): Redefine.
	* toplev.h (get_asm_object_file_name): Declare.
	* c-tree.h (c_parser_mark_hunk_set): Declare.
	(c_parse_file_wrapper): Declare.
	* c-parser.c (global_hunk_map): Use 'if_marked'.
	(mark_one_hunk_binding): New function.
	(c_parser_mark_hunk_set): Likewise.
	(finish_current_hunk): Update used_hunks.
	(struct c_compile_job): New struct.
	(hash_c_compile_job): New function.
	(eq_c_compile_job): Likewise.
	(all_compile_jobs): New global.
	(old_job, working_job): Likewise.
	(c_parse_file_wrapper): New function.
	(insert_single_binding): Likewise.
	(copy_used_hunks): Likewise.
	(c_parse_file): Call copy_used_hunks.
	* toplev.c (server_asm_object_file_name): New global.
	(parse_as_command_line): New function.
	(server_callback): Call it.
	(get_asm_object_file_name): New function.

2008-01-18  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_translation_unit): Check for interrupt.
	Include server.h.
	* server.h (server_interrupted_p): Declare.
	* server.c (server_pid): New global.
	(client_interrupted): Likewise.
	(client_connect): Set server_pid.
	(server_main_loop): Send process id.
	(client_sigint_handler): New function.
	(client_connect): Set SIGINT handler.
	(send_command_and_wait): Remove SIGINT handler.
	(server_start_back_end): Likewise.
	(server_main_loop): Reset 'interrupted'.  Handle SIGINT.
	(server_interrupted_p): New function.
	(server_sigint_handler): Likewise.

2008-01-18  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (c_write_global_declarations_2): Fix typo.

2008-01-18  Tom Tromey  <tromey@redhat.com>

	* toplev.c (wait_for_as): Remove comment.
	(finalize): Return bool.
	(do_compile): Update.
	(compile_file): Update.
	(server_back_end_status): New global.
	(start_as): Remove comment.
	* gcc.c (execute): Use client_wait result.
	* server.c (client_wait): Return bool.
	(send_command_and_wait): Likewise.
	(send_fd): New function.
	(request_and_response): Handle 'F' request.  Clean up error
	handling.
	(server_start_back_end): Add 'status' argument.
	* server.h (client_wait): Update.
	(server_callback): Change return type.
	(server_start_back_end): Update.

2008-01-18  Tom Tromey  <tromey@redhat.com>

	* toplev.c (toplev_main): Return result of server_main_loop.
	* server.h (server_main_loop): Update.
	* server.c (server_directory): New global.
	(get_socket_name): Added 'server' argument.  Make directory in
	temp directory.  Use choose_tmpdir.
	(open_socket): Update.
	(client_connect): Update.
	(server_start): Exit if server startup failed.
	(server_main_loop): Return int.  Call server_cleanup.
	(server_cleanup): New function.

2008-01-15  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (duplicate_decls): Merge non-top-level declarations.

2008-01-15  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_update_checksum): Include keyword value.

2008-01-14  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (lookup_name_in_scope): Only register anti-dependency
	at file scope.

2008-01-14  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (c_write_global_declarations): Call
	cgraph_finalize_compilation_unit.

2008-01-14  Tom Tromey  <tromey@redhat.com>

	* c-parser.c: Fix comment.

2008-01-09  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (pushdecl): Always override file scope copy after
	smashing.

2007-12-21  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (lookup_tag): Only record anti-dependency at file
	scope.
	(pushdecl): Do nothing if no external scope available.

2007-12-20  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_update_checksum): Fix logic.

2007-12-20  Tom Tromey  <tromey@redhat.com>

	* dwarf2out.c (macro_obstack): New global.
	(struct macro_entry): New.
	(first_macro_entry, last_macro_entry): New globals.
	(add_macro_entry): New function.
	(emit_macro_entries): Likewise.
	(dwarf2out_start_source_file): Use add_macro_entry.
	(dwarf2out_end_source_file): Likewise.
	(dwarf2out_define): Likewise.
	(dwarf2out_undef): Likewise.
	(dwarf2out_init): Clear macro_obstack if needed.
	(dwarf2out_finish): Call emit_macro_entries.

2007-12-20  Tom Tromey  <tromey@redhat.com>

	* toplev.c (clear_src_pwd): Add cast.
	* c-parser.c (c_parser_lookup_callback): Check against
	error_mark_node.
	(c_parser_update_checksum): Likewise.
	(c_parser_bind_callback): Likewise.
	* c-typeck.c (really_start_incremental_init): Check against
	error_mark_node.
	* tree.c (make_node_stat): Only allow one error mark.  Remove dead
	code.

2007-12-17  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (c_write_global_declarations): Return early if making a
	PCH file.

2007-12-17  Tom Tromey  <tromey@redhat.com>

	* gimplify.c (gimplify_function_tree): Use
	server_assert_code_generation.
	* server.h (server_assert_code_generation): Declare.
	* server.c (enum server_state): New.
	(current_server_state): New global.
	(server_main_loop): Set it.
	(server_start_back_end): Likewise.
	(server_assert_code_generation): New function.
	* c-pretty-print.c (pp_c_expression): Handle VIEW_CONVERT_EXPR.
	(pp_c_cast_expression): Likewise.
	* c-typeck.c (really_start_incremental_init): Handle error mark
	nodes.
	(build_external_ref): Wrap variables in VIEW_CONVERT_EXPR.
	* c-parser.c (c_parser_lookup_callback): Handle error mark nodes.
	* c-decl.c (check_bitfield_type_and_width): Handle enum type
	without a min and max.
	(lookup_name): Revert earlier patch; don't wrap with
	VIEW_CONVERT_EXPR.

2007-12-14  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (lookup_name): Wrap variables in a VIEW_CONVERT_EXPR.

2007-12-14  Tom Tromey  <tromey@redhat.com>

	* c-common.h (c_set_cpp_error_callback): Declare.
	* c-lex.c (c_cpp_error): New function, renamed and moved from
	cp_cpp_error.
	(c_set_cpp_error_callback): New function.
	* c-parser.c (c_parser_lex_string): Set location from first string
	token.
	(c_parser_lex_all): Call c_set_cpp_error_callback.

2007-12-14  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_update_checksum): Handle ERROR_MARK.

2007-12-14  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (pushdecl): Pass NULL directly to duplicate_decls.
	(duplicate_decls): Check for non-NULL binding.

2007-12-14  Tom Tromey  <tromey@redhat.com>

	* c-common.c (c_type_hash): Handle VLAs.

2007-12-13  Tom Tromey  <tromey@redhat.com>

	* tree-nested.c (gimplify_all_functions): New function.
	(lower_nested_functions): Call it.
	* cgraphunit.c (cgraph_lower_function): Call
	lower_nested_functions here...
	(cgraph_finalize_function): ... not here.
	(cgraph_analyze_function): Restore current_function_decl.

2007-12-12  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (check_hunk_binding): Fix multi-hunk failure check.
	* c-tree.h (C_IS_RESERVED_WORD): Update documentation.

2007-12-11  Tom Tromey  <tromey@redhat.com>

	* gcc.c (execute): Call client_send_directory.
	(server_callback): Add argument.
	* server.c (client_send_directory): New function.
	(request_and_response): Handle '.' request.
	* server.h (client_send_directory): Declare.
	(server_callback): Add argument.
	* toplev.c (get_src_pwd): Ensure src_pwd is allocated.  Use
	getcwd.
	(clear_src_pwd): New function.
	(server_callback): Call it.  Add argument.  Set directory.

2007-12-11  Tom Tromey  <tromey@redhat.com>

	* c-typeck.c (require_complete_type): Now static.
	(build_function_call): Cast function type.
	(comptypes_internal): Use smashed type variant.
	(build_indirect_ref): Convert pointer type, not type of
	dereference.
	(really_start_incremental_init): Use smashed type variant.
	* c-tree.h (require_complete_type): Remove declaration.
	(C_SMASHED_TYPE_VARIANT): Rewrote.
	(C_SMASHED_VARIANT): Remove.
	* c-decl.c (grokdeclarator): Remove unused variable.
	(start_struct): Fix condition.
	(start_enum): Likewise.
	(declspecs_add_type): Use smashed variant of a typedef.
	(duplicate_decls): Use smashed type variant.
	(pushdecl): Likewise.

2007-12-04  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (c_gimple_diagnostics_recursively): Remove.
	(finish_function): Remove comment.
	* c-common.h (c_warn_unused_result_pass): Declare.
	(c_warn_unused_result): Delete declaration.
	* c-common.c (c_warn_unused_result): Now static.
	(run_warn_unused_result): New function.
	(c_warn_unused_result_pass): New global.
	Include tree-pass.h.
	* c-objc-common.h (LANG_HOOKS_POST_GIMPLIFY_PASS): New macro.
	* langhooks-def.h (LANG_HOOKS_POST_GIMPLIFY_PASS): New macro.
	(LANG_HOOKS_INITIALIZER): Use it.
	* langhooks.h (struct lang_hooks) <post_gimplify_pass>: New
	field.
	* tree-gimple.h (diagnose_omp_structured_block_errors): Remove
	declaration.
	* omp-low.c (diagnose_omp_structured_block_errors): Change return
	type.  Make static.  Don't set current_function_decl.
	(pass_diagnose_omp_blocks): New global.
	* tree-pass.h (pass_diagnose_omp_blocks): Declare.
	* passes.c (init_optimization_passes) <all_lowering_passes>: Run
	pass_diagnose_omp_blocks, lang_hooks.post_gimplify_pass.

2007-12-04  Tom Tromey  <tromey@redhat.com>

	* c-gimplify.c (c_genericize): Don't dump generic function.
	* tree-optimize.c (tree_lowering_passes): Dump generic function.
	* gimplify.c (gimplify_function_tree): Exit early if function
	already gimplified.
	* tree.c (staticp): Handle VIEW_CONVERT_EXPR.
	* debug.h: (dwarf2out_ensure_output_file_set): Declare.
	* dwarf2out.c (dwarf2out_ensure_output_file_set): New function.
	* toplev.c (compile_file): Don't call
	cgraph_finalize_compilation_unit.
	(lang_dependent_init): Call dwarf2out_ensure_output_file_set.
	(compile_file): Likewise.
	* langhooks.c (write_global_declarations): Call
	cgraph_finalize_compilation_unit and cgraph_optimize.
	Include cgraph.h.

2007-11-30  Tom Tromey  <tromey@redhat.com>

	* c-opts.c (finish_options): Update.

2007-11-29  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (struct lang_identifier): Add comment for 'node'
	field.

2007-11-28  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_translation_unit): Handle a wrong guess by
	c_parser_find_decl_boundary.  Only set parsed_any if a new hunk
	was started.
	* server.c (server_start): Move declaration to start of function.
	* ggc-page.c (gt_ggc_m_S): Cast argument to
	gt_ggc_mx_lang_tree_node.
	* c-decl.c (c_gimple_diagnostics_recursively): Comment out.
	* c-format.c (handle_format_attribute): Copy format_types_orig.
	* gengtype.c (write_root): Cast gt_ggc_m_S to gt_pointer_walker.
	* dwarf2out.c (equate_type_number_to_die): Move declaration to
	start of function.

2007-11-27  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parse_init_once): New function.
	(c_parse_init): Remove once-only code.
	* ggc-page.c: Include langhooks.h
	(gt_ggc_m_S): Mark containing objects as trees.
	* ggc-common.c (ggc_mark_roots): Call ggc_mark_stringpool twice.
	(ggc_protect_identifiers): New global.
	* ggc.h (ggc_protect_identifiers): Declare.
	(ggc_mark_stringpool): Update.
	* c-tree.h (c_parse_init_once): Declare.
	* c-decl.c (c_init_decl_processing): Use c_parse_init_once.
	* toplev.c (compile_file): Set and reset ggc_protect_identifiers.
	* stringpool.c (check_ident): New function.
	(ggc_mark_stringpool): Add 'marking' argument.  Remove elements
	from identifier table if requested.

2007-11-26  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (check_hunk_binding): Comment out unused variable.
	* langhooks-def.h (LANG_HOOKS_IDENTIFIER_OFFSET): New define.
	(LANG_HOOKS_INITIALIZER): Use it.
	* c-common.h (C_RID_CODE): Rewrote.
	(struct c_common_identifier) <node>: Remove field.
	* var-tracking.c: Include langhooks.h.
	* tree-outof-ssa.c: Include langhooks.h.
	* ggc-page.c (gt_ggc_m_S): New function.
	* stringpool.c: Include langhooks.h.
	(string_stack): Remove.
	(init_stringpool): Update.
	(alloc_node): Add length argument.  Use build_identifier.
	(ggc_alloc_string): Use ggc_alloc.
	(gt_ggc_m_S): Remove.
	* c-pragma.c: Include langhooks.h.
	* ggc.h (gt_ggc_m_S): Change argument type.
	* print-rtl.c: Include langhooks.h.
	* langhooks.h (struct lang_hooks) <identifier_offset>: New field.
	* c-pretty-print.c: Include langhooks.h.
	* c-decl.c (struct lang_identifier) <node>: New field.
	(C_IDENTIFIER_OFFSET_isnt_accurate): New declaration.
	* c-aux-info.c: Include langhooks.h.
	* c-tree.h (C_SIZEOF_STRUCT_LANG_IDENTIFIER): Redefine.
	(C_IDENTIFIER_OFFSET): New define.
	* c-objc-common.h (LANG_HOOKS_IDENTIFIER_OFFSET): New define.
	* toplev.c (struct save_string_list): New struct.
	(struct compilation_job) <strings>: New field.
	(copy_to_vec): Add 'strings' argument.
	(server_callback): Update.
	* tree.h (IDENTIFIER_LENGTH): Redefine.
	(IDENTIFIER_POINTER): Likewise.
	(IDENTIFIER_HASH_VALUE): Likewise.
	(HT_IDENT_TO_GCC_IDENT): Likewise.
	(GCC_IDENT_TO_HT_IDENT): Likewise.
	(struct tree_identifier) <id>: Remove.
	(build_identifier): Declare.
	* tree.c (make_node_stat): Don't allow IDENTIFIER_NODEs.
	(build_identifier): New function.
	* c-lex.c: Include langhooks.h.
	* gengtype.c (write_types_process_field): Arrange to mark
	strings.
	(open_base_files): Include langhooks.h.
	* tree-complex.c: Include langhooks.h.

2007-11-15  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (struct hunk_binding) <prereqs>: Changed type.
	(c_parser_lookup_callback): Record name/value pairs, not hunk
	signatures.
	(start_new_parsed_hunk): Update.
	(traverse_check_prereq): Update.
	(struct prereq_traverse_data): Removed.
	(c_parser_lex_all): Handle empty files.
	* c-tree.h (lookup_name_no_callback, lookup_tag_no_callback):
	Declare.
	* c-decl.c (lookup_name_no_callback): New function.
	(lookup_tag_no_callback): Likewise.

2007-11-14  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (hunk_binding_entry) <tag_binding, symbol_binding>:
	Renamed.
	(traverse_hunk_binding_entry): Update.
	(c_parser_bind_callback): Update.
	(struct can_reuse_hunk_data) <binding>: New field.
	(check_hunk_binding): Set binding field.
	(can_reuse_hunk): Set slot in hash to new hunk_set.  Use
	'info.binding' field.

2007-11-12  Tom Tromey  <tromey@redhat.com>

	* c-pragma.c (c_register_pragma_1): Update.
	* c-parser.c (c_token) <pragma_kind>: Use 6 bits, not 7.

2007-11-09  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_lex_all): Added 'initial' argument.
	(c_parser_pragma_pch_preprocess): Changed argument type.  Use
	c_lex_with_flags.
	(c_parse_file): Don't create initial parser.  Examine first token
	with c_lex_with_flags.

2007-11-08  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parse_init): Call create_hunk_binding_map here...
	(c_parse_file): ... not here.

2007-11-08  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_is_string_literal): New function.
	(c_parser_lex_string): Likewise.
	(c_hack_token): Add raw_string argument.  Use
	c_parser_lex_string.
	(c_parser_peek_token): Update.
	(c_parser_peek_2nd_token): Update.

2007-11-08  Tom Tromey  <tromey@redhat.com>

	* toplev.c (finalize): Check 'job'.

2007-10-25  Tom Tromey  <tromey@redhat.com>

	* Makefile.in (GTFILES): Added toplev.c.
	* toplev.c (job_arguments): Removed.
	(struct compilation_job): New.
	(job): New global.
	(compile_file): Collect before forking.  Start 'as'.
	(finalize): Call wait_for_as.
	(wait_for_as): New function.
	(copy_to_vec): Likewise.
	(server_callback): Create a compilation_job.  Don't start or wait
	for as.
	Include gt-toplev.h.
	* server.c: Don't include dyn-string.h.
	(free_argv, split_argv): Removed.
	(request_and_response): Use buildargv, freeargv.
	(client_send_command): Use argvtostr.

2007-10-25  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser) <current_hset>: New field.
	(struct hunk_binding) <key, next>: Remove.
	(struct hunk_set): New.
	(hash_hunk_binding, eq_hunk_binding): Remove.
	(hash_hunk_set, eq_hunk_set): New functions.
	(global_hunk_map): Now contains 'hunk_set's.
	(start_new_parsed_hunk): Remove 'new_signature' argument.  Update.
	(finish_current_hunk): Add 'hset' argument.  Update.
	(create_hunk_binding_map): Update.
	(struct can_reuse_hunk_data): New.
	(check_hunk_binding): New function.
	(can_reuse_hunk): Add 'out_set' argument.  Update.  Use
	check_hunk_binding.
	(c_parser_translation_unit): Update.

2007-10-25  Tom Tromey  <tromey@redhat.com>

	* ggc-common.c (ggc_thread_clean_up): Check for pending GC after
	cleanup.

2007-10-19  Tom Tromey  <tromey@redhat.com>

	* dbxout.c (dbx_debug_hooks): Update.
	* varasm.c (assemble_external): Remove assert.
	* dwarf2out.c (dw_asm_out_file): New global.
	Changed all users of asm_out_file to use dw_asm_out_file.
	(dwarf2out_init): Update.
	(dwarf2out_set_output_file): New function.
	* debug.h (struct gcc_debug_hooks) <set_output_file>: New hook.
	(debug_nothing_filestar): Declare.
	* debug.c (do_nothing_debug_hooks): Update.
	(debug_nothing_filestar): New.
	* toplev.c (server_asm_out_file): New global.
	(compile_file): Don't flush asm_out_file.  Call init_asm_output in
	server mode.  Call set_output_file debug hook.
	(lang_dependent_init): Conditionally call init_asm_output and
	set_output_file debug hook.
	(finalize): Close server_asm_out_file.
	(start_as): Set server_asm_out_file, not asm_out_file.

2007-10-16  Tom Tromey  <tromey@redhat.com>

	* gengtype.c (write_roots): Ensure thread-local variable does not
	use global for 'length'.

2007-10-12  Tom Tromey  <tromey@redhat.com>

	* c-format.h (c_format_finalize): Declare.
	* c-format.c (struct format_state): New struct.
	(global_format_state): New global.
	(construct_format_state): New function.
	(c_format_finalize): Likewise.
	(obdup_mem): Likewise.
	(init_dynamic_asm_fprintf_info): Use global_format_state.
	(init_dynamic_gfc_info): Likewise.
	(init_dynamic_diag_info): Likewise.
	(handle_format_attribute): Call construct_format_state.  Allocate
	on obstack.

2007-10-12  Tom Tromey  <tromey@redhat.com>

	* c-format.c (dollar_argument_info): New struct.
	(dollar_arguments_used, dollar_arguments_pointer_p,
	dollar_arguments_alloc, dollar_arguments_count,
	dollar_first_arg_num, dollar_max_arg_used, dollar_format_warned):
	Remove.
	(init_dollar_format_checking): Add 'state' argument.
	(maybe_read_dollar_number): Likewise.
	(finish_dollar_format_checking): Likewise.
	(check_format_info_inner): Likewise.  Renamed from
	check_format_info_main.
	(check_format_info_main): New function.

2007-10-11  Tom Tromey  <tromey@redhat.com>

	* Makefile.in (LIBS): Add -lpthread.
	* system.h (GCC_THREAD): New define.
	* ggc-page.c (ggc_alloc_stat): Lock.
	(ggc_get_size): Lock.
	(ggc_free): Lock.
	(ggc_collect): Call ggc_thread_pause, ggc_collection_completed.
	* ggc-zone.c (ggc_alloc_zone_stat): Lock.
	(ggc_free): Lock.
	(ggc_get_size): Lock.
	(new_ggc_zone): Lock.
	(destroy_ggc_zone): Lock.
	(ggc_collect): Call ggc_thread_pause, ggc_collection_completed.
	* ggc-common.c (global_root_list): New global.
	(ggc_mark_roots): Mark thread-local roots.
	(roots, ggc_n_threads, ggc_gc_lock, gc_condition,
	ggc_n_waiting_threads, collection_generation): New globals.
	(ggc_thread_init): New function.
	(ggc_thread_start): Likewise.
	(ggc_thread_clean_up): Likewise.
	(ggc_thread_pause): Likewise.
	(ggc_collection_completed): Likewise.
	(ggc_thread_ignore_me): Likewise.
	* ggc.h: Include host-thread.h.
	(struct ggc_thread_roots): New.
	(struct ggc_thread_root_list): New.
	(ggc_thread_registration_function): New typedef.
	(gt_ggc_thread_funcs): Declare.
	(ggc_gc_lock): Likewise.
	(ggc_thread_init, ggc_thread_start, ggc_thread_clean_up,
	ggc_thread_ignore_me, ggc_thread_pause, ggc_collection_completed):
	Declare.
	* gengtype-parse.c (extern_or_static): Handle GCC_THREAD.
	* gengtype-lex.l: Recognize "GGC_THREAD".
	* toplev.c (general_init): Call ggc_thread_init.
	* host-thread.h: New file.
	* gengtype.h (THREAD): New value.
	(note_variable): Update.
	* gengtype.c (struct pair) <thread_local>: New field.
	(do_typedef): Initialize it.
	(note_variable): Added 'thread_local' argument.
	(create_field_all): Initialize new field.
	(struct flist) <item_count, saved_offset>: New fields.
	(finish_thread_registration): New function.
	(write_thread_lang_registration): Likewise.
	(start_root_field): Likewise.
	(end_root_field): Likewise.
	(write_root): Handle thread-local variables.
	(start_thread_local_table): New function.
	(write_roots): Added 'thread_local' argument.  Write thread
	registration functions.
	(main): Call write_roots twice.

2007-10-10  Tom Tromey  <tromey@redhat.com>

	* cgraph.c (cgraph_note_duplicate): Refine assertion.
	* cgraphbuild.c (record_reference): Use cgraph_canonical_decl.

2007-10-08  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (pushdecl): Update file scope decl as well.
	* cgraph.c (cgraph_note_duplicate): Swap decl and duplicate when
	function already defined.
	* cgraphbuild.c (record_reference): Don't canonicalize decl.

2007-10-05  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (c_clear_binding_stack): Move early exit...
	(c_write_global_declarations): ... here.

2007-10-05  Tom Tromey  <tromey@redhat.com>

	* gdbinit.in (pt): Accept argument.

2007-10-04  Tom Tromey  <tromey@redhat.com>

	* toplev.c (char_p): New typedef.
	(job_arguments): New global.
	(server_callback): GC-copy arguments.

2007-10-04  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (bind): Note a smash when needed.
	(c_decl_re_bind): Pass function definitions to
	cgraph_finalize_function.
	(c_builtin_function): Don't use decl's TREE_CHAIN for
	visible_builtins linked list.
	(push_file_scope): Update.
	(duplicate_decls): Also avoid smashing objects in external scope.
	(start_function): Don't call c_parser_note_smash.
	* toplev.c (start_as): Fix argv argument to pex_run.

2007-10-01  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_translation_unit): Make next_token a
	local.
	* c-lex.c (fe_file_change): Mark main file as user-owned.

2007-10-01  Tom Tromey  <tromey@redhat.com>

	* toplev.c (server_callback): Reset errorcount and sorrycount.

2007-09-28  Tom Tromey  <tromey@redhat.com>
	    Michael Matz  <matz@suse.de>

	* c-gimplify.c (c_genericize): Don't call gimplify_function_tree.
	(c_gimplify_expr): Handle CALL_EXPR, FDESC_EXPR, and ADDR_EXPR.
	* tree-optimize.c (tree_lowering_passes): Call
	gimplify_function_tree.
	* c-decl.c (pop_file_scope): Don't call
	cgraph_finalize_compilation_unit.
	(finish_function): Don't call c_gimple_diagnostics_recursively.
	* toplev.c (compile_file): Call cgraph_finalize_compilation_unit.
	* cgraphunit.c (verify_cgraph_node): Reverted.
	* cgraph.h (cgraph_get_callee_fndecl): Removed.
	* cgraphbuild.c (build_cgraph_edges): Reverted.
	(rebuild_cgraph_edges): Likewise.
	* cgraph.c (cgraph_note_duplicate): Clean up.
	(cgraph_get_callee_fndecl): Removed.

2007-09-26  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_note_smash): Call cgraph_note_duplicate.
	* c-decl.c (c_builtin_function): Put builtins in all_c_built_ins.
	* cgraphunit.c (verify_cgraph_node): Use
	cgraph_get_callee_fndecl.
	* cgraph.c (duplicate_map): New global.
	(cgraph_reset): Destroy duplicate_map.
	(cgraph_canonical_decl): New function.
	(cgraph_note_duplicate): Likewise.
	(cgraph_get_callee_fndecl): Likewise.
	* cgraphbuild.c (record_reference): Use cgraph_canonical_decl.
	(build_cgraph_edges): Use cgraph_get_callee_fndecl.
	(rebuild_cgraph_edges): Likewise.
	* cgraph.h (cgraph_canonical_decl, cgraph_note_duplicate,
	cgraph_get_callee_fndecl): Declare.

2007-09-25  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (update_numeric_checksum): New function.
	(c_parser_update_checksum): Handle all tokens properly.

2007-09-24  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (all_c_built_ins): New global.
	(c_decl_re_bind): Pass re-bound decls to rest_of_decl_compilation
	or rest_of_type_compilation.
	(re_bind_built_in): New function.
	(pushdecl): Note built-ins in all_c_built_ins.
	(c_init_decl_processing): Initialize all_c_built_ins.  Call
	re_bind_built_in when re-run.
	* dwarf2out.c (mark_decl): New function.
	(seen_decl_p): Likewise.
	(struct type_die_entry): New struct.
	(type_die_table): New global.
	(seen_decls): Likewise.
	(hash_type_die_entry): New function.
	(eq_type_die_entry): Likewise.
	(lookup_type_die): Use type_die_table.
	(equate_type_number_to_die): Likewise.
	(reference_to_unused): Use seen_decl_p.
	(add_name_and_src_coords_attributes): Likewise.
	(scope_die_for): Likewise.
	(gen_variable_die): Likewise.
	(gen_typedef_die): Likewise.
	(gen_type_die_with_usage): Likewise.
	(gen_block_die): Likewise.
	(dwarf2out_init): Initialize seen_decls, type_die_table.
	(gen_enumeration_type_die): Use mark_decl.
	(gen_struct_or_union_type_die): Likewise.
	(gen_typedef_die): Likewise.
	(gen_type_die_with_usage): Likewise.
	* dwarf2asm.h (dw2_initialize): Declare.
	* dwarf2asm.c (dw2_initialize): New function.
	* toplev.c (lang_dependent_init): Call dw2_initialize.

2007-09-20  Tom Tromey  <tromey@redhat.com>

	* toplev.c (compile_file): Flush output file.

2007-09-19  Tom Tromey  <tromey@redhat.com>

	* c-decl.c (pushdecl): Pass b_use, not b, to duplicate_decls.

2007-09-18  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_bind_callback): Normalized.
	(can_reuse_hunk): Don't allow hunk reuse.
	(c_parser_translation_unit): Don't let "user code" fall through.
	* c-decl.c (duplicate_decls): Comment assert.

2007-09-18  Tom Tromey  <tromey@redhat.com>

	* c-opts.c (c_common_post_options): Call cpp_read_main_file when
	preprocessing only.

2007-09-17  Tom Tromey  <tromey@redhat.com>

	* Makefile.in (server.o): Added rule; include valgrind defines.

2007-09-13  Tom Tromey  <tromey@redhat.com>

	* gcc.c (execute): Fall back to exec if connection fails.

2007-09-12  Tom Tromey  <tromey@redhat.com>

	* c-common.c (c_common_get_alias_set): Don't check num_in_fnames.
	* c-parser.c (c_parser_note_smash): Disable assertion.
	* varpool.c (varpool_reset): New function.
	(dump_varpool): Iterate using 'next', not 'next_needed'.
	* cgraph.h (varpool_reset): Declare.
	* cgraph.c (cgraph_reset): Document.
	* cgraphunit.c (cgraph_unit_reset): Document.
	* toplev.c (server_callback): Set flag_unit_at_a_time here...
	(toplev_main): ... not here.
	(server_callback): Call varpool_reset.
	* c-decl.c (c_write_global_declarations): Don't exit early.
	(start_function): Handle decl smashing.
	(c_decl_re_bind): Re-bind public decls in the external scope.
	(c_init_decl_processing): Reset all_translation_units.

2007-09-07  Tom Tromey  <tromey@redhat.com>

	* c-pragma.c (init_pragma): Free pragma vector if already
	allocated.
	* c-lang.c (LANG_HOOKS_CLEAR_BINDING_STACK): Define.
	* c-tree.h (c_clear_binding_stack): Declare.
	* c-decl.c (c_init_decl_processing): Only initialize some things
	once.
	(c_clear_binding_stack): New function.
	(c_write_global_declarations): Move code to c_clear_binding_stack.
	* dwarf2out.c (dwarf2out_init): Initialize more globals.
	* server.c (server_main_loop): Print server pid.
	* cgraphunit.c (first_analyzed, first_analyzed_var, counter): Move
	out of function scope.
	(cgraph_unit_reset): Reset them.
	* toplev.c (compile_file): Return bool.
	(do_compile): Exit child process in server mode.

2007-09-06  Tom Tromey  <tromey@redhat.com>

	* server.h (server_start_back_end): Declare.
	* server.c (server_start_back_end): New function.
	* cgraph.h (cgraph_unit_reset, cgraph_reset): Declare.
	* cgraphunit.c (cgraph_unit_reset): New function.
	* cgraph.c (cgraph_reset): New function.
	* toplev.c (server_callback): Garbage collect.  Reset cgraph
	modules.
	(server_mode): New global.
	(toplev_main): Set it.
	(compile_file): Call server_start_back_end.
	(do_compile): Only initialize front end once.

2007-09-05  Tom Tromey  <tromey@redhat.com>

	* toplev.c (server_callback): Call pex_get_status.
	(finalize): Clear asm_out_file.

2007-09-05  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_token) <user_owned>: New field.
	(c_parser_lex_all): Set user_owned field on token.
	* c-lex.c (fe_file_change): Set user_owned field in c_lex_state.
	* c-common.h (struct c_lex_state) <user_owned>: New field.

2007-09-04  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_bind_callback): Don't bind error nodes.
	(finish_current_hunk): Don't save hunks with errors.

2007-09-04  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_bind_callback): Use GGC_CNEW.
	(c_parser_translation_unit): Added assert.
	(c_parser_find_decl_boundary): Handle structure initialization.

2007-08-31  Tom Tromey  <tromey@redhat.com>

	* toplev.c (toplev_main): Set flag_unit_at_a_time when in server
	mode.
	* opts.c (clean_up): New function.
	(decode_options): Call it.
	* fix-header.c (TARGET_EXTRA_INCLUDES): Add c_incpath argument.
	(TARGET_EXTRA_PRE_INCLUDES): Likewise.
	* c-incpath.h (struct target_c_incpath_s) <extra_pre_includes,
	extra_includes>: Add c_incpath argument.
	(struct c_incpath): Declare.
	(new_c_incpath, delete_c_incpath): Likewise.
	(split_quote_chain, add_path, register_include_chains,
	add_cpp_dir_path): Add c_incpath argument.
	* c-incpath.c (new_c_incpath): New function.
	(struct c_incpath): New struct.
	(heads, tails, quote_ignores_source_dir): No longer global.
	(delete_c_incpath): New function.
	(add_sysroot_to_chain): Added 'incpath' argument.
	(merge_include_chains): Likewise.
	(split_quote_chain): Likewise.
	(add_cpp_dir_path): Likewise.
	(add_path): Likewise.
	(register_include_chains): Likewise.
	(add_env_var_paths): Likewise.
	(add_standard_paths): Likewise.
	(hook_void_charptr_charptr_int): Likewise.
	* c-opts.c (clean_up): New function.
	(c_common_init_options): Use it.  Set include_chains.
	(include_chains): New global.
	(c_common_handle_option): Update.
	(add_prefixed_path): Added c_incpath argument.
	(c_common_post_options): Update.
	(c_common_post_options): Don't parse first file here...
	(c_common_parse_file): ... parse it here.

2007-08-31  Tom Tromey  <tromey@redhat.com>

	* server.h (client_kill_server): Declare.
	* gcc.c (kill_server): New global.
	(option_map): Added --kill-server.
	(process_command): Handle -kill-server.
	(main): Likewise.
	* server.c (request_and_response): Changed return type.  Handle
	'K' request.
	(server_main_loop): Use request_and_response return value.
	(send_command_and_wait): New function.
	(client_wait): Use it.
	(client_kill_server): New function.

2007-08-30  Tom Tromey  <tromey@redhat.com>

	* Makefile.in (OBJS-common): Added server.o.
	(GCC_OBJS): Likewise.
	(toplev.o): Added server.h.
	(gcc.o): Likewise.
	(server.o): New target.
	* toplev.c (toplev_main): Handle -fserver.
	Include server.h.
	(init_asm_output): Don't open file if already open.
	(server_callback): New function.
	* server.h: New file.
	* server.c: New file.
	* gcc.c (server): New global.
	(use_server): Likewise.
	(option_map): Added --server.
	(process_command): Recognize -server.
	Include server.h.
	(execute): Send commands to server.
	(server_callback): New function.

2007-08-24  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (c_parser_find_decl_boundary): New function.
	(start_new_parsed_hunk): Changed arguments.
	(c_parser_update_checksum): New function.
	(c_parser_checksum_buffer): Likewise.
	(c_parser_lex_all): Use c_parser_update_checksum.
	(can_reuse_hunk): Changed arguments.
	(c_parser_translation_unit): Handle per-decl hunks.

2007-08-21  Tom Tromey  <tromey@redhat.com>

	* c-common.c (fold_offsetof_1): Handle VIEW_CONVERT_EXPR.
	* c-decl.c (bind): Added notify_ok argument.  Call
	c_parser_bind_callback when needed.
	(c_decl_re_bind): New function.
	(push_file_scope): Update.
	(pushtag): Likewise.
	(decl_needs_merging): New function.
	(diagnose_mismatched_decls): Added 'need_mergep' argument.  Call
	decl_needs_merging.
	(duplicate_decls): Added 'binding' argument.  Call
	c_parser_note_smash.  Only merge decls when necessary.
	(pushdecl): Update.
	(pushdecl_top_level): Update.
	(implicitly_declare): Update.
	(undeclared_variable): Update.
	(lookup_label): Update.
	(declare_label): Update.
	(define_label): Update.
	(lookup_tag): Call c_parser_lookup_callback.
	(lookup_name): Likewise.
	(lookup_name_in_scope): Likewise.
	(c_make_fname_decl): Update.
	(c_builtin_function): Likewise.
	(start_struct): Call c_parser_note_smash when needed.
	(finish_struct): Only allocate TYPE_LANG_SPECIFIC if not already
	allocated.
	(start_enum): Rearrange.  call c_parser_note_smash when needed.
	(finish_enum): Only allocate TYPE_LANG_SPECIFIC is not already
	allocated.
	(store_parm_decls_newstyle): Update.
	* c-typeck.c (build_component_ref): Use smashed type variant.
	(build_indirect_ref): Likewise.
	(lvalue_p): Handle VIEW_CONVERT_EXPR.
	* c-tree.h (struct lang_decl) <declaring_hunk>: New field.
	(struct lang_type) <declaring_hunk>: Likewise.
	(c_parser_bind_callback, c_parser_note_smash,
	object_in_current_hunk_p, c_parser_find_binding,
	c_parser_lookup_callback, c_decl_re_bind): Declare.
	(C_SMASHED_VARIANT): New macro.
	(C_SMASHED_TYPE_VARIANT): Likewise.
	(C_SMASHED_P): Likewise.
	* c-lex.c (fe_file_change): Update file_change field.
	* c-common.h (struct c_lex_state) <file_change>: New field.
	Update lang-flag comment.
	* c-parser.c (parsed_hunk): New struct.
	(c_parser) <used_hunks, first_hunk, prev_hunk,
	current_hunk_binding, smash_map>: New fields.
	(struct hunk_binding): New struct.
	(hash_hunk_binding_entry): New function.
	(eq_hunk_binding_entry): Likewise.
	(traverse_hunk_binding_entry): Likewise.
	(struct hunk_binding): New struct.
	(hash_hunk_binding): New function.
	(eq_hunk_binding): Likewise.
	(global_hunk_map): New global.
	(c_parser_bind_callback): New function.
	(find_hunk_binding): Likewise.
	(c_parser_lookup_callback): Likewise.
	(object_in_current_hunk_p): Likewise.
	(start_new_parsed_hunk): Likewise.
	(finish_current_hunk): Likewise.
	(create_hunk_binding_map): Likewise.
	(struct smash_entry): New struct.
	(hash_smash_entry): New function.
	(eq_smash_entry): Likewise.
	(c_parser_find_binding): Likewise.
	(c_parser_note_smash): Likewise.
	(c_parser_lex_all): Keep track of hunks.  Checksum tokens while
	lexing.
	(struct prereq_traverse_data): New struct.
	(traverse_check_prereq): New function.
	(can_reuse_hunk): Likewise.
	(c_parser_translation_unit): Reuse hunks when possible.
	(c_parse_file): Initialize new fields in parser.  Call
	create_hunk_binding_map.

2007-08-21  Tom Tromey  <tromey@redhat.com>

	* c-opts.c (cb_file_change): Update.
	* c-lex.c (pending_lang_change, c_header_level): Removed.
	(init_c_lex): Create a c_lex_state object.
	(fe_file_change): Added c_lex_state argument.
	(c_lex_get_state): New function.
	* c-common.h (struct c_lex_state): New struct.
	(pending_lang_change): Removed.
	(fe_file_change): Update.
	(c_lex_get_state): Declare.

2007-08-20  Tom Tromey  <tromey@redhat.com>

	* c-parser.c (the_parser): Updated comment.
	(c_parser) <tokens>: Removed.
	<buffer, buffer_length, next>: New fields.
	(c_parser_lex_all): New function.
	(c_hack_token): Likewise.
	(c_lex_one_token): Simplify.
	(c_parse_file): Use c_parser_lex_all.
	(c_parser_set_source_position_from_token): Moved earlier.

2007-08-20  Tom Tromey  <tromey@redhat.com>

	* c-common.c (fname_as_string): Update.
	* c-parser.c (c_parser) <lex_untranslated_string>: New field.
	(c_lex_one_token): Update.  Add 'parser' argument.
	(c_parser_simple_asm_expr): Update.
	(c_parser_attributes): Update.
	(c_parser_asm_statement): Update.
	(c_parser_asm_operands): Update.
	(c_parser_peek_token): Update.
	(c_parser_peek_2nd_token): Update.
	* c-lex.c (c_lex_string_translate): Remove.
	(c_lex_return_raw_strings): Likewise.
	(c_lex_with_flags): Added 'lex_flags' argument.
	(lex_string): Added 'translate' argument.
	* c-pragma.h (c_lex_with_flags): Update.
	(c_lex_string_translate, c_lex_return_raw_strings): Remove.
	(C_LEX_STRING_NO_TRANSLATE): New define.
	(C_LEX_RAW_STRINGS): Likewise.

2007-08-20  Pawel Sikora  <pluto@pld-linux.org>
2008-02-26  Manuel Lopez-Ibanez <manu@gcc.gnu.org>

	* c-common.c (match_case_to_enum_1): Add appropriate
	OPT_W* parameter to warning.
	(c_do_switch_warnings): Likewise.
	* c-typeck.c (warning_init): Add one more parameter following
	'warning' function.
	(push_init_level): Update call to warning_init.
	(pop_init_level): Likewise.
	(add_pending_init): Likewise.
	(output_init_element: Likewise.

2008-02-26  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	PR 28322
	* toplev.c (toplev_main): If there are warnings or error, print
	errors for ignored options.
	* opts.c (ignored_options): New static variable.
	(postpone_unknown_option_error): New.
	(print_ignored_options): New.
	(handle_option): Postpone errors for unknown -Wno-* options.
	* opts.h (print_ignored_options): Declare.
	
2008-02-25  Richard Sandiford  <rsandifo@nildram.co.uk>

	* config/mips/mips.md (loadgp_blockage, blockage): Change type
	to "ghost".

2008-02-25  Richard Guenther  <rguenther@suse.de>

	Revert:
	2008-02-25  Richard Guenther  <rguenther@suse.de>

	* tree-flow.h (uid_decl_map_hash, uid_decl_map_eq): Move ...
	* tree.h (uid_decl_map_hash, uid_decl_map_eq): ... here.
	(lookup_decl_from_uid): Declare.
	* tree-ssa.c (uid_decl_map_eq, uid_decl_map_hash): Move ...
	* tree.c (uid_decl_map_eq, uid_decl_map_hash): ... here.
	(decl_for_uid_map): New global hashtable mapping DECL_UID
	to the decl tree.
	(init_ttree): Allocate it.
	(insert_decl_to_uid_decl_map): New helper function.
	(make_node_stat): Insert new decls into the map.
	(copy_node_stat): Likewise.
	(lookup_decl_from_uid): New function.
	(print_decl_for_uid_map_statistics): New helper.
	(dump_tree_statistics): Call it.

	* tree-flow.h (struct gimple_df): Make referenced_vars a bitmap.
	(referenced_var_iterator): Adjust.
	(FOR_EACH_REFERENCED_VAR): Adjust.
	(FOR_EACH_REFERENCED_VAR_IN_BITMAP): New iterator.
	(num_referenced_vars): Adjust.
	* tree-flow-inline.h (gimple_referenced_vars): Adjust.
	(first_referenced_var): Remove.
	(end_referenced_vars_p): Likewise.
	(next_referenced_var): Likewise.
	(referenced_var_iterator_set): New helper function.
	* tree-dfa.c (referenced_var_lookup): Adjust.
	(referenced_var_check_and_insert): Likewise.
	(remove_referenced_var): Likewise.
	* tree-ssa.c (verify_flow_insensitive_alias_info): Use
	FOR_EACH_REFERENCED_VAR_IN_BITMAP.
	(verify_call_clobbering): Likewise.
	(verify_memory_partitions): Likewise.
	(init_tree_ssa): Allocate bitmap instead of hashtable for
	referenced_vars.
	(delete_tree_ssa): Adjust.
	* tree-ssa-alias.c (mark_aliases_call_clobbered): Use
	FOR_EACH_REFERENCED_VAR_IN_BITMAP.
	(compute_tag_properties): Likewise.
	(set_initial_properties): Likewise.
	(find_partition_for): Likewise.
	(update_reference_counts): Likewise.
	(dump_may_aliases_for): Likewise.
	* tree-ssa-operands.c (add_virtual_operand): Likewise.
	(add_call_clobber_ops): Likewise.
	(add_call_read_ops): Likewise.
	(get_asm_expr_operands): Likewise.
	* tree-into-ssa.c (dump_decl_set): Likewise.
	(update_ssa): Likewise.
	* tree-sra.c (scan_function): Likewise.
	(decide_instantiations): Likewise.
	(scalarize_parms): Likewise.
	* tree-ssa-alias-warnings.c (build_reference_table): Likewise.
	(dsa_named_for): Likewise.
	* tree-ssa-structalias.c (update_alias_info): Likewise.
	(merge_smts_into): Likewise.

2008-02-25  Janne Blomqvist  <jb@gcc.gnu.org>

	PR fortran/29549
	* doc/invoke.texi (-fcx-limited-range): Document new option.
	* toplev.c (process_options): Handle -fcx-fortran-rules.
        * common.opt: Add documentation for -fcx-fortran-rules.

2008-02-25  Janne Blomqvist  <jb@gcc.gnu.org>

	PR c/35162
	* doc/invoke.texi (-fcx-limited-range): Correct to be in line with
	actual behaviour and C99.
	
2008-02-26  Ben Elliston  <bje@au.ibm.com>

	* config/rs6000/rs6000.h (ASM_CPU_POWER5_SPEC): Define.
	(ASM_CPU_POWER6_SPEC): Likewise.
	(ASM_CPU_SPEC): Pass %(asm_cpu_power5) for -mcpu=power5.
	Likewise, pass %(asm_cpu_power6) for -mcpu=power6.
	(EXTRA_SPECS): Add asm_cpu_power5, asm_cpu_power6 spec strings.

2008-02-25  Richard Guenther  <rguenther@suse.de>

	* tree-flow.h (uid_decl_map_hash, uid_decl_map_eq): Move ...
	* tree.h (uid_decl_map_hash, uid_decl_map_eq): ... here.
	(lookup_decl_from_uid): Declare.
	* tree-ssa.c (uid_decl_map_eq, uid_decl_map_hash): Move ...
	* tree.c (uid_decl_map_eq, uid_decl_map_hash): ... here.
	(decl_for_uid_map): New global hashtable mapping DECL_UID
	to the decl tree.
	(init_ttree): Allocate it.
	(insert_decl_to_uid_decl_map): New helper function.
	(make_node_stat): Insert new decls into the map.
	(copy_node_stat): Likewise.
	(lookup_decl_from_uid): New function.
	(print_decl_for_uid_map_statistics): New helper.
	(dump_tree_statistics): Call it.

	* tree-flow.h (struct gimple_df): Make referenced_vars a bitmap.
	(referenced_var_iterator): Adjust.
	(FOR_EACH_REFERENCED_VAR): Adjust.
	(FOR_EACH_REFERENCED_VAR_IN_BITMAP): New iterator.
	(num_referenced_vars): Adjust.
	* tree-flow-inline.h (gimple_referenced_vars): Adjust.
	(first_referenced_var): Remove.
	(end_referenced_vars_p): Likewise.
	(next_referenced_var): Likewise.
	(referenced_var_iterator_set): New helper function.
	* tree-dfa.c (referenced_var_lookup): Adjust.
	(referenced_var_check_and_insert): Likewise.
	(remove_referenced_var): Likewise.
	* tree-ssa.c (verify_flow_insensitive_alias_info): Use
	FOR_EACH_REFERENCED_VAR_IN_BITMAP.
	(verify_call_clobbering): Likewise.
	(verify_memory_partitions): Likewise.
	(init_tree_ssa): Allocate bitmap instead of hashtable for
	referenced_vars.
	(delete_tree_ssa): Adjust.
	* tree-ssa-alias.c (mark_aliases_call_clobbered): Use
	FOR_EACH_REFERENCED_VAR_IN_BITMAP.
	(compute_tag_properties): Likewise.
	(set_initial_properties): Likewise.
	(find_partition_for): Likewise.
	(update_reference_counts): Likewise.
	(dump_may_aliases_for): Likewise.
	* tree-ssa-operands.c (add_virtual_operand): Likewise.
	(add_call_clobber_ops): Likewise.
	(add_call_read_ops): Likewise.
	(get_asm_expr_operands): Likewise.
	* tree-into-ssa.c (dump_decl_set): Likewise.
	(update_ssa): Likewise.
	* tree-sra.c (scan_function): Likewise.
	(decide_instantiations): Likewise.
	(scalarize_parms): Likewise.
	* tree-ssa-alias-warnings.c (build_reference_table): Likewise.
	(dsa_named_for): Likewise.
	* tree-ssa-structalias.c (update_alias_info): Likewise.
	(merge_smts_into): Likewise.

2008-02-25  Andreas Krebbel  <krebbel1@de.ibm.com>

	PR target/35258
	* cse.c (cse_insn): Avoid creation of overlapping MEMs.
	* alias.c (nonoverlapping_memrefs_p): Export for use in other modules.
	* alias.h (nonoverlapping_memrefs_p): Likewise.

2008-02-25  Jan Beulich  <jbeulich@novell.com>

	* Makefile.in: Also prefix uses of crt0.o and mcrt0.o with
	$(T).
	* config/i386/netware-libgcc.exp: Add __bswap?i2,
	__emultls_get_address, __emultls_register_common,
	__floatundi?f, and _Unwind_GetIPInfo.
	* config/i386/netware.c (gen_stdcall_or_fastcall_decoration):
	Sync with config/i386/winnt.c:gen_stdcall_or_fastcall_suffix().
	(gen_regparm_prefix): Likewise.
	(i386_nlm_encode_section_info): Sync with
	config/i386/winnt.c:i386_pe_encode_section_info().
	(i386_nlm_maybe_mangle_decl_assembler_name): New.
	i386_nlm_mangle_decl_assembler_name): New.
	(netware_override_options): New.
	* config/i386/netware.h (netware_override_options): Declare.
	(OVERRIDE_OPTIONS): Re-define to netware_override_options.
	(i386_nlm_mangle_decl_assembler_name): Declare.
	(TARGET_MANGLE_DECL_ASSEMBLER_NAME): Define.

2008-02-25  Ben Elliston  <bje@au.ibm.com>

	PR other/32948
	* c-decl.c (grokdeclarator): Remove unused local variables
	`typedef_type' and `type_as_written'.
	* bb-reorder.c
	(find_rarely_executed_basic_blocks_and_crossing_edges): Remove
	unused local variable `has_hot_blocks'.
	(fix_crossing_conditional_branches): Remove unused local variable
	`prev_bb'.
	
2008-02-25  Uros Bizjak  <ubizjak@gmail.com>

	PR middle-end/19984
	* builtins.def (BUILT_IN_NAN): Define as c99 builtin
	using DEF_C99_BUILTIN.
	(BUILT_IN_NANF): Ditto.
	(BUILT_IN_NANL): Ditto.

2008-02-25  Ayal Zaks  <zaks@il.ibm.com>
	    Revital Eres  <eres@il.ibm.com>

	* modulo-sched.c (calculate_must_precede_follow): Address TODO
	regarding the order of two dependent insns in the same row.

2008-02-25  Eric Botcazou  <ebotcazou@adacore.com>

	* stor-layout.c (layout_decl): Do not bump the alignment of a
	bit-field to more than byte alignment if it is packed.

2008-02-24  David Edelsohn  <edelsohn@gnu.org>

	* config/rs6000/rs6000.c (processor_costs): Add cache costs for
	e300c2 and e300c3.

2008-02-24  Diego Novillo  <dnovillo@google.com>

	http://gcc.gnu.org/ml/gcc-patches/2008-02/msg01094.html

	PR 33738
	* tree-vrp.c (vrp_evaluate_conditional): With
	-Wtype-limits, emit a warning when comparing against a
	constant outside the natural range of OP0's type.
	* c.opt (Wtype-limits): Move ...
	* common.opt (Wtype-limits): ... here.

2008-02-24  Edmar Wienskoski  <edmar@freescale.com>

	* config.gcc (powerpc*-*-*): Add new cores e300c2 and e300c3.
	* config/rs6000/e300c2c3.md: New file.
	* config/rs6000/rs6000.c (processor_costs): Add new costs for
	e300c2 and e300c3.
	(rs6000_override_options): Add e300c2 and e300c3 cases to
	processor_target_table. Do not allow usage of Altivec or Spe
	with e300 cores. Initialize rs6000_cost for e300c2 and e300c3.
	(rs6000_issue_rate): Set issue rate for e300c2 and e300c3.
	* config/rs6000/rs6000.h (processor_type): Add
	PROCESSOR_PPCE300C2 and PROCESSOR_PPCE300C3.
	(ASM_CPU_SPEC): Add e300c2 and e300c3.
	* config/rs6000/rs6000.md (define_attr "cpu"): Add ppce300c2
	and ppce300c3. Include e300c2c3.md.

2008-02-23  David Edelsohn  <edelsohn@gnu.org>

	* config/rs6000/rs6000.h (CONSTANT_ALIGNMENT): Use STRICT_ALIGNMENT
	instead of TARGET_STRICT_ALIGN.

2008-02-23  Joseph Myers  <joseph@codesourcery.com>

	* explow.c (memory_address): Assert that the generated address is
	valid.

2008-02-23  Francois-Xavier Coudert  <coudert@clipper.ens.fr>

	PR target/25477
	* config/darwin-protos.h: Add darwin_patch_builtins prototype.
	* config/darwin-ppc-ldouble-patch.def: New file.
	* config/rs6000/darwin.h (SUBTARGET_INIT_BUILTINS): New macro.
	* config/rs6000/rs6000.c (rs6000_init_builtins): Call
	SUBTARGET_INIT_BUILTINS if defined.
	* config/darwin.c (darwin_patch_builtin, darwin_patch_builtins):
	New functions.

2008-02-23  Andrew Pinski  <andrew_pinski@playstation.sony.com>

	PR rtl-opt/33512
	* simplify-rtx.c (simplify_binary_operation_1): Add simplification
	of (and X (ior (not X) Y) and (and (ior (not X) Y) X).

2008-02-23  Andrew Pinski  <andrew_pinski@playstation.sony.com>

	PR pch/35027
	* c-pch.c (c_common_valid_pch): Make the "too short to be a PCH
	file" warning condtional on -Winvalid-PCH.

2008-02-23  Daniel Jacobowitz  <dan@codesourcery.com>

	* expmed.c (extract_bit_field): Always use adjust_address for MEM.

2008-02-23  Uros Bizjak  <ubizjak@gmail.com>

	PR target/22076
	PR target/34256	
	* config/i386/mmx.md (*mov<mode>_internal_rex64): Use "!y" to
	prevent reload from using MMX registers.
	(*mov<mode>_internal): Ditto.
	(*movv2sf_internal_rex64): Ditto.
	(*movv2sf_internal): Ditto.

2008-02-23  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	PR documentation/31569
	* doc/install.texi2html: Use makeinfo --no-number-sections.

2008-02-22  Nathan Froyd  <froydnj@codesourcery.com>

	* config/rs6000/rs6000.c (rs6000_legitimize_address): Check to
	ensure that we can address an entire entity > 8 bytes.  Don't
	generate reg+reg addressing for such data.

2008-02-22  Nathan Froyd  <froydnj@codesourcery.com>

	* config/rs6000/rs6000.h (CONSTANT_ALIGNMENT): Don't overalign
	strings when optimizing for size, unless the target cares about
	alignment.

2008-02-22  Tom Tromey  <tromey@redhat.com>

	* regclass.c (current_pass): Remove declaration.

2008-02-22  Anatoly Sokolov <aesok@post.ru>

	* config/avr/libgcc.S (__RAMPZ__): Define.
	(__do_copy_data): Add for devices with 128KB code memory.

2008-02-22  Nathan Froyd  <froydnj@codesourcery.com>

	* config/rs6000/linuxspe.h (SUBSUBTARGET_OVERRIDE_OPTIONS):
	Use spe_abi.
	* config/rs6000/eabispe.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Likewise.

2008-02-22  Hans-Peter Nilsson  <hp@axis.com>

	* config/cris/cris.h (REG_CLASS_FROM_LETTER): Recognize 'b' for
	GENNONACR_REGS.

2008-02-22  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	PR c/19999
	* c-typeck.c (build_binary_op): Warn about floating point
	comparisons if FLOAT_TYPE_P, not only for REAL_TYPE.

2008-02-21  Janis Johnson  <janis187@us.ibm.com>

	PR target/34526
	* config/rs6000/rs6000.c (rs6000_altivec_abi): Clarify comment.
	(rs6000_explicit_options): Split abi into spe_abi and altivec_abi,
	add vrsave.
	(rs6000_override_options): Set altivec_abi as default, not override,
	for 64-bit GNU/Linux; for 32-bit GNU/Linux default to altivec_abi for
	TARGET_ALTIVEC; default to TARGET_ALTIVEC_VRSAVE when AltiVec ABI
	is used; use new member spe_abi.
	(rs6000_handle_option): Set rs6000_explicit_options.vrsave; use
	spe_abi and altivec_abi.

2008-02-22  Tomas Bily  <tbily@suse.cz>

	* tree-vectorizer.c (vect_is_simple_reduction): Fix comment typo.

2008-02-21  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	PR bootstrap/35273
	* config.build (build_file_translate): Set to `CMD //c' only if
	it works.
	* Makefile.in (build_file_translate): Improve comment.

2008-02-21  Jan Hubicka  <jh@suse.cz>

	* predict.def (PRED_TREE_OPCODE_POSITIVE, PRED_TREE_OPCODE_NONEQUAL,
	PRED_TREE_OPCODE_POSITIVE, PRED_TREE_OPCODE_NONEQUAL, PRED_CALL,
	PRED_TREE_EARLY_RETURN, PRED_NULL_RETURN): Update.

2008-02-21  Michael Matz  <matz@suse.de>

	PR target/35264
	* config/i386/i386.c (ix86_expand_branch): Add missing breaks.

2008-02-21  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (mov<mode>cc): Macroize expander from movsfcc,
	movdfcc and movxfcc using X87MODEF mode iterator and SSE_FLOAT_MODE_P
	as insn constraint.
	* config/i386/sse.md (<sse>_movup<ssemodesuffixf2c>): Macroize insn
	from sse_movups adn sse2_movupd using SSEMODEF2P mode iterator and
	SSE_VEC_FLOAT_MODE_P as insn constraint.
	(<sse>_movmskp<ssemodesuffixf2c>): Ditto from similar patterns.
	(sse4a_movnt<mode>): Macroize insn from sse4a_movntsf and
	sse4a_movntdf using MODEF mode iterator.
	(sse4a_vmmovnt<mode>): Macroize insn form sse4a_vmmovntv2df and
	sse4a_vmmovntv4sf using SSEMODEF2P mode iterator.
	(sse4_1_blendp<ssemodesuffixf2c>): Ditto from similar patterns.
	(sse4_1_blendvp<ssemodesuffixf2c>): Ditto.
	(sse4_1_dpp<ssemodesuffixf2c>): Ditto.
	(sse4_1_roundp<ssemodesuffixf2c>): Ditto.
	(sse4_1_rounds<ssemodesuffixf2c>): Ditto.

2008-02-21  Richard Guenther  <rguenther@suse.de>

	* tree.def (PAREN_EXPR): New tree code.
	* fold-const.c (fold_unary): Remove PAREN_EXPR around constants
	and PAREN_EXPR.
	* tree-pretty-print.c (dump_generic_node): Handle PAREN_EXPR.
	* expr.c (expand_expr_real_1): Likewise.
	* tree-inline.c (estimate_num_insns_1): Likewise.
	* tree-complex.c (expand_complex_move): Likewise.
	* tree-vectorizer.c (vect_is_simple_use): Treat PAREN_EXPR (x)
	as plain x.

2008-02-20  Kaz Kojima  <kkojima@gcc.gnu.org>

	PR target/35225
	* config/sh/sh.c (find_barrier): Don't go past 'from' argument.

2008-02-20  Kaz Kojima  <kkojima@gcc.gnu.org>

	PR target/35190
	* config/sh/sh.md (jump_compact): Disable for crossing jumps.

	* config/sh/sh.c (find_barrier): Don't go past
	NOTE_INSN_SWITCH_TEXT_SECTIONS note.

2008-02-20  DJ Delorie  <dj@redhat.com>

	* config/h8300/h8300.md (insv): Force source operand to be a register.

	* config/h8300/h8300.c (h8300_expand_epilogue): Emit return insn
	as a jump, not as a plain insn.
	
2008-02-20  Seongbae Park <seongbae.park@gmail.com>

	* doc/invoke.texi (Warning Options): Add new option
	-Wframe-larger-than=.
	(-Wframe-larger-than): Document.

	* flags.h (warn_frame_larger_than, frame_larger_than_size):
	Add declarations for new option variables.

	* final.c (final_start_function): Check the frame size
	before emission and issue a Wframe-larger-than warning.

	* opts.c (warn_frame_larger_than, frame_larger_than_size):
	Add definitions for new option variables.
	(common_handle_option): Handle new option OPT_Wframe_larger_than_.

	* common.opt (Wframe-larger-than=): New option.

2008-02-20  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/sse.md (<sse>_vmmul<mode>3): Fix typo in asm template.
	(<sse>_div<mode>3): Ditto.
	(<sse>_vmdiv<mode>3): Ditto.
	(<sse>_vmsqrt<mode>2): Ditto.
	(*smax<mode>3): Ditto.
	(sse5_frcz<mode>2): Ditto.
	(sse5_vmfrcz<mode>2): Ditto.  Use TARGET_SSE5 instead of TARGET_ROUND
	as insn constraint.

2008-02-20  Richard Guenther  <rguenther@suse.de>

	PR middle-end/35265
	* builtins.c (validate_arg): If we want an INTEGER_TYPE,
	be happy with INTEGRAL_TYPE_P.

2008-02-20  Richard Guenther  <rguenther@suse.de>

	* fold-const.c (split_tree): Associate floatig-point expressions
	if flag_associative_math is set.

2008-02-20  Richard Guenther  <rguenther@suse.de>

	* tree.h (fold_real_zero_addition_p): Declare.
	* fold-const.c (fold_real_zero_addition_p): Export.
	* tree-ssa-reassoc.c (eliminate_using_constants): Also handle
	floating-point operations with zero and one.

2008-02-20  Paolo Bonzini  <bonzini@gnu.org>

	* doc/install.texi: Correct references to CFLAGS, replacing them
	with BOOT_CFLAGS.  Document flags used during bootstrap for
	target libraries.
				
2008-02-20  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.h (SSE_VEC_FLOAT_MODE_P): New define.
	* config/i386/i386.md (*sse_setcc<mode>): Macroize from *sse_setccsf
	and *sse_setccdf using MODEF mode iterator and SSE_FLOAT_MODE_P as
	insn constraint.
	(smin<mode>3): Ditto from similar patterns.
	(smax<mode>3): Ditto.
	(*ieee_smin<mode>3): Ditto.
	(*ieee_smax<mode>3): Ditto.
	* config/i386/sse.md (sse): New mode attribute.
	(mov<mode>): Macroize expander from movv4sf and movv2df using
	SSEMODEF2P mode iterator.
	(<sse>_movnt<mode>): Ditto from similar patterns. Use
	SSE_VEC_FLOAT_MODE_P as insn constraint.
	(storent<mode>): Ditto.
	(storent<mode>): Macroize expander from storentsf and storentdf using
	MODEF mode iterator.
	(neg<mode>2): Macroize from negv4sf2 and negv2df2 using SSEMODEF2P
	mode iterator and SSE_VEC_FLOAT_MODE_P as insn constraint.
	(abs<mode>2): Ditto from similar patterns.
	(add<mode>3, *add<mode>3, <sse>_vmadd<mode>3): Ditto.
	(sub<mode>3, *sub<mode>3, <sse>_vmsub<mode>3): Ditto.
	(<sse>_div<mode>3, <sse>_vmdiv<mode>3): Ditto.
	(<sse>_vmsqrt<mode>2): Ditto.
	(smin<mode>3, *smin<mode>3_finite, *smin<mode>3)
	(<sse>_vmsmin<mode>3, *ieee_smin<mode>3): Ditto.
	(smax<mode>3, *smax<mode>3_finite, *smax<mode>3)
	(<sse>_vmsmax<mode>3, *ieee_smax<mode>3): Ditto.
	(<sse>_maskcmp<mode>3): Macroize from sse_maskcmpv4sf3,
	sse_maskcmpsf3, sse2_maskcmpv2df3 and sse2_maskcmpdf3 using SSEMODEF4
	mode iterator. Use SSE_FLOAT_MODE_P with SSE_VEC_FLOAT_MODE_P as
	insn constraint.
	(<sse>_comi): Macroize from sse_comi and sse2_comi using MODEF mode
	iterator and SSE_FLOAT_MODE_P as insn constraint.
	(<sse>_ucomi): Ditto from similar patterns.
	(<sse>_vmmaskcmp<mode>3): Macroize from sse_vmmaskcmpv4sf3 and
	sse2_vmmaskcmpv2df3 using SSEMODEF2P mode iterator and
	SSE_VEC_FLOAT_MODE_P as insn constraint.
	(vcond<mode>): Ditto from similar patterns.
	(and<mode>3, *and<mode>3): Ditto.
	(<sse>_nand<mode>3): Ditto.
	(ior<mode>3, *ior<mode>3): Ditto.
	(xor<mode>3, *xor<mode>3): Ditto.
	(*and<mode>3): Macroize from *andsf3 and *anddf3 using MODEF mode
	iterator and SSE_FLOAT_MODE_P as insn constraint.
	(*nand<mode>3): Ditto from similar patterns.
	(*ior<mode>3): Ditto.
	(*xor<mode>3): Ditto.

2008-02-20  Ira Rosen  <irar@il.ibm.com>

	* config/spu/spu.md (vec_unpacku_hi_v8hi, vec_unpacku_lo_v8hi,
	vec_unpacks_hi_v8hi, vec_unpacks_lo_v8hi, vec_unpacku_hi_v16qi,
	vec_unpacku_lo_v16qi, vec_unpacks_lo_v16qi): Implement.

2008-02-19  Jan Hubicka  <jh@suse.cz>

	* predict.c (tree_bb_level_predictions): Remove variable next
	mistakely introduced by previous commit.

2008-02-19  Jan Hubicka  <jh@suse.cz>

	* predict.c (predict_paths_leading_to): Rewrite.
	(predict_paths_for_bb): New.
	(tree_bb_level_predictions): Update call of predict_paths_leading_to.

2008-02-19  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	PR bootstrap/35218
	* Makefile.in (build_file_translate): New.
	(gcc-vers.texi): Use it for translating $(abs_srcdir).
	* config.build (build_file_translate): Set to `CMD //c' on MinGW.
	* configure.ac (build_file_translate): Substitute it.
	* configure: Regenerate.

2008-02-19  Jan Hubicka  <jh@suse.cz>

	PR rtl-optimization/34408
	* see.c (see_def_extension_not_merged): Copy subreg so we don't have
	invalid sharing.

2008-02-19  Jan Hubicka  <jh@suse.cz>

	PR middle-end/28779
	* tree-inline.c (estimate_num_insns_1): Fix counting of cost of
	call_expr.

2008-02-19  H.J. Lu  <hongjiu.lu@intel.com>

	PR Ada/35186
	* config/i386/i386-modes.def: Revert the last DI alignment
	change until Ada people can look into it.

2008-02-19  Nick Clifton  <nickc@redhat.com>

	* opts.c (print_specific_help): Fix typo in --help text.

2008-02-19  Jakub Jelinek  <jakub@redhat.com>

	PR target/35239
	* config/i386/cpuid.h (__cpuid, __get_cpuid_max): Use special
	32-bit inline asm without asm alternatives for host GCC < 3.0.

2008-02-19  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34989
	* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Re-structure.
	Allow propagation to INDIRECT_REF if we can simplify only.

2008-02-19  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	* c-common.c (warn_for_collisions_1): Use appropriate option when
	warning.

2008-02-19  Nick Clifton  <nickc@redhat.com>

	PR other/31349
	* opts.c (undocumented_msg): Leave blank unless checking is enabled.
	(handle_options): Fix indentation.
	(print_filtered_help): If no language-specific options were
	displayed tell the user how to list all the options supported by
	the language's front-end.
	(print_specific_help): Fix indentation and remove duplicate line.
	(common_handle_option): Handle the -v option.
	For --help enable the display of undocumented options if the -v
	switch has been included on the command line.
	For --help= check for overlaps in the arguments between the option
	classes and the language names and issue a warning when they
	cannot be disambiguated.
	* c.opt (v): Pass on to the common option handler.

2008-02-19  Revital Eres  <eres@il.ibm.com> 

	* modulo-sched.c (sms_schedule): Change dump message when
	create_ddg function fails.
	(try_scheduling_node_in_cycle): Rename row to cycle.
	(print_partial_schedule): Rename CYCLE to ROW.

2008-02-19  Christian Bruel  <christian.bruel@st.com>
	    Zdenek Dvorak  <ook@ucw.cz>

	* tree-ssa-loop-ivopts.c (may_be_unaligned_p): Check step alignment.

2008-02-19  Uros Bizjak  <ubizjak@gmail.com>

	PR target/33555
	* config/i386/i386.md (*x86_movsicc_0_m1_se): New insn pattern.
	(*x86_movdicc_0_m1_se): Ditto.

2008-02-19  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/sfp-machine.h (__gcc_CMPtype): New typedef.
	(CMPtype): Define as __gcc_CMPtype.
	* config/rs6000/sfp-machine.h (__gcc_CMPtype): New typedef.
	(CMPtype): Define as __gcc_CMPtype.

2008-02-19  Hans-Peter Nilsson  <hp@axis.com>

	Support valgrind 3.3 for --enable-checking=valgrind.
	* system.h: Consolidate ENABLE_VALGRIND_CHECKING-dependent defines
	here.
	[!VALGRIND_MAKE_MEM_NOACCESS]: Define as VALGRIND_MAKE_NOACCESS.
	[!VALGRIND_MAKE_MEM_DEFINED]: Define as VALGRIND_MAKE_READABLE.
	[!VALGRIND_MAKE_MEM_UNDEFINED]: Define as VALGRIND_MAKE_WRITABLE.
	* ggc-common.c: Remove ENABLE_VALGRIND_CHECKING-dependent defines.
	Replace use of VALGRIND_MAKE_READABLE, VALGRIND_MAKE_WRITABLE, and
	VALGRIND_MAKE_NOACCESS with VALGRIND_MAKE_MEM_DEFINED,
	VALGRIND_MAKE_MEM_UNDEFINED, and VALGRIND_MAKE_MEM_NOACCESS
	respectively.
	* ggc-zone.c: Similar.
	* ggc-page.c: Similar.

2008-02-19  Paul Brook  <paul@codesourcery.com>

	PR target/35071
	* config/arm/ieee754-df.S: Fix do_it typo.
	* config/arm/ieee754-sf.S: Fix do_it typo.

2008-02-18  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/35189
	* config/i386/i386.c (OPTION_MASK_ISA_MMX_SET): New.
	(OPTION_MASK_ISA_3DNOW_SET): Likewise.
	(OPTION_MASK_ISA_SSE_SET): Likewise.
	(OPTION_MASK_ISA_SSE2_SET): Likewise.
	(OPTION_MASK_ISA_SSE3_SET): Likewise.
	(OPTION_MASK_ISA_SSSE3_SET): Likewise.
	(OPTION_MASK_ISA_SSE4_1_SET): Likewise.
	(OPTION_MASK_ISA_SSE4_2_SET): Likewise.
	(OPTION_MASK_ISA_SSE4_SET): Likewise.
	(OPTION_MASK_ISA_SSE4A_SET): Likewise.
	(OPTION_MASK_ISA_SSE5_SET): Likewise.
	(OPTION_MASK_ISA_3DNOW_A_UNSET): Likewise.
	(OPTION_MASK_ISA_MMX_UNSET): Updated.
	(OPTION_MASK_ISA_3DNOW_UNSET): Updated.
	(OPTION_MASK_ISA_SSE_UNSET): Likewise.
	(OPTION_MASK_ISA_SSE3_UNSET): Likewise.
	(OPTION_MASK_ISA_SSSE3_UNSET): Likewise.
	(OPTION_MASK_ISA_SSE4_1_UNSET): Likewise.
	(OPTION_MASK_ISA_SSE4_2_UNSET): Likewise.
	(OPTION_MASK_ISA_SSE4A_UNSET): Likewise.
	(OPTION_MASK_ISA_SSE5_UNSET): Likewise.
	(OPTION_MASK_ISA_SSE4): Removed.
	(ix86_handle_option): Turn on bits in ix86_isa_flags and
	ix86_isa_flags_explicit with OPTION_MASK_ISA_XXX_SET for
	-mXXX.
	(override_options): Don't turn on implied SSE/MMX bits in
	ix86_isa_flags.

2008-02-18  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386-modes.def: Use 4 byte alignment on DI for
	32bit host.

2008-02-18  Joey Ye  <joey.ye@intel.com>

	PR middle-end/34921
	* tree-nested.c (insert_field_into_struct): Set type alignment
	to field alignment if the former is less than the latter.

2008-02-18  Jakub Jelinek  <jakub@redhat.com>

	* BASE-VER: Set to 4.4.0.

2008-02-17 Ralf Wildenhues <Ralf.Wildenhues@gmx.de>

	* doc/c-tree.texi: Use @dots{} and @enddots{} where appropriate.
	* doc/cfg.texi: Likewise.
	* doc/extend.texi: Likewise.
	* doc/gty.texi: Likewise.
	* doc/invoke.texi: Likewise.
	* doc/loop.texi: Likewise.
	* doc/md.texi: Likewise.
	* doc/passes.texi: Likewise.
	* doc/rtl.texi: Likewise.
	* doc/sourcebuild.texi: Likewise.
	* doc/tm.texi: Likewise.
	* doc/tree-ssa.texi: Likewise.

2008-02-17  Richard Guenther  <rguenther@suse.de>

	PR middle-end/35227
	* tree-complex.c (init_parameter_lattice_values): Handle parameters
	without default definition.

2008-02-17  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/35231
	* tree-vrp.c (register_edge_assert_for): Do not assume A == 0
	if A | B != 1.

2008-02-17  Uros Bizjak  <ubizjak@gmail.com>

	Revert:

	2008-02-15  Uros Bizjak  <ubizjak@gmail.com>	
	* config/i386/sfp-machine.h (CMPtype): Define as typedef using
	libgcc_cmp_return mode.

2008-02-16  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	PR c/28368
	* doc/invoke.texi (-std): Clarify description of -std= and -ansi.

2008-02-16  Ralf Corsepius  <ralf.corsepius@rtems.org>

	* config/m68k/t-rtems (M68K_MLIB_CPU): Add 5208, 5307, 5407, 5475
	multilibs.

2008-02-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* doc/c-tree.texi: Use `@.' where appropriate.
	* doc/extend.texi: Likewise.
	* doc/install.texi: Likewise.
	* doc/invoke.texi: Likewise.
	* doc/loop.texi: Likewise.
	* doc/makefile.texi: Likewise.
	* doc/md.texi: Likewise.
	* doc/passes.texi: Likewise.
	* doc/standards.texi: Likewise.
	* doc/tm.texi: Likewise.

2008-02-15  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/35196
	* omp-low.c (expand_omp_for_generic): Don't initialize fd->v
	in entry_bb.
	(expand_omp_for_static_nochunk): Initialize fd->v in seq_start_bb
	rather than in entry_bb.

2008-02-15  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/sfp-machine.h (CMPtype): Define as typedef using
	libgcc_cmp_return mode.

2008-02-15  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/35130
	* tree-nested.c (convert_call_expr): Put FRAME.* vars into
	OMP_CLAUSE_SHARED rather than OMP_CLAUSE_FIRSTPRIVATE clause.

2008-02-15  Richard Guenther  <rguenther@suse.de>
	    Zdenek Dvorak  <ook@ucw.cz>

	PR tree-optimization/35164
	* tree-flow.h (stmt_references_abnormal_ssa_name): Declare.
	* tree-dfa.c (stmt_references_abnormal_ssa_name): New function.
	* tree-ssa-forwprop.c (tree_ssa_forward_propagate_single_use_vars):
	Only propagate addresses which do not have abnormal SSA_NAMEs
	in their operands.

2008-02-15  Joseph Myers  <joseph@codesourcery.com>

	PR target/35088
	* config/m68k/m68k.h (DWARF_CIE_DATA_ALIGNMENT): Define.

2008-02-15  Jan Hubicka  <jh@suse.cz>

	PR middle-end/35149
	* ipa.c (cgraph_remove_unreachable_nodes): Clear local.inlinable flag.

2008-02-15  Uros Bizjak  <ubizjak@gmail.com>

	PR middle-end/34621
	* function.c (pad_to_arg_alignment): Remove test for STACK_BOUNDARY
	when calculating alignment_pad.

2008-02-15  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.h (CLEAR_RATIO): Use MIN macro.
	(WIDEST_HARDWARE_FP_SIZE): Use LONG_DOUBLE_TYPE_SIZE define.
	* config/i386/darwin.h (PREFERRED_STACK_BOUNDARY): Use MAX macro
	and STACK_BOUNDARY define.

2008-02-14  Danny Smith  <dannysmith@users.sourceforge.net>

	PR preprocessor/35061
	* c-pragma.c (handle_pragma_pop_macro): Check that
	pushed_macro_table has been allocated.

2008-02-14  Eric Botcazou  <ebotcazou@adacore.com>

	PR middle-end/35136
	* gimplify.c (force_gimple_operand_bsi): Revert 2008-02-12 change.
	(force_gimple_operand): Likewise.
	* tree-ssa-loop-ivopts.c (may_be_nonaddressable_p): Add new cases
	for TARGET_MEM_REF and CONVERT_EXPR/NON_LVALUE_EXPR/NOP_EXPR.
	Also recurse on the operand for regular VIEW_CONVERT_EXPRs.
	(find_interesting_uses_address): Check addressability and alignment
	of the base expression only after substituting bases of IVs into it.

2008-02-14  Michael Matz  <matz@suse.de>

	PR target/34930
	* function.c (instantiate_virtual_regs_in_insn): Reload address
	before falling back to reloading the whole operand.

2008-02-14  Andreas Krebbel  <krebbel1@de.ibm.com>

	* config/s390/s390.c (s390_mainpool_start): Emit the pool
	before the first section switch note.

2008-02-14 Ralf Wildenhues <Ralf.Wildenhues@gmx.de>

	* doc/bugreport.texi: Update copyright years.
	* doc/c-tree.texi: Likewise.
	* doc/cfg.texi: Likewise.
	* doc/cpp.texi: Likewise.
	* doc/cppinternals.texi: Likewise.
	* doc/fragments.texi: Likewise.
	* doc/frontends.texi: Likewise.
	* doc/gcc.texi: Likewise.
	* doc/gty.texi: Likewise.
	* doc/hostconfig.texi: Likewise.
	* doc/implement-c.texi: Likewise.
	* doc/libgcc.texi: Likewise.
	* doc/loop.texi: Likewise.
	* doc/makefile.texi: Likewise.
	* doc/options.texi: Likewise.
	* doc/passes.texi: Likewise.
	* doc/rtl.texi: Likewise.
	* doc/sourcebuild.texi: Likewise.
	* doc/standards.texi: Likewise.
	* doc/tree-ssa.texi: Likewise.
	* doc/trouble.texi: Likewise.

	* doc/extend.texi: Use @: or add comma where appropriate.
	* doc/invoke.texi: Likewise.
	* doc/tm.texi: Likewise.

2008-02-14  Alan Modra  <amodra@bigpond.net.au>

	PR target/34393
	* config/rs6000/rs6000.md (restore_stack_block): Force operands[1]
	to a reg.

2008-02-14  Jesper Nilsson  <jesper.nilsson@axis.com>

	* doc/md.texi (clz, ctz): Add reference.
	* doc/rtl.texi (clz, ctz): Likewise.

2008-02-13  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	PR other/35148
	* Makefile.in (gcc-vers.texi): Use abs_srcdir for the value of
	srcdir.

2008-02-13  Andreas Krebbel  <krebbel1@de.ibm.com>

	* config/s390/s390.c (struct constant_pool): New field
	emit_pool_after added.
	(s390_mainpool_start): Set the emit_pool_after flag according
	to the section switch notes.
	(s390_mainpool_finish): Consider emit_pool_after when emitting
	the literal pool at the end of the function.
	(s390_chunkify_start): Force literal pool splits at section
	switch notes.

2008-02-13  Michael Matz  <matz@suse.de>

	PR debug/35065
	* var-tracking.c (clobber_variable_part): Correctly traverse the
	list.

2008-02-13  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	PR 29673
	* doc/invoke.texi (Debugging Options): Remove -fdump-tree-inlined.
	Add -fdump-ipa-inline.
	* tree-dump.c (dump_files): Remove tree-inlined dump.
	* tree-pass.h (tree_dump_index): Remove TDI_inlined.
	
2008-02-12  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/35171
	* tree-vect-patterns.c (vect_recog_dot_prod_pattern): Deal with
	default defs.

2008-02-12  Richard Guenther  <rguenther@suse.de>

	PR middle-end/35163
	* fold-const.c (fold_widened_comparison): Use get_unwidened in
	value-preserving mode.  Disallow final truncation.

2008-02-12  Eric Botcazou  <ebotcazou@adacore.com>

	PR middle-end/35136
	* gimplify.c (force_gimple_operand_bsi): Move SSA renaming
	code from here to...
	(force_gimple_operand): ...here.

2008-02-12  Jakub Jelinek  <jakub@redhat.com>

	PR c++/35144
	* tree-sra.c (sra_build_assignment): fold_convert SRC if copying
	non-compatible pointers.
	(generate_element_copy): If SRC and DST are RECORD_TYPEs with
	different FIELD_DECLs, try harder by comparing field offsets, sizes
	and types.

	PR inline-asm/35160
	* function.c (match_asm_constraints_1): Don't replace the same input
	multiple times.

2008-02-12  Anatoly Sokolov <aesok@post.ru>

	* config/avr/avr.h (AVR_HAVE_RAMPZ): Define.
	* config/avr/avr.c (expand_prologue): Save RAMPZ register.
	(expand_epilogue): Restore RAMPZ register.
	* config/avr/avr.md (RAMPZ_ADDR): New constant.

2008-02-11  Kai Tietz  <kai.tietz@onevision.com>

	* config/i386/cygwin.asm: (__alloca): Correct calling
	convention and alignment.
	(__chkstk): Force 8 byte stack alignment.

2008-02-11  Uros Bizjak  <ubizjak@gmail.com>
	    Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/33992
	* tree-ssa-loop-im.c (rewrite_bittest): Fixup the type of
	the zero we compare against.

2008-02-10  Danny Smith  <dannysmith@users.sourceforge.net>

	PR libfortran/35063
	* gthr-win32.h (__gthread_mutex_destroy_function): New function
	to CloseHandle after unlocking to prevent accumulation of handle
	count.

2008-02-09  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	PR middle_end/34150
	* pa.c (legitimize_pic_address): Add REG_EQUAL note on sets with a
	pic_label_operand source.  Similarly, add a REG_LABEL_OPERAND note
	and update LABEL_NUSES during and after reload.

2008-02-08  Steven Bosscher  <stevenb.gcc@gmail.com>

	PR middle-end/34627
	* combine.c (simplify_if_then_else): Make sure the comparison is
	against const0_rtx when simplifying to (abs x) or (neg (abs X)).

2008-02-08  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR bootstrap/35051
	* double-int.h: Don't include gmp.h for GENERATOR_FILEs.
	(mpz_set_double_int, mpz_get_double_int): Hide from GENERATOR_FILEs.
	* real.h: Don't include gmp.h or mpfr.h for GENERATOR_FILEs.
	(real_from_mpfr, mpfr_from_real): Hide from GENERATOR_FILEs.
	* tree.h (get_type_static_bounds): Likewise.

2008-02-08  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	* doc/invoke.texi (Option Summary, C++ Dialect Options)
	(Objective-C and Objective-C++ Dialect Options, Warning Options):
	Make -Wfoo language annotations match what the compiler outputs.

2008-02-08  Sa Liu  <saliu@de.ibm.com>

	* config/spu/spu-builtins.def: Fixed wrong parameter type in spu 
	intrinsics spu_convts, spu_convtu, spu_convtf.
	* testsuite/gcc.target/spu/intrinsics-3.c: New. Test error messages.

2008-02-08  Hans-Peter Nilsson  <hp@axis.com>

	* doc/extend.texi (Function Attributes) <noinline>: Mention
	asm ("") as method to keep calls.

2008-02-07  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	PR other/32754
	* doc/options.texi (Options): Replace references to opts.sh with
	optc-gen.awk.
	* opts-common.c: Likewise.
	* optc-gen.awk: Likewise.
	
2008-02-07  Andreas Krebbel  <krebbel1@de.ibm.com>

	* config/s390/s390.h (FUNCTION_ARG_REGNO_P): Fix fprs for 64 bit.

2008-02-07  Richard Henderson  <rth@redhat.com>

	PR rtl-opt/33410
	* config/alpha/alpha.c (alpha_emit_xfloating_compare): Use an
	EXPR_LIST for the REG_EQUAL instead of a comparison with a 
	funny mode.

2008-02-07  Uros Bizjak  <ubizjak@gmail.com>

	PR tree-optimization/35085
	* tree-ssa-reassoc.c (rewrite_expr_tree): Enable destructive update
	for operand entry oe2 in addition to operand entry oe3 in order to
	expose more opportunities for vectorizer sum reduction.

2008-02-06  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>

	PR other/35107
	* Makefile.in (LIBS): Remove $(GMPLIBS).
	(cc1-dummy, cc1): Add $(GMPLIBS).

2008-02-06  Jan Hubicka  <jh@suse.cz>

	PR target/23322
	* i386.md (moddf_integer): Do not produce partial memory stalls for
	targets where it hurts.

2008-02-06  Uros Bizjak  <ubizjak@gmail.com>

	PR target/35083
	* optabs.c (expand_float): Do not check for decimal modes when
	expanding unsigned integer through signed conversion.

2008-02-06  Nick Clifton  <nickc@redhat.com>

	* config/stormy16/stormy16.md (eqbranchsi): Replace a match_dup
	inside the clobber with a match_operand and duplicated operand
	number in the constraint.
	(ineqbranchsi): Delete redundant comment.

2008-02-06  Ralf Corsepius  <ralf.corsepius@rtems.org>

	* config/arm/rtems-elf.h (TARGET_OS_CPP_BUILTINS): Add 
	builtin_define ("__USE_INIT_FINI__").
	* config/h8300/t-rtems (MULTILIB_OPTION,MULTILIB_DIRNAMES): Add
	-msx multilibs.
	* gthr-rtems.h: Remove __GTHREAD_MUTEX_INIT.

2008-02-06  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	PR documentation/30330
	* doc/invoke.texi (C++ Dialect Options)
	(Objective-C and Objective-C++ Dialect Options, Warning Options):
	For each warning option -Wfoo that allows -Wno-foo, ensure both
	-Wfoo and -Wno-foo are listed in the option index.  Fix index
	entry of -Wswitch-default, index -Wnormalized= including the
	`=', and -Wlarger-than-@var{len} including @var{len}.

2008-02-05  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.md (floatunssisf2): Use
	ix86_expand_convert_uns_sisf_sse also for TARGET_SSE.
	(floatunssi<mode>2): Rename from floatunssisf2 and floatunssidf2.
	Macroize expander using MODEF mode iterator.

2008-02-05  Diego Novillo  <dnovillo@google.com>

	http://gcc.gnu.org/ml/gcc-patches/2008-02/msg00140.html

	PR 33738
	* tree-vrp.c (vrp_evaluate_conditional): Revert fix for PR 33738.

2008-02-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>

	PR other/35070
	* toplev.c (print_version): Honor `indent' for GMP/MPFR warnings.

2008-02-05  H.J. Lu  <hongjiu.lu@intel.com>

	PR target/35084
	* config/i386/i386.c (ix86_function_sseregparm): Add an arg
	to indicate if a message should be generated.
	(init_cumulative_args): Updated.
	(function_value_32): Likewise.

2008-02-05  Joseph Myers  <joseph@codesourcery.com>

	* doc/include/texinfo.tex: Update to version 2008-02-04.16.

2008-02-05  Uros Bizjak  <ubizjak@gmail.com>

	PR target/35083
	* config/i386/i386.md (floatunsisf2): Enable for TARGET_SSE_MATH only.
	Call ix86_expand_convert_uns_sisf_sse for TARGET_SSE2.

2008-02-04  Diego Novillo  <dnovillo@google.com>

	http://gcc.gnu.org/ml/gcc-patches/2008-02/msg00110.html

	PR 33738
	* tree-vrp.c (vrp_evaluate_conditional): With
	-Wtype-limits, emit a warning when comparing against a
	constant outside the natural range of OP0's type.

2008-02-04  Richard Guenther  <rguenther@suse.de>

	PR middle-end/33631
	* expr.c (count_type_elements): Give for unions instead of
	guessing.

2008-02-04  Richard Guenther  <rguenther@suse.de>

	PR middle-end/35043
	* gimplify.c (gimplify_init_ctor_eval): Convert array indices
	to TYPE_DOMAINs base type instead of using bitsizetype here.

2008-02-03  Jason Merrill  <jason@redhat.com>

	* print-tree.c (print_node) [CONSTRUCTOR]: Print elements.

2008-02-04  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	PR other/29972
	* doc/invoke.texi (C++ Dialect Options, Optimize Options)
	(HPPA Options, i386 and x86-64 Options, IA-64 Options)
	(RS/6000 and PowerPC Options): Fix typos and markup.
	* doc/passes.texi (Tree-SSA passes): Likewise.

2008-02-02  Michael Matz  <matz@suse.de>

	PR target/35045
	* postreload-gcse.c (record_last_reg_set_info_regno): Renamed
	from record_last_reg_set_info.
	(record_last_reg_set_info): Take an RTX argument, iterate over all
	constituent hardregs.
	(record_last_set_info, record_opr_changes): Change calls to
	new signature or to record_last_reg_set_info_regno.

2008-02-02  Gerald Pfeifer  <gerald@pfeifer.com>

	* doc/extend.texi (X86 Built-in Functions): Fix grammar.

2008-02-01  Hans-Peter Nilsson  <hp@axis.com>

	PR rtl-optimization/34773
	* reg-notes.def (EQUAL): Mention significance of combination of
	REG_EQUAL and REG_RETVAL.
	* fwprop.c (try_fwprop_subst): Don't add REG_EQUAL to an
	insn that has a REG_RETVAL.

2008-02-01  Roger Sayle  <roger@eyesopen.com>

	PR bootstrap/33781
	* configure.ac (--enable-fixed-point): Disable unless explicitly
	requested on IRIX.
	* configure: Regenerate.

2008-02-01  Richard Guenther  <rguenther@suse.de>

	PR other/35042
	* invoke.texi (-finline-limit): Remove no longer true parts
	of the documentation.  Note that there is no default value.

2008-02-01  Andrew Pinski  <pinskia@gmail.com>
	    Mark Mitchell  <mark@codesourcery.com>
	    Ben Elliston  <bje@au.ibm.com>

	PR c/29326
	* doc/extend.texi (Other Builtins): Document.

2008-01-31  Tom Browder <tom.browder@gmail.com>

	* doc/c-tree.texi (Types): Fix grammar.
	(Expression trees): Ditto.
	* doc/passes.texi (Tree-SSA passes): Ditto.
	
	* doc/configterms.texi (Configure Terms): Fix typo.
	* doc/cpp.texi (Common Predefined Macros): Ditto.
	* doc/md.texi (Machine Constraints): Ditto.
	
	* doc/makefile.texi (Makefile): Add comma.

2008-01-31  Tom Browder  <tom.browder@gmail.com>
	    Gerald Pfeifer  <gerald@pfeifer.com>
	
	* doc/sourcebuild.texi (Front End): Remove references to CVS
	and CVSROOT/modules.
	(Texinfo Manuals): Replace reference to CVS by one to SVN.
	(Back End): Remove reference to CVS.

2008-01-31  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR target/34900
	* config/mips/mips.c (gen_load_const_gp): New function, taking a
	comment from...
	(mips16_gp_pseudo_reg): ...here.
	* config/mips/mips.md (load_const_gp): Replace with...
	(load_const_gp_<mode>): ...this :P-based insn.

2008-01-31  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	* doc/invoke.texi (-ansi): Mention explicitly corresponding -std=
	options. Minor fixes.
	(-std): Move reference to standards closer to where language
	standards are first mentioned.
	
2008-01-31  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR rtl-optimization/34995
	* reload.c (alternative_allows_const_pool_ref): Take an rtx
	parameter and return a bool.  If the rtx parameter is nonnull,
	check that it satisfies an EXTRA_MEMORY_CONSTRAINT.
	(find_reloads): Update call accordingly.  Pass the new operand
	if it needed no address reloads, otherwise pass null.

2008-01-30  Richard Henderson  <rth@redhat.com>

	PR c/34993
	* tree.c (build_type_attribute_qual_variant): Skip TYPE_DOMAIN
	for unbounded arrays.

2008-01-30  Silvius Rus  <rus@google.com>

	* config/i386/xmmintrin.h (_mm_prefetch): Add const to first arg.

2008-01-30  Jan Hubicka  <jh@suse.cz>

	PR target/34982
	* i386.c (init_cumulative_args): Use real function declaration when
	calling locally.

2008-01-30  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR rtl-optimization/34998
	* global.c (build_insn_chain): Treat non-subreg_lowpart
	SUBREGs of pseudos as clobbering all the words covered by the
	SUBREG, not just all the bytes.
	* ra-conflict.c (clear_reg_in_live): Likewise.  Take the
	original df_ref rather than an extract parameter.
	(global_conflicts): Update call accordingly.

2008-01-30  Andreas Krebbel  <krebbel1@de.ibm.com>

	* config/s390/fixdfdi.h (__fixunstfdi, __fixtfdi): Rearrange
	the overflow check to make it easier to read.
	(__fixtfdi): Change the type of the ll member in union
	long_double to UDItype_x.

2008-01-30  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/34969
	* cgraph.h (cgraph_update_edges_for_call_stmt): New prototype.
	* cgraph.c (cgraph_update_edges_for_call_stmt): New function.
	* tree-inline.c (fold_marked_statements): Call
	cgraph_update_edges_for_call_stmt if folding a call statement.
	* cgraphunit.c (verify_cgraph_node): Set cfun to this_cfun for
	debug_generic_stmt calls, reset it back afterwards.

	PR c/35017
	* c-decl.c (start_decl): Don't pedwarn about TREE_READONLY
	static decls.
	* c-typeck.c (build_external_ref): Don't pedwarn about
	static vars in current function's scope.

2008-01-29  Joseph Myers  <joseph@codesourcery.com>

	* config.gcc (i[34567]86-*-nto-qnx*): Remove deprecation.

2008-01-29  Bernhard Fischer  <aldot@gcc.gnu.org>

	PR c/35002
	* ipa-struct-reorg.c: Fix spelling.
	* params.def: Ditto.

2008-01-29  Richard Guenther  <rguenther@suse.de>

	PR middle-end/35006
	* tree-inline.h (struct copy_body_data): Add remapping_type_depth
	field.
	* tree-inline.c (remap_type): Increment remapping_type_depth
	around remapping types.
	(copy_body_r): Only add referenced variables if they are referenced
	from code, not types.

2008-01-29  Douglas Gregor  <doug.gregor@gmail.com>

	PR c++/34055
	PR c++/34103
	PR c++/34219
	PR c++/34606
	PR c++/34753
	PR c++/34754
	PR c++/34755
	PR c++/34919
	PR c++/34961
	* c-pretty-print.c (pp_c_type_qualifier_list): Don't try to print
	qualifiers for an ERROR_MARK_NODE or a NULL_TREE.

2008-01-28  Andy Hutchinson   <hutchinsonandy@netscape.net>

	PR target/34412
	* config/avr/avr.c (expand_prologue): Use correct QI mode frame 
	pointer for tiny stack.

2008-01-28  Bernhard Fischer  <aldot@gcc.gnu.org>

	* doc/tree-ssa.texi: Add cindex PHI nodes and improve wording.

2008-01-28  Bernhard Fischer  <aldot@gcc.gnu.org>

	* config/vx-common.h: Fix typo in comment.

2008-01-28  Ian Lance Taylor  <iant@google.com>

	PR c++/34862
	PR c++/33407
	* tree-ssa-copyrename.c (copy_rename_partition_coalesce): Don't
	coalesce pointers if they have different DECL_NO_TBAA_P values.
	* tree-ssa-copy.c (may_propagate_copy): Don't propagate copies
	between variables with different DECL_NO_TBAA_P values.

2008-01-28  Nathan Froyd  <froydnj@codesourcery.com>

	PR 31535
	* config/rs6000/rs6000.c (small_data_operand): Vectors and floats
	are not legitimate small data references on SPE targets.

2008-01-28  David Daney  <ddaney@avtrex.com>

	* doc/install.texi (mips-*-*): Recommend binutils 2.18.

2008-01-28  David Daney  <ddaney@avtrex.com>

	* doc/install.texi (--disable-libgcj-bc):  Reword documentation.

2008-01-27  Joseph Myers  <joseph@codesourcery.com>

	* config.gcc (strongarm*-*, ep9312*-*, xscale*-*, parisc*-*,
	m680[012]0-*, *-*-beos*, *-*-kaos*, *-*-linux*aout*,
	*-*-linux*libc1*, *-*-solaris2.[0-6], *-*-solaris2.[0-6].*,
	*-*-sysv*, *-*-windiss*, alpha*-*-unicosmk*, cris-*-aout,
	hppa1.1-*-pro*, hppa1.1-*-osf*, hppa1.1-*-bsd*,
	i[34567]86-sequent-ptx4*, i[34567]86-*-nto-qnx*,
	i[34567]86-*-sco3.2v5*, i[34567]86-*-uwin*, powerpc-*-chorusos*,
	vax-*-bsd*, vax-*-ultrix*): Mark obsolete.

2008-01-27  Bernhard Fischer  <aldot@gcc.gnu.org>

	* basic-block.h (condjump_equiv_p): Fix comment.

2008-01-27  Bernhard Fischer  <aldot@gcc.gnu.org>

	* tree-pretty-print.c (print_generic_decl, print_generic_stmt,
	print_generic_stmt_indented): Fix comment.

2008-01-27  Bernhard Fischer  <aldot@gcc.gnu.org>

	* configure.ac (__stack_chk_fail): Add detecion for availability
	of SSP in uClibc by checking if __UCLIBC_HAS_SSP__ is defined.
	* configure: Regenerate.

2008-01-26  Maxim Kuvyrkov  <maxim@codesourcery.com>

	PR middle-end/34688
	* final.c (output_addr_const): Handle TRUNCATE.

2008-01-26  Zdenek Dvorak  <ook@ucw.cz>

	PR target/34711
	* tree-ssa-loop-ivopts.c (comp_cost): New type.
	(zero_cost, infinite_cost): New constants.
	(struct cost_pair): Change type of cost to comp_cost.
	(struct iv_ca): Change type of cand_use_cost and cost to comp_cost.
	(new_cost, add_costs, sub_costs, compare_costs, infinite_cost_p):
	New functions.
	(set_use_iv_cost, force_expr_to_var_cost, force_var_cost,
	split_address_cost, ptr_difference_cost, difference_cost,
	get_computation_cost_at, get_computation_cost,
	determine_use_iv_cost_generic, determine_use_iv_cost_address,
	determine_use_iv_cost_condition, determine_use_iv_costs,
	cheaper_cost_pair, iv_ca_recount_cost, iv_ca_set_no_cp,
	iv_ca_set_cp, iv_ca_cost, iv_ca_new, iv_ca_dump, iv_ca_extend,
	iv_ca_narrow, iv_ca_prune, try_improve_iv_set, find_optimal_iv_set):
	Change type of cost to comp_cost.
	(determine_iv_cost): Increase cost of non-original ivs, instead
	of decreasing the cost of original ones.
	(get_address_cost): Indicate the complexity of the addressing mode 
	in comp_cost.
	(try_add_cand_for): Prefer using ivs not specific to some object.
	* tree-flow.h (force_expr_to_var_cost): Declaration removed.

2008-01-26  Peter Bergner  <bergner@vnet.ibm.com>
	    Janis Johnson  <janis187@us.ibm.com>

	PR target/34814
	* doc/tm.texi (TARGET_EXPAND_TO_RTL_HOOK): Document.
	(TARGET_INSTANTIATE_DECLS): Likewise.
	* target.h (expand_to_rtl_hook): New target hook.
	(instantiate_decls): Likewise.
	* function.c (instantiate_decl): Make non-static.  Rename to...
	(instantiate_decl_rtl): ... this.
	(instantiate_expr): Use instantiate_decl_rtl.
	(instantiate_decls_1): Likewise.
	(instantiate_decls): Likewise.
	(instantiate_virtual_regs: Call new instantiate_decls taget hook.
	* function.h (instantiate_decl_rtl): Add prototype.
	* cfgexpand.c (target.h): New include.
	(tree_expand_cfg): Call new expand_to_rtl_hook target hook.
	* target-def.h (TARGET_EXPAND_TO_RTL_HOOK): New define.
	(TARGET_INSTANTIATE_DECLS): Likewise.
	(TARGET_INITIALIZER): New target hooks added.
	* config/rs6000/rs6000-protos.h (rs6000_secondary_memory_needed_rtx):
	New prototype.
	* config/rs6000/rs6000.c (tree-flow.h): New include.
	(machine_function): Add sdmode_stack_slot field.
	(rs6000_alloc_sdmode_stack_slot): New function.
	(rs6000_instantiate_decls): Likewise.
	(rs6000_secondary_memory_needed_rtx): Likewise.
	(rs6000_check_sdmode): Likewise.
	(TARGET_EXPAND_TO_RTL_HOOK): Target macro defined.
	(TARGET_INSTANTIATE_DECLS): Likewise.
	(rs6000_hard_regno_mode_ok): Allow SDmode.
	(num_insns_constant): Likewise.  Handle _Decimal32 constants.
	(rs6000_emit_move): Handle SDmode.
	(function_arg_advance): Likewise.
	(function_arg): Likewise.
	(rs6000_gimplify_va_arg): Likewise.  Add special handling of
	SDmode var args for 32-bit compiles.
	(rs6000_secondary_reload_class): Handle SDmode.
	(rs6000_output_function_epilogue): Likewise.
	(rs6000_function_value): Simplify if statement.
	(rs6000_libcall_value): Likewise.
	* config/rs6000/rs6000.h (SLOW_UNALIGNED_ACCESS): Handle SDmode.
	(SECONDARY_MEMORY_NEEDED_RTX): Add define.
	* config/rs6000/dfp.md (movsd): New define_expand and splitter.
	(movsd_hardfloat): New define_insn.
	(movsd_softfloat): Likewise.
	(movsd_store): Likewise.
	(movsd_load): Likewise.
	(extendsddd2): Likewise.
	(extendsdtd2): Likewise.
	(truncddsd2): Likewise.
	(movdd_hardfloat64): Fixup comment.
	(UNSPEC_MOVSD_LOAD): New constant.
	(UNSPEC_MOVSD_STORE): Likewise.

2008-01-26  Jakub Jelinek  <jakub@redhat.com>

	PR c++/34965
	* c-pretty-print.c (pp_c_exclusive_or_expression): Handle
	TRUTH_XOR_EXPR.
	(pp_c_logical_and_expression): Handle TRUTH_AND_EXPR.
	(pp_c_logical_or_expression): Handle TRUTH_OR_EXPR.
	(pp_c_expression): Handle TRUTH_AND_EXPR, TRUTH_OR_EXPR
	and TRUTH_XOR_EXPR.

2008-01-26  David Edelsohn  <edelsohn@gnu.org>

	PR target/34794
	* config.gcc: Separate AIX 5.3 from AIX 6.1.
	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define
	__LONGDOUBLE128 too.
	* config/rs6000/aix61.h: New file.

2008-01-26  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR rtl-optimization/34959
	* optabs.c (expand_unop): In libcall notes, give ffs, clz, ctz,
	popcount and parity rtxes the same mode as their operand.
	Truncate or extend the result to the return value's mode
	if necessary.

2008-01-26  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR target/34981
	* config/mips/mips-protos.h (mips_expand_call): Return an rtx.
	* config/mips/mips.h (FIRST_PSEUDO_REGISTER): Rename FAKE_CALL_REGNO
	to GOT_VERSION_REGNUM.
	(CALL_REALLY_USED_REGISTERS): Set the GOT_VERSION_REGNUM entry to 0.
	(EPILOGUE_USES): Include GOT_VERSION_REGNUM if TARGET_USE_GOT.
	* config/mips/mips.c (mips_emit_call_insn): New function.
	(mips_call_tls_get_addr): Call mips_expand_call directly.
	(mips16_copy_fpr_return_value): Use mips_emit_call_insn rather than
	emit_call_insn.
	(mips16_build_call_stub): Likewise.  Return the call insn or null.
	(mips_expand_call): Update the call to mips16_build_call_stub
	accordingly and a remove redundant condition.  Assert that MIPS16
	stubs do not use lazy binding.  Use mips_emit_call_insn and return
	the call insn.
	(mips_extra_live_on_entry): Include GOT_VERSION_REGNUM if
	TARGET_USE_GOT.
	(mips_hard_regno_mode_ok_p): Allow SImode for GOT_VERSION_REGNUM.
	(mips_avoid_hazard): Remove hazard_set handling.
	* config/mips/mips.md (UNSPEC_EH_RECEIVER): Rename to...
	(UNSPEC_RESTORE_GP): ...this.
	(UNSPEC_SET_GOT_VERSION, UNSPEC_UPDATE_GOT_VERSION): New constants.
	(FAKE_CALL_REGNO): Rename to...
	(GOT_VERSION_REGNUM): ...this.
	(type): Add "ghost" value.  Add an associated insn reservation.
	(hazard_set): Remove.
	(exception_receiver): Rename to...
	(restore_gp): ...this and update the unspec identifier accordingly.
	(exception_receiver, nonlocal_got_receiver): New expanders.
	(load_call<mode>): Use GOT_VERSION_REGNUM.  Don't set
	FAKE_CALL_REGNO.  Remove hazard_set attribute.
	(set_got_version, update_got_version): New patterns.

2008-01-26  Danny Smith  <dannysmith@users.sourceforge.net>

	PR target/34970
	* config/i386/cygming.h (ASM_OUTPUT_LABELREF): Define.

2008-01-25  Joseph Myers  <joseph@codesourcery.com>

	PR other/31955
	* doc/install.texi2html: Generate gcc-vers.texi.

2008-01-25  DJ Delorie  <dj@redhat.com>

	* config/m32c/m32c.h (ASM_PREFERRED_EH_DATA_FORMAT): Define.

2008-01-25  Joseph Myers  <joseph@codesourcery.com>

	* config/c4x: Remove directory.
	* config.gcc (crx-*, mt-*): Mark obsolete.
	(c4x-*, tic4x-*, c4x-*-rtems*, tic4x-*-rtems*, c4x-*, tic4x-*,
	h8300-*-rtemscoff*, ns32k-*-netbsdelf*, ns32k-*-netbsd*,
	sh-*-rtemscoff*): Remove cases.
	* defaults.h (C4X_FLOAT_FORMAT): Remove.
	* real.c (encode_c4x_single, decode_c4x_single,
	encode_c4x_extended, decode_c4x_extended, c4x_single_format,
	c4x_extended_format): Remove.
	* real.h (c4x_single_format, c4x_extended_format): Remove.
	* doc/extend.texi (interrupt, naked): Remove mention of attributes
	on C4x.
	(Pragmas): Remove comment about c4x pragmas.
	* doc/install.texi (c4x): Remove target-specific instructions.
	* doc/invoke.texi (TMS320C3x/C4x Options): Remove.
	* doc/md.texi (Machine Constraints): Remove C4x documentation.
	* doc/tm.texi (MEMBER_TYPE_FORCES_BLK, c_register_pragma): Do not
	refer to C4x source files as examples.
	(C4X_FLOAT_FORMAT): Remove documentation.

2008-01-25  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin.c (override_options): Reorder tests so that
	flag_pic gets enabled for -msep-data.

2008-01-25  Richard Guenther  <rguenther@suse.de>

	PR middle-end/32244
	* expr.c (expand_expr_real_1): Reduce result of LSHIFT_EXPR
	to its bitfield precision if required.

2008-01-25  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/33880
	* tree-nested.c (walk_omp_for): New function.
	(convert_nonlocal_reference, convert_local_reference): Call
	walk_omp_for on OMP_FOR.
	(convert_call_expr): Call walk_body on OMP_FOR's
	OMP_FOR_PRE_INIT_BODY.

2008-01-25  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34966
	* tree-ssa-math-opts.c (execute_cse_sincos_1): For all but
	default defs and PHI_NODEs we have to insert after the
	defining statement.

2008-01-24  Nick Clifton  <nickc@redhat.com>

	* config/stormy16/stormy16-lib2.c (MIN_UNITS_PER_WORD):
	Provide a default definition.
	(LIBGCC2_UNITS_PER_WORD): Likewise.

	* config/stormy16/stormy16.c: Include df.h for the prototype
	for df_regs_ever_live_p.
	(xstormy16_expand_builtin_va_start): Convert the stack offset
	into a component_ref and then use POINTER_PLUS_EXPR to add it
	to the incoming_virtual_args_rtx.
	(xstormy16_gimplify_va_arg_expr): Rename to
	xstormy16_gimplify_va_arg_expr.
	Use POINTER_PLUS_EXPR when performing pointer arithmetic.
	(TARGET_GIMPLIFY_VA_ARG_EXPR): Use renamed
	xstormy16_gimplify_va_arg_expr.
	Fix up some formatting issues.

	* config/stormy16/stormy16.c: (xstormy16_carry_plus_operand):
	Move to predicates.md.
	(xs_hi_general_operand): Likewise.
	(xs_hi_nonmemory_operand): Likewise.
	* config/stormy16/predicates.md:
	(xstormy16_carry_plus_operand): New predicate.
	(xs_hi_general_operand): New predicate.
	(xs_hi_nonmemory_operand): New predicate.
	* config/stormy16/stormy16-protos.h:
	(xstormy16_carry_plus_operand): Delete prototype.
	(xs_hi_general_operand): Likewise.
	(xs_hi_nonmemory_operand): Likewise.

	* config/storm16/stormy16.md (addhi3): Remove earlyclobber
	modifiers as they are no longer needed and they can trigger
	reload spill failures.

	* config/storm16/stormy16.md (ineqbranchsi): Replace match_dup
	with a match_operand in order to help reload.

	* config/storm16/stormy16.md (movhi_internal): Replace 'r'
	constraint with 'e' for the 8th alternative as this version of
	the mov.w instruction only accepts the lower 8 registers.

2008-01-25  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34856
	* simplifx-rtx.c (simplify_const_binary_operation) [VEC_CONCAT]:
	Consider only CONST_INT, CONST_DOUBLE and CONST_FIXED as constant
	vector elements.

2008-01-25  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/33333
	* gimplify.c (gimplify_omp_for): Gimplify OMP_FOR_PRE_BODY.

2008-01-25  Golovanevsky Olga  <olga@il.ibm.com>

	* ipa-struct-reorg.c (remove_str_allocs_in_func, remove_str_allocs):
	New functions.
	(remove_structure): Update allocations list before removing structure.
	
2008-01-25  Golovanevsky Olga  <olga@il.ibm.com>

	* ipa-struct-reorg.c (is_safe_cond_expr, 
	create_new_stmts_for_cond_expr): Use integer_zerop function,
	that recognize not only zero-pointer, but zero-integer too.

2008-01-25  Ben Elliston  <bje@au.ibm.com>

	PR other/22232
	* fixproto: Escape "." in sed expression that strips leading "./".

2008-01-24  H.J. Lu  <hongjiu.lu@intel.com>

	PR driver/34904
	* gcc.c (SWITCH_OK): Removed.
	(SWITCH_LIVE): Changed to bit.
	(SWITCH_FALSE): Likewise.
	(SWITCH_IGNORE): Likewise.
	(switchstr): Change live_cond to unsigned int.
	(process_command): Replace SWITCH_OK with 0.
	(do_self_spec): Likewise.
	(set_collect_gcc_options): Check the SWITCH_IGNORE bit.
	(give_switch): Likewise.
	(used_arg): Likewise.
	(do_spec_1): Set the SWITCH_IGNORE bit.
	(check_live_switch): Check both SWITCH_LIVE and SWITCH_FALSE
	bits.  Set the SWITCH_LIVE bit.

2008-01-24  Andreas Krebbel  <krebbel1@de.ibm.com>

	* config/s390/s390.h (MOVE_RATIO): Define new target macro.

2008-01-24  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR tree-optimization/34472
	* ipa-struct-reorg.c (safe_cond_expr_check): Change the DATA
	parameter to a "bool *" and set *DATA to false if there is
	an unsafe access.  Do not delete the structure here.
	(check_cond_exprs): Delete it here instead.
	(check_cond_exprs, exclude_cold_structs): Do not increase
	I when removing a structure.

2008-01-24  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34856
	* config/i386/i386.c (ix86_expand_vector_init): Consider only
	CONST_INT, CONST_DOUBLE and CONST_FIXED as constant vector elements.

2008-01-24  Jakub Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/34934
	* tree-stdarg.c (reachable_at_most_once): Use VEC vector instead of
	a fixed vector for stack.

2008-01-24  Ben Elliston  <bje@au.ibm.com>

	PR c++/25701
	* doc/gcc.texi (Software development): Add a direntry for g++.
	
2008-01-23  Hans-Peter Nilsson  <hp@axis.com>

	* config/cris/cris.h (CC1PLUS_SPEC, OPTIMIZATION_OPTIONS): Drop
	stale and straggling -fforce-addr comments above.

	* config/cris/cris.h (CRIS_SUBTARGET_VERSION, TARGET_VERSION): Don't
	define.
	* config/cris/linux.h (CRIS_SUBTARGET_VERSION): Don't define.
	* config/cris/aout.h (CRIS_SUBTARGET_VERSION): Don't define.

2008-01-23  Michael Matz  <matz@suse.de>

	PR debug/34895
	* dwarf2out.c (force_type_die): Use modified_type_die instead of
	gen_type_die.

2008-01-23  Andreas Krebbel  <krebbel1@de.ibm.com>

	* ipa-struct-reorg.c (create_new_malloc): Use pointer type as
	malloc result type.

2008-01-23 Anatoly Sokolov <aesok@post.ru>

	* config/avr/avr.c (avr_current_arch): New variable.
	(avr_arch_types): Add 'avr31' and 'avr51' entries.
	(avr_arch): Add 'ARCH_AVR31' and 'ARCH_AVR51'.
	(avr_mcu_types): Add 'avr31' and 'avr51' architectures.
	(avr_override_options): Init 'avr_current_arch'. 
	(base_arch_s): Move from here...
	* config/avr/avr.h (base_arch_s): ... here. Add new members 
	'have_elpm', 'have_elpmx', 'have_eijmp_eicall', 'reserved'. Rename 
	'mega' to 'have_jmp_call'.
	(TARGET_CPU_CPP_BUILTINS): Define "__AVR_HAVE_JMP_CALL__", 
	"__AVR_HAVE_RAMPZ__", 	"__AVR_HAVE_ELPM__" and  "__AVR_HAVE_ELPMX__"
	macros.
	(LINK_SPEC, CRT_BINUTILS_SPECS, ASM_SPEC): Add 'avr31' and 'avr51' 
	architectures.
	* config/avr/t-avr (MULTILIB_OPTIONS, MULTILIB_DIRNAMES, 
	MULTILIB_MATCHES): (Ditto.).

2008-01-23  Richard Guenther  <rguenther@suse.de>

	PR middle-end/31529
	* cgraphunit.c (cgraph_reset_node): Always mark the node
	not reachable if it is not queued already.

2008-01-23  Bernd Schmidt  <bernd.schmidt@analog.com>

	* config/bfin/bfin-protos.h (WA_RETS, ENABLE_WA_RETS): New macros.
	* config/bfin/bfin.c (bfin_cpus): Add WA_RETS everywhere.
	(cputype_selected): New static variable.
	(bfin_handle_option): Set it if -mcpu is used.
	(override_option): Select default set of workarounds if no cpu type
	selected on the command line.
	(workaround_rts_anomaly): Only run if ENABLE_WA_RETS.

	From  Michael Frysinger  <michael.frysinger@analog.com>
	* config/bfin/bfin-protos.h (enum bfin_cpu_type): Add
	BFIN_CPU_BF547, BFIN_CPU_BF523, BFIN_CPU_BF524, and BFIN_CPU_BF526.

	* config/bfin/elf.h (LIB_SPEC): Use proper linker script
	for bf547, bf523, bf524, and bf526.
	* config/bfin/bfin.c (bfin_cpus[]): Add bf547,  bf523, bf524, and
	bf526.
	* config/bfin/bfin.h (TARGET_CPU_CPP_BUILTINS): Define
	__ADSPBF523__ for bf523, __ADSPBF524__ for bf524,
	__ADSPBF526__ for bf526, __ADSPBF52x__ for all three, as well as
	__ADSPBF547__ and __ADSPBF54x__ for bf547.
	* doc/invoke.texi (Blackfin Options): Document that
	-mcpu now accept bf547, bf523, bf524, and bf526.

2008-01-22  Eric Botcazou  <ebotcazou@adacore.com>

	PR rtl-optimization/34628
	* combine.c (try_combine): Stop and undo after the first combination
	if an autoincrement side-effect on the first insn has effectively
	been lost.

2008-01-22  David Edelsohn  <edelsohn@gnu.org>

	PR target/34529
	* config/rs6000/rs6000.c (rs6000_legitimate_offset_address_p):
	Offset addresses are not valid for Altivec or paired float modes.

2008-01-22  Jakub Jelinek  <jakub@redhat.com>

	PR c++/34607
	* c-parser.c (c_parser_omp_for_loop): Don't call c_finish_omp_for
	if DECL_INITIAL (decl) is error_mark_node.

	PR c++/34914
	* c-common.c (handle_vector_size_attribute): Only allow
	integral, scalar float and fixed point types.  Handle OFFSET_TYPE
	the same way as pointer, array etc. types.
	* tree.c (reconstruct_complex_type): Handle OFFSET_TYPE.

	PR c++/34917
	* tree.c (build_type_attribute_qual_variant): Call
	build_qualified_type if attributes are equal, but quals are not.

2008-01-22  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	PR 32102
	* doc/invoke.texi (-Wall): -Wall enables -Wstrict-overflow=1.
	* flags.h (warn_strict_aliasing): Remove.
	(warn_strict_overflow): Remove.
	* opts.c (warn_strict_aliasing): Remove.
	(warn_strict_overflow): Remove.
	* c-opts.c (c_common_handle_option): -Wall only sets
	-Wstrict-aliasing or -Wstrict-overflow if they are uninitialized.
	(c_common_post_options): Give default values to -Wstrict-aliasing
	and -Wstrict-overflow if they are uninitialized.
	* common.opt (Wstrict-aliasing): Specify Var and Init.
	(Wstrict-overflow): Likewise.

2008-01-22  Kenneth Zadeck <zadeck@naturalbridge.com>

	PR rtl-optimization/26854
	PR rtl-optimization/34400
	PR rtl-optimization/34884
	* ddg.c (create_ddg_dep_from_intra_loop_link): Use
	DF_RD->gen.
	* df.h (df_changeable_flags.DF_RD_NO_TRIM): Deleted
	(df_rd_bb_info.expanded_lr_out): Deleted
	* loop_invariant.c (find_defs): Deleted DF_RD_NO_TRIM flag.
	* loop_iv.c (iv_analysis_loop_init): Ditto.  * df-problems.c
	(df_rd_free_bb_info, df_rd_alloc, df_rd_confluence_n,
	df_rd_bb_local_compute, df_rd_transfer_function, df_rd_free):
	Removed code to allocate, initialize or free expanded_lr_out.
	(df_rd_bb_local_compute_process_def): Restructured to make more
	understandable.
	(df_rd_confluence_n): Removed code to no apply invalidate_by_call
	sets if the sets are being trimmed.

2008-01-22  H.J. Lu  <hongjiu.lu@intel.com>

	PR bootstrap/32287
	* configure.ac (ld_vers): Support GNU linker version xx.xx.*
	(as_vers): Likewise.
	* configure: Regenerated.

2008-01-22  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	PR middle-end/33092
	* tree-pass.h (pass_build_alias): New pass.
	* tree-ssa-alias.c (gate_build_alias): New.
	(pass_build_alias): New.
	* passes.c (init_optimization_passes): Add pass_build_alias after
	pass_create_structure_vars.

2008-01-22  Wolfgang Gellerich  <gellerich@de.ibm.com>

	* config/s390/s390.h (S390_TDC_POSITIVE_NORMALIZED_NUMBER):
	Renamed to S390_TDC_POSITIVE_NORMALIZED_BFP_NUMBER.
	(S390_TDC_NEGATIVE_NORMALIZED_NUMBER): Renamed to
	S390_TDC_NEGATIVE_NORMALIZED_BFP_NUMBER.
	(S390_TDC_POSITIVE_DENORMALIZED_NUMBER): Renamed to
	S390_TDC_POSITIVE_DENORMALIZED_BFP_NUMBER.
	(S390_TDC_NEGATIVE_DENORMALIZED_NUMBER): Renamed to
	S390_TDC_NEGATIVE_DENORMALIZED_BFP_NUMBER.
	(S390_TDC_POSITIVE_NORMALIZED_BFP_NUMBER): New constant.
	(S390_TDC_NEGATIVE_NORMALIZED_BFP_NUMBER): New constant.
	(S390_TDC_POSITIVE_DENORMALIZED_BFP_NUMBER): New constant.
	(S390_TDC_NEGATIVE_DENORMALIZED_BFP_NUMBER): New constant.
	* config/s390/s390.md (FP_ALL): New mode iterator.
	(_d): New mode attribute.
	("*signbit<mode>2>"): Changed mode of first operand.
	("isinf<mode>2"): Changed mode of first operand.
	("*TDC_insn"): Adaptation for DFP modes.

2008-01-22  Ben Elliston  <bje@au.ibm.com>

	* tree.c (check_qualified_type): Improve function description.

2008-01-21  Jason Merrill  <jason@redhat.com>

	PR c++/34196
	* tree.h (TRY_CATCH_IS_CLEANUP): New macro.
	* tree-eh.c (honor_protect_cleanup_actions): Strip TRY_CATCH_EXPR
	if it is set.

2008-01-21  DJ Delorie  <dj@redhat.com>

	* doc/tm.texi (HARD_REGNO_NREGS): Note that this macro must not
	return zero.

2008-01-21  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34856
	* tree-cfg.c (verify_expr): Allow all invariant expressions
	instead of just constant class ones as reference argument.
	* tree-ssa-loop-im.c (for_each_index): Handle CONSTRUCTOR
	like any other constant.
	* tree-ssa-sccvn.c (copy_reference_ops_from_ref): Likewise.

2008-01-21  H.J. Lu  <hongjiu.lu@intel.com>

	* regmove.c (fixup_match_1): Update call crossed frequencies.

2008-01-21  Richard Guenther  <rguenther@suse.de>

	PR c/34885
	* tree-inline.c (setup_one_parameter): Deal with mismatched
	types using a VIEW_CONVERT_EXPR.

2008-01-21  Alon Dayan  <alond@il.ibm.com>
	    Olga Golovanevsky  <olga@il.ibm.com>
	
	PR tree-optimization/34701
	* ipa-struct-reorg.c (gen_size): Fix the malloc parameter calculation
	when the structure size is not a power of 2.

2008-01-20  Kenneth Zadeck <zadeck@naturalbridge.com>

	* doc/install.texi: Add doc for --enable-checking=df.
	
2008-01-20  Kaz Kojima  <kkojima@gcc.gnu.org>

	PR rtl-optimization/34808
	* emit-rtl.c (try_split): Handle REG_RETVAL notes.

2008-01-20  Richard Sandiford  <rsandifo@nildram.co.uk>

	* global.c (find_reg): Only compute EH_RETURN_DATA_REGNO once per
	input.

2008-01-19  Kenneth Zadeck <zadeck@naturalbridge.com>

	PR rtl-optimization/26854
	PR rtl-optimization/34400
	* ddg.c (create_ddg_dep_from_intra_loop_link): Do not use
	DF_RD->gen.
	* df.h (df_changeable_flags.DF_RD_NO_TRIM): New.
	(df_rd_bb_info.expanded_lr_out): New.
	* loop_invariant.c (find_defs): Added DF_RD_NO_TRIM flag.
	* loop_iv.c (iv_analysis_loop_init): Ditto.
	* df-problems.c (df_rd_free_bb_info, df_rd_alloc, df_rd_confluence_n,
	df_rd_bb_local_compute, df_rd_transfer_function, df_rd_free):
	Added code to allocate, initialize or free expanded_lr_out.
	(df_rd_bb_local_compute_process_def): Restructured to make
	more understandable.
	(df_rd_confluence_n): Add code to do nothing with fake edges and
	code to no apply invalidate_by_call sets if the sets are being trimmed.
	(df_lr_local_finalize): Renamed to df_lr_finalize.
	(df_live_local_finalize): Renamed to df_live_finalize.

2008-01-20  Richard Sandiford  <rsandifo@nildram.co.uk>

	PR target/34831
	* config/mips/mips.md (div<mode>3): Use <recip_condition> when
	deciding whether to use reciprocal instructions.

2008-01-19  Uros Bizjak  <ubizjak@gmail.com>

	* dwarf2out.c (dwarf2out_switch_text_section): Do not call
	dwarf2out_note_section_used if cold_text_section is NULL.

2008-01-19  Jakub Jelinek  <jakub@redhat.com>

	PR gcov-profile/34610
	* tree-cfg.c (make_edges): Mark both outgoing edges from
	OMP_CONTINUE and from OMP_FOR as EDGE_ABNORMAL.
	* omp-low.c (expand_omp_for): Clear EDGE_ABNORMAL bits
	from OMP_FOR and OMP_CONTINUE outgoing edges.

	* tree-profile.c (tree_profiling): Return early if
	cfun->after_tree_profile != 0.  Set cfun->after_tree_profile
	at the end.
	* omp-low.c (expand_omp_parallel): Copy after_tree_profile
	from cfun to child_cfun.
	* function.h (struct function): Add after_tree_profile bit.

2008-01-19 Anatoly Sokolov <aesok@post.ru>

	* config/avr/avr.S (_exit): Disable interrupt.

2008-01-18  Kenneth Zadeck  <zadeck@naturalbridge.com>
	    Steven Bosscher  <stevenb.gcc@gmail.com>

	PR rtl-optimization/26854
	PR rtl-optimization/34400
	* df-problems.c (df_live_scratch): New scratch bitmap.
	(df_live_alloc): Allocate df_live_scratch when doing df_live.
	(df_live_reset): Clear the proper bitmaps.
	(df_live_bb_local_compute): Only process the artificial defs once
	since the order is not important.
	(df_live_init): Init the df_live sets only with the variables
	found live by df_lr.
	(df_live_transfer_function): Use the df_lr sets to prune the
	df_live sets as they are being computed.  
	(df_live_free): Free df_live_scratch.

2008-01-18  Ian Lance Taylor  <iant@google.com>

	* common.opt: Add fmerge-debug-strings.
	* dwarf2out.c (DEBUG_STR_SECTION_FLAGS): Test
	flag_merge_debug_strings rather than flag_merge_constants.
	* doc/invoke.texi (Option Summary): Mention
	-fmerge-debug-strings.
	(Debugging Options): Document -fmerge-debug-strings.

2008-01-18  Ian Lance Taylor  <iant@google.com>

	PR c++/33407
	* tree.h (DECL_IS_OPERATOR_NEW): Define.
	(struct tree_function_decl): Add new field operator_new_flag.
	* tree-inline.c (expand_call_inline): When inlining a call to
	operator new, force the return value to go into a variable, and
	set DECL_NO_TBAA_P on that variable.
	* c-decl.c (merge_decls): Merge DECL_IS_OPERATOR_NEW flag.

2008-01-18  Uros Bizjak  <ubizjak@gmail.com>

	PR debug/34484
	* dwarf2out.c (dwarf2out_switch_text_section): Do not guard with
	DWARF2_DEBUGGING_INFO.
	(dwarf2out_note_section_used): Ditto.  Add prototype.
	(have_multiple_function_sections, text_section_used,
	cold_text_section_used, *cold_text_sections): Move declarations
	before their uses.

2008-01-17  Bob Wilson  <bob.wilson@acm.org>

	* config/xtensa/unwind-dw2-xtensa.h (_Unwind_FrameState): Remove pc
	field and add signal_ra.
	* config/xtensa/unwind-dw2-xtensa.c (uw_frame_state_for): Remove
	assignments to frame state pc.  Move end of stack check after
	MD_FALLBACK_FRAME_STATE_FOR.
	(uw_update_context_1): Use frame state signal_regs if set, instead
	of checking signal_frame flag.
	(uw_update_context): Use frame state signal_ra if set.
	* config/xtensa/linux.h (MD_UNWIND_SUPPORT): Define.
	* config/xtensa/linux-unwind.h: New file.

2008-01-18  Bernhard Fischer  <aldot@gcc.gnu.org>

	* modulo-sched.c (get_sched_window): Fix comment typo.

2008-01-17  Andrew MacLeod  <amacleod@redhat.com>

	PR tree-optimization/34648
	* tree-ssa-sccvn.c (visit_use): Expressions which can throw are varying.

2008-01-17  Anatoly Sokolov <aesok@post.ru>

	* config/avr/avr.h (LINK_SPEC): Support -mrelax and -mpmem-wrap-around.
	* config/avr/avr.opt (mrelax, mpmem-wrap-around): Add.

2008-01-17  Seongbae Park  <seongbae.park@gmail.com>

	PR rtl-optimization/34400
	* df-core.c (df_worklist_dataflow_overeager,
	df_worklist_dataflow_doublequeue): New functions.
	(df_worklist_dataflow): Two different worklist solvers.
	* params.def (PARAM_DF_DOUBLE_QUEUE_THRESHOLD_FACTOR):
	New param.

2008-01-16  Sebastian Pop  <sebastian.pop@amd.com>

	PR testsuite/34821
	* doc/invoke.texi: Document the dependence on pthread for fopenmp
	and ftree-parallelize-loops.

2008-01-17  Mircea Namolaru  <namolaru@il.ibm.com>

	PR rtl-optimization/34826
	* loop-doloop (doloop_modify): Update the REG_BR_PROB note.

2008-01-17  Andreas Krebbel  <krebbel1@de.ibm.com>

	* global.c (find_reg): Mark the eh regs as used if necessary.
	* ra-conflict.c (global_conflicts): Set no_eh_reg flag.
	* ra.h (struct allocno): no_eh_reg field added.  Changed
	no_stack_reg type to bitfield.

2008-01-17  Eric Botcazou  <ebotcazou@adacore.com>

	* tree.c (substitute_in_expr): Add missing 'break'.

2008-01-17  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34825
	* tree-ssa-math-opts.c (is_division_by): Do not recognize
	x / x as division to handle.

2008-01-16  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	* pa64-hpux.h (LIB_SPEC): Add "-lpthread" in shared links if "-mt" or
	"-pthread" is specified.
	* pa-hpux11.h (LIB_SPEC): Likewise.

2008-01-16  Janis Johnson  <janis187@us.ibm.com>
	    Peter Bergner  <bergner@vnet.ibm.com>

	PR rtl-optimization/33796
	* sparseset.c (sparseset_alloc): Use xcalloc rather than xmalloc.

2008-01-16  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>

	PR libgfortran/34699
	* pa-hpux.h (LINK_SPEC): Only search /lib/pa1.1 and /usr/lib/pa1.1 on
	static links.
	* pa-hpux10.h (LINK_SPEC): Likewise.
	* pa-hpux11.h (LINK_SPEC): Don't search /lib/pa1.1 and /usr/lib/pa1.1.

2008-01-16  Richard Guenther  <rguenther@suse.de>

	PR middle-end/32628
	* fold-const.c (fold_convert_const_int_from_int): Do not
	set overflow if that occured only because of a sign extension
	change when converting from/to a sizetype with the same
	precision and signedness.

2008-01-16  Uros Bizjak  <ubizjak@gmail.com>

	PR debug/34249
	* dwarf2out.c (output_call_frame_info): Move output of FDE initial
	location address to the correct place.  Update copyright year.

2008-01-16  Sebastian Pop  <sebastian.pop@amd.com>

	* lambda-code.c (lambda_transform_legal_p): Handle the case of
	no dependences in the dependence_relations vector.

2008-01-16  Jan Hubicka  <jh@suse.cz>

	PR rtl-optimization/31396
	* regstat.c (regstat_bb_compute_ri): Compute FREQ_CALLS_CROSSED.
	* cfg.c (dump_reg_info): Print it.
	* regs.h (struct reg_info_t): add freq_calls_crossed.
	(REG_FREQ_CALLS_CROSSED): New macro.
	* global.c (global_alloc): Compute freq_calls_crossed for allocno.
	(find_reg): Update call of CALLER_SAVE_PROFITABLE.
	* regmove.c (optimize_reg_copy_1, optimize_reg_copy_2, fixup_match_2,
	regmove_optimize): Update call crossed frequencies.
	* local-alloc.c (struct qty): Add freq_calls_crossed.
	(alloc_qty): Copute freq_calls_crossed.
	(update_equiv_regs, combine_regs): Update REG_FREQ_CALLS_CROSSED.
	(find_free_reg): Update call of CALLER_SAVE_PROFITABLE.
	* ra.h (struct allocno): Add freq_calls_crossed.

2008-01-16  Sebastian Pop  <sebastian.pop@amd.com>

	* gcc.c (LINK_COMMAND_SPEC): Add includes and link options for
	libgomp when compiling with ftree-parallelize-loops.
	(GOMP_SELF_SPECS): Add -pthread for ftree-parallelize-loops.

2008-01-16  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34769
	* tree-data-ref.c (initialize_matrix_A): Revert fix for PR34458.
	* tree.c (int_cst_value): Instead make this function more
	permissive in what it accepts as valid input.  Document this
	function always sign-extends the value.

2008-01-16  Jakub Jelinek  <jakub@redhat.com>
	    Richard Guenther  <rguenther@suse.de>

	PR c/34668
	* gimplify.c (fold_indirect_ref_rhs): Rename to ...
	(gimple_fold_indirect_ref_rhs): ... this.
	(gimple_fold_indirect_ref): New function with foldings
	that preserve lvalueness.
	(gimplify_modify_expr_rhs): Call gimple_fold_indirect_ref_rhs.
	* tree-flow.h (gimple_fold_indirect_ref): Declare.
	* tree-inline.c (copy_body_r): Use gimple_fold_indirect_ref
	to fold an INDIRECT_REF, fall back to the old use of
	fold_indirect_ref_1.

2008-01-16  Sebastian Pop  <sebastian.pop@amd.com>

	* tree-data-ref.c (subscript_dependence_tester_1): Call 
	free_conflict_function.
	(compute_self_dependence): Same.

2008-01-16  Uros Bizjak  <ubizjak@gmail.com>

	PR debug/34249
	* debug.h (dwarf2out_switch_text_section): Move declaration from ...
	* dwarf2out.c (dwarf2out_switch_text_section): ... here.  Make
	function global.
	* final.c (final_scan_insn) [NOTE_INSN_SWITCH_TEXT_SECTIONS]:
	Depending on dwarf2out_do_frame, call dwarf2out_switch_text_section
	for DWARF2_UNWIND_INFO targets.

2008-01-16  Richard Guenther  <rguenther@suse.de>

	PR c/34768
	* c-typeck.c (common_pointer_type): Do not merge inconsistent
	type qualifiers for function types.

2008-01-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>

	* tree-parloops.c (gen_parallel_loop): Fix ommision of declaration for
	loop_iterator li from previous commit.

2008-01-15  Sebastian Pop  <sebastian.pop@amd.com>

	* tree-parloops.c (gen_parallel_loop): Free loop bound estimations.

2008-01-12  Sebastian Pop  <sebastian.pop@amd.com>

	* tree-parloops.c (loop_has_blocks_with_irreducible_flag): New.
	(parallelize_loops): Don't parallelize irreducible components.

2008-01-14  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>

	PR c++/24924
	* c-opts (c_common_post_options): Do not enable CPP
	flag_pedantic_errors by default.
	
2008-01-14  Eric Botcazou  <ebotcazou@adacore.com>

	PR rtl-optimization/31944
	* cse.c (remove_pseudo_from_table): New function.
	(merge_equiv_classes): Use above function to remove pseudo-registers.
	(invalidate): Likewise.

2008-01-13  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34601
	* emit-rtl.c (set_reg_attrs_for_decl_rtl): Use DECL_MODE
	instead of TYPE_MODE to deal with calls from expand_one_error_var.

2008-01-13  Uros Bizjak  <ubizjak@gmail.com>

	* gcse.c (cprop_jump): Call validate_unshare_change instead of
	validate_change to unshare the source of the PC set.

2008-01-12  Jan Hubicka  <jh@suse.cz>

	PR middle-end/32135
	* tree-ssa-ccp.c (maybe_fold_offset_to_array_ref): Do not construct
	references above array bounds.  This might trigger bounds checks for
	pointers to arrays.

2008-01-12  Sebastian Pop  <sebastian.pop@amd.com>

	* tree-ssa-ter.c (free_temp_expr_table): Free num_in_part and
	new_replaceable_dependencies.

2008-01-12  Doug Kwan  <dougkwan@google.com>

	* c-decl.c: (grokdeclarator): Use OPT_Wignored_qualifiers
	instead of OPT_Wreturn_type in warning due to ignored return type
	qualifiers.
	* c-opt.c (c_common_post_option): Add -Wignored-qualifiers to
	options included in -Wextra.
	* c.opt: New option -Wignored_qualifiers.
	* doc/invoke.texi (Warning Options, -Wextra): Add new option
	-Wignore_qualifiers.
	(-Wignored-qualifiers): Document.
	(-Wreturn-type): Remove description of functionality now handled
	by -Wignored-qualifiers.

2008-01-12  Eric Botcazou  <ebotcazou@adacore.com>

	PR ada/33788
	* fold-const.c (fold_unary) <VIEW_CONVERT_EXPR>: Fold an existing
	NOP_EXPR if it is between integral types with the same precision.

2008-01-12  Jan Hubicka  <jh@suse.cz>

	PR other/28023
	* invoke.texi (max-inline-recursive-depth): Fix default value.

2008-01-12  Zdenek Dvorak  <ook@ucw.cz>

	* tree-parloops.c (transform_to_exit_first_loop): Cast nit to the
	correct type.

2008-01-11  Bob Wilson  <bob.wilson@acm.org>
	
	* config/xtensa/xtensa.c (override_options): Set flag_shlib.
	
2008-01-11  James E. Wilson  <wilson@specifix.com>

	PR target/26015
	* config/vax/elf.h (FRAME_POINTER_CFA_OFFSET): Define.

2008-01-11  Anatoly Sokolov <aesok@post.ru>

	* config/avr/avr.c (expand_prologue, expand_epilogue): Don't 
	save/restore frame pointer register and don't use 'call-prologues' 
	optimization in function with "OS_task" attribute.

2008-01-11  Eric Botcazou  <ebotcazou@adacore.com>

	PR middle-end/31309
	* expr.c (copy_blkmode_from_reg): Use a mode suited to the size
	when copying to memory.

2008-01-11  Steven Bosscher  <stevenb.gcc@gmail.com>

	PR rtl-optimization/30905
	* cfgcleanup.c: Include dce.h
	(crossjumps_occured): New global variable.
	(try_crossjump_bb): Exit loop after finding a fallthru edge.
	If something changed, set crossjumps_occured to true.
	(try_optimize_cfg): Clear crossjumps_occured at the beginning.
	Don't add/remove fake edges to exit here...
	(cleanup_cfg): ...but do it here, when crossjumping.
	Run a fast DCE when successful crossjumps occured in the latest
	iteration of try_optimize_cfg.

2008-01-11  Richard Guenther  <rguenther@suse.de>

	* tree-ssa-sccvn.c (struct vn_binary_op_s): Move hashcode near opcode.
	(struct vn_unary_op_s): Likewise.
	(vn_reference_insert): Free old reference on hash collision.

2008-01-10  Raksit Ashok  <raksit@google.com>

	PR rtl-optimization/27971
	* combine.c (find_split_point): Split PLUS expressions which are
	inside a MEM rtx, and whose first operand is complex.

2008-01-10  DJ Delorie  <dj@redhat.com>

	* config/m32c/m32c.c (m32c_hard_regno_nregs_1): Renamed from...
	(m32c_hard_regno_nregs): ...this, which is now a wrapper.
	(m32c_hard_regno_ok): Call the underlying function.

2008-01-10  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34683
	* tree-cfg.c (tree_merge_blocks): Do not go through the
	full-blown folding and stmt updating path if we just deal
	with virtual operands.
	* tree-ssa-copy.c (may_propagate_copy): Do not short-cut
	test for abnormal SSA_NAMEs.

2008-01-10  Andreas Krebbel  <krebbel1@de.ibm.com>

	PR middle-end/34641
	* reload.c (push_reload): Add assertions.  All constants from
	reg_equiv_constant should have been used for replacing the respective
	pseudo earlier.
	(find_reloads_address): Invoke find_reloads_address_part for
	constant taken from the reg_equiv_constant array.

2008-01-10  Steven Bosscher  <stevenb.gcc@gmail.com>

	* tree-ssa-sccvn.h (struct vn_ssa_aux): Make the most accessed
	field (valnum) the first in the struct.  Replace bools with
	unit bit fields.

2008-01-10  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34651
	* tree-sra.c (sra_build_assignment): Sanitize.  Use the correct
	types and ordering for masking and converting.

2008-01-09  Sebastian Pop  <sebastian.pop@amd.com>

	PR tree-optimization/34017
	* lambda-code.c (lambda_loopnest_to_gcc_loopnest): Generate code
	also for PHI_NODE expressions.

2008-01-09  Jan Hubicka  <jh@suse.cz>

	PR tree-optimization/34708
	* tree-inline.c (estimate_num_insns_1): Compute cost of SWITCH_EXPR
	based on number of case labels.
	(init_inline_once): Remove switch_cost.
	* tree-inline.h (eni_weights_d): Remove switch_cost.

2008-01-09  Richard Guenther  <rguenther@suse.de>
	Andrew Pinski  <andrew_pinski@playstation.sony.com>

	PR middle-end/30132
	* gimplify.c (gimplify_cond_expr): Do not create an addressable
	temporary if an rvalue is ok or an lvalue is not required.

2008-01-09  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34458
	* tree-data-ref.c (initialize_matrix_A): Use tree_low_cst,
	adjust return type.

2008-01-09  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34679
	* tree.c (host_integerp): Check for sizetype only if the
	type is an integer type.

2008-01-09  Steven Bosscher  <stevenb.gcc@gmail.com>

	PR debug/26364
	* opts.c (decode_options): Disable inlining of functions called
	once if not in unit-at-a-time mode.

2008-01-09  Alexandre Oliva  <aoliva@redhat.com>

	* Makefile.in (dse.o): Remove duplicate $(RECOG_H) dependency.

2008-01-08  Richard Guenther  <rguenther@suse.de>

	PR middle-end/31863
	* tree-ssa-structalias.c (push_fields_onto_fieldstack): Bail
	out early if the result will be unused.

2008-01-08  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34709
	Revert:

	2008-01-05  Uros Bizjak  <ubizjak@gmail.com>
	* config/i386/i386.c (ix86_builtin_reciprocal): Remove check
	for TARGET_RECIP.	
	
2008-01-08  Jan Sjodin  <jan.sjodin@amd.com>
	
	* config/i386/i386.c (k8_cost, amdfam10_cost): Branch costs
	for vectorization tuned.
	
2008-01-08  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34683
	* tree-ssa-operands.c (operand_build_cmp): Export.
	* tree-ssa-operands.h (operand_build_cmp): Declare.
	* tree-vn.c (vuses_compare): Remove.
	(sort_vuses): Use operand_build_cmp.
	(sort_vuses_heap): Likewise.
	* tree-ssa-sccvn.c (vuses_to_vec): Use VEC_reserve, not VEC_alloc
	to re-use old VEC if available.  Do not sort already sorted VUSEs.
	(vdefs_to_vec): Do not sort already sorted VDEFs.

2008-01-08  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/34694
	* omp-low.c (copy_var_decl): Copy also DECL_SOURCE_LOCATION.

2008-01-08  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34702
	* doc/invoke.texi (i386 and x86-64 Options) [mrecip]: Document
	limitations of reciprocal sequences on x86 targets.

2008-01-08  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34683
	* tree-flow-inline.h (var_ann): Remove overzealous asserts.

2008-01-07  Jakub Jelinek  <jakub@redhat.com>

	PR target/34622
	* config/darwin.c (darwin_mergeable_string_section): Don't use
	.cstring if int_size_in_bytes != TREE_STRING_LENGTH.

2008-01-07  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34682
	* config/i386/i386.md (neg<mode>2): Rename from negsf2, negdf2 and
	negxf2.  Macroize expander using X87MODEF mode iterator.  Change
	predicates of op0 and op1 to register_operand.
	(abs<mode>2): Rename from abssf2, absdf2 and negxf2.  Macroize
	expander using X87MODEF mode iterator.  Change predicates of
	op0 and op1 to register_operand.
	("*absneg<mode>2_mixed", "*absneg<mode>2_sse"): Rename from
	corresponding patterns and macroize using MODEF macro.  Change
	predicates of op0 and op1 to register_operand and remove
	"m" constraint. Disparage "r" alternative with "!".
	("*absneg<mode>2_i387"): Rename from corresponding patterns and
	macroize using X87MODEF macro.  Change predicates of op0 and op1
	to register_operand and remove "m" constraint.  Disparage "r"
	alternative with "!".
	(absneg splitter with memory operands): Remove.
	("*neg<mode>2_1", "*abs<mode>2_1"): Rename from corresponding
	patterns and macroize using X87MODEF mode iterator.
	* config/i386/sse.md (negv4sf2, absv4sf2, neg2vdf2, absv2df2):
	Change predicate of op1 to register_operand.
	* config/i386/i386.c (ix86_expand_fp_absneg_operator): Remove support
	for memory operands.

2008-01-07  Nathan Froyd  <froydnj@codesourcery.com>

	* config/rs6000/rs6000.h (ASM_CPU_SPEC): Add clause for mcpu=8548.

2008-01-07  Richard Guenther  <rguenther@suse.de>

	* basic-block.h (struct edge_def): Pair dest_idx with goto_locus
	fields.

2008-01-07  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/34683
	* tree-ssa-sccvn.c (vuses_to_vec): Pre-allocate the vector of
	VOPs of the needed size to save memory.  Use VEC_quick_push
	to save compile-time.
	(vdefs_to_vec): Likewise.

2008-01-07  Sa Liu  <saliu@de.ibm.com>

	* config/spu/spu.md (divdf3): Genetate inline code for double
	division.  The implementation doesn't handle INF or NAN, therefore it
	only applies when -ffinite-math-only is given.

2008-01-06  Paolo Carlini  <pcarlini@suse.de>

	PR libstdc++/34680
	* c-cppbuiltin.c (c_cpp_builtins): Define __GXX_RTTI, if appropriate.
	* doc/cpp.texi ([Common Predefined Macros]): Document.

2008-01-06  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_emit_swsqrtsf): Use negative constants in
	order to use commutative addition instead of subtraction.

2008-01-06  Andrew Pinski  <andrew_pinski@playstation.sony.com>
	    Mircea Namolaru  <namolaru@il.ibm.com>
	    Vladimir Yanovsky  <yanov@il.ibm.com>
	    Revital Eres  <eres@il.ibm.com>

	PR tree-optimization/34263
	* tree-outof-ssa.c (process_single_block_loop_latch,
	contains_tree_r): New functions.
	(analyze_edges_for_bb): Call process_single_block_loop_latch
	function to empty single-basic-block latch block if possible.

2008-01-05  Uros Bizjak  <ubizjak@gmail.com>

	* config/i386/i386.c (ix86_builtin_reciprocal): Remove check
	for TARGET_RECIP.
	(ix86_emit_swsqrtsf): Do not filter out infinity for rsqrt expansion.

2008-01-05  Richard Sandiford  <rsandifo@nildram.co.uk>

	* c-omp.c (check_omp_for_incr_expr): Handle CONVERT_EXPR.

2008-01-05  Richard Sandiford  <rsandifo@nildram.co.uk>

	* config/mips/mips.c (mips_in_small_data_p): Reinstate size > 0 check.

2008-01-05  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/34618
	* tree-outof-ssa.c (create_temp): Copy over DECL_GIMPLE_REG_P
	flag from T.

2008-01-05  Uros Bizjak  <ubizjak@gmail.com>

	PR target/34673
	* config/i386/i386.c (ix86_emit_swsqrtsf): Swap input operands
	in the call to gen_rtx_NE.  Remove unneeded VECTOR_MODE_P check.
	Update copyright year.

	* config/i386/i386.md (rsqrtsf2): Enable for TARGET_SSE_MATH.
	Update copyright year.
	* config/i386/sse.md (rsqrtv4sf2): Ditto. Unconditionally expand
	using NR fixup.

2008-01-05  Zhouyi Zhou  <zhouzhouyi@FreeBSD.org>

	* tree-vrp.c (find_conditional_asserts): Remove redundant check that
	edge does not point to current bb before changing need_assert.

2008-01-04  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34029
	* tree-cfg.c (verify_expr): Do not look inside ADDR_EXPRs
	for verifying purposes if they are is_gimple_min_invariant.

2008-01-04  Aldy Hernandez  <aldyh@redhat.com>

	PR tree-optimization/34448
	PR tree-optimization/34465
	* gimplify.c (gimplify_init_constructor): Add new parameter
	notify_temp_creation.  Use it.
	(gimplify_modify_expr_rhs): Take volatiles into account when
	optimizing constructors.
	Do not optimize constructors if gimplify_init_constructor will dump to
	memory.
	* gcc.dg/tree-ssa/pr32901.c: Tests const volatiles.
	* gcc.c-torture/compile/pr34448.c: New.

2008-01-04  Jakub Jelinek  <jakub@redhat.com>

	PR gcov-profile/34609
	* tree-inline.c (declare_return_variable): Set TREE_ADDRESSABLE on
	return_slot if result is TREE_ADDRESSABLE.

2008-01-04  Richard Sandiford  <rsandifo@nildram.co.uk>

	* config/mips/mips.md (sqrt_condition): Tweak comment.
	(recip_condition): Likewise.  Require TARGET_FLOAT64 for DFmode.

2008-01-03  Tom Tromey  <tromey@redhat.com>

	PR c/34457
	* c-common.c (c_type_hash): Handle VLAs.

2008-01-03  Jan Hubicka  <jh@suse.cz>

	PR tree-optimization/31081
	* tree-inline.c (remap_ssa_name): Initialize uninitialized SSA vars to
	0 when inlining and not inlining to first basic block.
	(remap_decl): When var is initialized to 0, don't set default_def.
	(expand_call_inline): Set entry_bb.
	* tree-inline.h (copy_body_data): Add entry_bb.

2008-01-03  Jakub Jelinek  <jakub@redhat.com>

	PR c++/34619
	* cgraphunit.c (cgraph_build_static_cdtor): set_cfun back to NULL
	before returning.

	PR tree-optimization/29484
	* tree-inline.c (inline_forbidden_p_2): New function.
	(inline_forbidden_p): Disallow inlining if some static var
	has an address of a local LABEL_DECL in its initializer.
	* doc/extend.texi (Labels as Values): Document &&foo behaviour
	vs. inlining.

2008-01-03  Sebastian Pop  <sebastian.pop@amd.com>

	PR tree-optimization/34635
	* tree-data-ref.c (add_other_self_distances): Make sure that the
	evolution step is constant.

2008-01-03  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/34608
	* omp-low.c (expand_omp_parallel): Purge dead EH edges in the child fn.

2008-01-02  Richard Sandiford  <rsandifo@nildram.co.uk>

	* tree-sra.c (scalarize_init): Insert the generate_element_init
	statements after the generate_element_zero statements.

2008-01-02  Richard Guenther  <rguenther@suse.de>

	PR middle-end/34093
	PR middle-end/31976
	* tree-ssa-operands.c (ssa_operand_alloc): Also allocate a buffer
	for very large number of operands instead of ICEing.

2008-01-02  Arthur Norman <acn1@cam.ac.uk>

	PR target/34013
	* gcc/config/i386/i386.c (ix86_expand_prologue): Save red-zone
	while stack probing.

2008-01-01  Douglas Gregor  <doug.gregor@gmail.com>

	* c-opts.c (sanitize_cpp_opts): Don't warn about "long long" when
	in C++0x mode.

2008-01-01  Volker Reichelt  <v.reichelt@netcologne.de>

	PR libmudflap/26442
	* tree-mudflap.c (mx_register_decls): Guard warning by
	!DECL_ARTIFICIAL check.

2008-01-01  Jakub Jelinek  <jakub@redhat.com>

	* config/i386/sse.md (sse5_pperm, sse5_pperm_pack_v2di_v4si,
	sse5_pperm_pack_v4si_v8hi, sse5_pperm_pack_v8hi_v16qi,
	sse5_perm<mode>): Fix constraints.
