2003-10-23  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cse.c (fold_rtx): Disable the autoinc restriction.
	* loop-init.c (loop_optimizer_optimize): Allow rerunning the loop
	optimizer on unrolled loops.
	* loop-ivopts.c (determine_reductions_to_perform): Speed up.

2003-09-18  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgrtl.c (force_nonfallthru_and_redirect): Handle tablejumps
	correctly.

2003-09-04  Josef Zlomek  <zlomekj@suse.cz>

	* toplev.c (rest_of_compilation): Enable var tracking.
	* var-tracking.c (track_expr_p): Use DECL_RTL_IF_SET instead of
	DECL_RTL.
	(insert_function_parameters): Likewise.

2003-07-30  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	Merge from mainline:
	2003-04-07  J"orn Rennecke <joern.rennecke@superh.com>

		* gcse.c (replace_store_insn): Use single_set.

	* gcse-store.c (replace_store_insn): Use single_set.

2003-07-29  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* stmt.c (expand_end_loop): Fix.

2003-07-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* toplev.c (rest_of_compilation): Disable var tracking.

2003-07-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-ivopts.c (schedule_autoinc): Don't put increment after
	the insn with REG_EH_REGION note.

2003-07-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* doloop.c (doloop_optimize): Pass correct loop level to
	gen_doloop_end.

2003-07-26  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-iv.c (get_reg_value_at): Prevent warning.
	* loop-ivopts.c (schedule_autoinc): Prevent moving set of the
	preserved biv before its use.

2003-07-26  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-ivopts.c (struct fval_repl): New field initialize_before.
	(kill_old_global_iv): Set it.
	(replace_final_value): Place initialization according to it.
	(repl_comparison_cost): Support swapping condition.
	(schedule_repl_for): Decide when to swap it.

2003-07-26  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* expr.c (force_operand): Handle subregs.

2003-07-26  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-ivopts.c (execute_strength_reductions, create_biv): Ensure
	biv increment is placed on correct place.
	* algebraic.c (simplify_alg_expr_one_level): Improve AND
	simplification.

2003-07-25  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-ivopts.c (schedule_autoinc): Fix.
	(create_biv): Prevent warning.
	(detect_strength_reductions): Dump moved ...
	(determine_reductions_to_perform): ... here.
	(create_bivs_for): Fail for extended ivs.
	* loop-iv.c (simulate_set): Handle sets to subregs and relatives
	correctly.
	* algebraic.c (simplify_alg_expr_one_level): Fix handling of DIV/MOD.
	Add a few cases for AND.
	* el-rtx.h (ALL_ONES_VALUE): New.
	* reorg.c (mostly_true_jump): Disable handling of loop notes.

2003-07-25  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* config/rs6000/rs6000.c (rs6000_emit_eh_toc_restore): Don't emit
	loop notes.
	* config/m88k/m88k.c (mostly_false_jump): Ditto.

2003-07-25  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	Merge from mainline:
	2003-03-20 Richard Earnshaw  <rearnsha@arm.com>

		* ifcvt.c (find_if_case_1): If we add a new bb, update the
		dominance information.

2003-07-25  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Makefile.in (cfgloopmanip.o): Add predict.h dependency.
	* cfglayout.c (cfg_layout_duplicate_bb): Put new blocks
	on more sane place in chain.
	* cfgloop.h (execute_strength_reductions): Declaration changed.
	* cfgloopmanip.c: Include predict.h.
	(loop_split_edge_with): Put new blocks on more sane place in chain.
	(copy_loop_headers): Put PRED_LOOP_HEADER prediction on the
	appropriate edge.
	* loop-init.c (loop_optimizer_optimize): Pass loops parameter to
	execute_strength_reductions.
	* loop-ivopts.c: Comment updates.
	(struct str_red): New fields equal_to, eq_occ, forces, increment_after.
	(create_biv_for): Initialize them.
	(dump_new_biv): Dump them.
	(struct repl_alt): Field inc_by removed.
	(execute_strength_reduction): Don't handle it.
	(MANY_IVS): Increased to 50.
	(INSN_DOMINATED_BY_P): New.
	(schedule_autoinc, kill_old_global_iv, add_iv_elimination): Use it.
	(remove_unnecesary_fvrepls, fixup_preserved_bivs, record_old_biv): New.
	(detect_strength_reductions, add_iv_elimination, schedule_repl_for,
	gen_cond_repl_rtx, create_biv, execute_strength_reductions,
	determine_reductions_to_perform, estimate_gain): Handle a
	possibility to preserve old biv.
	(schedule_autoinc): Update for changed fields.
	(derive_iv_from): Don't initialize removed inc_by field.

2003-07-22  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgcleanup.c (merge_blocks): Work also for successors of the
	entry.
	* combine.c (try_combine): Mark new jump label.
	* toplev.c (rest_of_compilation): Do expensive cleanup after
	copying loop headers.

2003-07-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop.h: Removed.
	* unroll.c: Removed.
	* Makefile.in (loop.h, unroll.o): Removed.
	* alias.c (init_alias_analysis): Remove reference to
	flag_old_unroll_loops.
	* basic-block.h (CLEANUP_PRE_LOOP): Removed.
	* cfgcleanup.c (try_forward_edges): Remove handling of
	CLEANUP_PRE_LOOP.
	* except.c (finish_eh_generation): Do not use CLEANUP_PRE_LOOP.
	* sibcall.c (optimize_sibling_and_tail_recursive_call): Ditto.
	* cfglayout.c (skip_insns_after_block, duplicate_insn_chain):
	Do not handle loop notes.
	* cfgloop.c: Ansify.
	* cfgloop.h (struct loop, struct loops, struct loop_info): Remove
	fields used by old loop optimizer.
	(flow_loop_scan): Remove.
	* cfgloopanal.c (compute_simple_loop_info): Do not set (cancelled)
	has_desc.
	* cfgrtl.c (last_loop_beg_note, back_edge_of_syntactic_loop_p):
	Removed.
	(flow_delete_block_noexpunge, force_nonfallthru_and_redirect,
	split_edge, commit_one_edge_insertion): Do not handle loop notes.
	* cse.c (cse_check_loop_start, cse_set_around_loop, cse_around_loop):
	Disabled.
	(cse_end_of_basic_block, cse_basic_block): Do not handle loop notes.
	* emit-rtl.c (remove_unnecessary_notes): Ditto.
	* explow.c (probe_stack_range): Ditto.
	* expr.c (emit_block_move_via_loop): Ditto.
	* final.c (final_scan_insn): Ditto.
	* haifa-sched.c (unlink_other_notes): Ditto.
	* jump.c (squeeze_notes, follow_jumps): Ditto.
	* rtl.c (note_insn_name): Ditto.
	* sched-deps.c (sched_analyze_insn, sched_analyze): Ditto.
	* rtl.h (NOTE_INSN_LOOP_BEG, NOTE_INSN_LOOP_END, NOTE_INSN_LOOP_CONT,
	NOTE_INSN_LOOP_VTOP, NOTE_INSN_LOOP_END_TOP_COND): Removed.
	(init_loop, libcall_other_reg, loop_optimize, record_excess_regs):
	Declarations removed.
	* integrate.c: Don't include loop.h.
	* loop-ivopts.c: Ditto.
	* loop-invariant.c: Ditto.
	(prescan_loop): Don't compute has_nonconst_call.
	* doloop.c (doloop_valid_p): Do not check has_desc.
	* loop-prefetch.c (emit_prefetch_instructions): Ditto.
	* loop-unroll.c (decide_peel_once_rolling, decide_peel_completely,
	decide_unroll_constant_iterations, decide_unroll_runtime_iterations,
	decide_peel_simple, peel_loop_simple, decide_unroll_stupid,
	unroll_loop_stupid): Ditto.
	* loop.c: Removed everything except canonicalize_condition
	and get_condition.
	* predict.c: Don't include loop.h.
	(estimate_probability): Use get_loop_exit_edges instead of
	flow_loop_scan.
	* stmt.c: Don't include loop.h.
	(expand_start_loop, expand_end_loop, expand_exit_loop_top_cond): Don't
	establish loop notes.
	* toplev.c: Don't include loop.h.
	(flag_old_unroll_loops, flag_old_unroll_all_loops): Removed.
	(lang_independent_options): Also from here.
	(rest_of_compilation): Don't use CLEANUP_PRE_LOOP. Remove old loop
	optimizer.
	(process_options): Remove references to flag_old_unroll_loops
	and flag_old_unroll_all_loops.
	(backend_init): Remove call of init_loop.
	
2003-07-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfglayout.c (cleanup_unconditional_jumps): Work correctly
	when there is no dominance info.
	* cfgloop.c (flow_loops_cfg_dump): Ditto.
	* cfgloop.h (copy_loop_headers): Declare.
	* cfgloopmanip.c: Ansify.
	(copy_loop_headers, should_duplicate_loop_header_p): New functions.
	* jump.c (next_nonnote_insn_in_loop, duplicate_loop_exit_test,
	copy_loop_headers): Remove.
	* rtl.h (copy_loop_headers): Remove declaration.
	* toplev.c (rest_of_compilation): Invoke new copy_loop_headers.

2003-07-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* algebraic.c (equal_when_iteration_zero_p, substitute_into_expr):
	Cleanup handling of substitution for iteration.
	(simplify_alg_expr_one_level, substitute_into_expr): Support
	EXPR_LISTs.
	(substitute_into_expr): Fix folding of conditions.
	(simplify_alg_expr_using_values): Modified.
	* algebraic.h (SIE_IGNORE_MODE): New flag.
	(substitute_into_expr): Declaration changed.
	* cfgloop.c (verify_loop_structure): Check simple preheaders.
	* cfgloop.h (LOOPS_HAVE_SIMPLE_PREHEADERS): New flag.
	(struct iv_occurence): Field arg added.
	* cfgloopanal.c (iv_simple_condition_p): Put checks into correct
	order.
	* cfgloopmanip.c (create_preheaders): Record
	LOOPS_HAVE_SIMPLE_PREHEADERS.
	* df.h (DF_REF_INSN_LUID): New.
	* flow.c (mark_used_regs): Set subregs_of_mode only if initialized.
	* loop-invariant.c (detect_movable_set): Modified.
	* loop-iv.c (enter_iv_occurence, record_iv_occurences_1): Record ivs
	in conditions.
	(simulate_set, iv_simplify_using_initial_values,
	iv_simplify_using_branches, iv_get_condition_value,
	iv_simplify_using_condition, iv_make_initial_value): Modified.
	* loop-ivopts.c (struct str_red): Fields elimination and remove_notes
	added.
	(struct repl_alt): Fields pre and type added, type of field loc changed.
	(COST_INFTY): Changed.
	(struct iv_occ_list): Field aux added.
	(decide_strength_reduction, kill_old_global_iv, add_iv_elimination,
	remove_incorrect_eliminations, elimination_invalid_p,
	partial_computation_p, detect_strength_reductions,
	detect_strength_reductions, schedule_autoinc, computation_cost,
	schedule_repl_for, invariant_displacement_p, repl_mem_addr_cost,
	repl_move_cost, gen_repl_rtx, create_biv, execute_strength_reduction,
	determine_reductions_to_perform, decrease_by_one_iv,
	estimate_gain, finish_repl, dump_new_biv): Support induction variable
	elimination.
	(create_bivs_for, greatest_common_divisor, gen_cond_repl_rtx,
	repl_comparison_cost, may_wrap_p): New static functions.
	* loop-unswitch.c (unswitch_single_loop): Preserve simple preheaders.
	* stor-layout.c (get_mode_bounds): Formating fix.

2003-07-15  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* algebraic.c (init_algebraic, substitute_into_expr): Support
	handling EXPR_LISTs.
	* algebraic.h (bival_p): Check for NULL.
	* cfgloop.h (struct loop_desc): Add niter_max field.
	(struct ivopt_actions): Add repl_final_value field.
	(loop_iterations_max, iv_get_condition_value,
	iv_simplify_using_branches): Declare.
	(find_single_def_use): Declaration changed.
	* cfgloopanal.c (iv_simple_condition_p): Pass condition with already
	substituted initial values.  Initialize niter_max field.  Make
	conditions less strict.  Simplify conditions using entry branches.
	(iv_simple_loop_exit_p): Use iv_get_condition_value.
	(loop_iterations_max): Renamed, exported and moved from doloop.c.
	* df.c (df_uses_record): Record correct flags at uses.
	* doloop.c (doloop_iterations_max): Removed.
	(doloop_valid_p, doloop_modify): Comment improvements.
	* ifcvt.c (find_if_case_2): Prevent moving of computations into loops.
	* jump.c (swapped_condition): New function.
	* loop-init.c (loop_optimizer_optimize): Compute_simple_loop_info call
	moved to iv analysis.
	* loop-invariant.c (find_single_def_use): Return type changed.
	(detect_movable_set): Modified due to it.
	* loop-iv.c: Ansified.
	(attempt_to_kill_extends, attempt_to_kill_rtx_extends,
	attempt_to_kill_ref_extends, iv_simplify_using_branches,
	iv_get_condition_value, iv_simplify_using_branch,
	iv_simplify_using_condition): New.
	(analyse_induction_variables): Use attempt_to_kill_extends.
	* loop-ivopts.c (struct str_red): Cost field added.
	(repl_alt): Inc_by field added.
	(dump_new_biv, dump_sr_replacement): Dump them.
	(struct fval_repl): New.
	(decide_strength_reduction, decrease_by_one_iv, alter_by_few_ivs,
	estimate_gain, gen_repl_rtx, repl_mem_addr_cost, kill_old_global_iv):
	Support replacing final value of dead bivs used outside of loop.  Be
	autoinc friendly.
	(schedule_autoinc, replace_final_value, make_default_ivs): New.
	* loop-unroll.c (unroll_loop_constant_iterations,
	unroll_loop_constant_iterations, unroll_loop_runtime_iterations):
	Update niter_max.
	* rtl.h (swapped_condition): Declare.
	* toplev.c (process_options): Disable superblock_scheduling due to
	conflicts on ia64.

2003-07-12  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-ivopts.c: New file.
	* Makefile.in (loop-ivopts.o): New.
	* cfgloop.h (loop_max_regno): Declare.
	(struct iv_occurence): Add aux field.
	(struct movable_list): Comment.
	(struct ivopt_actions): New structure.
	(loop_avail_regs): Declare.
	(hoist_insn_to_depth, find_single_def_use, detect_strength_reductions,
	execute_strength_reductions): Declare.
	* loop-init.c (loop_avail_regs): Moved from loop-invariant.c, renamed
	and exported.
	(loop_optimizer_optimize): Add induction variable optimizations.
	* loop-invariant.c (estimate_replacement_possibilities): Split off ...
	(find_single_def_use): ... new.
	(hoist_insn_to_depth): Export.
	(determine_move_depth): Use loop_avail_regs instead of avail_regs.
	(detect_movable_set): Use find_single_def_use.
	* loop-iv.c (max_regno): Rename to loop_max_regno and export.
	(dump_equations, simplify_ivs_using_values, initialize_iv_analysis,
	compute_loop_end_values, compute_initial_values,
	iv_new_insn_changes_commit, analyse_induction_variables): Use
	loop_max_regno instead of max_regno.
	(enter_iv_occurence): Initialize aux field.
	(compute_loop_end_values): Initialize values correctly.
	* params.def (STR_N_USABLE_REGS, STR_SPILL_COST, STR_REG_WEIGHT):
	New.

2003-07-09  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-invariant.c: New file.
	* Makefile.in (STRICT_WARN, STRICT2_WARN): Remove -Wtraditional.
	(OBJS): Add loop-invariant.o.
	(loop-init.o): Add flags.h and $(TIMEVAR_H) dependency.
	(loop-invariant.o): New.
	* algebraic.c: Ansify.
	(substitute_into_expr): Handle SIE_DEFAULT_ID.
	* algebraic.h: Ansify.
	(SIE_DEFAULT_ID): New flag for substitute_into_expr.
	* basic-block.h (def_enum_to_p): Declare.
	(fast_dom): Declare.
	(fast_dominated_by_p, create_fq_dominators, release_fq_dominators):
	Use global fast dominance structure.
	* cfganal.c (can_fallthru): Fix.
	* cfglayout.c (fixup_reorder_chain): Handle jumptables.
	* cfgloop.c (glb_enum_p): Renamed to ...
	(def_enum_to_p): ... and exported.
	(get_loop_body): Use it.
	(get_loop_exit_edges): Fix.
	(verify_loop_structure): Check landing pads.
	* cfgloop.h: Ansify.
	(struct loop): Added fields info and landing_pad.
	(LOOPS_HAVE_LANDING_PADS): New flag.
	(struct iv_occurence): Add field value.
	(struct movable_list, struct loop_df_info): New.
	(DF_REF_AUX_VALUE, DF_REF_AUX_MOVABLE): New.
	(loop_df, block_dominance_order): Declare.
	(loop_optimizer_optimize, find_movables, loops_invariant_motion,
	create_landing_pads): New.
	* cfgloopanal.c (get_loop_level): New.
	* cfgloopmanip.c (create_landing_pads): New.
	* cfgrtl.c (can_delete_note_p): Export.
	(force_nonfallthru_and_redirect): Don't skip dead jumptable.
	* df.c (df_reg_clobber_gen): Removed.
	(df_bb_rd_local_compute, df_insn_refs_record, df_rd_local_compute):
	Make more effective for hard regs.
	* doloop.c (get_loop_level): Moved to cfgloopanal.c.
	* dominance.c (fast_dom): New variable.
	(create_fq_dominators, release_fq_dominators): Work on global
	structure.
	* flags.h (flag_unroll_loops, flag_unroll_all_loops,
	flag_reroll_loops, flag_peel_loops): Declare.
	* loop-init.c: Include flags.h and timevar.h.
	(loop_optimizer_optimize): New.
	* loop-iv.c (block_dominance_order): Export.
	(df): Rename to ...
	(loop_df): ... and export.
	(dom): Removed.
	(enter_iv_occurence, record_iv_occurences_1): Initialize value field.
	(dump_insn_ivs, record_def_value, record_use_value, get_def_value,
	get_use_value, clear_reg_values, get_reg_value_at,
	iv_load_used_values, compute_reg_values, simplify_reg_values,
	fill_loop_rd_in_for_def, fill_rd_for_defs, initialize_iv_analysis,
	finalize_iv_analysis, compute_loop_end_values, compute_initial_values,
	record_iv_occurences, iv_new_insn_changes_commit): Use DF_REF_AUX_VALUE.
	(iv_emit_insn_before, iv_emit_insn_after): Return the last insn
	emitted.
	(initialize_iv_analysis): Create df also for hard regs.
	* loop-unroll.c (unroll_and_peel_loops): Kill landing pads.
	* loop.h (struct loop_info): Add bb_after_exit, bb_after_call and
	body fields.
	* params.def (LIM_SPILL_COST, LIM_N_USABLE_REGS, LIM_N_CALL_REGS,
	LIM_REGS_PER_LOOP_LEVEL, LIM_INSNS_PER_REG, LIM_LIFESPAN_WEIGHT,
	LIM_GAIN_WEIGHT, LIM_REG_WEIGHT): New params.
	* rtl.h (can_delete_note_p): Declare.
	* toplev.c (rest_of_compilation): Disable old loop optimizer. Call
	loop_optimizer_optimize.  Move one copy propagation pass after new
	loop optimizer.
	* config/i386/i386.c (override_options): Disable red zone on i386.
	* loop.c (indirect_jump_in_function, indirect_jump_in_function_p):
	Removed.

2003-06-18  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* el-rtx.h: New.
	* Makefile.in (toplev.o, cfgloopanal.o, loop-iv.o, algebraic.o):
	Add el-rtx.h dependency.
	(gt-algebraic.h): Cancel.
	* algebraic.c: Use generic algebraic expression hooks.
	* algebraic.h: Use generic algebraic expression hooks.
	* cfgloopanal.c: Define EL_RTX.
	(iv_simple_condition_p): Adapt for renamed functions.
	* loop-iv.c: Define EL_RTX.
	(iv_make_initial_value, record_iv_occurences): Adapt for renamed
	functions.
	* toplev.c: Define EL_RTX.

2003-06-05  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Makefile.in (algebraic.o): Add ggc.h dependency.
	* algebraic.c: Include ggc.h and gt-algebraic.h
	(iteration_rtx): Make a ggc root.
	(equal_when_iteration_zero_p, float_if_then_else,
	simplify_alg_expr_one_level): New static functions.
	(simplify_alg_expr_subreg): Do not rewrite shared iteration rtxes.
	(simplify_alg_expr, init_algebraic, simplify_alg_expr_using_values):
	Handle bivals.
	(substitute_into_expr): Enable to substitute for iteration.
	(gen_bival): New function.
	* algebraic.h (bival_p): New macro.
	(gen_bival): Declare.
	* cfgloopanal.c (iv_simple_condition_p): Handle bivals.
	* loop-iv.c (analyse_induction_variables): Fix handling of subregs.

2003-05-17  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* algebraic.c, algebraic.h: New files.
	* Makefile.in (algebraic.o): New.
	(toplev.o, cfgloopanal.o, loop-iv.o): Add algebraic.h dependency.
	* cfgloop.h (iv_interesting_reg): Declare.
	(substitute_into_expr, iv_simplify_subreg, iv_simplify_rtx,
	simplify_iv_using_values, iv_split): Declarations moved to
	algebraic.h.
	(iv_base, iv_step, iv_simple_p): Removed.
	* cfgloopanal.c: Include algebraic.h.
	(iv_simple_condition_p): Call renamed functions from algebraic.h.
	* loop-iv.c: Include algebraic.h.
	(block_dominance_order): New static variable.
	(interesting_reg): Renamed to ...
	(iv_interesting_reg): ... new.
	(iteration_rtx, suitable_code, gen_iteration, straighten_ops,
	sort_ops, iv_compare_rtx, use_distributive_law, iv_simplify_mult,
	combine_constants, iv_simplify_plus, compare_with_mode_bounds,
	iv_simplify_relational): Moved to algebraic.c.
	(simple_expr_p, good_constant_p):  Moved to algebraic.h.
	(expr_mentions_iteration_p, expr_mentions_initial_value_p):
	Merged, renamed to fast_expr_mentions_code_p and moved to algebraic.h.
	(init_suitable_codes): Renamed to init_algebraic and moved to
	algebraic.c.
	(dump_equations, dump_insn_ivs, invariant_wrto_ivs_p, simulate_set,
	simplify_ivs_using_values, iv_simplify_using_initial_values,
	simplify_reg_values, fill_loop_rd_in_for_def, initialize_iv_analysis,
	finalize_iv_analysis, iv_make_initial_value, compute_initial_values,
	record_iv_occurences_1, record_iv_occurences,
	iv_new_insn_changes_commit, analyse_induction_variables): Altered due to
	calls to functions and use of variables with changed names.
	(get_reg_value_at, compute_reg_values, compute_register_values,
	fill_loops_dominance_order): Pass blocks in dominance order to
	avoid recursion.
	* toplev.c: Include algebraic.h.
	(backend_init): Call init_algebraic.

2003-05-09  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloop.h (struct loop_desc): Add mode and signed_p fields.
	(SIE_SIMPLIFY, SIE_ONLY_SIMPLE): New.
	(decide_unrolling_and_peeling): Declare.
	(unroll_and_peel_loops): Declaration changed.
	* cfgloopanal.c (iv_simple_condition_p): Follow new calling convention
	of substitute_into_expr.  Fill in mode and signed_p fields.
	* doloop.c (doloop_iterations_max, doloop_valid_p, doloop_modify,
	doloop_modify_runtime, doloop_optimize): Use new iv infrastructure.
	* loop-iv.c (simple_expr_p, expr_mentions_initial_value_p): New macros.
	(iv_simplify_rtx): Speed up for simple expressions.
	(substitute_into_expr, simplify_iv_using_values): Enhance simplification
	possibilities.
	(simulate_set, iv_make_initial_value, record_iv_occurences_1):
	Follow new calling convention of substitute_into_expr.
	* loop-unroll.c (decide_unrolling_and_peeling): Export.
	(peel_loops_completely): Merge into decide_unrolling_and_peeling
	and unroll_and_peel_loops.
	(unroll_and_peel_loops): Take care of complete peeling. Remove decision
	parts.
	(unroll_loop_constant_iterations, unroll_loop_runtime_iterations,
	unroll_loop_stupid, peel_loop_simple): Update the number of iterations.
	* toplev.c (rest_of_compilation): Call unrolling/peeling decision
	separately.

2003-05-08  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopanal.c (num_loop_insns, average_num_loop_insns): Count
	only real insns.

2003-05-06  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloop.h (struct iv_occurence): Add local_base field.
	* loop-iv.c (real_loops_num, loops_dominance_order): New static
	variables.
	(initialize_iv_analysis, finalize_iv_analysis): Initialize and
	finalize them.
	(replace_iteration_with_value_at, iv_make_initial_value,
	fill_loops_dominance_order): New static functions.
	(enter_iv_occurence, record_iv_occurences_1): Initialize local_base
	field.
	(compute_initial_values, analyse_induction_variables): Be more clever
	about variable initial values.
	* loop-prefetch.c (struct prefetch_info): Add base_address_local
	field.
	(emit_prefetch_instructions): Intialize and use it.
	* rtl.def (VALUE_AT): Extend the comment.

2003-05-06  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-iv.c (iv_new_insn_changes_commit): Fix.

2003-05-04  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-prefetch.c: New.
	* Makefile.in (loop-prefetch.o): New.
	* basic-block.h (FOR_BB_INSNS, FOR_BB_INSNS_REVERSE): New.
	* cfgloop.h (struct iv_occurence, iv_occurence_base_class,
	iv_occurence_step_class): New.
	(iv_occurences): Declare.
	(finalize_iv_analysis, analyse_induction_variables): Types changes.
	(iv_emit_insn_before, iv_emit_insn_after, prefetch_loop_arrays):
	Declare.
	* df.c (df_reg_table_realloc, df_link_create, df_insn_refs_record,
	df_bb_luids_set, df_refs_queue, df_refs_process): Export.
	(df_insn_ud_chain_create): Split from df_bb_ud_chain_create.
	* df.h (df_insn_refs_record, df_reg_table_realloc, df_link_create,
	df_insn_ud_chain_create, df_bb_luids_set, df_refs_queue,
	df_refs_process): Declare.
	* loop-iv.c (current_loops): New static variable.
	(iv_occurences): New variable.
	(fill_rd_for_defs, enter_iv_occurence, record_iv_occurences_1,
	record_iv_occurences, dump_iv_occurences, iv_new_insn_changes_commit):
	New static functions.
	(dump_insn_ivs, record_def_value, record_use_value,
	get_def_value, get_use_value, iv_load_used_values,
	compute_reg_values, compute_register_values,
	simplify_register_values, fill_loop_rd_in_for_def,
	compute_loop_end_values, compute_initial_values): Do not test ref
	type unnecesarily.  Use FOR_BB_INSNS.
	(initialize_iv_analysis): Initialize current_loops and
	iv_occurences.
	(finalize_iv_analysis, analyse_induction_variables): Use current_loops
	instead of loops parameter.
	(iv_emit_insn_before, iv_emit_insn_after): New.
	* loop.c (prescan_loop, strength_reduce, check_dbra_loop): Remove
	prefetching references.
	(struct prefetch_info, check_store, rtx_equal_for_prefetch_p,
	emit_prefetch_instructions): Removed.
	* loop.h (LOOP_PREFETCH): Removed.
	(struct loop_info): has_prefetch field removed.
	* toplev.c (rest_of_compilation): Move prefetching to the new loop
	optimizer.

2003-05-04  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-iv.c (fill_loop_rd_in_for_def): Fix.
	(get_reg_value_at): Do not call fill_loop_rd_in_for_def unnecessarily.

2003-05-04  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-iv.c (compute_loop_end_values): One more fix.
	(analyse_induction_variables): Remove debugging tweak.

2003-05-03  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-iv.c (compute_loop_end_values): Fix.

2003-05-01  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* toplev.c (process_options): Disable loop rerolling.

2003-04-29  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	Merge from mainline:

	Tue Apr  8 11:12:07 CEST 2003  Jan Hubicka  <jh@suse.cz>
		* i386.c (legitimate_pic_address_disp_p): Do not accept PLUS in the
		GOTOFF operand.
		(legitimize_pic_address): Move plus outside the unspec.
		(legitimate_constant_p):  Check (CONST (PLUS (UNSPEC ...
		for validity.

2003-04-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Makefile.in (loop-reroll.o): New.
	* basic-block.h (outgoing_edges_match, flow_find_cross_jump,
	update_forwarder_flag): Declare.
	* cfgcleanup.c (flow_find_cross_jump, update_forwarder_flag):
	Export.
	(outgoing_edges_match): Export; update for rerolling.
	* cfgloop.h (reroll_loops): Declare.
	* timevar.def (TV_REROLL): New.
	* toplev.c (DFI_reroll): New.
	(dump_file): Add loop rerolling.
	(flag_reroll_loops): New.
	(lang_independent_options): Add -freroll-loops.
	(rest_of_compilation): Add loop rerolling.
	(process_options): Enable it when unrolling all loops.

2003-04-23  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* bitmap.c (bitmap_element_link): Removed.
	(bitmap_find_bit): Replaced with ...
	(bitmap_find_indx): ... new function.
	(ensure_allocated_obstack, fill_freelist, verify_bitmap,
	slow_bitmap_operation): New static functions.
	(bitmap_elem_to_freelist, bitmap_element_free,
	bitmap_element_allocate, bitmap_initialize,
	bitmap_clear, bitmap_copy, bitmap_clear_bit,
	bitmap_set_bit, bitmap_bit_p,  bitmap_operation, bitmap_equal_p):
	Speed up.
	(bitmap_ior_and_compl, bitmap_union_of_diff, debug_bitmap_file,
	bitmap_first_set_bit, bitmap_last_set_bit): Modified due to above
	changes.
	* bitmap.h (struct bitmap_head_def): Add freelist field.
	(BITMAP_IOR_COMPL): Remove.
	(EXECUTE_IF_SET_IN_BITMAP, EXECUTE_IF_AND_COMPL_IN_BITMAP,
	EXECUTE_IF_AND_IN_BITMAP): Modified.

2003-04-21  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* heap.c: New.
	* heap.h: New.
	* Makefile.in (heap.o): New.
	(df.c): Add heap.h dependency, remove fibheap.h dependency.
	* df.c: Include heap.h instead of fibheap.h.
	(iterative_dataflow_sbitmap, iterative_dataflow_bitmap): Use ordinary
	heaps for worklist.

2003-04-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* df.c (hybrid_search_bitmap, hybrid_search_sbitmap,
	iterative_dataflow_bitmap, iterative_dataflow_sbitmap): Speed up.

2003-04-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-iv.c (expr_mentions_iteration_p): New.
	(substitute_into_expr, iv_split, clear_reg_values,
	compute_register_values, compute_initial_values): Speed up.

2003-04-15  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfglayout.c (cfg_layout_delete_block): New.
	* cfglayout.h (cfg_layout_delete_block): Declare.
	* cfgloopmanip.c (remove_bbs): Use it.
	* cfgloop.h (iv_omit_initial_values): Declare.
	* cfgloopanal.c (iv_simple_condition_p): Do not consider infinite
	loops simple.
	(iv_simple_loop_exit_p): Fill in desc->postincr.
	(compute_simple_loop_info): Compute simple loop info using loop_iv
	code.
	* loop-iv.c (iv_omit_initial_values_1): New static function.
	(iv_omit_initial_values): New function.
	(compare_with_mode_bounds, get_reg_value_at): Fix.
	* loop-unroll.c (unroll_and_peel_loops, peel_loops_completely,
	decide_unrolling_and_peeling, decide_peel_once_rolling,
	decide_peel_completely, peel_loop_completely,
	decide_unroll_constant_iterations, unroll_loop_constant_iterations,
	decide_unroll_runtime_iterations, unroll_loop_runtime_iterations,
	decide_peel_simple, decide_unroll_stupid): Use iv analysis results.
	* toplev.c (rest_of_compilation): Call initialize_iv_analysis if
	needed.

2003-04-13  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloop.h (iv_simplify_subreg, iv_simplify_rtx): Declare.
	* cfgloopanal.c (iv_simple_condition_p): Use them.
	(inverse): Workaround for shifting by size of mode.
	* loop-iv.c (real_reg_mode, extend_type, determine_real_reg_mode,
	fill_real_reg_modes): Removed.
	(iv_simplify_subreg, iv_simplify_rtx): Exported.
	(compare_with_mode_bounds, iv_simplify_relational): New.
	(gen_value_at, iv_simplify_plus, iv_simplify_rtx,
	substitute_into_expr, simulate_set, simplify_iv_using_values,
	initialize_iv_analysis, finalize_iv_analysis,
	analyse_induction_variables): Handle subregs differently.
	* machmode.h (get_mode_bounds): Declare.
	* stor-layout.c (get_mode_bounds): New.

2003-04-11  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-iv.c (real_reg_mode, extend_type): New static variables.
	(iv_simplify_subreg, determine_real_reg_mode, fill_real_reg_modes):
	New static functions.
	(gen_value_at, iv_simplify_subreg, iv_simplify_rtx,
	init_suitable_codes, substitute_into_expr, simulate_set,
	initialize_iv_analysis, finalize_iv_analysis): Support subregs.
	(get_reg_value_at): Don't try to be overly clever about constants.

2003-04-06  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* dominance.c (create_fq_dominators): Do not allocate unnecessary
	memory.
	* loop-iv.c (earliest_value_at_for): New.
	(get_reg_value_at): Be more clever about constant values.  Use
	earliest_value_at_for.
	(compute_initial_values): Allow values in outer loop to refer to
	iteration.

2003-04-06  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-iv.c: New.
	* Makefile.in (loop-iv.o): New.
	* basic-block.h (fast_dominance_info, fast_dominated_by_p,
	fast_dominance_info, release_fq_dominators): Declare.
	* cfgloop.h (struct loop_desc): New fields assumptions,
	noloop_assumptions, infinite, niter_expr.
	(iv_register_values, loop_entry_values, initial_values): Declare.
	(compute_simple_loop_info, initialize_iv_analysis,
	finalize_iv_analysis, analyse_induction_variables,
	iv_load_used_values, get_def_value, get_use_value,
	substitute_into_expr, simplify_iv_using_values,
	iv_simplify_using_initial_values, iv_split, iv_base, iv_step,
	iv_simple_p): Declare.
	* cfgloopanal.c (iv_simple_condition_p, iv_simple_loop_exit_p,
	iv_simple_loop_p, inverse, compute_simple_loop_info): New.
	(mark_irreducible_loops): Fix.
	* df.h (struct ref): Add aux field.
	* dominance.c (create_fq_dominators, release_fq_dominators): New.
	* jump.c (reversed_condition): Moved from ...
	* loop-unswitch.c (reversed_condition): ... here.
	* rtl.c (copy_rtx): Handle new rtl codes.
	* rtl.def (INITIAL_VALUE, VALUE_AT, ITERATION): New rtl codes.
	* rtl.h (reversed_condition, expr_mentions_code_p): Declare.
	* rtlanal.c (expr_mentions_code_p, same_code_p): New.
	* timevar.def (TV_LOOP2, TV_IV_ANAL): New.
	* toplev.c (rest_of_compilation): Use them.  Call iv analysis.

Tue Mar 18 21:51:28 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Mainline merge (rtlopt-merge-20030318)

Tue Mar 18 19:39:08 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.c (use_fast_prologue_epilogue): Remove.
	(machine_function): New fields use_fast_prologue_epilogue;
	use_fast_prologue_epilogue_initialized.
	(ix86_frame): New field save_regs-using_mov;
	(ix86_compute_frame_layout):  Decide on fast prologues;
	allocate saved registers in red zone.
	(ix86_expand_epilogue, ix86_expand_prolgoues): Obey new parameters.

2003-03-11  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (track_expr_p): Fix Do not track global variables.

2003-03-11  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	Merge from mainline:
	* basic-block.h (EDGE_IRREDUCIBLE_LOOP, EDGE_ALL_FLAGS): New.
	* cfg.c (dump_edge_info): Add EDGE_IRREDUCIBLE_LOOP flag dump.
	* cfgloop.c (flow_loop_free): Made global.
	(establish_preds): New static function.
	(flow_loop_tree_node_add): Handle subloops of added loop correctly.
	(get_loop_exit_edges): New.
	(verify_loop_structure): Verify EDGE_IRREDUCIBLE_LOOP flags.
	* cfgloop.h (flow_loop_free, get_loop_exit_edges, unloop): Declare.
	* cfgloopanal.c (mark_irreducible_loops): Mark edges in irreducible
	loops.
	* cfgloopmanip.c (loop_delete_branch_edge): Allow to test for
	removability of an edge.
	(fix_irreducible_loops): New static function.
	(find_path, remove_path): Add ability to remove enclosing loops.
	(unloop): New.
	(copy_bbs, duplicate_loop_to_header_edge): Use EDGE_IRREDUCIBLE_LOOP
	flags.
	* cfgrtl.c (verify_flow_info): Handle EDGE_IRREDUCIBLE_LOOP flag.
	* loop-unroll.c (peel_loops_completely): Do not duplicate loop if
	not neccessary.
	(decide_peel_completely, peel_loops_completely): Allow complete peeling
	of non-duplicable once rolling loops.
	* loop-unswitch.c (unswitch_loop): Update EDGE_IRREDUCIBLE_LOOP flags.

	* loop-unroll.c (unroll_loop_runtime_iterations): Update irreducible
	loops info correctly.

2003-03-10  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (track_expr_p): Do not track global variables.

Mon Mar 10 15:40:33 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.c (min_insn_size, k8_avoid_jump_misspredicts): New function
	(machine_dependent_reorg): Use it.

Fri Mar  7 12:38:44 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.md (cvtts?2si peep2): New.

2003-03-06  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Makefile.in (doloop.o): Add output.h and PARAMS_H dependencies,
	remove LOOP_H dependency.
	* cfgloop.h (doloop_optimize_loops): Declare.
	* doloop.c: Do not include loop.h, include output.h and params.h.
	(get_loop_level, doloop_optimize_loops): New functions.
	(doloop_valid_p, doloop_modify, doloop_modify_runtime, doloop_optimize,
	doloop_condition_get, doloop_iterations_max): Modified to use new loop
	datastructure.
	* loop.c (strength_reduce): Do not call doloop_optimize.
	* loop.h (LOOP_BCT): Removed.
	(doloop_optimize): Declaration removed.
	* params.def (PARAM_MAX_DOLOOP_INSNS): New parameter.
	* toplev.c (rest_of_compilation): Call doloop optimizer from loop2
	instead of loop.

2003-03-05  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gcse-pre.c (simple_mem): Handle trapping mems.
	* gcse-store.c (find_moveable_store): Ditto.

Wed Mar  5 18:25:28 CET 2003  Jan Hubicka  <jh@suse.cz>

	Merge from mainline (rtlopt-merge-20030305).

2003-03-04  Josef Zlomek  <zlomekj@suse.cz>

	Merge from mainline:
	* emit-rtl.c (set_reg_attrs_for_parm): New function.
	* rtl.h (set_reg_attrs_for_parm): New exported function.
	* function.c (assign_parms): Set reg_attrs for parameters in registers.

2003-02-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gcse-pre.c (compute_pre_data): Add debug dump.

2003-02-26  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (insert_function_parameters): Do not track
	complicated parameters.

2003-02-26  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (LT_CALL_INSN): New element of enum location_type.
	(compute_bb_dataflow): Delete registers destroyed by called function.
	(process_bb): Likewise.
	(var_tracking_initialize): Add the call insn to the list of locations.

2003-02-26  Josef Zlomek  <zlomekj@suse.cz>

	* rtl.h (note_all_uses): New extern function.
	* rtlanal.c (note_all_uses): New function.
	* var-tracking.c (count_uses, add_uses): Changed type of parameter loc.
	(var_tracking_initialize): Use note_all_uses instead of note_uses.

2003-02-24  Josef Zlomek  <zlomekj@suse.cz>

	* dwarf2out.c (struct var_loc_node): Skip "last".

Sat Feb 22 21:22:33 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (rtlopt-merge-20030222)

2003-02-22  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gcov-io.h (gcov_save_position, gcov_reserve_length, gcov_resync,
	gcov_skip, gcov_skip_string, gcov_write_unsigned, gcov_write_counter,
	gcov_write_string, gcov_read_unsigned, gcov_read_counter,
	gcov_read_string, gcov_write_length): Modified to enable reading/
	writing of whole .da file just once.
	(da_file_open, da_file_close, da_file_eof, da_file_error,
	da_file_position, da_file_seek, da_file_write, da_file_read): New
	functions.
	(actual_da_file, actual_da_file_position, actual_da_file_length,
	actual_da_file_buffer, actual_da_file_buffer_size): New static
	functions.
	* libgcov.c (gcov_exit): Modified to read/write the whole .da file at
	just once.

2003-02-21  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gcov-dump.c (tag_arc_counts): Add parameter to gcov_read_counter call.
	* gcov-io.h (GCOV_TAG_SAME_VALUE_HISTOGRAMS): New section.
	(gcov_read_counter): Add parameter.
	(merger_function, same_value_histograms_merger, profile_merger_for_tag):
	New.
	(gcov_read_summary): Add parameter to gcov_read_counter call.
	* gcov.c (read_count_file): Ditto.
	* libgcov.c (gcov_exit): Support profile merging hooks.
	* profile.c (same_value_histograms_label): New.
	(get_exec_counts): Add parameter to gcov_read_counter call.
	(get_histogram_counts): Support profile merging hooks.
	(instrument_values, compute_value_histograms): Place same value
	histograms into own section.
	(branch_prob): Call allocate_reg_info after find_values_to_profile.
	(init_branch_prob): Create same_value_histograms_label.
	(label_for_tag): Return the label.
	* profile.h (MAX_COUNTER_SECTIONS): Increase.

Fri Feb 21 13:38:57 CET 2003  Jan Hubicka  <jh@suse.cz>

	* builtins.c (expand_builtin_expect):  Do not predict
	flag_guess_branch_prob is not set.
	* c-semantics.c (expand_stmt): Likewise.
	* predict.c (predict_insn): Likewise.
	* stmt.c (expand_continue_loop): Likewise.
	* toplev.c (rest_of_compilation): Do not call
	note_prediction_to_br_prob and note_prediction_to_br_prob
	when not optimizing.

	* basic-block.h (tidy_fallthru_edges): Kill.
	* cfgrtl.c (tidy_fallthru_edges): Kill.
	* cfgbuild.c (find_basic_blocks): Do not call tidy_fallthru_edges.
	* cfgcleanup.c (delete_unreachable_blocks): Likewise.

2003-02-21  Josef Zlomek  <zlomekj@suse.cz>

	* config/i386/i386.md: Use gen_lowpart instead of gen_rtx_REG for
	copying a register.

2003-02-20  Josef Zlomek  <zlomekj@suse.cz>

	* dwarf2out.c (dwarf2out_var_location): Do not emit unnecessary labels.

2003-02-20  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (note_insn_var_location_emit): When variable is not
	complete emit note with NULL_RTX in the location part, coding style.
	* dwarf2out.c (struct var_loc_list_def): New structure.
	(decl_loc_table): Changed to be an array of var_loc_list.
	(lookup_decl_loc): Now returns var_loc_list *.
	(add_var_loc_to_decl): Use direct pointer to the last node for adding
	a node to the end of list.
	(add_location_or_const_value_attribute): Do not add the empty
	locations to loc list, finish the range of variable location instead.
	(dwarf2out_init): Coding style.

2003-02-19  Daniel Berlin  <dberlin@dberlin.org>
	
	* dwarf2out.c (output_die): Use dw2_asm_output_offset,
	not dw2_asm_output_delta, for location list labels.

2003-02-19  Josef Zlomek  <zlomekj@suse.cz>

	* dwarf2out.c: Fix coding style on some places.

2003-02-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gcse.c (gcse_main): Do not call store motion.
	* toplev.c (rest_of_compilation): Call it after loop optimizer
	instead.
	* gcse-pre.c (pre_insert_copy_insn, update_ld_motion_stores):
	Prevent sharing in rtl.
	(simple_mem): Enable load motion of more complex MEMs.
	* gcse-store.c (store_motion): Add debug dump.
	* gcse-utils.c (mems_conflict_for_gcse_p): Take alias classes in
	account.

2003-02-19  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (note_insn_var_location_emit): Detect incomplete
	variables.
	(emit_note_if_var_changed): Moved protection agains emitting empty
	location parts to note_insn_var_location_emit.

2003-02-19  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (track_expr_p): Do not track BLKmode memory.

2003-02-14  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gcse-store.c (build_store_vectors): Fix.

2003-02-14  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* dbxout.c (xcoff_debug_hooks): Initialize var location hook.

2003-02-14  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gcse-globals.h (struct ls_expr): New pattern_regs field.
	* gcse-store.c (store_killed_after, store_killed_before,
	store_ops_ok): Improve speed.
	(extract_mentioned_regs, extract_mentioned_regs_helper): New.
	(find_moveable_store): Do not consider MEMS mentioning stack pointer.
	* gcse-utils.c (ldst_entry): Initialize pattern_regs field.

2003-02-13  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gcse-globals.h (struct store_global): Change type of regvec
	field, new current_insn field.
	* gcse-store.c (reg_set_info, store_ops_ok, find_moveable_store,
	store_killed_after, store_killed_before, compute_store_table,
	build_store_vectors, insert_store, store_motion): Modified.
	* gcse.c (gcse_main): Enable store motion.

Wed Feb 12 17:35:55 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (rtlopt-merge-20030212)

2003-02-10  Josef Zlomek  <zlomekj@suse.cz>

	(Merge from mainline:)
	* bb-reorder.c: Use array of structures instead of several arrays.

Sat Feb  8 20:33:41 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (rtlopt-merge-20030208)

2003-02-07  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (get_decl_and_offset): Remove abort().
	(insert_function_parameters): Likewise.

2003-02-06  Josef Zlomek  <zlomekj@suse.cz>

	* Makefile.in (var-tracking.o): Add dependency to insn-config.h
	and reload.h, remove dependency on hard-reg-set.h.
	* var-tracking.c (get_decl_and_offset): New function.
	(insert_function_parameters): New function.
	(hybrid_search): Make union with OUT set of ENTRY_BLOCK too.
	(var_tracking_initialize): Initialize the IN and OUT sets of
	ENTRY_BLOCK too, insert function parameters to IN and OUT set of
	ENTRY_BLOCK.
	(var_tracking_finalize): Destroy the IN and OUT sets of ENTRY_BLOCK.

2003-02-06  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (var_tracking_emit_notes): Add variables from
	mem_in set for basic block bb in front of bb.

Thu Feb  6 12:31:34 CET 2003  Jan Hubicka  <jh@suse.cz>

	* regrename.c (do_replace, find_oldest_value_reg,
	copyprop_hardreg_forward_1): Update register attributes.

2003-02-05  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (MEM_HASH_VAL): Argument is DECL, not MEM.
	(VARIABLE_HASH_VAL): Added parenthesis around decl.
	(attrs_htab_insert): Added decl and offset arguments.
	(attrs_htab_delete): Use decl and offset instead of mem in arguments.
	(process_bb_delete): Likewise.
	(mem_htab_hash, mem_htab_eq, attrs_htab_different_1,
	attrs_htab_copy_1, attrs_htab_union_1): Argument of hash function is
	decl.
	(compute_bb_dataflow): Use appropriate parameters of
	attrs_htab_insert and attrs_htab_delete.
	(process_bb): Likewise.
	(dump_attrs_list): Display the variable as name+offset.

2003-02-05  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c: More detailed overall comment.

2003-02-04  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* tracer.c (tracer): Do not call cfg_cleanup unnecesarily.

2003-02-03  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c: Updated comments.
	(dump_attrs_list): Do not dump list->decl.

2003-02-03  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (enum scan_operation): Deleted.
	(enum location_type): Changed names of fields to be less confusing.
	(struct scan_for_locations_data_def): Deleted.
	(scan_for_locations): Deleted function.
	(count_uses, count_stores, add_uses, add_stores): New function.
	(process_bb): Do not delete_location_part if decl == NULL.
	(var_tracking_initialize): Use note_uses and note_stores instead of
	for_each_bb, use insn instead of scan_for_locations_data data.

2003-02-02  Daniel Berlin  <dberlin@dberlin.org>

	* dwarf2out.c (output_loc_list): Location list terminators
	should be DWARF2_ADDR_SIZE long.
	Add comments.
	(add_var_loc_to_decl): Remove dead code, fix formatting.
 	(add_location_or_const_value_attribute): Add comments.
	(dwarf2out_var_location): Remove dead code.

2003-02-02  Josef Zlomek  <zlomekj@suse.cz>

	* Makefile.in (var-tracking.o): Added dependency on alloc-pool.h.
	* var-tracking.c: Fix some comments.
	(attrs_pool): New variable.
	(var_pool): New variable.
	(variable_htab_free): New function.
	(attrs_*_*): Use pool_alloc instead of xmalloc and pool_free instead of
	free.
	(set_location_part): Likewise.
	(var_tracking_initialize): Create alloc pools, del_f for variable_htab
	is variable_htab_free now.
	(var_tracking_finalize): Delete variable_htab and alloc pools.
	(variable_tracking_main): Remove debug dump.

2003-02-02  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c: Updated some comments and names.

2003-02-01  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c: Fix comment typos.

2003-01-28  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgbuild.c (find_basic_blocks): Update structure statistics.
	* cfgcleanup.c (cleanup_cfg): Ditto.
	* flow.c (life_analysis, update_life_info, calculate_global_regs_live):
	Ditto.
	* toplev.c (print_structure_statistics): New static function.
	(finalize): Call it.
	(structure_statistics, cfg_builds, cfg_cleanups,
	cfg_expensive_cleanups, liveness_builds, liveness_updates,
	liveness_global_updates, liveness_global_targetted_updates,
	liveness_update_failures, liveness_local_updates,
	liveness_local_targetted_updates): New variables.
	(lang_independent_options): Add -fstructures-report flag.
	* toplev.h (cfg_builds, cfg_cleanups, cfg_expensive_cleanups,
	liveness_builds, liveness_updates, liveness_global_updates,
	liveness_global_targetted_updates, liveness_update_failures,
	liveness_local_updates, liveness_local_targetted_updates): Declare. 

Tue Jan 28 19:43:42 CET 2003  Jan Hubicka  <jh@suse.cz>

	* pa.c (attr_length_millicode_call, attr_length_call): Do not crash
	when INSN_ADDRESSES are not computed.

2003-01-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* flow.c (MAX_LIVENESS_ROUNDS): New.
	(calculate_global_regs_live): Guarantee that liveness updating
	will terminate.
	(update_life_info_in_dirty_blocks): Remove hack that masked the bug.

2003-01-27  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (track_expr_p): Variable rtx renamed to decl_rtl
	because its original name caused some problems.

2003-01-26  Josef Zlomek  <zlomekj@suse.cz>

	* predict.c (real_inv_br_prob_base): New variable.
	(propagate_freq): Use multiply by reciprocal instead of
	division.  Don't divide by 1.0 at all.
	(estimate_bb_frequencies): Likewise.

2003-01-26  Josef Zlomek  <zlomekj@suse.cz>

	* toplev.c (rest_of_compilation): Run variable tracking (only) if
	flag_var_tracking != 0.
	(parse_options_and_default_flags): do not set flag_var_tracking
	when optimize >= 1.
	(process_options): If user has not specified flag_var_tracking
	set it according to optimize, debug_info_level and debug_hooks.

Sat Jan 25 12:42:13 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (rtlopt-merge-20030125 tag)

2003-01-25  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (DEBUG_REG_LOC): Deleted.
	(DEBUG_MEM_LOC): Deleted.
	(DEBUG_LENGTH): Deleted.
	(attrs_list_copy): Deleted debug message.
	(attrs_htab_copy_1): Deleted debug message.
	(compute_bb_dataflow): Deleted debug messages.

2003-01-24  Josef Zlomek  <zlomekj@suse.cz>

	Daniel Berlin <dberlin@dberlin.org>
	* debug.h, dbxout.c, debug.c, dwarf2out.c, dwarfout.c, sdbout.c,
	vmsdbgout.c (struct gcc_debug_hooks): Added var_location debug hook.
	* final.c (final_scan_insn): Call var_location debug hook for each
	NOTE_INSN_VAR_LOCATION.
	* dwarf2out.c (struct gcc_debug_hooks): Call dwarf2out_begin_function
	on the beginning of function.
	(dwarf2out_begin_function): New function.
	(dwarf2out_var_location): New function.
	(struct var_loc_node): New structure.
	(loclabel_num): New variable.
	(decl_loc_table): New variable.
	(decl_loc_table_allocated): New variable.
	(decl_loc_table_in_use): New variable.
	(DECL_LOC_TABLE_INCREMENT): New macro.
	(lookup_decl_loc): New function.
	(add_var_loc_to_decl): New function.
	(output_loc_list): Inverted compare of curr->section and ".text".
	(output_loc_list): Output absolute addresses when
	separate_line_info_table_in_use.
	(mem_loc_descriptor): Added case LO_SUM and debug text for default.
	(loc_descriptor): Return if rtl == NULL.
	(loc_descriptor): Create loc descriptor.
	(add_location_or_const_value_attribute): Add loc descriptor to location
	list.
	(dwarf2out_init): Create decl_loc_table.

2003-01-24  Josef Zlomek  <zlomekj@suse.cz>

	* gcse-cprop.c (constprop_register): Check NEXT_INSN (insn) != NULL.

2003-01-24  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (MEM_HASH_VAL): Change hash function.

Thu Jan 23 22:26:36 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (rtlopt-merge-20020123)

2003-01-23  Josef Zlomek  <zlomekj@suse.cz>

	* bb-reorder.c: Remove whitespaces on the end of lines.

2003-01-23  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* toplev.c (rest_of_compilation): Do not construct loop datastructure
	if not needed.

2003-01-22  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (track_expr_p): VAR_DECL or PARM_DECL should be
	tracked.

2003-01-21  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (VARIABLE_P): Replaced by ...
	(track_expr_p): ... this.
	(scan_for_locations, compute_bb_dataflow, process_bb): Use
	track_expr_p instead of VARIABLE_P.
	(set_location_part): Abort if there are many location parts.

2003-01-21  Josef Zlomek  <zlomekj@suse.cz>

	* sreal.c (sreal_mul): Remove superfluous rounding.

2003-01-16  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (IN_OUT_SIZE): Deleted.
	(MEMORY_VAR): Deleted.
	(struct var_tracking_info_def): Add new fields (hash tables).
	(VARIABLE_P): New test for DECL_NAME.
	(attrs_list_member_alias): Delete.
	(attrs_list_delete_alias): Delete.
	(attrs_list_different_alias): Delete.
	(MEM_HASH_VAL): New macro.
	(mem_htab_hash): New function.
	(mem_htab_eq): New function.
	(attrs_list_union): New function.
	(attrs_htab_insert): New function.
	(attrs_htab_delete): New function.
	(attrs_htab_different_1): New function.
	(attrs_htab_different): New function.
	(attrs_htab_copy_1): New function.
	(attrs_htab_copy): New function.
	(attrs_htab_union_1): New function.
	(attrs_htab_union): New function.
	(attrs_htab_clear): New function.
	(attrs_htab_cleanup): New function.
	(dump_attrs_list): New function.
	(dump_mem_attrs_list): New function.
	(process_bb_delete): New function.
	(mark_variables_for_deletion): New function.
	(add_and_unmark_variables): New function.
	(scan_for_locations): Scan SET_SRC before SET_DEST.
	(*): Use hash tables from MEMs.

2003-01-16  Josef Zlomek  <zlomekj@suse.cz>

	* bb-reorder.c (copy_bb_p): Fix prototype and function header.

2003-01-16  Josef Zlomek  <zlomekj@suse.cz>

	* Makefile.in (bb-reorder.o): Fix dependencies.
	* bb-reorder.c: Remove superfluous #includes.

2003-01-16  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloop.c (flow_loops_find): Fix handling of abnormal edges.

2003-01-15  Josef Zlomek  <zlomekj@suse.cz>

	* bb-reorder.c (bb_to_key): Priority of the basic block is computed
	in a better way.

2003-01-15  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (attrs_list_delete): Code cleanup.
	(attrs_list_delete_alias): Likewise.

2003-01-14  Josef Zlomek  <zlomekj@suse.cz>

	* var-tracking.c (VARIABLE_P): New macro.
	(scan_for_locations): Check whether the MEM_EXPR's TREE_CODE
	is VAR_DECL or PARM_DECL.
	(compute_bb_dataflow): Likewise.
	(process_bb): Likewise.

2003-01-14  Josef Zlomek  <zlomekj@suse.cz>

	(Variable tracking was updated from cfg-branch:)
	* Makefile.in (var-tracking.o): New.
	* flags.h (flag_var_tracking): New flag.
	* final.c (final_scan_insn): NOTE_INSN_VAR_LOCATION was added.
	* gengtype.c (adjust_field_rtx_def): Likewise.
	* print-rtl.c (print_rtx): Likewise.
	* rtl.c (note_insn_name): Likewise.
	* rtl.def (VAR_LOCATION): New.
	* rtl.h (NOTE_VAR_LOCATION): New.
	(NOTE_VAR_LOCATION_DECL): New.
	(NOTE_VAR_LOCATION_LOC): New.
	(insn_note): NOTE_INSN_VAR_LOCATION was added.
	(variable_tracking_main): New exported function.
	* timevar.def (TV_VAR_TRACKING): New.
	* toplev.c (DFI_vartrack): New.
	(dump_file): "vartrack" was added (-dV).
	(flag_var_tracking): New.
	(f_options): "var-tracking" was added.
	(rest_of_compilation): Run variable tracking.
	(parse_options_and_default_flags): Variable tarcking is enabled by
	default when compiling with optimize >= 1.
	* var-tracking.c: New file.

Sun Jan 12 13:01:31 CET 2003  Josef Zlomek <zlomekj@suse.cz>

	* predict.c (propagate_freq): Do not divide by 1.
	(estimate_bb_frequencies): Avoid some division.

Sat Jan 11 18:06:12 CET 2003  Jan Hubicka   <jh@suse.cz>

	* undo accidental commit of callgraph code.

2003-01-11  Andreas Jaeger  <aj@suse.de>

	* Makefile.in (callgraph.o): New.

Sat Jan 11 16:14:10 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (rtlopt-merge-20031101 tag).

Thu Jan  9 16:28:48 CET 2003  Josef Zlomek <zlomekj@suse.cz>

	* Makefile.in (sreal.o): Added.
	(predict.o): Depends on sreal.h instead of real.h.
	* sreal.c: New file.
	* sreal.h: New file.
	* predict.c: Use sreal.c instead of real.c.

Wed Jan  8 14:19:50 CET 2003  Josef Zlomek <zlomj9am@artax.karlin.mff.cuni.cz>

	* basic-block.h: Include hard-reg-set.h.

Wed Jan  8 10:57:13 CET 2003  Josef Zlomek <zlomj9am@artax.karlin.mff.cuni.cz>

	* Makefile.in (PARTITION_H): New.
	(BASIC_BLOCK_H): Added dependencies to PARTITION_H and hard-reg-set.h.

2003-01-04  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopmanip.c (duplicate_loop_to_header_edge): Fix warning.
	* loop-unroll.c (decide_unroll_constant_iterations): Fix warning.

Sat Jan  4 19:43:08 CET 2003  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (rtlopt-merge-20030401 tag).

Fri Jan  3 15:27:04 CET 2003  Jan Hubicka  <jh@suse.cz>

	* athlon.md (athlon_ssecmp*): Handle ssecomi as well.
	* i386.md (type attribute): Add ssecomi.
	(unit, memory, prefix attributes): Handle ssecomi.
	(cvt?2? patterns): Fix athlon_decode attribute
	(comi patterns): Set attribute to ssecomi.

Thu Jan  2 20:41:23 CET 2003  Jan Hubicka  <jh@suse.cz>

	* i386.md (*mul*): FIx constraints; remove confused comment; fix
	athlon_decode attributes
	(imul/k8 optimization peep2s): New.

Thu Jan  2 20:18:46 CET 2003  Josef Zlomek <zlomekj@suse.cz>

	* bb-reorder.c (copy_bb_p): Parameter code_may_grow was added.
	(rotate_loop): Avoid uncond jump to cond jump.
	(find_traces_1_round): copy_bb_p has one more parameter.
	(connect_traces): Likewise.
	(copy_bb): Allow inserting a block into a trace.

Wed Jan  1 19:30:11 CET 2003  Jan Hubicka  <jh@suse.cz>
	
	* toplev.c (rest_of_compilation):  Do trace scheduling in pre-reload
	too.
Wed Jan  1 18:18:15 CET 2003  Jan Hubicka  <jh@suse.cz>

	* regrename.c (regrename_optimize): Initialize best_reg to reg;
	increment tick first; set tick even if replacement failed.

Tue Dec 31 17:26:13 CET 2002  Jan Hubicka  <jh@suse.cz>

	* cfgcleanup.c (try_crossjump_to_edge):  Remove bohus clobbers.

Tue Dec 31 12:45:41 CET 2002  Jan Hubicka  <jh@suse.cz>

	* sched-ebb.c (rank):  Use frequencies.

Tue Dec 31 00:39:16 CET 2002  Jan Hubicka  <jh@suse.cz>

	* cse.c (cse_set_around_loop): Do not rely on dead code removal to kill
	the dead set.

Mon Dec 30 21:39:48 CET 2002  Jan Hubicka  <jh@suse.cz>

	* cfgrtl.c (verify_flow_info):  Use control_flow_insn_p.
	* reload1.c (fixup_abnormal_edges):  Split basic blocks when EH edges
	possibly got duplicated.

Mon Dec 30 14:35:14 CET 2002  Josef Zlomek <zlomekj@suse.cz>

	* bb-reorder.c (connect_traces): Get rid of warning.

Sun Dec 29 11:20:31 CET 2002  Jan Hubicka  <jh@suse.cz>

	* athlon.md: Reorganize to match reality better.
	* i386.c  (ix86_issue_rate): Set to 6 for Athlon and K8.
	(ix86_sched_init): Issue the initialization insn.
	(ia32_multipass_dfa_lookahead): Set to 6 for athlon/k8.
	* i386.md (type attribute): add ssecomi and initpipe
	(initpipe): New insn.
	(comi patterns): Update type.

Sat Dec 28 16:59:04 CET 2002  Jan Hubicka  <jh@suse.cz>

	* genautomata.c: Merge from itanium branch.

	* toplev.c: Enable value profile transformations by default.

2002-12-28  Andreas Jaeger  <aj@suse.de>

	* Makefile.in (vpt.o, cfgloop.o, cfgloopanal.o, cfgloopmanip.o,
	loop-unswitch.o, loop-unroll.o, lists.o, tracer.o, web.o): Add
	dependency on tm.h.

Fri Dec 27 22:59:18 CET 2002  Jan Hubicka  <jh@suse.cz>

	* vpt.c (gen_divmod_fixed_value,  gen_mod_pow2, gen_mod_subtract):
	Set probability of the new jump.

Mon Dec 23 19:39:34 CET 2002  Jan Hubicka  <jh@suse.cz>

	* toplev.c (rest_of_compilation): Form superblocks just before the scheduling.

Mon Dec 23 14:56:07 CET 2002  Jan Hubicka  <jh@suse.cz>

	* emit-rtl.c (reg_attrs_htab): New static variable.
	(reg_attrs_htab_hash, reg_attrs_htab_eq, get_reg_attrs): New static
	functions.
	(reg_rtx): Do not maintain regno_decl.
	(gen_rtx_REG_offset, set_reg_attrs_from_mem, set_delc_rtx,
	set_mem_attrs_from_reg): New global function.
	(init_emit): Do not initialize regno_decl.
	(init_emit_once): initialize reg_attrs_htab.
	* final.c (alter_subreg): Do not replace REG by SUBREG.
	(gen_mem_expr_from_op): Improve output.
	(output_asm_operands): Likewise.
	* function.c (assign_params): Do not set REGNO_DECL.
	* function.h (struct function): Kill regno_decl.
	(REGNO_DECL): Kill.
	* gengtype.c (adjust_field_rtx_def): Handle new field of reg.
	* print_rtl.c (print_rtx): Output REG information.
	* regclass.c (reg_scan_mark_refs): Update attrs.
	* reload1.c (alter_reg): Likewise.
	* simplify_rtx.c (simplify_subreg): Likewise.
	* stmt.c (expand_decl): Likewise.
	* rtl.def (REG): Add new field.
	* rtl.h (struct reg_attrs): New.
	(rtunion_def): At rtreg.
	(X0MEMATTR): Add checking.
	(X0REGATTR, REG_ATTRS, REG_EXPR, REG_OFFSET): New macro.
	(set_reg_attrs_from_mem, set_mem_attrs_from_reg, gen_rtx_REG_offset):
	Declare.
	* tree.h (SET_DECL_RTL): Call set_decl_rtl.

Mon Dec 23 14:52:17 CET 2002  Jan Hubicka  <jh@suse.cz>

	* athlon.md (athlon_idiv, athlon_idiv_mem, athlon_str):  Revisit.

Sun Dec 22 18:29:20 CET 2002  Jan Hubicka  <jh@suse.cz>

	* basic-block.h (inside_basic_block_p, control_flow_insn_p): Declare.
	* cfgbuild.c (inside_basic_block_p, control_flow_insn_p): Make global.
	* invoke.texi (-fschedule-traces, -fschedule-superblocks): Document
	* flags.h (flag_superblock_scheduling, flag_trace_scheduling): Declare.
	* haifa-sched.c (unlink_other_notes): Unlink basic block notes.
	* params.def (tracer-min-branch-probability-feedback): Fix default value.
	* schedule-ebbs.c (params.h, profile.h): Include.
	(schedule_ebb): Return last basic block in the sequence.
	(fix_basic_block_boundaries, add_missing_blocks): New static functions.
	(schedule_ebbs): Use TRACER_MIN_BRANCH_PROBABILITY to discover traces;
	Use CFG for profile information.
	* flags.c (flag_superblock_scheduling, flag_trace_scheduling): New global
	variables.
	(lang_independent_options): Add -fschedule-superblocks, -fschedule-traces.
	(rest_of_compilation): Suppress crossjumping when trace scheduling is on;
	invoke superblock scheduling when asked for.
	(parse_options_and_default_flags):  Default to superblock scheduling for -O2
	and trace scheduling for -O3.
	(process_options): Imply tracer and superblock scheduling by trace scheduling.
	Imply 2nd scheduler pass by superblock scheduling.

	* params.def (tracer-min-branch-probability-feedback): Fix default.

	* final.c (compute_alignments): Use profile to avoid code bloat.

2002-12-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloop.h: Spellcheck.
	* cfgloopanal.c: Spellcheck.
	* cfgloopmanip.c: Spellcheck.
	* loop-init.c: Spellcheck.
	* loop-unswitch.c: Spellcheck.

Tue Dec 17 23:37:38 CET 2002  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (rtlopt-merge-20021712)

2002-12-17  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-unroll.c (decide_unroll_stupid): Limit unrolling to powers
	of 2.

2002-12-16  Josef Zlomek  <zlomj9am@artax.karlin.mff.cuni.cz>

	* bb-reorder.c (bb_to_key): Fix accessing index -1 of array.
	(connect_traces): Fix several bugs.

2002-12-15  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* invoke.texi (-funroll-loops, -funroll-all-loops, -fpeel-loops,
	-funswitch-loops, -fold-unroll-loops, -fold-unroll-all-loops):
	Document.
	* passes.texi (loop-init.c, loop-unroll.c, loop-unswitch.c,
	cfgloopanal.c, cfgloopmanip.c): Document.

Sun Dec 15 18:22:59 CET 2002  Josef Zlomek <zlomj9am@artax.karlin.mff.cuni.cz>

	* bb-reorder.c: Update comments, fix coding style.

Sun Dec 15 11:21:59 CET 2002  Josef Zlomek <zlomj9am@artax.karlin.mff.cuni.cz>

	* Makefile.in (bb-reorder.o): Remove redundancy.

Sun Dec 14 15:25:57 CET 2002  Jan Hubicka  <jh@suse.cz>

	* Merge from BIB (rtlopt-merge-20021412)

Sat Dec 14 14:50:52 CET 2002  Jan Hubicka  <jh@suse.cz>

	* Makefile.in (web.o): New.
	* web.c: New file.
	* rtl.h (web_main): Declare.
	* timervar.def (TV_WEB): New.
	* toplev.c (dump_file_index, dump_file_info): Add DFI_web.
	(flag_web): New static variable.
	(lang_independent_options): Add "web".
	(rest_of_compilation): Call web_main.
	(parse_options_and_default_flags): Add flag_web.
	* invoke.texi (-fweb): Document.

2002-12-11  Josef Zlomek  <zlomj9am@artax.karlin.mff.cuni.cz>

	* bb-reorder.c (find_traces_1_round): Do not duplicate loop
	header when there is another edge from loop latch.

2002-12-11  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopanal.c (average_num_loop_insns): Fix.

2002-12-10  Josef Zlomek  <zlomj9am@artax.karlin.mff.cuni.cz>

	* bb-reorder.c (GET_ARRAY_SIZE): Alloc array a bit larger.

	* bb-reorder.c (find_traces_1_round): Do not duplicate block
	that is its own successor.

	* Makefile.in (bb-reorder.o): Add dependencies.
	(tracer.o): Add dependencies.

2002-12-08  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Makefile.in (loop.o): Add cfgloop.h dependency.
	* cfgloop.h (struct loop): Add av_ninsns field.
	(average_num_loop_insns): Declare.
	* cfgloopanal.c (average_num_loop_insns): New function.
	* loop-unroll.c (decide_unrolling_and_peeling): Use it.
	(decide_unroll_constant_iterations, decide_unroll_runtime_iterations,
	decide_unroll_stupid): Use average number of executed insns to bound
	the number of unrollings.
	* params.def (PARAM_MAX_UNROLLED_INSNS): Changed default value.
	(PARAM_MAX_AVERAGE_UNROLLED_INSNS): New.

2002-12-08  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* basic-block.h (PROP_FINAL): Do not include PROP_LOG_LINKS.
	* cfgcleanup.c (cleanup_cfg): Do not update log links.
	* ra.c (reg_alloc): Do not create log links.
	* loop-init.c (loop_optimizer_init): Free rc_order and dfs_order here
	(loop_optimizer_finalize): ... instead of here.
	* profile.c (branch_prob): Always build loop datastructure.
	* toplev.c (rest_of_compilation): Build log links just before
	combine and regmove passes.

Sun Dec  8 15:25:57 CET 2002  Jan Hubicka  <jh@suse.cz>

	* Merge from BIB (rtlopt-merge-20020712)

2002-12-07  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopanal.c (mark_irreducible_loops): Fix.

Sat Dec  7 19:42:20 CET 2002  Josef Zlomek <zlomj9am@artax.karlin.mff.cuni.cz>

	* bb-reorder.c (array_size): New variable.
	(original_last_basic_block): Killed.
	(FREE, GET_ARRAY_SIZE): New macro.
	(find_traces_1_round): Copy loop header of few-iterating loop.
	(copy_bb): Grow the arrays (end_of_trace etc.) when needed.
	(connect_traces): Do not check the index since the array is large
	enough.
	(*): Use FREE, array_size instead of free, original_last_basic_block.

Sat Dec  7 15:17:02 CET 2002  Jan Hubicka  <jh@suse.cz>

	* cfglayout.c (cfg_layout_split_block): New function.
	* cfglayout.h (cfg_layout_split_block): Declare.
	* cfgloopmanip.c (create_preheader): Use it.

Fri Dec  6 00:30:57 CET 2002  Jan Hubicka  <jh@suse.cz>

	* cfgcleanup.c: Disable loop header hack.

Thu Dec  5 14:11:43 CET 2002  Josef Zlomek <zlomj9am@artax.karlin.mff.cuni.cz>

	* bb-reorder.c (N_CODEGROWING_ROUNDS): Deleted.
	(copy_bb_p): Removed parameter size_can_grow.

Wed Dec  4 20:35:20 CET 2002  Jan Hubicka  <jh@suse.cz>

	* alias.c (memory_modified_1): New static function.
	(memory_modified): New static varaible.
	(memory_modified_in_insn_p): New global function.
	* rtl.h (memory_modified_in_insn_p): Declare.
	* rtlanal.c (modified_between_p, modified_in_p): Be smart about memory
	references.

Wed Dec  4 17:34:01 CET 2002  Josef Zlomek <zlomj9am@artax.karlin.mff.cuni.cz>

	* bb-reorder.c (find_traces_1_round): update the keys also after
	terminating the trace.

	* bb-reorder.c (rotate_loop): New function.
	(find_traces_1_round): Better loop rotating.

Fri Nov 29 23:40:50 CET 2002  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (rtlopt-merge-20022911 tag)

2002-11-29  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopanal.c (simple_loop_p): Count desc->n_branches.
	* cfgloop.h (struct loop_desc): Add n_branches field.
	* loop-unroll.c (decide_peel_simple, decide_unroll_stupid): Do not
	unroll/peel loops containing branches.

Wed Nov 27 17:51:37 CET 2002  Josef Zlomek

	* bb-reorder.c (copy_bb_p): New debug message.

2002-11-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Makefile.in (loop-init.o): Add gcov-io.h dependency.
	* gcov-io.h (struct counter_section, struct counter_section_data): New.
	(struct function_info): n_arc_counts, n_loop_histogram_counters and
	n_value_histogram_counters fields merged into new n_counter_sections and
	counter_sections fields.
	(struct gcov_info): arc_counts, n_arc_counts, histogram_counts,
	n_histogram_counts, value_counts and n_value_counts merged into
	n_counter_sections and counter_sections fields.
	* libgcc2.c (gcov_exit, __gcov_flush): Rewritten to enable adding
	new section types.
	* loop-init.c: Include gcov-io.h.
	(loop_optimizer_init): Modified.
	* profile.c (struct function_list): count_edges, histogram_counters
	and value_counters merged to n_counter_sections and counter_sections
	fields.
	(set_purpose, label_for_tag, build_counter_section_fields,
	build_counter_section_value, build_counter_section_data_fields,
	build_counter_section_data_value, build_function_info_fields,
	build_function_info_value, build_gcov_info_fields,
	build_gcov_info_value, find_counters_section): New.
	(instrument_edges, instrument_loops, instrument_values,
	get_histogram_counts, compute_loop_histograms, compute_value_histograms,
	compute_branch_probabilities, branch_prob, create_profiler): Modified
	to enable adding new section types.
	* profile.h (MAX_COUNTER_SECTIONS): New.
	(struct section_info): New.
	(struct profile_info): count_instrumented_edges, count_histogram_counters,
	count_value_counters, count_edges_instrumented_now,
	count_histogram_counters_now, count_value_counters_now,
	have_loop_histograms, have_value_histograms fields merged into
	new n_sections and section_info fields.
	(find_counters_section): Declare.
	* vpt.c (insn_values_to_profile, gen_mod_subtract): Fix.

Tue Nov 26 16:17:15 CET 2002  Josef Zlomek <zlomj9am@artax.karlin.mff.cuni.cz>

	* bb-reorder.c (copy_bb_p): Code cleanup.

	* bb-reorder.c (struct trace): New item "length".
	(find_traces_1_round): compute the length of trace.
	(connect_traces): when probalities are same, prefer longer trace as
	the continuation.

Mon Nov 25 18:54:17 CET 2002  Josef Zlomek <zlomj9am@artax.karlin.mff.cuni.cz>

	* bb-reorder.c (find_traces_1_round): Fix debug prints.

Mon Nov 25 19:44:49 CET 2002  Jan Hubicka  <jh@suse.cz>

	Merge from mainline (rtlopt-merge-20022511 tag)

2002-11-23  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* vpt.c (find_values_to_profile): Move liveness analysis ...
	* toplev.c (rest_of_compilation): ... here.  Also do cleanup
	afterwards.

Sat Nov 23 02:24:39 CET 2002  Jan Hubicka  <jh@suse.cz>

	* bb-reorder.c (copy_bb_p): Limit expansion only to hot basic block;
	set thresold to 8 * uncond_jump_length.

Fri Nov 22 13:16:16 CET 2002  Jan Hubicka  <jh@suse.cz>

	* bb-reorder.c (connect_traces): Never connect something before trace 0.

Fri Nov 22 00:55:55 CET 2002  Josef Zlomek <zlomj9am@artax.karlin.mff.cuni.cz>

	* bb-reorder.c (make_reorder_chain): Deleted.
	(make_reorder_chain_1): Deleted.
	(find_traces): New function.
	(mark_bb_visited): New function.
	(find_traces_1_round): New function.
	(copy_bb): New function.
	(bb_to_key): New function.
	(better_edge_p): New function.
	(connect_traces): New function.
	(copy_bb_p): New function.
	(get_uncond_jump_length): New function.
	(reorder_basic_blocks): Use new functions (Software Trace Cache)

2002-11-21  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Makefile.in (vpt.o): New file.
	(toplev.o, profile.o): Add vpt.h dependecy.
	* vpt.h: New.
	* vpt.c: New.
	* combine.c (distribute_notes): Handle REG_VALUE_HISTOGRAM note.
	* flags.h (flag_value_histograms): Declare.
	* gcov-io.h (GCOV_TAG_VALUE_HISTOGRAMS): New.
	(struct function_info): Add n_value_histogram_counters field.
	(struct gcov_info): Add value_counts and n_value_counts fields.
	* libgcc2.c (gcov_exit, __gcov_flush): Write out value histograms.
	* profile.c: Include vpt.h.
	(struct function_list): Add value_counters field.
	(value_histograms_label): New.
	(gen_loop_profiler): Deleted.
	(gen_interval_profiler, gen_range_profiler, gen_pow2_profiler,
	gen_one_value_profiler): New.
	(get_histogram_counts, instrument_loops, compute_loop_histograms,
	init_branch_prob): Modified.
	(index_counts_file): Fix mistakes.
	(instrument_values, compute_value_histograms): New.
	(branch_prob): Call them.
	(create_profiler): Emit requiered structures.
	* profile.h (struct profile_info): Add count_value_counters,
	count_value_counters_now and have_value_histograms fields.
	* rtl.c (reg_note_name): Add REG_VALUE_HISTOGRAM.
	* rtl.h (enum reg_note): Ditto.
	* toplev.c: Include vpt.h.
	(enum dump_file_index, dump_file): Add vpt dump file.
	(flag_value_histograms, flag_value_profile_transformations): New.
	(lang_independent_options): Add them.
	(rest_of_compilation): Add vpt pass.

Sat Nov 16 18:14:05 CET 2002  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline (rtlopt-merge-20021611)

2002-11-10  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* params.def (HISTOGRAM_PEEL_RATIO): Fix typo.

2002-11-10  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-unroll.c (decide_unrolling_and_peeling): Fix.

2002-11-10  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* profile.c (gen_loop_profiler): Fix.

2002-11-10  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-unroll.c (decide_unroll_constant_iterations,
	decide_unroll_runtime_iterations, decide_peel_simple,
	decide_unroll_stupid): Fix.

2002-11-09  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloop.c (flow_loop_dump, flow_loops_free, flow_loop_exit_edges_find,
	get_loop_body, cancel_loop, verify_loop_structure, add_histogram):
	Use unsigned variables where appropriate.
	* cfgloopanal.c (simple_loop_p, mark_irreducible_loops,
	num_loop_insns, expected_loop_iterations): Ditto.
	* cfgloopmanip.c (record_exit_edges, duplicate_loop_to_header_edge,
	loopify, fix_loop_placement, can_duplicate_loop_p, create_preheaders,
	force_single_succ_latches): Ditto.
	* loop-unswitch.c (may_unswitch_on_p, unswitch_single_loop): Ditto.
	* predict.c (estimate_probability, estimate_loops_at_level): Ditto.
	* profile.c (instrument_loops, compute_loop_histograms): Ditto.
	* loop-unroll.c (unroll_or_peel_loop): Removed.
	(peel_loop_simple, peel_loop_completely, unroll_loop_stupid,
	unroll_loop_constant_iterations, unroll_loop_runtime_iterations,
	unroll_and_peel_loops): Modified.
	(peel_loops_completely, decide_unrolling_and_peeling,
	decide_peel_simple, decide_peel_once_rolling, decide_peel_completely,
	decide_unroll_stupid, decide_unroll_constant_iterations,
	decide_unroll_runtime_iterations): New.
	* cfgloop.h (enum lpt_dec, struct lpt_decision): New.
	(struct loop): Add lpt_decision, simple, desc, has_desc and ninsns
	fields.
	(expected_loop_iterations, duplicate_loop_to_header_edge): Declaration
	changed.
	(UAP_PEEL_COMPLETELY, UAP_PEEL_ONCE_ROLLING): Removed.

2002-11-08  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Makefile.in (profile.o): Add hashtab.h, cfgloop.h and params.h
	dependency.
	(cfgloop.o): Add flags.h dependency.
	(loop-init.o): Add profile.h dependency.
	* basic_block.h (struct edge_def): Add loop_histogram field.
	(dfs_enumerate_from): Moved from cfgloop.h.
	* cfg.c (dump_edge_info): Dump info about histograms.
	* cfgcleanup.c (try_simplify_condjump, try_forward_edges, merge_blocks):
	Keep histograms alive.
	* cfglayout.c (cleanup_unconditional_jumps, cfg_layout_duplicate_bb):
	Keep histograms alive.
	* cfgloop.c: Include flags.h
	(flow_loop_dump): Dump histograms.
	(flow_loop_free): Free histogram.
	(redirect_edge_with_latch_update, make_forwarder_block): Keep histograms
	alive.
	(flow_loops_find): Modified.
	(verify_loop_structure): Removed argument flags (use loops->state instead).
	Verify loop histograms.
	(move_histograms_to_loops, copy_histogram, add_histogram, free_histogram):
	New functions.
	(loop_latch_edge, loop_preheader_edge): Declare parameter as const.
	* cfgloop.h (struct loop): Add histogram field.
	(struct loop_histogram): New.
	(LOOPS_HAVE_PREHEADERS, LOOPS_HAVE_SIMPLE_LATCHES,
	LOOPS_HAVE_MARKED_IRREDUCIBLE_REGIONS, LOOPS_HAVE_HISTOGRAMS_ON_EDGES):
	New flags for loops->state.
	(struct loops): Add state field.
	(VLS_EXPECT_PREHEADERS, VLS_EXPECT_SIMPLE_LATCHES,
	VLS_EXPECT_MARKED_IRREDUCIBLE_LOOPS, VLS_FOR_LOOP): Removed.
	(dfs_enumerate_from): Declaration moved to basic_block.h.
	(loop_preheader_edge, loop_latch_edge, verify_loop_structure): Declaration
	changed.
	(move_histograms_to_loops, loop_histogram, add_histogram, free_histogram):
	Declare.
	(DLTHE_PROB_UPDATING, DLTHE_USE_HISTOGRAM_PROB, DLTHE_USE_WONT_EXIT):
	New flags.
	(DLTHE_FLAG_ALL): Removed.
	* cfgloopanal.c (mark_irreducible_loops): Set loops->state.
	* cfgloopmanip.c (duplicate_loop, duplicate_subloops, copy_loops_to):
	Update histograms.
	(scale_loop_histograms): New.
	(duplicate_loop_to_header_edge): Use histograms for updating counts.
	(create_preheader): Update loop information correctly.
	(create_preheaders, force_single_succ_latches): Set loops->state.
	(loop_split_edge_with): Keep histograms alive.
	* cfgrtl.c (merge_blocks_nomove): Keep histograms alive.
	* flags.h (flag_loop_histograms): Declare.
	* gcov-io.h (GCOV_TAG_LOOP_HISTOGRAMS, GCOV_SUMMARY_LENGTH): New.
	(struct function_info): Add n_loop_histogram_counters field.
	(struct gcov_info): Add histogram_counts and n_histogram_counts fields.
	* libgcc2.c (gcov_exit, __gcov_flush): Write out histograms.
	* loop-init.c: Include profile.h.
	(loop_optimizer_init): Move histograms to loops.
	* loop-unroll.c (unroll_and_peel_loops): Modified.
	(peel_loop_completely, unroll_loop_constant_iterations,
	unroll_loop_constant_iterations, unroll_loop_runtime_iterations,
	peel_loop_simple, unroll_loop_stupid): Update/use histograms.
	(unroll_or_peel_loop): Use histograms to decide peeling.
	* loop-unswitch.c (unswitch_loops, unswitch_loop): Modified.
	* params.def (PARAM_HISTOGRAM_PEEL_RATIO): New.
	* profile.c: Include cfgloop.h, params.h and hashtab.h.
	(struct function_list): Add histogram_counters field.
	(loop_histograms_label): New.
	(gen_loop_profiler, instrument_loops, compute_loop_histograms,
	htab_counts_index_hash, htab_counts_index_eq, htab_counts_index_del,
	cleanup_counts_index, index_counts_file, get_histogram_counts): New.
	(get_exec_counts, instrument_edges, init_branch_prob,
	create_profiler): Modified.
	(branch_prob): Read loop histograms and add code to generate them.
	* profile.h (struct profile_info): Add count_histogram_counters,
	count_histogram_counters_now and have_loop_histograms fields.
	* toplev.c (flag_loop_histograms): New.
	* tracer.c (find_trace): Prevent loop peeling.
	* doc/invoke.texi: Document -floop-histograms.

2002-11-01  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopmanip.c (duplicate_loop_to_header_edge): Fix count &
	frequencies updating.
	* loop-unroll.c (unroll_loop_runtime_iterations): Fix edge
	probabilities.

2002-11-01  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-unroll.c (unroll_loop_runtime_iterations): New loop
	preconditioning.
	* params.def (PARAM_MAX_PEELED_INSNS,
	PARAM_MAX_COMPLETELY_PEELED_INSNS): Increase default parameter values.
	* toplev.c (dump_file): Sync with dump_file_index.

Fri Nov  1 01:10:33 CET 2002  Jan Hubicka  <jh@suse.cz>

	* toplev.c (rest_of_compilations):  Remove dead code after unrolling.

Wed Oct 30 23:33:53 CET 2002  Jan Hubicka  <jh@suse.cz>

	* i386.md (sse_loadss, sse_loadsd):  Canonicalize; add expander
	(movps, movpd splitters): Use canonical form.
	(movv2di): Fix merge problem.

Wed Oct 30 22:55:58 CET 2002  Jan Hubicka  <jh@suse.cz>

	Merge from mainline (rtlopt-merge-20023010)

2002-10-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopanal.c (count_loop_iterations): Undo my previous fix.
	* loop-unroll.c (unroll_loop_runtime_iterations): Better
	preconditioning for preincrement loops.

2002-10-27  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopanal.c (count_loop_iterations): Use stride instead of
	const1_rtx.
	* loop-unroll.c (unroll_loop_runtime_iterations): Revert the wrong
	fix, fix misleading comment.
	(unroll_or_peel_loop): Add debugging info.

Sat Oct 26 00:04:54 CEST 2002  Jan Hubicka  <jh@suse.cz>

	* loop-unroll.c (unroll_loop_runtime_iterations):  Compute edge probabilities properly.

Fri Oct 25 23:31:53 CEST 2002  Jan Hubicka  <jh@suse.cz>

	* loop-unroll.c (unroll_loop_runtime_iterations): Fix.

Wed Oct 23 17:30:54 CEST 2002  Jan Hubicka  <jh@suse.cz>

	* Mailine merge (rtlopt-merge-20022710 tag)

Wed Oct 23 16:46:38 CEST 2002  Jan Hubicka  <jh@suse.cz>

	* loop-unroll.c (unroll_or_peel_loop): Do complete unrolling
	when -funroll-loop is specified.

2002-10-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* cfgloopmanip.c (fix_bb_placement, fix_bb_placements): New.
	(remove_path): Use them.
	(record_exit_edges): Prototype changed.

2002-10-20  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* params.def (PARAM_MAX_COMPLETELY_PEEL_TIMES): Fix spelling typo
	in comment.

2002-10-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* loop-unroll.c (unroll_or_peel_loop): Modify loop peeling decision.
	* params.def (PARAM_MAX_COMPLETELY_PEELED_INSNS,
	PARAM_MAX_COMPLETELY_PEEL_TIMES, PARAM_MAX_ONCE_PEELED_INSNS): New.
	* cfgloop.h (UAP_UNROLL_ALL, UAP_PEEL_COMPLETELY,
	UAP_PEEL_ONCE_ROLLING): New.

2002-10-19  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* Makefile.in (cfgloopanal.o): New.
	(doloop.o, predict.o, toplev.o, loop.o, unroll.o, cfgloop.o): Include
	cfgloop.h
	* basic-block.h (loop, loops): Forward declare.
	(flow_loops_find, flow_loops_update, flow_loops_free, flow_loops_dump,
	flow_loop_dump, flow_loop_scan, flow_loop_tree_node_add,
	flow_loop_tree_node_remove, LOOP_*, flow_loop_outside_edge_p,
	flow_loop_nested_p, flow_bb_inside_loop_p, get_loop_body,
	dfs_enumerate_from, loop_preheader_edge, loop_latch_edge,
	add_bb_to_loop, remove_bb_from_loops, find_common_loop,
	verify_loop_structure, VLS_*): Move to ...
	(BB_IRREDUCIBLE): New flag.
	* cfgloop.h: ... here; new file;
	(struct loop_desc, simple_loop_p, count_iterations): Declare.
	* cfgloop.c: Include cfgloop.h
	* doloop.c: Likewise.
	* predict.c: Likewise.
	(estimate_probability): Predict number of iterations.
	* loop.c: Likewise.
	(strength_reduce): kill PRED_LOOP_ITERATIONS prediction
	* toplev.c: Include cfgloop.h
	* unroll.c: Likewise.
	* cfgloopanal.c: New file.

	* Makefile.in (cfgloopmanip.o): New.
	* cfglayout.c (cfg_layout_redirect_edge): Return exit status.
	(cfg_layout_duplicate_bb): Set copy field.
	* cfglayout.h (cfg_layout_redirect_edge): Declaration changed.
	(struct reorder_block_def): Added new fields.
	* cfgloop.c (cancel_loop, cancel_loop_tree): New functions.
	* cfgloop.h: Reformated.
	(struct loop): Added new field.
	(cancel_loop, cancel_loop_tree, can_duplicate_loop_p,
	duplicate_loop_to_header_edge, loopify, remove_path, split_loop_bb):
	Declare.
	* cfgloopmanip.c: New.

	* Makefile.in (loop-unswitch.o, loop-init.o): New.
	(cfglayout.o): Add dependency on cfgloop.h.
	(cfgloopmanip.o): Add dependency on output.h.
	* basic-block.h (BB_SUPERBLOCK): New flag.
	* cfglayout.h (cfg_layout_initialize): Declaration changed.
	* cfglayout.c (cfgloop.h): Include.
	(cleanup_unconditional_jumps, cfg_layout_initialize): Update loop data.
	(break_superblocks): New.
	(cfg_layout_finalize): Call it.
	* bb_reorder.c (reorder_basic_blocks): Add parameter to
	cfg_layout_initialize call.
	* cfgloop.c (verify_loop_structure): Add irreducible loop info
	verification.
	* cfgloop.h (VLS_EXPECR_PREHEADERS, VLS_EXPECT_SIMPLE_LATCHES):
	Merged to enum together with...
	(VLS_EXPECT_MARKED_IRREDUCIBLE_LOOPS, VLS_FOR_LOOP): New flags.
	(CP_SIMPLE_PREHEADERS, CP_INSIDE_CFGLAYOUT): New flags.
	(num_loop_insns, loop_split_edge_with, fix_loop_placement,
	create_preheaders, force_single_succ_latches, expected_loop_iterations,
	loop_optimizer_init, loop_optimizer_finalize, unswitch_loops): Declare.
	* cfgloopanal.c (num_loop_insns, expected_loop_iterations):
	New functions.
	* cfgloopmanip.c (output.h): Include.
	(fix_loop_placement): Declaration moved to cfgloop.h.
	(create_preheader, create_preheaders, force_sinle_succ_latches,
	loop_split_edge_with): New functions.
	* loop-init.c: New.
	* loop-unswitch: New.
	* params.def (PARAM_MAX_UNSWITCH_INSNS, PARAM_MAX_UNSWITCH_LEVEL): New.
	* toplev.c (DFI_loop2): New.
	(flag_unswitch_loops): New.
	(rest_of_compilation): Add loop unswitching pass.
	(parse_options_and_default_flags): Enable it at -O3.

	* Makefile.in (loop-unroll.o): New.
	* cfgloop.h (UAP_PEEL, UAP_UNROLL, UAP_UNROLL_ALL): New flags.
	(unroll_and_peel_loops): Declare.
	* loop-unroll.c: New.
	* params.def (PARAM_MAX_UNROLL_TIMES, PARAM_MAX_PEELED_INSNS,
	PARAM_MAX_PEEL_TIMES): New.
	* toplev.c (flag_old_unroll_loops, flag_old_unroll_all_loops): Used
	instead of ...
	(flag_unroll_loops, flag_unroll_all_loops): Used for new loop optimizer.
	(flag_peel_loops): New.
	(parse_options_and_default_flags): Turn them on with -O3.
	(process_options): Modified.
	(rest_of_compilation): Add unrolling/peeling pass.

2002-10-17  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

	* gcse.c: Solved conflicts from merge.

Wed Oct 16 17:33:27 CEST 2002  Jan Hubicka  <jh@suse.cz>

	* merge from mainline (rtlopt-merge-20021016)

2002-10-08  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>
	* gcse-globals.h: New.
	* gcse-utils.h: New.
	* gcse-classic.c: New.
	* gcse-hoist.c: New.
	* gcse-pre.c: New.
	* gcse-utils.c: New.
	* gcse-cprop.c: New.
	* gcse-null.c: New.
	* gcse-store.c: New.
	* toplev.c: Include gcse-globals.h.
	* Makefile.in: Modified to reflect the split.
	* rtl.h (gcse_main, delete_null_pointer_checks): Declaration moved to
	gcse-globals.h.
	* gcse.c (one_classic_gcse_pass, one_code_hoisting_pass,
	one_cprop_pass, one_pre_gcse_pass, store_motion, struct reg_use,
	struct expr, struct occr, struct hash_table, struct reg_avail_info,
	struct reg_set, struct reg_set_table, struct ls_expr,
	struct rd, struct ae, struct pre_global, struct classic_global,
	struct hoist_global, struct store_global, struct cprop_global,
	struct null_pointer_info, gcse_file, debug_stderr, gcse_obstack,
	uid_cuid, max_uid, max_cuid, cuid_insn, max_gcse_regno,
	reg_set_table, pre_ldst_mems, reg_set_bitmap, reg_set_in_block,
	modify_mem_list, modify_mem_list_set, canon_modify_mem_list,
	canon_modify_mem_list_set, bytes_used, gcse_subst_count,
	gcse_create_count, const_prop_count, copy_prop_count):
	Declarations moved to gcse-globals.h.
	(gmalloc, grealloc, gcse_alloc, compute_hash_table, alloc_hash_table,
	free_hash_table, dump_hash_table, lookup_expr, lookup_set,
	next_set, want_to_gcse_p, record_last_mem_set_info,
	compute_local_properties, reset_opr_set_tables, oprs_not_set_p,
	mark_oprs_set, clear_modify_mem_tables, free_modify_mem_tables,
	ldst_entry, free_ldst_mems, first_ls_expr, next_ls_expr,
	free_ldst_entry, print_ldst_list, find_rtx_in_ldst,
	enumerate_ldsts, alloc_reg_set_mem, free_reg_set_mem,
	record_one_set, record_set_info, gcse_emit_move_after,
	process_insert_insn, insert_insn_end_bb, insert_insn_start_bb,
	expr_equiv_p, expr_killed_p): Declarations moved to gcse-utils.h,
	definitions to gcse-utils.c.
	(compute_can_copy, oprs_unchanged_p, oprs_anticipatable_p,
	oprs_available_p, record_last_set_info, record_last_reg_set_info,
	hash_scan_insn, hash_scan_set, hash_scan_clobber, hash_scan_call,
	insert_expr_in_table, insert_set_in_table, hash_expr, hash_expr_1,
	hash_string_1, hash_set, compute_hash_table_work, canon_list_insert,
	mems_conflict_for_gcse_p, load_killed_in_block_p, compute_transp,
	mark_call, mark_set, mark_clobber, free_insn_expr_list_list,
	add_label_notes): Moved to gcse-utils.c.
	(alloc_rd_mem, free_rd_mem, handle_rd_kill_set, compute_kill_rd,
	compute_rd, alloc_avail_expr_mem, free_avail_expr_mem, compute_ae_gen,
	compute_ae_kill, expr_reaches_here_p_work, expr_reaches_here_p,
	computing_insn, def_reaches_here_p, can_disregard_other_sets,
	handle_avail_expr, classic_gcse, one_classic_gcse_pass): Moved to
	gcse-classic.c.
	(alloc_cprop_mem, free_cprop_mem, cprop_jump, cprop_insn,
	compute_cprop_data, find_used_regs, try_replace_reg, find_avail_set,
	constprop_register, find_bypass_set, bypass_block,
	bypass_conditional_jumps, do_local_cprop, adjust_libcall_notes,
	local_cprop_pass, cprop, one_cprop_pass): Moved to gcse-cprop.c
	(compute_transpout, alloc_code_hoist_mem, free_code_hoist_mem,
	compute_code_hoist_vbeinout, compute_code_hoist_data,
	hoist_expr_reaches_here_p, hoist_code, one_code_hoisting_pass):
	Moved to gcse-hoist.c.
	(alloc_pre_mem, free_pre_mem, compute_pre_data,
	pre_expr_reaches_here_p_work, pre_expr_reaches_here_p,
	pre_insert_copy_insn, pre_insert_copies, pre_delete, pre_edge_insert,
	simple_mem, invalidate_any_buried_refs, compute_ld_motion_mems,
	trim_ld_motion_mems, update_ld_motion_stores, pre_gcse,
	one_pre_gcse_pass): Moved to gcse-pre.c.
	(reg_set_info, store_ops_ok, find_moveable_store, compute_store_table,
	load_kills_store, find_loads, store_killed_in_insn, store_killed_after,
	store_killed_before, build_store_vectors, insert_store,
	replace_store_insn, delete_store, free_store_memory, store_motion):
	Moved to gcse-store.c.
	(get_bitmap_width, invalidate_nonnull_info,
	delete_null_pointer_checks_1, delete_null_pointer_checks): Moved to
	gcse-null.c.

2002-09-22  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>

        * gcse.c (run_jump_opt_after_gcse, can_copy_p, can_copy_init_p,
	current_bb): Removed, now passed locally.
	(expr_hash_table, set_hash_table, cprop_pavloc, cprop_absaltered,
	cprop_avin, cprop_avout, hoist_vbein, hoist_vbeout, hoist_exprs,
	dominators, regvec, st_antloc, num_stores): Removed, now passed
	locally in ...
	(struct pre_global, struct classic_global, struct hoist_global,
	struct store_global, struct cprop_global): New types.
	(rd_kill, rd_gen, reaching_defs, rd_out): Merged to ...
	(struct rd): new type, passed locally.
	(ae_kill, ae_gen, ae_in, ae_out): Merged to ...
	(struct ae): new type, passed locally.
	(reg_set_table, reg_set_table_size): Merged to ...
	(reg_set_table): New.
	(gcse_main, compute_can_copy, alloc_reg_set_mem, free_reg_set_mem,
	record_one_set, oprs_unchanged_p, oprs_anticipatable_p,
	oprs_available_p, hash_scan_set, hash_scan_insn,
	record_last_reg_set_info, record_last_reg_set_info,
	compute_hash_table_work, alloc_rd_mem, free_rd_mem,
	handle_rd_kill_set, compute_kill_rd, compute_rd,
	compute_ae_kill, expr_reaches_here_p_work, expr_reaches_here_p,
	computing_insn, def_reaches_here_p, can_disregard_other_sets,
	handle_avail_expr, classic_gcse, one_classic_gcse_pass,
	alloc_cprop_mem, free_cprop_mem, compute_transp, compute_cprop_data,
	find_used_regs, find_avail_set, cprop_jump, constprop_register,
	constprop_register, cprop_insn, do_local_cprop, local_cprop_pass,
	cprop, one_cprop_pass, find_bypass_set, bypass_block,
	bypass_conditional_jumps, compute_pre_data, pre_expr_reaches_here_p_work,
	pre_expr_reaches_here_p, insert_insn_end_bb, pre_edge_insert,
	pre_insert_copies, pre_delete, pre_gcse, one_pre_gcse_pass,
	compute_transpout, alloc_code_hoist_mem, free_code_hoist_mem,
	compute_code_hoist_vbeinout, compute_code_hoist_data,
	hoist_expr_reaches_here_p, hoist_code, one_code_hoisting_pass,
	trim_ld_motion_mems, reg_set_info, compute_store_table,
	build_store_vectors, insert_store, free_store_memory,
	store_motion): Modified due to removal of global variables.
	* stmt.c (expand_end_loop): Rotate loops.
	* config/i386/i386.c (x86_machine_dependent_reorg): Don't call
	k8_avoid_jump_misspredicts on athlon.
