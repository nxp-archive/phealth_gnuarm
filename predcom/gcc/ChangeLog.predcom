2006-06-15  Zdenek Dvorak <dvorakz@suse.cz>

	* tree-ssa-loop-niter.c (expand_simple_operations): Handle phi nodes with
	single argument.
	(stmt_dominates_stmt_p): Export.
	* tree-pretty-print.c (op_symbol_1): Renamed to ...
	(op_symbol_code): ... this.  Exported.
	(dump_omp_clause, op_symbol): Use op_symbol_code instead of
	op_symbol_1.
	* tree-predcom.c (typedef struct dref): Removed next field.  Added stmt
	field.
	(dref): Changed to pointer.
	(enum chain_type): Added CT_COMBINATION.
	(struct chain): Removed root and last fields.  Added fields for
	combinations, and refs and inits arrays.
	(dump_dref, dump_chain): Dump the changed structures.
	(dump_component, split_data_refs_to_components, suitable_component_p,
	order_drefs, add_ref_to_chain, make_invariant_chain, make_rooted_chain,
	make_rooted_chain, determine_roots_comp, execute_load_motion): Changed
	because dref is now pointer.
	(get_chain_root, get_init_expr, mark_virtual_ops_for_renaming): New
	functions.
	(release_chain): Free the drefs.
	(replace_ref_with): Do not take old reference as argument.
	(ref_at_iteration): Use expand_simple_operations.
	(initialize_root_vars, initialize_root): Do not create the
	initializers.  Handle combinations.
	(initialize_root_vars_lm): Do not create the initializers.
	(execute_pred_commoning_chain):  Handle combinations.
	(chain_can_be_combined_p, find_use_stmt, combinable_refs_p,
	stmt_combining_refs, combine_chains, try_combine_chains,
	prepare_initializers_chain, prepare_initializers): New functions.
	(tree_predictive_commoning_loop): Use prepare_initializers and
	try_combine_chains.
	* tree-flow.h (op_symbol_code, stmt_dominates_stmt_p): Declare.

2006-06-13  Zdenek Dvorak <dvorakz@suse.cz>

	* tree-predcom.c (struct dref): Split part to ...
	(struct chain): New.
	(enum chain_type): New.
	(struct component): Removed always_executed field.
	(dump_dref): Only dump the fields that stay in struct dref.
	(release_component): Do not free variables.
	(split_data_refs_to_components): Only handle fields of struct dref.
	(determine_roots_comp, determine_roots): Split components to chains.
	(replace_name_by_name): Removed.
	(replace_ref_with): Always create a new statement for initializing the
	temporary variable.
	(release_chain, release_chains, dump_chain, dump_chains,
	add_ref_to_chain, make_invariant_chain, make_rooted_chain,
	nontrivial_chain_p): New functions.
	(initialize_root, execute_load_motion, execute_pred_commoning):
	Work with chains instead of components.
	(execute_pred_commoning_comp): Renamed to ...
	(execute_pred_commoning_chain): ... this.  Work with chains instead of
	components.
	(tree_predictive_commoning_loop): Split components to chains and
	perform the transformations on chains.

2006-06-07  Zdenek Dvorak <dvorakz@suse.cz>

	* double-int.c (double_int_zext, double_int_sext): Fix.
	(double_int_div, double_int_sdiv, double_int_udiv): Return also
	remainder.
	* double-int.h (double_int_div, double_int_sdiv, double_int_udiv):
	Declaration changed.
	* tree-ssa-loop-ivopts.c: Include tree-affine.h.
	(aff_combination_const, aff_combination_elt, aff_combination_scale,
	aff_combination_add_elt, aff_combination_add, tree_to_aff_combination,
	add_elt_to_tree, unshare_aff_combination, aff_combination_to_tree):
	Moved to tree-affine.c.
	(get_computation_aff): Use tree-affine.h and double_ints.
	* tree-ssa-address.c: Include tree-affine.h.
	(add_to_parts, most_expensive_mult_to_index, addr_to_parts,
	create_mem_ref): Use tree-affine.h and double_ints.
	* tree-data-ref.c (get_ptr_tag): New function.
	(ptr_decl_may_alias_p, ptr_ptr_may_alias_p, object_analysis): Use
	get_ptr_tag.  Handle subvars.
	(find_data_references_in_loop): Handle simple var references correctly.
	* tree-affine.c: New file.
	* tree-affine.h: New file.
	* tree-predcom.c: Include tree-affine.h.
	(struct dref): Change offset to double_int.
	(struct component): Add always_executed field.
	(dump_dref, determine_offset, suitable_component_p, order_drefs,
	determine_roots_comp, ref_at_iteration): Use tree-affine and double_int.
	(last_always_executed_block, replace_name_by_name): New functions.
	(split_data_refs_to_components): Determine references that are always
	executed.
	(replace_ref_with): Use replace_name_by_name.
	(initialize_root_vars): Do not handle load motion variables
	initialization.
	(initialize_root): Pass loop to replace_ref_with.
	(initialize_root_vars_lm): New function.
	(execute_load_motion): Use initialize_root_vars_lm.
	(execute_pred_commoning_comp): Record new variables.  Pass loop to
	replace_ref_with.
	(execute_pred_commoning_comp): Record new variables.
	(base_names_in_chain_on, eliminate_temp_copies): New functions.
	(tree_predictive_commoning_loop): Use eliminate_temp_copies.
	* tree-flow.h (MAX_AFF_ELTS, struct affine_tree_combination): Moved to
	tree-affine.h.
	* Makefile.in (tree-affine.o): Add.
	(tree-ssa-loop-ivopts.o, tree-predcom.o, tree-ssa-address.o): Add
	tree-affine.h dependency.
	* tree-ssa-structalias.c (intra_create_variable_infos): Prevent
	PARM_NOALIAS variables from aliasing everything.
	* passes.c (init_optimization_passes): Add pass_dominator before
	loop optimizations.

2006-05-25  Zdenek Dvorak <dvorakz@suse.cz>

	Branch created.

2006-05-30  Zdenek Dvorak <dvorakz@suse.cz>

	* tree-ssa-loop-im.c (get_lsm_tmp_name): Add version to the name.
	Export.
	(schedule_sm): Pass 0 as version to get_lsm_tmp_name.
	* tree-ssa-loop-niter.c (nonzero_p): Export.
	* tree.h (nonzero_p): Declare.
	* tree-pass.h (pass_predcom): Declare.
	* tree-ssa-loop-ivopts.c (constant_multiple_of): Export.
	* timevar.def (TV_PREDCOM): New.
	* tree-ssa-loop.c (pass_predcom, run_tree_predictive_commoning,
	gate_tree_predictive_commoning): New.
	* tree-data-ref.c (free_data_ref): New.
	(create_data_ref): Fail when scev_not_known is encountered.
	(find_data_references_in_loop): Find references in dominance order.
	(free_data_refs): Use free_data_ref.
	* tree-predcom.c: New file.
	* common.opt (fpredictive-commoning): New.
	* tree-flow.h (tree_predictive_commoning, get_lsm_tmp_name,
	constant_multiple_of): Declare.
	* Makefile.in (tree-predcom.o): Add.
	* passes.c (init_optimization_passes): Add pass_predcom.
