2005-11-08  Daniel Berlin  <dberlin@dberlin.org>
            Kenneth Zadeck <zadeck@naturalbridge.com>

	* bitmap.c (bitmap_element_free, bitmap_element_link, bitmap_and,
	bitmap_and_compl, bitmap_ior, bitmap_ior_into, bitmap_xor, 
	bitmap_xor_into): Fixed latent performance issue where current
	was being properly kept up to date.
	(bitmap_clear_range, bitmap_compl_and_into): New functions to support 
	dataflow analysis.
	* df.c (df_rd_confluence_n, df_alloc_reach_bitmaps, df_free_reach_bitmaps, 
	df_clear_reach_bitmaps, df_ru_confluence_n, df_lr_confluence_0, 
	df_lr_confluence_n, df_init, df_dump): Changed the way EH_USES is processed.
       	(df_bitmaps_alloc, df_bitmaps_free,
	df_bb_reg_def_chain_create, df_bb_reg_def_chain_create,
	df_reg_use_chain_create, df_rd_transfer_function,
	df_alloc_reach_bitmaps, df_ref_bitmap, df_bb_rd_local_compute,
	df_rd_local_compute, df_bb_ru_local_compute, df_analyze, 
	df_analyze_subcfg, df_analyze_simple_change_some_blocks): Fixed
	performance problems by grouping all defs and uses
	for the same pseudo into contigious ranges.
	(df_bb_du_chain_create, df_bb_ud_chain_create): Combined in
	new function df_bb_chain_create.
	(df_chain_create, df_alloc_reach_bitmaps, df_free_reach_bitmaps, 
	df_clear_reach_bitmaps, df_ref_bitmap): New function.
	(df_rd_init, df_rd_confluence_n, df_rd_transfer_function,
	df_rd_set_dflow, df_ru_transfer_function, df_ru_confluence_n, 
	df_ru_transfer_function, df_ru_set_dflow, df_lr_transfer_function, 
	df_lr_set_dflow, df_lr_confluence_n, df_ur_transfer_function, 
	df_ur_set_dflow, df_ur_init, df_ur_transfer_function, df_ur_set_dflow
	df_ur_confluence_n, hybrid_search_forward, hybrid_search_backward
	iterative_dataflow): Changed interface for dataflow callback
	functions to hide where the source of bitmaps.
       	(df_rd_set_bitmaps, df_ru_set_bitmaps, df_lr_set_bitmaps, 
	df_ur_set_bitmaps, df_bitmap_ior_edge):	Removed as part of
	changing dataflow callback interface.
	(df_free, df_ref_create, df_ref_record_1,
	df_record_exit_block_uses, df_refs_record, df_exit_lr_local_compute,
	df_insn_move_before, df_local_ref_killed_between_p, 
	df_bb_regno_last_def_find, df_chain_dump, df_dump): 
	Added chains that go to artifical uses in exit block.
	(df_exit_bb_reg_use_chain_create, df_exit_bb_chain_create):
	New functions to support artifical uses in exit block.
	(df_insn_refs_record): Added new DF_REF_CLOBBER ref type to
	avoid creation of artifical chains for clobbers at call sites.

2005-11-03  Paolo Bonzini  <bonzini@gnu.org>
	    Steven Bosscher  <stevenb@suse.de>

	* df.c (df_free): Fix call to df_bitmaps_free.
	(df_bb_regno_last_def_find): Make it return what it is supposed
	to return.
	(df_local_ref_killed_between_p): New.

2005-11-01  Daniel Berlin  <dberlin@dberlin.org>
            Kenneth Zadeck <zadeck@naturalbridge.com>
	* flow.c (update_life_info): Added debugging.
	(init_propagate_block_info): Fixed typo.
	* df.c (df_refs_unlink, df_ref_record_1, df_ref_record,
	read_modify_subreg_p, df_def_record_1, df_insn_refs_record):
	Fixed control of when regs_ever_live is modified.
	* combine.c: Documentation rot.
	* reload1.c: Used wrong type of comment.

2005-10-31  Jan Hubicka  <jh@suse.cz>

	* reg-stack.c (subst_stack_regs_pat): Expect USEs to be ignored for
	liveness.
	(change_stack): Initialize partially dead registers.
	(convert_regs_1): Handle dead return values.
	(reg_to_stack): Switch to partial liveness. 
	(propagate_stack): Push in partially live stuff.

2005-10-25  Daniel Berlin  <dberlin@dberlin.org>
            Kenneth Zadeck <zadeck@naturalbridge.com>

	* cfgrtl.c (print_rtl_with_bb): Fixed problem with debugging
	output of bitmaps.
	* df.c (mark_reg_change): Fixed problem computing sizes of hard regs.
	* reload1.c (reload): Fixed over agressive updating of bitmaps.
	* sched-rgn.c (schedule_insns): Cleaned away some useless verification 
	code.
	(rest_of_handle_sched2): Removed debugging.


2005-10-24  Kenneth Zadeck <zadeck@naturalbridge.com>

	* sched-rgn.c (check_live_1, update_live_1, rest_of_handle_sched): 
	Converted to use partially available liveness.
	(init_regions, schedule_insns, rest_of_handle_sched): 
	Removed assertion checking based on death notes.


2005-10-23  Daniel Berlin  <dberlin@dberlin.org>
	    Kenneth Zadeck <zadeck@naturalbridge.com>

	* df.c (df_bitmaps_alloc, df_lr_local_compute, df_compute_all_blocks): 
	Removed df->all_blocks.
	(df_lr_local_compute): Added flag to indicate that 
	blocks was really the whole function.
	(df_ref_record): Fixed missing case for memory refs.
	(df_insn_refs_record): Fixed regs ever live processing.
	(df_bb_refs_record): Removed debugging code.
	(df_bb_lr_local_compute, notice_stack_pointer_modification, 
	df_bb_lr_local_compute): Moved stack pointer modification 
	detection code back to flow.c.
	(df_bb_lr_local_compute, hybrid_search_forward, 
	hybrid_search_backward): Formatting cleanup.
	(df_compute_all_blocks, notice_stack_pointer_modification):
	Removed.
	(df_analyze):  Changed the definition of whole program to be all 
	reachable blocks rather than all blocks.
	(df_analyze_subcfg, df_analyze_simple_change_some_blocks): Added 
	parameter to df_lr_local_compute. 
	(df_rtx_reg_replace): Fixed way it decided it was processing 
	entire function.
	* df.h: Removed all_blocks from struct df definition.
	* flow.c (notice_stack_pointer_modification_1, 
	notice_stack_pointer_modification): Added back.
	(life_analysis): Added back call to 
	notice_stack_pointer_modification.
	(struct tree_opt_pass pass_life, rest_of_handle_flow2): 
	Added debugging.
	* gcse.c (gcse_main, bypass_jumps): Additional places where we had missed 
	in renumbering entry and exit blocks.
	* global.c (global_alloc): Additional debugging code.


2005-10-19  Daniel Berlin  <dberlin@dberlin.org>

	* df.c (df_lr_local_compute): Fix thinko regarding pseudos and call
	defs.

2005-10-19  Kenneth Zadeck <zadeck@naturalbridge.com>

	* df.c (df_bitmap_ior_edge, df_lr_confluence_0
	df_lr_confluence_n, df_ur_confluence_n, df_ur_set_bitmaps): New 
	functions.
	(df_exit_lr_local_compute, dataflow_set_a_op_b): Removed 
	functions.
	(df_ur_set_bitmaps, mark_reg_change, df_ur_local_finalize,
	mark_reg_use_for_earlyclobber, df_ur_local_compute, 
	df_bb_reg_live_start, df_bb_reg_live_end, df_bb_reg_live_start_p,
	df_bb_reg_live_end_p): Renamed "reaching registers" 
	problem (rr) to "uninitialized registers" problem. 
	(df_free): Changed variables freed.
	(df_ref_record): Added more sophisticated hard register scan.
	(df_insn_refs_record): Changed way invalidated_by_call is 
	processed.
	(df_bb_refs_record, df_exit_lr_local_compute, 
	df_bb_lr_local_compute): Removed bad way to simulate edge functions.  
	There are now real confluence functions.
	(notice_stack_pointer_modification): Disabled.
	(df_bb_lr_local_compute): Disabled call to 
	notice_stack_pointer_modification. Added code to properly handle hard 
	regs at call site.
	(df_lr_local_compute): Added more hard reg processing. 
	Changed order exit block is processed.
	(df_init): Added some invariant hard regs initialization.
	(df_refs_process): Removed artifical special case. 
	(df_print_bb_index, df_dump): Removed parameter to df_dump.
	(hybrid_search_forward, hybrid_search_backward): Added 
	confluence function calls.
	(iterative_dataflow): Added hack to initialize in and out sets 
	with hard registers.  This will be removed later.  
	* df.h: Removed DF_ARTIFICIAL_DEFS.  Renamed "reaching registers". 
	problem (rr) to "uninitialized registers" problem. Changed confluence 
	operator to general confluence functions.
	* flow.c (verify_wide_reg, verify_local_live_at_start): Removed 
	parameter to df_dump. 
	* reg_stack.c (reg_to_stack): Ditto.
	* sched_rgn.c (init_regions, schedule_insns): Ditto.
	* web.c (web_main): Ditto.
	* flow.c: (update_life_info): Removed DF_ARTIFICIAL_DEFS.
	* global.c (global_alloc): Ditto.
