2005-10-23  Daniel Berlin  <dberlin@dberlin.org>
            Kenneth Zadeck <zadeck@naturalbridge.com>

	* df.c (df_bitmaps_alloc, df_lr_local_compute, df_compute_all_blocks): 
	Removed df->all_blocks.
	* df.c (df_lr_local_compute): Added flag to indicate that 
	blocks was really the whole function.
	* df.c (df_ref_record): Fixed missing case for memory refs.
	* df.c (df_insn_refs_record): Fixed regs ever live processing.
	* df.c (df_bb_refs_record): Removed debugging code.
	* df.c (df_bb_lr_local_compute, notice_stack_pointer_modification, 
	df_bb_lr_local_compute): Moved stack pointer modification 
	detection code back to flow.c.
	* df.c (df_bb_lr_local_compute, hybrid_search_forward, 
	hybrid_search_backward): Formatting cleanup.
	* df.c (df_compute_all_blocks, notice_stack_pointer_modification):
	Removed.
	* df.c (df_analyze):  Changed the definition of whole program to be all 
	reachable blocks rather than all blocks.
	* df.c (df_analyze_subcfg, df_analyze_simple_change_some_blocks): Added 
	parameter to df_lr_local_compute. 
	* df.c (df_rtx_reg_replace): Fixed way it decided it was processing 
	entire function.
	* df.h: Removed all_blocks from struct df definition.
	* flow.c (notice_stack_pointer_modification_1, 
	notice_stack_pointer_modification): Added back.
	* flow.c (life_analysis): Added back call to 
	notice_stack_pointer_modification.
	* flow.c (struct tree_opt_pass pass_life, rest_of_handle_flow2): 
	Added debugging.
	* gcse.c (gcse_main, bypass_jumps): Additional places where we had missed 
	in renumbering entry and exit blocks.
	* global.c (global_alloc): Additional debugging code.


2005-10-19  Daniel Berlin  <dberlin@dberlin.org>

	* df.c (df_lr_local_compute): Fix thinko regarding pseudos and call
	defs.

2005-10-19  Kenneth Zadeck <zadeck@naturalbridge.com>

	* df.c (df_bitmap_ior_edge, df_lr_confluence_0
	df_lr_confluence_n, df_ur_confluence_n, df_ur_set_bitmaps): New 
	functions.
	* df.c (df_exit_lr_local_compute, dataflow_set_a_op_b): Removed 
	functions.
	* df.c (df_ur_set_bitmaps, mark_reg_change, df_ur_local_finalize,
	mark_reg_use_for_earlyclobber, df_ur_local_compute, 
	df_bb_reg_live_start, df_bb_reg_live_end, df_bb_reg_live_start_p,
	df_bb_reg_live_end_p): Renamed "reaching registers" 
	problem (rr) to "uninitialized registers" problem. 
	* df.c (df_free): Changed variables freed.
	* df.c (df_ref_record): Added more sophisticated hard register scan.
	* df.c (df_insn_refs_record): Changed way invalidated_by_call is 
	processed.
	* df.c (df_bb_refs_record, df_exit_lr_local_compute, 
	df_bb_lr_local_compute): Removed bad way to simulate edge functions.  
	There are now real confluence functions.
	* df.c (notice_stack_pointer_modification): Disabled.
	* df.c (df_bb_lr_local_compute) Disabled call to 
	notice_stack_pointer_modification. Added code to properly handle hard 
	regs at call site.
	* df.c (df_lr_local_compute): Added more hard reg processing. 
	Changed order exit block is processed.
	*df.c (df_init): Added some invariant hard regs initialization.
	*df.c (df_refs_process): Removed artifical special case. 
	*df.c (df_print_bb_index, df_dump): Removed parameter to df_dump.
	*df.c (hybrid_search_forward, hybrid_search_backward): Added 
	confluence function calls.
	*df.c (iterative_dataflow): Added hack to initialize in and out sets 
	with hard registers.  This will be removed later.  
	*df.h: Removed DF_ARTIFICIAL_DEFS.  Renamed "reaching registers". 
	problem (rr) to "uninitialized registers" problem. Changed confluence 
	operator to general confluence functions.
	*flow.c (verify_wide_reg, verify_local_live_at_start): Removed 
	parameter to df_dump. 
	*reg_stack.c (reg_to_stack): Ditto.
	*sched_rgn.c (init_regions, schedule_insns): Ditto.
	*web.c (web_main): Ditto.
	*flow.c: (update_life_info): Removed DF_ARTIFICIAL_DEFS.
	*global.c (global_alloc): Ditto.
