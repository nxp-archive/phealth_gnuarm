2008-05-15  Michael Meissner  <michael.meissner@amd.com>

	* target.h (struct target_specific): New structure to gather
	target specific hooks.
	(struct gcc_target): Add target_specific field.

	* target-def.h (TARGET_TARGET_SPECIFIC_PUSH): New macro for
	backend hook for target specific options.
	(TARGET_TARGET_SPECIFIC_POP): Ditto.
	(TARGET_TARGET_SPECIFIC_CAN_INLINE_P): Ditto.
	(TARGET_TARGET_SPECIFIC): Ditto.
	(TARGET_INITIALIZER): Add TARGET_TARGET_SPECIFIC.

	* tree-opt.c (driver_push_set_options): Rewrite to use target
	specific hooks.
	(driver_pop_options): Ditto.

	* c-common.c (handle_option_attribute): Give an error if the
	machine doesn't support target specific options.  Parse the
	options when declared by doing push/pop.

	* config/i386/i386.h (TARGET_TARGET_SPECIFIC_PUSH): Define target
	specific backend hooks.
	(TARGET_TARGET_SPECIFIC_POP): Ditto.
	(TARGET_SPECIFIC_INIT): Delete.
	(TARGET_SPECIFIC_PUSH): Ditto.
	(TARGET_SPECIFIC_POP): Ditto.
	(TARGET_SPECIFIC_OPTION): Ditto.

	* config/i386/i386.c (ix86_target_specific_init): Delete.
	(ix86_target_specific_option): Ditto.
	(ix86_target_specific_push): Change to be a target hook.
	(ix86_target_specific_pop): Ditto.

	* config/i386/i386-protos.h (ix86_target_specific_init): Delete.
	(ix86_target_specific_option): Ditto.
	(ix86_target_specific_push): Change to be a target hook.
	(ix86_target_specific_pop): Ditto.

2008-05-15  Michael Meissner  <michael.meissner@amd.com>
	    Karthik Kumar  <karthikkumar@gmail.com>

	* tree-opt.c (driver_push_set_options): Require the backend to
	define TARGET_SPECIFIC_OPTION to enable target specific
	optimization.  Use TARGET_SPECIFIC_* hooks from the back end.
	(driver_pop_options): Ditto.

	* common.opt (falign-functions): Add attribute to option.
	(falign-jumps): Ditto.
	(falign-loops): Ditto.

	* c-common.c (c_common_attribute_table): Add option attribute only
	if backend defines TARGET_SPECIFIC_OPTION.

	* config/i386/i386.h (OVERRIDE_OPTIONS): Add argument to say this
	is the first call.
	(TARGET_SPECIFIC_INIT): Define backend hook.
	(TARGET_SPECIFIC_OPTION): Ditto.
	(TARGET_SPECIFIC_PUSH): Ditto.
	(TARGET_SPECIFIC_POP): Ditto.

	* config/i386/i386-protos.h (ix86_target_specific_option): New
	declaration for target specific option support.
	(ix86_target_specific_init): Ditto.
	(ix86_target_specific_push): Ditto.
	(ix86_target_specific_pop): Ditto.
	(override_option): Take an argument to say whether it is the
	global call or from target specific options.

	* config/i386/i386.c (initial_ix86_tune_features): Move
	initialization here from ix86_tune_features to allow array to be
	set up differently for each function with target specific
	optimization.
	(ix86_tune_features): Ditto.
	(initial_ix86_arch_features): Move initialization here from
	ix86_arch_features to allow to be set up differently for each
	function with target specific optimization.
	(ix86_arch_features): Ditto.
	(ix86_string_ops): New variable to list -m<xxx>= options.
	(ix86_save_string_ops): New structure to allow string opts to be
	saved, restored.
	(ix86_prev_string_ops): Stack of previous string ops.
	(override_options): Move initialization of ix86_tune_features
	here.  Add argument for being called a second time.
	(ix86_target_specific_init): New hook for target specific support.
	(ix86_target_specific_init): Ditto.
	(ix86_target_specific_push): Ditto.
	(ix86_target_specific_pop): Ditto.

2008-05-15  Michael Meissner  <michael.meissner@amd.com>

	* Sync up to 135377.

2008-04-23  Michael Meissner  <michael.meissner@amd.com>

	* tree-pass.h (pass_push_set_options): Switch to rtl_opt_pass.
	(pass_pop_options): Ditto.

	* tree-opt.c (pass_push_set_options): Adjust for switch to
	rtl_opt_pass type.
	(pass_pop_options): Ditto.

2008-04-21  Karthik Kumar  <karthikkumar@gmail.com>

	* [abepstx]mmintrin.h, mm3dnow.h, mmintrin-common.h: Annotated
	intrinsics with their appropriate attributes for checking inlining.

2008-04-11  Karthik Kumar  <karthikkumar@gmail.com>

	* optc-gen.awk: Removed definition of target_flags because of
	usage as a versioned variable.
	* opth-gen.awk: Make versioned macros and versioned aliases for
	option testing and setting.
	* gensupport.c: Remove definition of target_flags.
	* rtlanal.c: Remove definition of target_flags.
	* toplev.c: Remove definition of target_flags_explicit.
	* opts.h: Pushed in cl_option_storp typedef.
	* opts-common.c: Removed cl_option_storp typedef.
	* tree.h: Added field to store options in functions.
	* Makefile.in: Added opts.h as a dependancy for TREE_H

2008-03-11  Michael Meissner  <michael.meissner@amd.com>

	* opts-common.c (cl_option_stors_stack): Fix spacing.
	(cl_option_stors_stack): Ditto.
	(push_attribute_options): Ditto.
	(pop_attribute_options): Ditto.

	* toplev.c (toplev_main): Fix spacing.

	* opts.c (handle_option): Fix spacing.
	(handle_options): Ditto.

	* opts.h (cl_option_stor): Fix spacing.
	(cl_option): Ditto.
	(handle_option): Ditto.

	* c-common.c (handle_option_attribute): Fix spacing.

	* config/i386/i386.c (override_options): Fix spacing.

2008-03-06  Karthik Kumar  <karthikkumar@gmail.com>

	* tree-opt.c (function-specific-branch): Implemented pass_push_set_options
	and pass_pop_options which can handle attribute versioning.
	* passes.c (function-specific-branch): Position pass_push_set_options and
	and pass_pop_options around rest_of_compilation. 
	* tree-pass.h (function-specific-branch): Declare pass_push_set_options
	and pass_pop_options.

2008-01-14  Karthik Kumar  <karthikkumar@gmail.com>

	* c-common.c (function-specific-branch): Implemented attribute handler
	* opts.h (function-specific-branch): Made handle_option public so 
	it can be reused in other code. Modified its signature to enable attribute
	checking.
	* opts.c (function-specific-branch): Modified to implement attribute
	checking.
	* config/i386/i386.c (function-specific-branch): Rewrite parts of 
	override_options.
	* docs/extend.texi (function-specific-branch): Document the 
	implemented attributes.

2008-01-05  Karthik Kumar  <karthikkumar@gmail.com>

	* opts.h (function-specific-branch): Added union to store
	modifiable flags; Changed bool and size_t types to enable
	compilation of libgcc; Added declarations for 
	initialize_attribute_options(), push_attribute_options()
	and pop_attribute_options() and CL_ATTRIBUTE; Changed 
	signedness of masks.
	* opts-common.c (function-specific-branch): Modified to match
	declarations in opts.h; Added push_attribute_options() and
	pop_attribute_options(); Implemented a custom stack.
	* opts.c (function-specific-branch): Modified to match
	declarations in opts.h.
	* toplev.c (function-specific-branch): Make a call to 
	initialize_attribute_options in toplev_main()
	* opt-functions.awk (function-specific-branch): Added var_decl(),
	modified var_type() to remove trailing space to "int"; Modified
	switch_flags to accomodate CL_ATTRIBUTE.
	* optc-gen.awk (function-specific-branch): Modify to use attributes
	and add initialize_attribute_options().
	* opth-gen.awk (function-specific-branch): Modify to use attributes
	and generate #define s for such flags.
	* config/linux.opt (function-specific-branch): Reorder the flags
	to generate only one definition in options.c.
	* config/i386/i386.opt (function-specific-branch): Make all options
	based on ix86_isa_flags use Attribute; Moved ix86_isa_flags
	initialization into this file.
	* config/i386/i386.h (function-specific-branch): Remove extern
	declaration of ix86_isa_flags.
	* config/i386/i386.c (function-specific-branch): Remove declaration of 
	ix86_isa_flags, pushed initialization to i386.opt.
	* docs/options.texi (function-specific-branch): Document the 
	Attribute flag.

2008-01-02  Michael Meissner  <michael.meissner@amd.com>

Merged up to revision 131261 

2007-12-14  Michael Meissner  <michael.meissner@amd.com>

Merged up to revision 130941

2007-12-13  Michael Meissner  <michael.meissner@amd.com>

	* REVISION: New file, "function-specific-branch" to mark this
	branch.

Function specific optimization branch created from revision 130896


