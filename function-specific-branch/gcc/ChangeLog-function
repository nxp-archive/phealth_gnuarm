2008-05-29  Michael Meissner  <michael.meissner@amd.com>

	* tree.h (DECL_TARGET_SPECIFIC): New accessor macro.
	(struct function_decl): Add target_specific field.

	* target.h (struct target_specific): Delete push_options and
	pop_options hook.  Add validate hook.

	* toplev.c (process_options): Delete preserving target specific
	options.
	(toplev_main): Delete initialize_attribute_options call.

	* target-specific.c (struct cl_attr_stack): Delete stacking and
	saving options.
	(cl_option_top): Ditto.
	(target_specific_push): Delete.
	(target_specific_pop): Ditto.
	(driver_push_set_options): Ditto.
	(driver_pop_options): Ditto.
	(target_specific_qsort): Ditto.
	(target_specific_count_args): Simplify, remove counting string
	size.
	(target_specific_build_args): Rewrite, make caller allocate argv
	array.
	(handle_option_attribute): Change to use validate hook.  Add ifdef
	in case port does not support target specific options.  Change to
	new calling sequence of target_specific_build_args.
	(default_target_specific_can_inline_p): Only check whether the
	target specific pointer is the same or not.
	(pass_push_set_options): Delete, change to use set current
	function hook.
	(pass_pop_options): Ditto.

	* ipa-inline.c (cgraph_decide_inling_of_small_function): Set
	CALL_CANNOT_INLINE_P if the target specific option hook indicates
	we should not inline the functions.
	(cgraph_decide_inling_incrementally): Ditto.

	* opts.h (initialize_attribute_options): Delete.

	* optc-gen.awk: Rewrite attribute support so we provide functions
	to save/restore the attributes instead of a global structure.
	* opth-gen.awk: Ditto.

	* c-decl.c (merge_decls): Merge target specific data.

	* coretypes.h (struct cl_option_attr): Add forward reference.
	(struct target_specific_data): Ditto.

	* print-tree.c (print_node): Print out if the function has target
	specific data.

	* common.opt (-falign-functions): Remove option Attribute.
	(-falign-functions=): Ditto.
	(-falign-jumps): Ditto.
	(-falign-jumps=): Ditto.
	(-falign-labels): Ditto.
	(-falign-labels=): Ditto.
	(-falign-loops): Ditto.
	(-falign-loops=): Ditto.

	* target-def.h (TARGET_TARGET_SPECIFIC_PUSH): Delete.
	(TARGET_TARGET_SPECIFIC_POP): Ditto.
	(TARGET_TARGET_SPECIFIC_VALIDATE): New hook.
	(TARGET_TARGET_SPECIFIC): Update hooks.

	* passes.c (pass_rest_of_compilation): Remove
	pass_push_set_options and pass_pop_options.

	* config/i386/i386.h (TARGET_TARGET_SPECIFIC_PUSH): Delete.
	(TARGET_TARGET_SPECIFIC_POP): Ditto.
	(TARGET_TARGET_SPECIFIC_VALIDATE): Define to
	ix86_target_specific_validate.
	(struct machine_function): Delete unused fields added previously.
	(struct machine_option_attr): New structure to collect target
	specific information not in the cl_option_attr structure.
	(struct targe_specific_data): Collect all of the target specific
	data in one place.

	* config/i386/i386.opt (-mfpmath=): Make attribute option.
	(-mabm): Add VarExists.

	* config/i386/i386-protos.h (ix86_target_specific_push): Delete.
	(ix86_target_specific_pop): Ditto.
	(ix86_target_specific_validate): New declaration.

	* config/i386/i386.c (ix86_target_specific_save): New function to
	save target specific options.
	(ix86_target_specific_restore): New function to restore target
	specific options.
	(struct ptt): Move to toplevel from override_options.
	(processor_target_table): Ditto.
	(ix86_tune_defaulted): Ditto.
	(ix86_arch_specified): Ditto.
	(cpu_names): Ditto.
	(ix86_debug_option): Temporary debug function.
	(override_options): Improve error message for attribute(option).
	Save current options if this is the main function.
	(ix86_target_specific_validate): New function to validate
	attribute(option).
	(ix86_target_specific_push): Delete.
	(ix86_target_specific_pop): Ditto.
	(ix86_target_specific_can_inline_p): New function, validate
	whether one function can inline another.
	(ix86_set_current_function): Rewrite to properly switch options.
	
2008-05-23  Michael Meissner  <michael.meissner@amd.com>

	* target.h (struct target_specific): Change can_inline_p hook to
	take caller and callee argument instead of one argument.

	* target-specific.c (default_target_specific_can_inline_p):
	Rewrite to consider the caller and callee, and allow a caller to
	inline a callee that has the same target specific options.

	* ipa-inline.c (cgraph_decide_inlining_of_small_function): Call
	tree_target_specific_can_inline_p to determine if one function can
	inline another due to target specific options.
	(cgraph_decide_inlining): Ditto.
	(cgraph_decide_inlining_incrementally): Ditto.

	* tree-inline.c (inlinable_function_p): Remove call for target
	specific can_inline_p hook here, move it to ipa-inline.c.
	(tree_target_specific_can_inline_p): New function to call the
	target hook to determine if one function can inline another in a
	target specfic fashion.

	* tree-inline.h (tree_target_specific_can_inline_p): Add
	declaration.

	* config/i386/i386.h (TARGET_ABM): Make -mabm, -mpopcnt, -mcx16,
	-maes, -mpclmul ISA options rather than using unique variables.
	(TARGET_POPCNT): Ditto.
	(TARGET_CX16): Ditto.
	(TARGET_AES): Ditto.
	(TARGET_PCLMUL): Ditto.
	(TARGET_SAHF): Move -msahf, -mrecip, -mfused-madd into extra
	options, instead of using unique variables.
	(TARGET_RECIP): Ditto.
	(TARGET_FUSED_MADD): Ditto.
	(ix86_tune_features): Change type to unsigned char.
	(ix86_arch_features): Ditto.
	(struct machine_function): Add fields for remembering the ISA and
	other options used to compile a given function.

	* config/i386/i386.opt (mabm): Make -mabm, -mpopcnt, -mcx16,
	-maes, -mpclmul ISA options rather than using unique variables.
	(mpopcnt): Ditto.
	(mcx16): Ditto.
	(maes): Ditto.
	(mpclmul): Ditto.
	(msahf): Move -msahf, -mrecip, -mfused-madd into extra options,
	instead of using unique variables.

	* config/i386/i386.c (ix86_tune_features): Change type to unsigned
	char.
	(ix86_arch_features): Ditto.
	(OPTION_MASK_ISA_SSE4A_SET): Add popcnt, abm to sse4a.
	(override_options): Change initialization of ix86_tune_features
	and ix86_arch_features.  Make -mabm, -mpopcnt, -mcx16, -maes,
	-mpclmul ISA options rather than using unique variables.  Move
	-msahf, -mrecip, -mfused-madd into extra options, instead of using
	unique variables.

2008-05-22  Michael Meissner  <michael.meissner@amd.com>

	* config/i386/i386-protos.h (ix86_set_current_function): Declare.

	* config/i386/i386.c (override_options): White space changes.
	(ix86_target_specific_push): If arch changed but not tune, update
	tune string also.
	(ix86_set_current_function): New function, stub for now.

	* config/i386/i386.h (TARGET_SET_CURRENT_FUNCTION): Define, call
	ix86_set_current_function.

2008-05-18  Michael Meissner  <michael.meissner@amd.com>

	* ammintrin.h: Undo 2008-04-21 changes adding machine specific
	option attributes, since this now prevents inlining.
	* bmmintrin.h: Ditto.
	* emmintrin.h: Ditto.
	* mmintrin-common.h: Ditto.
	* mmintrin.h: Ditto.
	* smmintrin.h: Ditto.
	* tmmintrin.h: Ditto.
	* xmmintrin.h: Ditto.
	* mm3dnow.h: Ditto.

2008-05-17  Michael Meissner  <michael.meissner@amd.com>

	* config/i386/i386.c (override_options): Move code around to be
	C90 compliant.

	* target.h (struct target_specific): Change can_inline_p to take
	only one argument.

	* target-specific.c (cl_option_args): Rewrite how arguments are
	built.
	(MIN_ALLOC_ARGS): Delete.
	(STRING_POOL_SIZE): Ditto.
	(target_specific_count_args): New function to count arguments.
	(target_specific_build_args_internal): New worker function to
	build the argument vector.
	(target_specific_build_args): Rewrite building arguments.  Rename
	from target_specific_build_arguments, change callers.
	(target_specific_free_args): Rename from
	target_specific_free_arguments.
	(target_specific_qsort): Convert pointers to const char **.
	(target_specific_push): Argv is now const char **.
	(driver_push_set_options): Change how argv vector is built.
	(handle_option_attribute): Ditto.
	(default_target_specific_can_inline_p): Change function to take
	only one argument, and return false if the function has target
	specific options.

	* tree-inline.c (inlinable_function_p): Change call to target
	specific hook to just look at the function itself, since we don't
	have the caller at this point.

	* targhooks.h (default_target_specific_can_inline_p): Change
	calling signature.

2008-05-16  Michael Meissner  <michael.meissner@amd.com>

	* tree-inline.c (inlinable_function_p): Call the target specfic
	backend hook to determine if it is safe to inline a function.

	* targhooks.c (default_target_specific_can_inline_p): Add default
	version to prevent functions with target specific options from
	being inlined.

	* target-def.h (TARGET_TARGET_SPECIFIC_CAN_INLINE_P): Change
	default to default_target_specific_can_inline_p.

	* target.h (struct target_specific): Change signature of
	can_inline_p function from tree to const_tree.

	* config/i386/i386.c (override_options): Fix up error messages, so
	it correctly complains about -mxxx or option("xxx").
	(ix86_target_specific_push): Move restoring string opts to the
	push function from the pop function.
	(ix86_target_specific_pop): Ditto.

	* tree.h (handle_option_attribute): Add declaration.

	* tree-opt.c: Delete file.  Rename to target-specific.c.

	* target-specific.c: New file, renamed from tree-opt.c.
	(target_specific_push): Moved from opts-common.c, make static.
	Rename from push_attribute_options.  Call target backend hook.
	Create argv with '-' prepended.
	(target_specific_pop): Moved from opts-common.c, make static.
	Rename from pop_attribute_options.  Call target backend hook.
	(cl_option_stor_stack): Moved from opts-common.c, make static.
	(cl_option_stor_stack): Ditto.
	(handle_option_attribute): Moved from c-common.c, make static.
	(target_specific_build_arguments): New function to build argc,
	argv for arguments.
	(target_specific_free_arguments): New function to release memory
	allocated via target_specific_build_arguments.
	(cl_option_top): Renamed from top.
	(default_target_specific_can_inline_p): Add default version to
	restrict inlining of target specific functions with different
	options.
	(targhooks.h): Include for default_target_specific_can_inline_p.
	(default_target_specific_can_inline_p): New function to determine
	if one function can inline another based on the target specific
	options.
	(target_specific_qsort): New function to sort char * array.

	* c-common.c (handle_option_attribute): Move to target-specific.c.

	* Makefile.in (target-specific.o): Rename from tree-opt.o.  Add
	gt-targhooks.h dependency.

	* config/i386/i386.c (ix86_string_ops): Add initial '-'.
	(ix86_target_specific_push): Eliminate adding '-', since our
	caller now does this.

	* opts-common.c (cl_option_stors_stack): Move to
	target-specific.c.
	(push_attribute_options): Ditto.
	(pop_attribute_options): Ditto.

	* opts.h (push_attribute_options): Change calling signature.

	* c-common.c (handle_option_attribute): Remove call to target
	backend hooks, since the push/pop attribute functions now call
	them.

2008-05-15  Michael Meissner  <michael.meissner@amd.com>

	* target.h (struct target_specific): New structure to gather
	target specific hooks.
	(struct gcc_target): Add target_specific field.

	* target-def.h (TARGET_TARGET_SPECIFIC_PUSH): New macro for
	backend hook for target specific options.
	(TARGET_TARGET_SPECIFIC_POP): Ditto.
	(TARGET_TARGET_SPECIFIC_CAN_INLINE_P): Ditto.
	(TARGET_TARGET_SPECIFIC): Ditto.
	(TARGET_INITIALIZER): Add TARGET_TARGET_SPECIFIC.

	* tree-opt.c (driver_push_set_options): Rewrite to use target
	specific hooks.
	(driver_pop_options): Ditto.

	* c-common.c (handle_option_attribute): Give an error if the
	machine doesn't support target specific options.  Parse the
	options when declared by doing push/pop.

	* config/i386/i386.h (TARGET_TARGET_SPECIFIC_PUSH): Define target
	specific backend hooks.
	(TARGET_TARGET_SPECIFIC_POP): Ditto.
	(TARGET_SPECIFIC_INIT): Delete.
	(TARGET_SPECIFIC_PUSH): Ditto.
	(TARGET_SPECIFIC_POP): Ditto.
	(TARGET_SPECIFIC_OPTION): Ditto.

	* config/i386/i386.c (ix86_target_specific_init): Delete.
	(ix86_target_specific_option): Ditto.
	(ix86_target_specific_push): Change to be a target hook.
	(ix86_target_specific_pop): Ditto.

	* config/i386/i386-protos.h (ix86_target_specific_init): Delete.
	(ix86_target_specific_option): Ditto.
	(ix86_target_specific_push): Change to be a target hook.
	(ix86_target_specific_pop): Ditto.

2008-05-15  Michael Meissner  <michael.meissner@amd.com>
	    Karthik Kumar  <karthikkumar@gmail.com>

	* tree-opt.c (driver_push_set_options): Require the backend to
	define TARGET_SPECIFIC_OPTION to enable target specific
	optimization.  Use TARGET_SPECIFIC_* hooks from the back end.
	(driver_pop_options): Ditto.

	* common.opt (falign-functions): Add attribute to option.
	(falign-jumps): Ditto.
	(falign-loops): Ditto.

	* c-common.c (c_common_attribute_table): Add option attribute only
	if backend defines TARGET_SPECIFIC_OPTION.

	* config/i386/i386.h (OVERRIDE_OPTIONS): Add argument to say this
	is the first call.
	(TARGET_SPECIFIC_INIT): Define backend hook.
	(TARGET_SPECIFIC_OPTION): Ditto.
	(TARGET_SPECIFIC_PUSH): Ditto.
	(TARGET_SPECIFIC_POP): Ditto.

	* config/i386/i386-protos.h (ix86_target_specific_option): New
	declaration for target specific option support.
	(ix86_target_specific_init): Ditto.
	(ix86_target_specific_push): Ditto.
	(ix86_target_specific_pop): Ditto.
	(override_option): Take an argument to say whether it is the
	global call or from target specific options.

	* config/i386/i386.c (initial_ix86_tune_features): Move
	initialization here from ix86_tune_features to allow array to be
	set up differently for each function with target specific
	optimization.
	(ix86_tune_features): Ditto.
	(initial_ix86_arch_features): Move initialization here from
	ix86_arch_features to allow to be set up differently for each
	function with target specific optimization.
	(ix86_arch_features): Ditto.
	(ix86_string_ops): New variable to list -m<xxx>= options.
	(ix86_save_string_ops): New structure to allow string opts to be
	saved, restored.
	(ix86_prev_string_ops): Stack of previous string ops.
	(override_options): Move initialization of ix86_tune_features
	here.  Add argument for being called a second time.
	(ix86_target_specific_init): New hook for target specific support.
	(ix86_target_specific_init): Ditto.
	(ix86_target_specific_push): Ditto.
	(ix86_target_specific_pop): Ditto.

2008-05-15  Michael Meissner  <michael.meissner@amd.com>

	* Sync up to 135377.

2008-04-23  Michael Meissner  <michael.meissner@amd.com>

	* tree-pass.h (pass_push_set_options): Switch to rtl_opt_pass.
	(pass_pop_options): Ditto.

	* tree-opt.c (pass_push_set_options): Adjust for switch to
	rtl_opt_pass type.
	(pass_pop_options): Ditto.

2008-04-21  Karthik Kumar  <karthikkumar@gmail.com>

	* [abepstx]mmintrin.h, mm3dnow.h, mmintrin-common.h: Annotated
	intrinsics with their appropriate attributes for checking inlining.

2008-04-11  Karthik Kumar  <karthikkumar@gmail.com>

	* optc-gen.awk: Removed definition of target_flags because of
	usage as a versioned variable.
	* opth-gen.awk: Make versioned macros and versioned aliases for
	option testing and setting.
	* gensupport.c: Remove definition of target_flags.
	* rtlanal.c: Remove definition of target_flags.
	* toplev.c: Remove definition of target_flags_explicit.
	* opts.h: Pushed in cl_option_storp typedef.
	* opts-common.c: Removed cl_option_storp typedef.
	* tree.h: Added field to store options in functions.
	* Makefile.in: Added opts.h as a dependancy for TREE_H

2008-03-11  Michael Meissner  <michael.meissner@amd.com>

	* opts-common.c (cl_option_stors_stack): Fix spacing.
	(cl_option_stors_stack): Ditto.
	(push_attribute_options): Ditto.
	(pop_attribute_options): Ditto.

	* toplev.c (toplev_main): Fix spacing.

	* opts.c (handle_option): Fix spacing.
	(handle_options): Ditto.

	* opts.h (cl_option_stor): Fix spacing.
	(cl_option): Ditto.
	(handle_option): Ditto.

	* c-common.c (handle_option_attribute): Fix spacing.

	* config/i386/i386.c (override_options): Fix spacing.

2008-03-06  Karthik Kumar  <karthikkumar@gmail.com>

	* tree-opt.c (function-specific-branch): Implemented pass_push_set_options
	and pass_pop_options which can handle attribute versioning.
	* passes.c (function-specific-branch): Position pass_push_set_options and
	and pass_pop_options around rest_of_compilation. 
	* tree-pass.h (function-specific-branch): Declare pass_push_set_options
	and pass_pop_options.

2008-01-14  Karthik Kumar  <karthikkumar@gmail.com>

	* c-common.c (function-specific-branch): Implemented attribute handler
	* opts.h (function-specific-branch): Made handle_option public so 
	it can be reused in other code. Modified its signature to enable attribute
	checking.
	* opts.c (function-specific-branch): Modified to implement attribute
	checking.
	* config/i386/i386.c (function-specific-branch): Rewrite parts of 
	override_options.
	* docs/extend.texi (function-specific-branch): Document the 
	implemented attributes.

2008-01-05  Karthik Kumar  <karthikkumar@gmail.com>

	* opts.h (function-specific-branch): Added union to store
	modifiable flags; Changed bool and size_t types to enable
	compilation of libgcc; Added declarations for 
	initialize_attribute_options(), push_attribute_options()
	and pop_attribute_options() and CL_ATTRIBUTE; Changed 
	signedness of masks.
	* opts-common.c (function-specific-branch): Modified to match
	declarations in opts.h; Added push_attribute_options() and
	pop_attribute_options(); Implemented a custom stack.
	* opts.c (function-specific-branch): Modified to match
	declarations in opts.h.
	* toplev.c (function-specific-branch): Make a call to 
	initialize_attribute_options in toplev_main()
	* opt-functions.awk (function-specific-branch): Added var_decl(),
	modified var_type() to remove trailing space to "int"; Modified
	switch_flags to accomodate CL_ATTRIBUTE.
	* optc-gen.awk (function-specific-branch): Modify to use attributes
	and add initialize_attribute_options().
	* opth-gen.awk (function-specific-branch): Modify to use attributes
	and generate #define s for such flags.
	* config/linux.opt (function-specific-branch): Reorder the flags
	to generate only one definition in options.c.
	* config/i386/i386.opt (function-specific-branch): Make all options
	based on ix86_isa_flags use Attribute; Moved ix86_isa_flags
	initialization into this file.
	* config/i386/i386.h (function-specific-branch): Remove extern
	declaration of ix86_isa_flags.
	* config/i386/i386.c (function-specific-branch): Remove declaration of 
	ix86_isa_flags, pushed initialization to i386.opt.
	* docs/options.texi (function-specific-branch): Document the 
	Attribute flag.

2008-01-02  Michael Meissner  <michael.meissner@amd.com>

Merged up to revision 131261 

2007-12-14  Michael Meissner  <michael.meissner@amd.com>

Merged up to revision 130941

2007-12-13  Michael Meissner  <michael.meissner@amd.com>

	* REVISION: New file, "function-specific-branch" to mark this
	branch.

Function specific optimization branch created from revision 130896


