# Makefile for GNU compilers on a DOS box.
#
#   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.

#This file is part of GNU CC.

#GNU CC is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2, or (at your option)
#any later version.

#GNU CC is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with GNU CC; see the file COPYING.  If not, write to
#the Free Software Foundation, 59 Temple Place - Suite 330,
#Boston, MA 02111-1307, USA.

# This Makefile.DOS file lives in the fixinc subdirectory.
# Its purpose is to build the fixincl and applyfix programs for
# the DJGPP (aka MS-DOS) port of GCC.

CFLAGS = -Wall -g -O2
FIXINC_DEFS = -DIN_GCC -D__MSDOS__ $(CFLAGS) $(CPPFLAGS) $(INCLUDES)

CC = gcc
SHELL = /bin/sh

target=i386-pc-msdosdjgpp
# Directory where sources are, from where we are.
srcdir = .
VPATH = $(srcdir)
subdir = fixinc

# End of variables for you to override.

default : all

# Now figure out from those variables how to compile and link.

# Specify the directories to be searched for header files.
# Both . and srcdir are used, in that order.
#
INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. \
-I$(srcdir)/../config -I$(srcdir)/../../include

# Always use -I$(srcdir)/config when compiling.
.c.o:
	$(CC) -c $(FIXINC_DEFS) $<

# The only suffixes we want for implicit rules are .c and .o.
.SUFFIXES:
.SUFFIXES: .c .o

#

## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
##
##  Makefile for constructing the "best" include fixer we can
##
## # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

LIBERTY = $(srcdir)/../../libiberty/libiberty.a
OBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \
      gnu-regex.o fixlib.o

HDR = server.h gnu-regex.h fixlib.h machname.h

TARGETS = fixincl.exe applyfix.exe

all : $(TARGETS)
gen : fixincl.x

FIXINCL_OBJ = fixincl.o fixlib.o fixtests.o gnu-regex.o

fixincl.exe: $(FIXINCL_OBJ) $(LIBERTY)
	$(CC) $(FIXINC_DEFS) -o $@ $(FIXINCL_OBJ) $(LIBERTY)

APPLY_OBJ = fixfixes.o fixlib.o gnu-regex.o

applyfix.exe: $(APPLY_OBJ) $(LIBERTY)
	$(CC) $(FIXINC_DEFS) -o $@ $(APPLY_OBJ) $(LIBERTY)

$(OBJ)      : $(HDR)
fixincl.o   : fixincl.x fixincl.c
fixtests.o  : fixtests.c
fixfixes.o  : fixfixes.c fixincl.x
server.o    : server.c
procopen.o  : procopen.c
gnu-regex.o : gnu-regex.c
fixlib.o    : fixlib.c

#  'machname.h' is built in the build directory.
#  'fixincl.x' in the source dir.
#
machname.h: ../specs
	$(SHELL) $(srcdir)/genfixes $@

fixincl.x: fixincl.tpl inclhack.def
	cd $(srcdir) ; $(SHELL) ./genfixes $@

clean:
	rm -f *.o $(TARGETS) fixincl.x machname.h *~ *.exe

#  Build the executable and copy up into gcc dir.
#  We still copy the script because we still have alternative scripts.
#
inst-bin : $(TARGETS)
	./fixincl.exe -v
	@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \
	    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi
	@if [ -f ./fixincl.sh ] ; \
	then echo cp ./fixincl.sh ../fixinc.sh ; \
		cp ./fixincl.sh ../fixinc.sh ; \
	else echo cp $(srcdir)/fixincl.sh ../fixinc.sh ; \
		cp $(srcdir)/fixincl.sh ../fixinc.sh ; fi
	chmod 755 ../fixinc.sh
