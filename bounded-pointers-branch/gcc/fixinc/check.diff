*** inc/X11/Intrinsic.h
--- res/X11/Intrinsic.h
***************
*** 1,5 ****
  
  
  #if defined( ARM_NORCROFT_HINT_CHECK )
! ___type p_type mumble;
  #endif  /* ARM_NORCROFT_HINT_CHECK */
--- 1,5 ----
  
  
  #if defined( ARM_NORCROFT_HINT_CHECK )
! p_type mumble;
  #endif  /* ARM_NORCROFT_HINT_CHECK */
*** inc/X11/ShellP.h
--- res/X11/ShellP.h
***************
*** 2,8 ****
--- 2,12 ----
  
  #if defined( X11_CLASS_CHECK )
  struct {
+ #ifdef __cplusplus
+ 	char *c_class;
+ #else
     char *class;
+ #endif
  } mumble;
  
  #endif  /* X11_CLASS_CHECK */
*** inc/X11/Xmu.h
--- res/X11/Xmu.h
***************
*** 1,5 ****
--- 1,7 ----
  
  
  #if defined( X11_SPRINTF_CHECK )
+ #ifndef __STDC__
  extern char *	sprintf();
+ #endif /* !defined __STDC__ */
  #endif  /* X11_SPRINTF_CHECK */
*** inc/Xm/BaseClassI.h
--- res/Xm/BaseClassI.h
***************
*** 1,6 ****
  
  
  #if defined( X11_CLASS_USAGE_CHECK )
! extern mumble (int  class);
  
  #endif  /* X11_CLASS_USAGE_CHECK */
--- 1,6 ----
  
  
  #if defined( X11_CLASS_USAGE_CHECK )
! extern mumble (int  c_class);
  
  #endif  /* X11_CLASS_USAGE_CHECK */
*** inc/Xm/Traversal.h
--- res/Xm/Traversal.h
***************
*** 2,8 ****
  
  #if defined( X11_NEW_CHECK )
  struct wedge {
     Widget	old, new; /* fix the new */
  };
! extern Wedged( Widget new, Widget old );
  #endif  /* X11_NEW_CHECK */
--- 2,12 ----
  
  #if defined( X11_NEW_CHECK )
  struct wedge {
+ #ifdef __cplusplus
+ 	Widget	old, c_new;
+ #else
     Widget	old, new; /* fix the new */
+ #endif
  };
! extern Wedged( Widget c_new, Widget old );
  #endif  /* X11_NEW_CHECK */
*** inc/ansi/math.h
--- res/ansi/math.h
***************
*** 1,5 ****
  
  
  #if defined( NEXT_MATH_PREFIX_CHECK )
! extern	double	__const__	mumble();
  #endif  /* NEXT_MATH_PREFIX_CHECK */
--- 1,5 ----
  
  
  #if defined( NEXT_MATH_PREFIX_CHECK )
! extern double mumble();
  #endif  /* NEXT_MATH_PREFIX_CHECK */
*** inc/ansi/stdlib.h
--- res/ansi/stdlib.h
***************
*** 1,5 ****
  
  
  #if defined( NEXT_VOLITILE_CHECK )
! extern	volatile	void	abort();
  #endif  /* NEXT_VOLITILE_CHECK */
--- 1,5 ----
  
  
  #if defined( NEXT_VOLITILE_CHECK )
! extern void abort();
  #endif  /* NEXT_VOLITILE_CHECK */
*** inc/assert.h
--- res/assert.h
***************
*** 1,3 ****
--- 1,13 ----
+ #ifndef FIXINC_BROKEN_ASSERT_STDLIB_CHECK
+ #define FIXINC_BROKEN_ASSERT_STDLIB_CHECK 1
+ 
+ #ifdef __cplusplus
+ #include <stdlib.h>
+ #endif
+ #ifndef FIXINC_BROKEN_ASSERT_STDIO_CHECK
+ #define FIXINC_BROKEN_ASSERT_STDIO_CHECK 1
+ 
+ #include <stdio.h>
  
  
  #if defined( BROKEN_ASSERT_STDIO_CHECK )
***************
*** 8,10 ****
--- 18,24 ----
  #if defined( BROKEN_ASSERT_STDLIB_CHECK )
  extern void exit ( int );
  #endif  /* BROKEN_ASSERT_STDLIB_CHECK */
+ 
+ #endif  /* FIXINC_BROKEN_ASSERT_STDIO_CHECK */
+ 
+ #endif  /* FIXINC_BROKEN_ASSERT_STDLIB_CHECK */
*** inc/bsd/libc.h
--- res/bsd/libc.h
***************
*** 1,5 ****
  
  
  #if defined( NEXT_TEMPLATE_CHECK )
! extern mumble( char * template); /* fix */
  #endif  /* NEXT_TEMPLATE_CHECK */
--- 1,5 ----
  
  
  #if defined( NEXT_TEMPLATE_CHECK )
! extern mumble( char *); /* fix */
  #endif  /* NEXT_TEMPLATE_CHECK */
*** inc/c_asm.h
--- res/c_asm.h
***************
*** 1,9 ****
--- 1,11 ----
  
  
  #if defined( DEC_INTERN_ASM_CHECK )
+ #ifdef __DECC
  float fasm {
      ... asm stuff ...
  };
  #pragma intrinsic( dasm )
+ #endif
  /* END ASM TEST*/
  #endif  /* DEC_INTERN_ASM_CHECK */
*** inc/curses.h
--- res/curses.h
***************
*** 1,21 ****
  
  
  #if defined( AVOID_BOOL_DEFINE_CHECK )
  # define bool	 char 
  
  #endif  /* AVOID_BOOL_DEFINE_CHECK */
  
  
  #if defined( AVOID_BOOL_TYPE_CHECK )
  typedef unsigned int	bool 	; /* bool type */
  #endif  /* AVOID_BOOL_TYPE_CHECK */
  
  
  #if defined( BAD_STRUCT_TERM_CHECK )
! typedef struct term;
  #endif  /* BAD_STRUCT_TERM_CHECK */
  
  
  #if defined( LYNX_VOID_INT_CHECK )
! # define	void	int 	/* curses foiled again */
  #endif  /* LYNX_VOID_INT_CHECK */
--- 1,25 ----
  
  
  #if defined( AVOID_BOOL_DEFINE_CHECK )
+ #ifndef __cplusplus
  # define bool	 char 
+ #endif
  
  #endif  /* AVOID_BOOL_DEFINE_CHECK */
  
  
  #if defined( AVOID_BOOL_TYPE_CHECK )
+ #ifndef __cplusplus
  typedef unsigned int	bool 	; /* bool type */
+ #endif
  #endif  /* AVOID_BOOL_TYPE_CHECK */
  
  
  #if defined( BAD_STRUCT_TERM_CHECK )
! struct term;
  #endif  /* BAD_STRUCT_TERM_CHECK */
  
  
  #if defined( LYNX_VOID_INT_CHECK )
! /* curses foiled again */
  #endif  /* LYNX_VOID_INT_CHECK */
*** inc/fcntl.h
--- res/fcntl.h
***************
*** 1,5 ****
  
  
  #if defined( LYNXOS_FCNTL_PROTO_CHECK )
! extern int fcntl(int, int, int);
  #endif  /* LYNXOS_FCNTL_PROTO_CHECK */
--- 1,5 ----
  
  
  #if defined( LYNXOS_FCNTL_PROTO_CHECK )
! extern int fcntl(int, int, ...);
  #endif  /* LYNXOS_FCNTL_PROTO_CHECK */
*** inc/hsfs/hsfs_spec.h
--- res/hsfs/hsfs_spec.h
***************
*** 1,5 ****
  
  
  #if defined( SUN_BOGUS_IFDEF_CHECK )
! #ifdef  __i386__ || __vax__ || __sun4c__
  #endif  /* SUN_BOGUS_IFDEF_CHECK */
--- 1,5 ----
  
  
  #if defined( SUN_BOGUS_IFDEF_CHECK )
! #if  __i386__ || __vax__ || __sun4c__
  #endif  /* SUN_BOGUS_IFDEF_CHECK */
*** inc/inttypes.h
--- res/inttypes.h
***************
*** 2,6 ****
  
  #if defined( HPUX11_UINT32_C_CHECK )
  #define CONCAT_U__(__c)	__CONCAT__(__c,u)
! #define UINT32_C(__c)	__CONCAT__(__CONCAT_U__(__c),l)
  #endif  /* HPUX11_UINT32_C_CHECK */
--- 2,6 ----
  
  #if defined( HPUX11_UINT32_C_CHECK )
  #define CONCAT_U__(__c)	__CONCAT__(__c,u)
! #define UINT32_C(__c) __CONCAT__(__c,ul)
  #endif  /* HPUX11_UINT32_C_CHECK */
*** inc/libgen.h
--- res/libgen.h
***************
*** 2,7 ****
  
  #if defined( BAD_LVAL_CHECK )
  #pragma extern_prefix "_FOO"
! #define something(x,y,z) _FOOsomething(x,y,z)
  #define mumble _FOOmumble
  #endif  /* BAD_LVAL_CHECK */
--- 2,7 ----
  
  #if defined( BAD_LVAL_CHECK )
  #pragma extern_prefix "_FOO"
! #define something _FOOsomething
  #define mumble _FOOmumble
  #endif  /* BAD_LVAL_CHECK */
*** inc/limits.h
--- res/limits.h
***************
*** 1,5 ****
--- 1,7 ----
  
  
  #if defined( LIMITS_IFNDEFS_CHECK )
+ #ifndef DBL_DIG
   #	define	DBL_DIG 	 0  /* somthin' */
+ #endif
  #endif  /* LIMITS_IFNDEFS_CHECK */
*** inc/machine/ansi.h
--- res/machine/ansi.h
***************
*** 1,5 ****
  
  
  #if defined( MACHINE_ANSI_H_VA_LIST_CHECK )
!  # define _BSD_VA_LIST_	char**
  #endif  /* MACHINE_ANSI_H_VA_LIST_CHECK */
--- 1,5 ----
  
  
  #if defined( MACHINE_ANSI_H_VA_LIST_CHECK )
!  # define _BSD_VA_LIST_	__builtin_va_list
  #endif  /* MACHINE_ANSI_H_VA_LIST_CHECK */
*** inc/malloc.h
--- res/malloc.h
***************
*** 1,8 ****
  
  
  #if defined( SUN_MALLOC_CHECK )
! typedef char *	malloc_t;
! int 	free();
! char*	malloc();
! char*	realloc();
  #endif  /* SUN_MALLOC_CHECK */
--- 1,8 ----
  
  
  #if defined( SUN_MALLOC_CHECK )
! typedef void *	malloc_t;
! void	free();
! void*	malloc();
! void*	realloc();
  #endif  /* SUN_MALLOC_CHECK */
*** inc/math.h
--- res/math.h
***************
*** 1,41 ****
  
  
  #if defined( BROKEN_CABS_CHECK )
  #ifdef __STDC__
! extern double cabs(struct dbl_hypot);
  #else
! extern double cabs();
  #endif
! extern double cabs(); /* This is a comment
                           and it ends here. */
  #endif  /* BROKEN_CABS_CHECK */
  
  
  #if defined( FIX_HEADER_BREAKAGE_CHECK )
! extern double floor(), ceil(), fmod(), fabs();
  #endif  /* FIX_HEADER_BREAKAGE_CHECK */
  
  
  #if defined( HPUX11_FABSF_CHECK )
  #ifdef _PA_RISC
  #  define fabsf(x) ((float)fabs((double)(float)(x)))
  #endif
  #endif  /* HPUX11_FABSF_CHECK */
  
  
  #if defined( HPUX8_BOGUS_INLINES_CHECK )
! inline int abs(int v) { return (v>=0)?v:-v; }
! inline double sqr(double v) { return v**0.5; }
  #endif  /* HPUX8_BOGUS_INLINES_CHECK */
  
  
  #if defined( ISC_FMOD_CHECK )
! extern double	fmod(double);
  #endif  /* ISC_FMOD_CHECK */
  
  
  #if defined( M88K_BAD_HYPOT_OPT_CHECK )
  extern double hypot();
  #endif  /* M88K_BAD_HYPOT_OPT_CHECK */
  
  
--- 1,65 ----
+ #ifndef FIXINC_SUNOS_MATHERR_DECL_CHECK
+ #define FIXINC_SUNOS_MATHERR_DECL_CHECK 1
+ 
+ struct exception;
+ #ifndef FIXINC_MATH_EXCEPTION_CHECK
+ #define FIXINC_MATH_EXCEPTION_CHECK 1
+ 
+ #ifdef __cplusplus
+ #define exception __math_exception
+ #endif
  
  
  #if defined( BROKEN_CABS_CHECK )
  #ifdef __STDC__
! 
  #else
! 
  #endif
!  /* This is a comment
                           and it ends here. */
  #endif  /* BROKEN_CABS_CHECK */
  
  
  #if defined( FIX_HEADER_BREAKAGE_CHECK )
! extern double floor(), ceil(), fmod(), fabs _PARAMS((double));
  #endif  /* FIX_HEADER_BREAKAGE_CHECK */
  
  
  #if defined( HPUX11_FABSF_CHECK )
  #ifdef _PA_RISC
+ #ifndef __cplusplus
  #  define fabsf(x) ((float)fabs((double)(float)(x)))
  #endif
+ #endif
  #endif  /* HPUX11_FABSF_CHECK */
  
  
  #if defined( HPUX8_BOGUS_INLINES_CHECK )
! extern "C" int abs(int);
! 
  #endif  /* HPUX8_BOGUS_INLINES_CHECK */
  
  
  #if defined( ISC_FMOD_CHECK )
! extern double	fmod(double, double);
  #endif  /* ISC_FMOD_CHECK */
  
  
  #if defined( M88K_BAD_HYPOT_OPT_CHECK )
  extern double hypot();
+ /* Workaround a stupid Motorola optimization if one
+    of x or y is 0.0 and the other is negative!  */
+ #ifdef __STDC__
+ static __inline__ double fake_hypot (double x, double y)
+ #else
+ static __inline__ double fake_hypot (x, y)
+ 	double x, y;
+ #endif
+ {
+ 	return fabs (hypot (x, y));
+ }
+ #define hypot	fake_hypot
  #endif  /* M88K_BAD_HYPOT_OPT_CHECK */
  
  
***************
*** 45,56 ****
--- 69,84 ----
  
  
  #if defined( MATH_HUGE_VAL_IFNDEF_CHECK )
+ #ifndef HUGE_VAL
  # define	HUGE_VAL 3.4e+40
+ #endif
  #endif  /* MATH_HUGE_VAL_IFNDEF_CHECK */
  
  
  #if defined( RS6000_DOUBLE_CHECK )
+ #ifndef __cplusplus
  extern int class();
+ #endif
  #endif  /* RS6000_DOUBLE_CHECK */
  
  
***************
*** 60,64 ****
--- 88,101 ----
  
  
  #if defined( SVR4__P_CHECK )
+ #ifndef __P
  #define __P(a) a
+ #endif
  #endif  /* SVR4__P_CHECK */
+ #ifdef __cplusplus
+ #undef exception
+ #endif
+ 
+ #endif  /* FIXINC_MATH_EXCEPTION_CHECK */
+ 
+ #endif  /* FIXINC_SUNOS_MATHERR_DECL_CHECK */
*** inc/netdnet/dnetdb.h
--- res/netdnet/dnetdb.h
***************
*** 1,5 ****
  
  
  #if defined( NODEENT_SYNTAX_CHECK )
! char *na_addr	
  #endif  /* NODEENT_SYNTAX_CHECK */
--- 1,5 ----
  
  
  #if defined( NODEENT_SYNTAX_CHECK )
! char *na_addr	;
  #endif  /* NODEENT_SYNTAX_CHECK */
*** inc/netinet/ip.h
--- res/netinet/ip.h
***************
*** 4,10 ****
  struct mumble {
    union {
      int x;
!   }
  }; /* mumbled struct */
  
  #endif  /* IP_MISSING_SEMI_CHECK */
--- 4,10 ----
  struct mumble {
    union {
      int x;
!   };
  }; /* mumbled struct */
  
  #endif  /* IP_MISSING_SEMI_CHECK */
*** inc/pixrect/memvar.h
--- res/pixrect/memvar.h
***************
*** 1,5 ****
--- 1,9 ----
  
  
  #if defined( SUN_CATMACRO_CHECK )
+ #ifdef __STDC__
+ #  define CAT(a,b) a##b
+ #else
  #define CAT(a,b)	a/**/b
+ #endif
  #endif  /* SUN_CATMACRO_CHECK */
*** inc/pthread.h
--- res/pthread.h
***************
*** 1,5 ****
  
  
  #if defined( PTHREAD_PAGE_SIZE_CHECK )
! int __page_size;
  #endif  /* PTHREAD_PAGE_SIZE_CHECK */
--- 1,5 ----
  
  
  #if defined( PTHREAD_PAGE_SIZE_CHECK )
! extern int __page_size;
  #endif  /* PTHREAD_PAGE_SIZE_CHECK */
*** inc/reg_types.h
--- res/reg_types.h
***************
*** 4,11 ****
  typedef struct {
    int stuff, mo_suff;
  } regex_t;
! extern regex_t    re;
! extern regoff_t   ro;
! extern regmatch_t rm;
  
  #endif  /* OSF_NAMESPACE_A_CHECK */
--- 4,11 ----
  typedef struct {
    int stuff, mo_suff;
  } regex_t;
! extern __regex_t    re;
! extern __regoff_t   ro;
! extern __regmatch_t rm;
  
  #endif  /* OSF_NAMESPACE_A_CHECK */
*** inc/regex.h
--- res/regex.h
***************
*** 2,5 ****
--- 2,8 ----
  
  #if defined( OSF_NAMESPACE_C_CHECK )
  #include <reg_types.h>
+ typedef __regex_t	regex_t;
+ typedef __regoff_t	regoff_t;
+ typedef __regmatch_t	regmatch_t;
  #endif  /* OSF_NAMESPACE_C_CHECK */
*** inc/rpc/auth.h
--- res/rpc/auth.h
***************
*** 1,12 ****
--- 1,17 ----
  
  
  #if defined( STRUCT_SOCKADDR_CHECK )
+ struct sockaddr;
  extern AUTH* authdes_create( struct sockaddr* );
  #endif  /* STRUCT_SOCKADDR_CHECK */
  
  
  #if defined( SUN_AUTH_PROTO_CHECK )
  struct auth_t {
+ #ifdef __cplusplus
+     int (*name)(...); /* C++ bad */
+ #else
      int (*name)(); /* C++ bad */
+ #endif
  };
  #endif  /* SUN_AUTH_PROTO_CHECK */
*** inc/rpc/rpc.h
--- res/rpc/rpc.h
***************
*** 1,5 ****
  
  
  #if defined( NESTED_AUTH_DES_CHECK )
! /*#include <rpc/auth_des.h> /* skip this */
  #endif  /* NESTED_AUTH_DES_CHECK */
--- 1,5 ----
  
  
  #if defined( NESTED_AUTH_DES_CHECK )
! /*#include <rpc/auth_des.h> */ /* skip this */
  #endif  /* NESTED_AUTH_DES_CHECK */
*** inc/rpc/xdr.h
--- res/rpc/xdr.h
***************
*** 1,5 ****
--- 1,6 ----
  
  
  #if defined( STRUCT_FILE_CHECK )
+ struct __file_s;
  extern void xdrstdio_create( struct __file_s* );
  #endif  /* STRUCT_FILE_CHECK */
*** inc/rpcsvc/rstat.h
--- res/rpcsvc/rstat.h
***************
*** 2,7 ****
  
  #if defined( STATSSWTCH_CHECK )
  struct statswtch {
!   int boottime
  };
  #endif  /* STATSSWTCH_CHECK */
--- 2,7 ----
  
  #if defined( STATSSWTCH_CHECK )
  struct statswtch {
!   int boottime;
  };
  #endif  /* STATSSWTCH_CHECK */
*** inc/rpcsvc/rusers.h
--- res/rpcsvc/rusers.h
***************
*** 2,7 ****
  
  #if defined( SUN_RUSERS_SEMI_CHECK )
  struct mumble
!   int _cnt
  };
  #endif  /* SUN_RUSERS_SEMI_CHECK */
--- 2,7 ----
  
  #if defined( SUN_RUSERS_SEMI_CHECK )
  struct mumble
!   int _cnt;
  };
  #endif  /* SUN_RUSERS_SEMI_CHECK */
*** inc/sparc/asm_linkage.h
--- res/sparc/asm_linkage.h
***************
*** 1,5 ****
  
  
  #if defined( KANDR_CONCAT_CHECK )
! #define __CONCAT__(a,b) a/**/b
  #endif  /* KANDR_CONCAT_CHECK */
--- 1,5 ----
  
  
  #if defined( KANDR_CONCAT_CHECK )
! #define __CONCAT__(a,b) a##b
  #endif  /* KANDR_CONCAT_CHECK */
*** inc/stdio.h
--- res/stdio.h
***************
*** 1,27 ****
  
  
  #if defined( ALPHA_GETOPT_CHECK )
! extern int getopt(int, char *[], char *);
  #endif  /* ALPHA_GETOPT_CHECK */
  
  
  #if defined( ISC_OMITS_WITH_STDC_CHECK )
! #if !defined(__STDC__) && !defined(_POSIX_SOURCE) /* ? ! */
  int foo;
  #endif
  #endif  /* ISC_OMITS_WITH_STDC_CHECK */
  
  
  #if defined( READ_RET_TYPE_CHECK )
! extern int	fclose(), fflush(), fread(), fwrite(), foo();
  #endif  /* READ_RET_TYPE_CHECK */
  
  
  #if defined( RS6000_PARAM_CHECK )
! extern int rename(const char *old, const char *new);
  #endif  /* RS6000_PARAM_CHECK */
  
  
  #if defined( STDIO_STDARG_H_CHECK )
  
  #endif  /* STDIO_STDARG_H_CHECK */
--- 1,35 ----
+ #ifndef FIXINC_STDIO_STDARG_H_CHECK
+ #define FIXINC_STDIO_STDARG_H_CHECK 1
+ 
+ #define __need___va_list
+ #include <stdarg.h>
  
  
  #if defined( ALPHA_GETOPT_CHECK )
! extern int getopt(int, char *const[], const char *);
  #endif  /* ALPHA_GETOPT_CHECK */
  
  
  #if defined( ISC_OMITS_WITH_STDC_CHECK )
! #if !defined(_POSIX_SOURCE) /* ? ! */
  int foo;
  #endif
  #endif  /* ISC_OMITS_WITH_STDC_CHECK */
  
  
  #if defined( READ_RET_TYPE_CHECK )
! extern unsigned int fread(), fwrite();
! extern int	fclose(), fflush(), foo();
  #endif  /* READ_RET_TYPE_CHECK */
  
  
  #if defined( RS6000_PARAM_CHECK )
! extern int rename(const char *_old, const char *_new);
  #endif  /* RS6000_PARAM_CHECK */
  
  
  #if defined( STDIO_STDARG_H_CHECK )
  
  #endif  /* STDIO_STDARG_H_CHECK */
+ 
+ #endif  /* FIXINC_STDIO_STDARG_H_CHECK */
*** inc/stdlib.h
--- res/stdlib.h
***************
*** 1,38 ****
  
  
  #if defined( ARM_WCHAR_CHECK )
! # ifndef 	 __wchar_t /* we don't have wchar_t yet, ... */
! #  define  __wchar_t  short
  # endif /* __wchar_t */
  #endif  /* ARM_WCHAR_CHECK */
  
  
  #if defined( INT_ABORT_FREE_AND_EXIT_CHECK )
! extern int abort(int);
! extern int free(void*);
! extern int exit(void*);
  #endif  /* INT_ABORT_FREE_AND_EXIT_CHECK */
  
  
  #if defined( NEWS_OS_RECURSION_CHECK )
  #include <stdlib.h>
  #endif  /* NEWS_OS_RECURSION_CHECK */
  
  
  #if defined( SVR4_GETCWD_CHECK )
! extern char* getcwd(char *, int);
  #endif  /* SVR4_GETCWD_CHECK */
  
  
  #if defined( SVR4_PROFIL_CHECK )
! profil(unsigned short *, unsigned int, unsigned int, unsigned int);
  #endif  /* SVR4_PROFIL_CHECK */
  
  
  #if defined( SYSZ_STDLIB_FOR_SUN_CHECK )
! extern char*	calloc(size_t);
! extern char*	malloc(size_t);
! extern char*	realloc(void*,size_t);
! extern char*	bsearch(void*,size_t,size_t);
  
  #endif  /* SYSZ_STDLIB_FOR_SUN_CHECK */
--- 1,40 ----
  
  
  #if defined( ARM_WCHAR_CHECK )
! # ifndef 	 _GCC_WCHAR_T /* we don't have wchar_t yet, ... */
! #  define  _GCC_WCHAR_T  short
  # endif /* __wchar_t */
  #endif  /* ARM_WCHAR_CHECK */
  
  
  #if defined( INT_ABORT_FREE_AND_EXIT_CHECK )
! extern void	abort(int);
! extern void	free(void*);
! extern void	exit(void*);
  #endif  /* INT_ABORT_FREE_AND_EXIT_CHECK */
  
  
  #if defined( NEWS_OS_RECURSION_CHECK )
+ #ifdef BOGUS_RECURSION
  #include <stdlib.h>
+ #endif
  #endif  /* NEWS_OS_RECURSION_CHECK */
  
  
  #if defined( SVR4_GETCWD_CHECK )
! extern char* getcwd(char *, size_t);
  #endif  /* SVR4_GETCWD_CHECK */
  
  
  #if defined( SVR4_PROFIL_CHECK )
! profil(unsigned short *, size_t, int, unsigned int);
  #endif  /* SVR4_PROFIL_CHECK */
  
  
  #if defined( SYSZ_STDLIB_FOR_SUN_CHECK )
! extern void *	calloc(size_t);
! extern void *	malloc(size_t);
! extern void *	realloc(void*,size_t);
! extern void *	bsearch(void*,size_t,size_t);
  
  #endif  /* SYSZ_STDLIB_FOR_SUN_CHECK */
*** inc/strings.h
--- res/strings.h
***************
*** 1,5 ****
  
  
  #if defined( SUNOS_STRLEN_CHECK )
!  int	strlen(); /* string length */
  #endif  /* SUNOS_STRLEN_CHECK */
--- 1,5 ----
  
  
  #if defined( SUNOS_STRLEN_CHECK )
!  __SIZE_TYPE__ strlen(); /* string length */
  #endif  /* SUNOS_STRLEN_CHECK */
*** inc/sundev/vuid_event.h
--- res/sundev/vuid_event.h
***************
*** 1,5 ****
  
  
  #if defined( BADQUOTE_CHECK )
! /* doesn't have matched single quotes */
  #endif  /* BADQUOTE_CHECK */
--- 1,5 ----
  
  
  #if defined( BADQUOTE_CHECK )
! /* does not have matched single quotes */
  #endif  /* BADQUOTE_CHECK */
*** inc/sunwindow/win_lock.h
--- res/sunwindow/win_lock.h
***************
*** 1,7 ****
  
  
  #if defined( ECD_CURSOR_CHECK )
! #ifdef ecd.cursor
  #error bogus
  #endif /* ecd+cursor */
  #endif  /* ECD_CURSOR_CHECK */
--- 1,7 ----
  
  
  #if defined( ECD_CURSOR_CHECK )
! #ifdef ecd_cursor
  #error bogus
  #endif /* ecd+cursor */
  #endif  /* ECD_CURSOR_CHECK */
*** inc/sym.h
--- res/sym.h
***************
*** 1,7 ****
  
  
  #if defined( ALPHA_PARENS_CHECK )
! #ifndef(__mips64) /* bogus */
  extern int foo;
  #endif
  #endif  /* ALPHA_PARENS_CHECK */
--- 1,7 ----
  
  
  #if defined( ALPHA_PARENS_CHECK )
! #ifndef __mips64 /* bogus */
  extern int foo;
  #endif
  #endif  /* ALPHA_PARENS_CHECK */
*** inc/sys/asm.h
--- res/sys/asm.h
***************
*** 1,5 ****
  
  
  #if defined( IRIX_ASM_APOSTROPHE_CHECK )
! # and we're on vacation
  #endif  /* IRIX_ASM_APOSTROPHE_CHECK */
--- 1,5 ----
  
  
  #if defined( IRIX_ASM_APOSTROPHE_CHECK )
! # and we are on vacation
  #endif  /* IRIX_ASM_APOSTROPHE_CHECK */
*** inc/sys/file.h
--- res/sys/file.h
***************
*** 1,5 ****
  
  
  #if defined( HP_SYSFILE_CHECK )
! extern void foo(...); /* HPUX_SOURCE - bad varargs */
  #endif  /* HP_SYSFILE_CHECK */
--- 1,5 ----
  
  
  #if defined( HP_SYSFILE_CHECK )
! extern void foo(struct file *, ...); /* HPUX_SOURCE - bad varargs */
  #endif  /* HP_SYSFILE_CHECK */
Only in inc:  inc/sys/lc_core.h
*** inc/sys/limits.h
--- res/sys/limits.h
***************
*** 2,8 ****
  
  #if defined( NESTED_SYS_LIMITS_CHECK )
  /*
! #define CHILD_MAX 20 /* Max, Max, ... */ /*
! #define OPEN_MAX  20 /* Max, Max, ... */
  
  #endif  /* NESTED_SYS_LIMITS_CHECK */
--- 2,8 ----
  
  #if defined( NESTED_SYS_LIMITS_CHECK )
  /*
! #define CHILD_MAX 20  Max, Max, ... */ /*
! #define OPEN_MAX  20  Max, Max, ... */
  
  #endif  /* NESTED_SYS_LIMITS_CHECK */
*** inc/sys/mman.h
--- res/sys/mman.h
***************
*** 1,5 ****
--- 1,16 ----
+ #ifndef FIXINC_CXX_UNREADY_CHECK
+ #define FIXINC_CXX_UNREADY_CHECK 1
+ 
+ #ifdef __cplusplus
+ extern "C" {
+ #endif
  
  
  #if defined( CXX_UNREADY_CHECK )
  extern void* malloc( size_t );
  #endif  /* CXX_UNREADY_CHECK */
+ #ifdef __cplusplus
+ }
+ #endif
+ 
+ #endif  /* FIXINC_CXX_UNREADY_CHECK */
*** inc/sys/param.h
--- res/sys/param.h
***************
*** 1,11 ****
  
  
  #if defined( AUX_ASM_CHECK )
! #ifndef NOINLINE /* ain't got no inline, so we got it */
  #endif /* NOINLINE */
  #endif  /* AUX_ASM_CHECK */
  
  
  #if defined( HPUX_MAXINT_CHECK )
  #define MAXINT 0x7FFFFFFF
  #endif  /* HPUX_MAXINT_CHECK */
--- 1,13 ----
  
  
  #if defined( AUX_ASM_CHECK )
! #if !defined(NOINLINE) && !defined(__GNUC__) /* ain't got no inline, so we got it */
  #endif /* NOINLINE */
  #endif  /* AUX_ASM_CHECK */
  
  
  #if defined( HPUX_MAXINT_CHECK )
+ #ifndef MAXINT
  #define MAXINT 0x7FFFFFFF
+ #endif
  #endif  /* HPUX_MAXINT_CHECK */
*** inc/sys/signal.h
--- res/sys/signal.h
***************
*** 1,10 ****
  
  
  #if defined( AIX_VOLATILE_CHECK )
! typedef volatile int sig_atomic_t;
  #endif  /* AIX_VOLATILE_CHECK */
  
  
  #if defined( SUN_SIGNAL_CHECK )
  void	(*signal())();
  #endif  /* SUN_SIGNAL_CHECK */
--- 1,14 ----
  
  
  #if defined( AIX_VOLATILE_CHECK )
! typedef int sig_atomic_t;
  #endif  /* AIX_VOLATILE_CHECK */
  
  
  #if defined( SUN_SIGNAL_CHECK )
+ #ifdef __cplusplus
+ void	(*signal(...))(...);
+ #else
  void	(*signal())();
+ #endif
  #endif  /* SUN_SIGNAL_CHECK */
*** inc/sys/spinlock.h
--- res/sys/spinlock.h
***************
*** 1,5 ****
  
  
  #if defined( HP_INLINE_CHECK )
!  # include "../machine/mumble.h"
  #endif  /* HP_INLINE_CHECK */
--- 1,5 ----
  
  
  #if defined( HP_INLINE_CHECK )
!  # include <machine/mumble.h>
  #endif  /* HP_INLINE_CHECK */
*** inc/sys/stat.h
--- res/sys/stat.h
***************
*** 1,27 ****
  
  
  #if defined( M88K_BAD_S_IF_CHECK )
! #define S_ISREG(m) (m & S_IFREG) /* is regular? */
  #endif  /* M88K_BAD_S_IF_CHECK */
  
  
  #if defined( RS6000_FCHMOD_CHECK )
! extern int fchmod(char *, mode_t);
  #endif  /* RS6000_FCHMOD_CHECK */
  
  
  #if defined( SCO_STATIC_FUNC_CHECK )
  #ifdef __STDC__
  static int	stat(const char *__f, struct stat *__p) {
  return __stat32(__f, __p);
  }
  
  #  else /* !__STDC__ */
  static int	stat(__f, __p)
  char *__f;
  struct stat *__p;
  {
  return __stat32(__f, __p);
  }
  #endif
  #endif  /* SCO_STATIC_FUNC_CHECK */
--- 1,39 ----
  
  
  #if defined( M88K_BAD_S_IF_CHECK )
! #define S_ISREG(m) (((m) & S_IFMT) == S_IFREG) /* is regular? */
  #endif  /* M88K_BAD_S_IF_CHECK */
  
  
  #if defined( RS6000_FCHMOD_CHECK )
! extern int fchmod(int, mode_t);
  #endif  /* RS6000_FCHMOD_CHECK */
  
  
  #if defined( SCO_STATIC_FUNC_CHECK )
  #ifdef __STDC__
+ #if __cplusplus
+ extern "C" {
+ #endif /* __cplusplus */
  static int	stat(const char *__f, struct stat *__p) {
  return __stat32(__f, __p);
  }
+ #if __cplusplus
+  }
+ #endif /* __cplusplus */
  
  #  else /* !__STDC__ */
+ #if __cplusplus
+ extern "C" {
+ #endif /* __cplusplus */
  static int	stat(__f, __p)
  char *__f;
  struct stat *__p;
  {
  return __stat32(__f, __p);
  }
+ #if __cplusplus
+  }
+ #endif /* __cplusplus */
  #endif
  #endif  /* SCO_STATIC_FUNC_CHECK */
*** inc/sys/time.h
--- res/sys/time.h
***************
*** 1,5 ****
  
  
  #if defined( HPUX_SYSTIME_CHECK )
! extern struct sigevent;
  #endif  /* HPUX_SYSTIME_CHECK */
--- 1,5 ----
  
  
  #if defined( HPUX_SYSTIME_CHECK )
! struct sigevent;
  #endif  /* HPUX_SYSTIME_CHECK */
*** inc/sys/times.h
--- res/sys/times.h
***************
*** 1,5 ****
  
  
  #if defined( SCO_UTIME_CHECK )
! extern int utime(const char *, struct utimbuf *);
  #endif  /* SCO_UTIME_CHECK */
--- 1,5 ----
  
  
  #if defined( SCO_UTIME_CHECK )
! extern int utime(const char *, const struct utimbuf *);
  #endif  /* SCO_UTIME_CHECK */
*** inc/sys/types.h
--- res/sys/types.h
***************
*** 1,11 ****
  
  
  #if defined( IRIX_MULTILINE_CMNT_CHECK )
! /* we check the type of the result
! // of the sizeof something.  This is a bad test :-( */
  #endif  /* IRIX_MULTILINE_CMNT_CHECK */
  
  
  #if defined( SYSTYPES_STDLIB_SIZE_T_CHECK )
! typedef unsigned int size_t; /* size of something */
  #endif  /* SYSTYPES_STDLIB_SIZE_T_CHECK */
--- 1,17 ----
  
  
  #if defined( IRIX_MULTILINE_CMNT_CHECK )
! /* we check the type of the result */
! // /* of the sizeof something.  This is a bad test :-( */
  #endif  /* IRIX_MULTILINE_CMNT_CHECK */
  
  
  #if defined( SYSTYPES_STDLIB_SIZE_T_CHECK )
! #ifndef __SIZE_TYPE__
! #define __SIZE_TYPE__ long unsigned int
! #endif
! #ifndef _GCC_SIZE_T
! #define _GCC_SIZE_T
! typedef __SIZE_TYPE__ size_t; /* size of something */
! #endif
  #endif  /* SYSTYPES_STDLIB_SIZE_T_CHECK */
*** inc/sys/wait.h
--- res/sys/wait.h
***************
*** 2,12 ****
  
  #if defined( AIX_SYSWAIT_CHECK )
  /* bos325, */
  extern pid_t wait3();
  /* pid_t wait3(int *, int, struct rusage *); */
  #endif  /* AIX_SYSWAIT_CHECK */
  
  
  #if defined( NEXT_WAIT_UNION_CHECK )
! extern pid_d wait(union wait*);
  #endif  /* NEXT_WAIT_UNION_CHECK */
--- 2,13 ----
  
  #if defined( AIX_SYSWAIT_CHECK )
  /* bos325, */
+ struct rusage;
  extern pid_t wait3();
  /* pid_t wait3(int *, int, struct rusage *); */
  #endif  /* AIX_SYSWAIT_CHECK */
  
  
  #if defined( NEXT_WAIT_UNION_CHECK )
! extern pid_d wait(void*);
  #endif  /* NEXT_WAIT_UNION_CHECK */
*** inc/testing.h
--- res/testing.h
***************
*** 1,43 ****
  
  
  #if defined( CTRL_QUOTES_DEF_CHECK )
! #define BSD43_CTRL(n, x) (('n'<<8)+x)
  #endif  /* CTRL_QUOTES_DEF_CHECK */
  
  
  #if defined( CTRL_QUOTES_USE_CHECK )
! #define TIOCFOO BSD43_CTRL(T, 1)
  #endif  /* CTRL_QUOTES_USE_CHECK */
  
  
  #if defined( IO_QUOTES_DEF_CHECK )
! #define BSD43__IOWR(n, x) (('n'<<8)+x)
! #define _IOWN(x,y,t)  (_IOC_IN|(((t)&_IOCPARM_MASK)<<16)|('x'<<8)|y)
! #define _IO(x,y)      ('x'<<8|y)
  #endif  /* IO_QUOTES_DEF_CHECK */
  
  
  #if defined( IO_QUOTES_USE_CHECK )
! #define TIOCFOO BSD43__IOWR(T, 1)
  #endif  /* IO_QUOTES_USE_CHECK */
  
  
  #if defined( MACHINE_NAME_CHECK )
  #endif  /* MACHINE_NAME_CHECK */
  
  
  #if defined( SCO_STRICT_ANSI_CHECK )
! #if !__STDC__ /* not standard C */
  int foo;
  #endif
  #endif  /* SCO_STRICT_ANSI_CHECK */
  
  
  #if defined( UNDEFINE_NULL_CHECK )
  #define NULL 0UL
  #define NULL	((void*)0)
  
  #endif  /* UNDEFINE_NULL_CHECK */
--- 1,47 ----
  
  
  #if defined( CTRL_QUOTES_DEF_CHECK )
! #define BSD43_CTRL(n, x) ((n<<8)+x)
  #endif  /* CTRL_QUOTES_DEF_CHECK */
  
  
  #if defined( CTRL_QUOTES_USE_CHECK )
! #define TIOCFOO BSD43_CTRL('T', 1)
  #endif  /* CTRL_QUOTES_USE_CHECK */
  
  
  #if defined( IO_QUOTES_DEF_CHECK )
! #define BSD43__IOWR(n, x) ((n<<8)+x)
! #define _IOWN(x,y,t)  (_IOC_IN|(((t)&_IOCPARM_MASK)<<16)|(x<<8)|y)
! #define _IO(x,y)      (x<<8|y)
  #endif  /* IO_QUOTES_DEF_CHECK */
  
  
  #if defined( IO_QUOTES_USE_CHECK )
! #define TIOCFOO BSD43__IOWR('T', 1)
  #endif  /* IO_QUOTES_USE_CHECK */
  
  
  #if defined( MACHINE_NAME_CHECK )
  #endif  /* MACHINE_NAME_CHECK */
  
  
  #if defined( SCO_STRICT_ANSI_CHECK )
! #if !defined(__STRICT_ANSI__) /* not standard C */
  int foo;
  #endif
  #endif  /* SCO_STRICT_ANSI_CHECK */
  
  
  #if defined( UNDEFINE_NULL_CHECK )
+ #ifndef NULL
  #define NULL 0UL
+ #endif
+ #ifndef NULL
  #define NULL	((void*)0)
+ #endif
  
  #endif  /* UNDEFINE_NULL_CHECK */
*** inc/time.h
--- res/time.h
***************
*** 1,3 ****
--- 1,6 ----
+ #ifndef FIXINC_M88K_MULTI_INCL_CHECK
+ #define FIXINC_M88K_MULTI_INCL_CHECK 1
+ 
  
  
  #if defined( M88K_MULTI_INCL_CHECK )
***************
*** 6,10 ****
  
  
  #if defined( VXWORKS_NEEDS_VXTYPES_CHECK )
! uint_t	_clocks_per_sec;
  #endif  /* VXWORKS_NEEDS_VXTYPES_CHECK */
--- 9,15 ----
  
  
  #if defined( VXWORKS_NEEDS_VXTYPES_CHECK )
! unsigned int	_clocks_per_sec;
  #endif  /* VXWORKS_NEEDS_VXTYPES_CHECK */
+ 
+ #endif  /* FIXINC_M88K_MULTI_INCL_CHECK */
*** inc/unistd.h
--- res/unistd.h
***************
*** 1,5 ****
  
  
  #if defined( ALPHA_SBRK_CHECK )
! extern char* sbrk(ptrdiff_t increment);
  #endif  /* ALPHA_SBRK_CHECK */
--- 1,5 ----
  
  
  #if defined( ALPHA_SBRK_CHECK )
! extern void *sbrk(ptrdiff_t increment);
  #endif  /* ALPHA_SBRK_CHECK */
