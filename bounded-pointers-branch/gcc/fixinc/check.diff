*** inc/X11/Intrinsic.h
--- res/X11/Intrinsic.h
***************
*** 1,5 ****
  
  
  #ifndef ARM_NORCROFT_HINT_CHECK
! ___type p_type mumble;
  #endif  /* ARM_NORCROFT_HINT_CHECK */
--- 1,5 ----
  
  
  #ifndef ARM_NORCROFT_HINT_CHECK
! p_type mumble;
  #endif  /* ARM_NORCROFT_HINT_CHECK */
*** inc/X11/ShellP.h
--- res/X11/ShellP.h
***************
*** 2,8 ****
--- 2,12 ----
  
  #ifndef X11_CLASS_CHECK
  struct {
+ #ifdef __cplusplus
+ 	char *c_class;
+ #else
     char *class;
+ #endif
  } mumble;
  
  #endif  /* X11_CLASS_CHECK */
*** inc/X11/Xmu.h
--- res/X11/Xmu.h
***************
*** 1,5 ****
--- 1,7 ----
  
  
  #ifndef X11_SPRINTF_CHECK
+ #ifndef __STDC__
  extern char *	sprintf();
+ #endif /* !defined __STDC__ */
  #endif  /* X11_SPRINTF_CHECK */
*** inc/Xm/BaseClassI.h
--- res/Xm/BaseClassI.h
***************
*** 1,6 ****
  
  
  #ifndef X11_CLASS_USAGE_CHECK
! extern mumble (int  class);
  
  #endif  /* X11_CLASS_USAGE_CHECK */
--- 1,6 ----
  
  
  #ifndef X11_CLASS_USAGE_CHECK
! extern mumble (int  c_class);
  
  #endif  /* X11_CLASS_USAGE_CHECK */
*** inc/Xm/Traversal.h
--- res/Xm/Traversal.h
***************
*** 2,8 ****
  
  #ifndef X11_NEW_CHECK
  struct wedge {
     Widget	old, new; /* fix the new */
  };
! extern Wedged( Widget new, Widget old );
  #endif  /* X11_NEW_CHECK */
--- 2,12 ----
  
  #ifndef X11_NEW_CHECK
  struct wedge {
+ #ifdef __cplusplus
+ 	Widget	old, c_new;
+ #else
     Widget	old, new; /* fix the new */
+ #endif
  };
! extern Wedged( Widget c_new, Widget old );
  #endif  /* X11_NEW_CHECK */
*** inc/assert.h
--- res/assert.h
***************
*** 1,3 ****
--- 1,13 ----
+ #ifndef FIXINC_BROKEN_ASSERT_STDLIB_CHECK
+ #define FIXINC_BROKEN_ASSERT_STDLIB_CHECK 1
+ 
+ #ifdef __cplusplus
+ #include <stdlib.h>
+ #endif
+ #ifndef FIXINC_BROKEN_ASSERT_STDIO_CHECK
+ #define FIXINC_BROKEN_ASSERT_STDIO_CHECK 1
+ 
+ #include <stdio.h>
  
  
  #ifndef BROKEN_ASSERT_STDIO_CHECK
***************
*** 8,10 ****
--- 18,24 ----
  #ifndef BROKEN_ASSERT_STDLIB_CHECK
  extern void exit ( int );
  #endif  /* BROKEN_ASSERT_STDLIB_CHECK */
+ 
+ #endif  /* FIXINC_BROKEN_ASSERT_STDIO_CHECK */
+ 
+ #endif  /* FIXINC_BROKEN_ASSERT_STDLIB_CHECK */
*** inc/c_asm.h
--- res/c_asm.h
***************
*** 1,9 ****
--- 1,11 ----
  
  
  #ifndef DEC_INTERN_ASM_CHECK
+ #ifdef __DECC
  float fasm {
      ... asm stuff ...
  };
  #pragma intrinsic( dasm )
+ #endif
  /* END ASM TEST*/
  #endif  /* DEC_INTERN_ASM_CHECK */
*** inc/curses.h
--- res/curses.h
***************
*** 1,16 ****
  
  
  #ifndef AVOID_BOOL_CHECK
  # define bool	 char 
  typedef unsigned int	bool 	; /* bool type */
  #endif  /* AVOID_BOOL_CHECK */
  
  
  #ifndef BAD_STRUCT_TERM_CHECK
! typedef struct term;
  #endif  /* BAD_STRUCT_TERM_CHECK */
  
  
  #ifndef LYNX_VOID_INT_CHECK
! # define	void	int 	/* curses foiled again */
  #endif  /* LYNX_VOID_INT_CHECK */
--- 1,20 ----
  
  
  #ifndef AVOID_BOOL_CHECK
+ #ifndef __cplusplus
  # define bool	 char 
+ #endif
+ #ifndef __cplusplus
  typedef unsigned int	bool 	; /* bool type */
+ #endif
  #endif  /* AVOID_BOOL_CHECK */
  
  
  #ifndef BAD_STRUCT_TERM_CHECK
! struct term;
  #endif  /* BAD_STRUCT_TERM_CHECK */
  
  
  #ifndef LYNX_VOID_INT_CHECK
! /* curses foiled again */
  #endif  /* LYNX_VOID_INT_CHECK */
*** inc/fcntl.h
--- res/fcntl.h
***************
*** 1,5 ****
  
  
  #ifndef LYNXOS_FCNTL_PROTO_CHECK
! extern int fcntl(int, int, int);
  #endif  /* LYNXOS_FCNTL_PROTO_CHECK */
--- 1,5 ----
  
  
  #ifndef LYNXOS_FCNTL_PROTO_CHECK
! extern int fcntl(int, int, ...);
  #endif  /* LYNXOS_FCNTL_PROTO_CHECK */
*** inc/inttypes.h
--- res/inttypes.h
***************
*** 2,6 ****
  
  #ifndef HPUX11_UINT32_C_CHECK
  #define CONCAT_U__(__c)	__CONCAT__(__c,u)
! #define UINT32_C(__c)	__CONCAT__(__CONCAT_U__(__c),l)
  #endif  /* HPUX11_UINT32_C_CHECK */
--- 2,6 ----
  
  #ifndef HPUX11_UINT32_C_CHECK
  #define CONCAT_U__(__c)	__CONCAT__(__c,u)
! #define UINT32_C(__c) __CONCAT__(__c,ul)
  #endif  /* HPUX11_UINT32_C_CHECK */
*** inc/libgen.h
--- res/libgen.h
***************
*** 2,7 ****
  
  #ifndef BAD_LVAL_CHECK
  #pragma extern_prefix "_FOO"
! #define something(x,y,z) _FOOsomething(x,y,z)
  #define mumble _FOOmumble
  #endif  /* BAD_LVAL_CHECK */
--- 2,7 ----
  
  #ifndef BAD_LVAL_CHECK
  #pragma extern_prefix "_FOO"
! #define something _FOOsomething
  #define mumble _FOOmumble
  #endif  /* BAD_LVAL_CHECK */
*** inc/limits.h
--- res/limits.h
***************
*** 1,5 ****
--- 1,7 ----
  
  
  #ifndef LIMITS_IFNDEFS_CHECK
+ #ifndef DBL_DIG
   #	define	DBL_DIG 	 0  /* somthin' */
+ #endif
  #endif  /* LIMITS_IFNDEFS_CHECK */
*** inc/math.h
--- res/math.h
***************
*** 1,35 ****
  
  
  #ifndef BROKEN_CABS_CHECK
  #ifdef __STDC__
- extern double cabs(struct dbl_hypot);
  #else
- extern double cabs();
  #endif
  #endif  /* BROKEN_CABS_CHECK */
  
  
  #ifndef FIX_HEADER_BREAKAGE_CHECK
! extern double floor(), ceil(), fmod(), fabs();
  #endif  /* FIX_HEADER_BREAKAGE_CHECK */
  
  
  #ifndef HPUX8_BOGUS_INLINES_CHECK
! inline int abs(int v) { return (v>=0)?v:-v; }
! inline double sqr(double v) { return v**0.5; }
  #endif  /* HPUX8_BOGUS_INLINES_CHECK */
  
  
  #ifndef ISC_FMOD_CHECK
! extern double	fmod(double);
  #endif  /* ISC_FMOD_CHECK */
  
  
  #ifndef M88K_BAD_HYPOT_OPT_CHECK
  extern double hypot();
  #endif  /* M88K_BAD_HYPOT_OPT_CHECK */
  
  
  #ifndef MATH_EXCEPTION_CHECK
  typedef struct exception t_math_exception;
  #endif  /* MATH_EXCEPTION_CHECK */
--- 1,56 ----
+ #ifndef FIXINC_MATH_EXCEPTION_CHECK
+ #define FIXINC_MATH_EXCEPTION_CHECK 1
+ 
+ #ifdef __cplusplus
+ #define exception __math_exception
+ #endif
  
  
  #ifndef BROKEN_CABS_CHECK
  #ifdef __STDC__
  #else
  #endif
  #endif  /* BROKEN_CABS_CHECK */
  
  
  #ifndef FIX_HEADER_BREAKAGE_CHECK
! extern double floor(), ceil(), fmod(), fabs _PARAMS((double));
  #endif  /* FIX_HEADER_BREAKAGE_CHECK */
  
  
  #ifndef HPUX8_BOGUS_INLINES_CHECK
! extern "C" int abs(int);
! 
  #endif  /* HPUX8_BOGUS_INLINES_CHECK */
  
  
  #ifndef ISC_FMOD_CHECK
! extern double	fmod(double, double);
  #endif  /* ISC_FMOD_CHECK */
  
  
  #ifndef M88K_BAD_HYPOT_OPT_CHECK
  extern double hypot();
+ /* Workaround a stupid Motorola optimization if one
+    of x or y is 0.0 and the other is negative!  */
+ #ifdef __STDC__
+ static __inline__ double fake_hypot (double x, double y)
+ #else
+ static __inline__ double fake_hypot (x, y)
+ 	double x, y;
+ #endif
+ {
+ 	return fabs (hypot (x, y));
+ }
+ #define hypot	fake_hypot
  #endif  /* M88K_BAD_HYPOT_OPT_CHECK */
  
  
  #ifndef MATH_EXCEPTION_CHECK
  typedef struct exception t_math_exception;
  #endif  /* MATH_EXCEPTION_CHECK */
+ #ifdef __cplusplus
+ #undef exception
+ #endif
+ 
+ #endif  /* FIXINC_MATH_EXCEPTION_CHECK */
*** inc/netinet/ip.h
--- res/netinet/ip.h
***************
*** 4,10 ****
  struct mumble {
    union {
      int x;
!   }
  }; /* mumbled struct */
  
  #endif  /* IP_MISSING_SEMI_CHECK */
--- 4,10 ----
  struct mumble {
    union {
      int x;
!   };
  }; /* mumbled struct */
  
  #endif  /* IP_MISSING_SEMI_CHECK */
*** inc/rpc/auth.h
--- res/rpc/auth.h
***************
*** 1,5 ****
--- 1,6 ----
  
  
  #ifndef STRUCT_SOCKADDR_CHECK
+ struct sockaddr;
  extern AUTH* authdes_create( struct sockaddr* );
  #endif  /* STRUCT_SOCKADDR_CHECK */
*** inc/rpc/rpc.h
--- res/rpc/rpc.h
***************
*** 1,5 ****
  
  
  #ifndef NESTED_AUTH_DES_CHECK
! /*#include <rpc/auth_des.h> /* skip this */
  #endif  /* NESTED_AUTH_DES_CHECK */
--- 1,5 ----
  
  
  #ifndef NESTED_AUTH_DES_CHECK
! /*#include <rpc/auth_des.h> */ /* skip this */
  #endif  /* NESTED_AUTH_DES_CHECK */
*** inc/rpc/xdr.h
--- res/rpc/xdr.h
***************
*** 1,5 ****
--- 1,6 ----
  
  
  #ifndef STRUCT_FILE_CHECK
+ struct __file_s;
  extern void xdrstdio_create( struct __file_s* );
  #endif  /* STRUCT_FILE_CHECK */
*** inc/sparc/asm_linkage.h
--- res/sparc/asm_linkage.h
***************
*** 1,5 ****
  
  
  #ifndef KANDR_CONCAT_CHECK
! #define __CONCAT__(a,b) a/**/b
  #endif  /* KANDR_CONCAT_CHECK */
--- 1,5 ----
  
  
  #ifndef KANDR_CONCAT_CHECK
! #define __CONCAT__(a,b) a##b
  #endif  /* KANDR_CONCAT_CHECK */
*** inc/stdio.h
--- res/stdio.h
***************
*** 1,12 ****
  
  
  #ifndef ALPHA_GETOPT_CHECK
! extern int getopt(int, char *[], char *);
  #endif  /* ALPHA_GETOPT_CHECK */
  
  
  #ifndef ISC_OMITS_WITH_STDC_CHECK
! #if !defined(__STDC__) && !defined(_POSIX_SOURCE) /* ? ! */
  int foo;
  #endif
  #endif  /* ISC_OMITS_WITH_STDC_CHECK */
--- 1,17 ----
+ #ifndef FIXINC_STDIO_STDARG_H_CHECK
+ #define FIXINC_STDIO_STDARG_H_CHECK 1
+ 
+ #define __need___va_list
+ #include <stdarg.h>
  
  
  #ifndef ALPHA_GETOPT_CHECK
! extern int getopt(int, char *const[], const char *);
  #endif  /* ALPHA_GETOPT_CHECK */
  
  
  #ifndef ISC_OMITS_WITH_STDC_CHECK
! #if !defined(_POSIX_SOURCE) /* ? ! */
  int foo;
  #endif
  #endif  /* ISC_OMITS_WITH_STDC_CHECK */
***************
*** 15,17 ****
--- 20,24 ----
  #ifndef STDIO_STDARG_H_CHECK
  
  #endif  /* STDIO_STDARG_H_CHECK */
+ 
+ #endif  /* FIXINC_STDIO_STDARG_H_CHECK */
*** inc/stdlib.h
--- res/stdlib.h
***************
*** 1,7 ****
  
  
  #ifndef ARM_WCHAR_CHECK
! # ifndef 	 __wchar_t /* we don't have wchar_t yet, ... */
! #  define  __wchar_t  short
  # endif /* __wchar_t */
  #endif  /* ARM_WCHAR_CHECK */
--- 1,7 ----
  
  
  #ifndef ARM_WCHAR_CHECK
! # ifndef 	 _GCC_WCHAR_T /* we don't have wchar_t yet, ... */
! #  define  _GCC_WCHAR_T  short
  # endif /* __wchar_t */
  #endif  /* ARM_WCHAR_CHECK */
*** inc/sundev/vuid_event.h
--- res/sundev/vuid_event.h
***************
*** 1,5 ****
  
  
  #ifndef BADQUOTE_CHECK
! /* doesn't have matched single quotes */
  #endif  /* BADQUOTE_CHECK */
--- 1,5 ----
  
  
  #ifndef BADQUOTE_CHECK
! /* does not have matched single quotes */
  #endif  /* BADQUOTE_CHECK */
*** inc/sunwindow/win_lock.h
--- res/sunwindow/win_lock.h
***************
*** 1,7 ****
  
  
  #ifndef ECD_CURSOR_CHECK
! #ifdef ecd.cursor
  #error bogus
! #endif /* ecd+cursor */
  #endif  /* ECD_CURSOR_CHECK */
--- 1,7 ----
  
  
  #ifndef ECD_CURSOR_CHECK
! #ifdef ecd_cursor
  #error bogus
! #endif /* ecd_cursor */
  #endif  /* ECD_CURSOR_CHECK */
*** inc/sym.h
--- res/sym.h
***************
*** 1,7 ****
  
  
  #ifndef ALPHA_PARENS_CHECK
! #ifndef(__mips64) /* bogus */
  extern int foo;
  #endif
  #endif  /* ALPHA_PARENS_CHECK */
--- 1,7 ----
  
  
  #ifndef ALPHA_PARENS_CHECK
! #ifndef __mips64 /* bogus */
  extern int foo;
  #endif
  #endif  /* ALPHA_PARENS_CHECK */
*** inc/sys/asm.h
--- res/sys/asm.h
***************
*** 1,5 ****
  
  
  #ifndef IRIX_ASM_APOSTROPHE_CHECK
! # and we're on vacation
  #endif  /* IRIX_ASM_APOSTROPHE_CHECK */
--- 1,5 ----
  
  
  #ifndef IRIX_ASM_APOSTROPHE_CHECK
! # and we are on vacation
  #endif  /* IRIX_ASM_APOSTROPHE_CHECK */
*** inc/sys/file.h
--- res/sys/file.h
***************
*** 1,5 ****
  
  
  #ifndef HP_SYSFILE_CHECK
! extern void foo(...); /* HPUX_SOURCE - bad varargs */
  #endif  /* HP_SYSFILE_CHECK */
--- 1,5 ----
  
  
  #ifndef HP_SYSFILE_CHECK
! extern void foo(struct file *, ...); /* HPUX_SOURCE - bad varargs */
  #endif  /* HP_SYSFILE_CHECK */
*** inc/sys/limits.h
--- res/sys/limits.h
***************
*** 2,8 ****
  
  #ifndef NESTED_SYS_LIMITS_CHECK
  /*
! #define CHILD_MAX 20 /* Max, Max, ... */ /*
! #define OPEN_MAX  20 /* Max, Max, ... */
  
  #endif  /* NESTED_SYS_LIMITS_CHECK */
--- 2,8 ----
  
  #ifndef NESTED_SYS_LIMITS_CHECK
  /*
! #define CHILD_MAX 20  Max, Max, ... */ /*
! #define OPEN_MAX  20  Max, Max, ... */
  
  #endif  /* NESTED_SYS_LIMITS_CHECK */
*** inc/sys/mman.h
--- res/sys/mman.h
***************
*** 1,5 ****
--- 1,16 ----
+ #ifndef FIXINC_CXX_UNREADY_CHECK
+ #define FIXINC_CXX_UNREADY_CHECK 1
+ 
+ #ifdef __cplusplus
+ extern "C" {
+ #endif
  
  
  #ifndef CXX_UNREADY_CHECK
  extern void* malloc( size_t );
  #endif  /* CXX_UNREADY_CHECK */
+ #ifdef __cplusplus
+ }
+ #endif
+ 
+ #endif  /* FIXINC_CXX_UNREADY_CHECK */
*** inc/sys/param.h
--- res/sys/param.h
***************
*** 1,11 ****
  
  
  #ifndef AUX_ASM_CHECK
! #ifndef NOINLINE /* ain't got no inline, so we got it */
  #endif /* NOINLINE */
  #endif  /* AUX_ASM_CHECK */
  
  
  #ifndef HPUX_MAXINT_CHECK
  #define MAXINT 0x7FFFFFFF
  #endif  /* HPUX_MAXINT_CHECK */
--- 1,13 ----
  
  
  #ifndef AUX_ASM_CHECK
! #if !defined(NOINLINE) && !defined(__GNUC__) /* ain't got no inline, so we got it */
  #endif /* NOINLINE */
  #endif  /* AUX_ASM_CHECK */
  
  
  #ifndef HPUX_MAXINT_CHECK
+ #ifndef MAXINT
  #define MAXINT 0x7FFFFFFF
+ #endif
  #endif  /* HPUX_MAXINT_CHECK */
*** inc/sys/signal.h
--- res/sys/signal.h
***************
*** 1,5 ****
  
  
  #ifndef AIX_VOLATILE_CHECK
! typedef volatile int sig_atomic_t;
  #endif  /* AIX_VOLATILE_CHECK */
--- 1,5 ----
  
  
  #ifndef AIX_VOLATILE_CHECK
! typedef int sig_atomic_t;
  #endif  /* AIX_VOLATILE_CHECK */
*** inc/sys/spinlock.h
--- res/sys/spinlock.h
***************
*** 1,7 ****
  
  
  #ifndef HP_INLINE_CHECK
! # include "../machine/inline.h"
  # include "../machine/dontfix.h"
! # include "../machine/psl.h"
  #endif  /* HP_INLINE_CHECK */
--- 1,7 ----
  
  
  #ifndef HP_INLINE_CHECK
! # include <machine/inline.h>
  # include "../machine/dontfix.h"
! # include <machine/psl.h>
  #endif  /* HP_INLINE_CHECK */
*** inc/sys/stat.h
--- res/sys/stat.h
***************
*** 1,5 ****
  
  
  #ifndef M88K_BAD_S_IF_CHECK
! #define S_ISREG(m) (m & S_IFREG) /* is regular? */
  #endif  /* M88K_BAD_S_IF_CHECK */
--- 1,5 ----
  
  
  #ifndef M88K_BAD_S_IF_CHECK
! #define S_ISREG(m) (((m) & S_IFMT) == S_IFREG) /* is regular? */
  #endif  /* M88K_BAD_S_IF_CHECK */
*** inc/sys/time.h
--- res/sys/time.h
***************
*** 1,5 ****
  
  
  #ifndef HPUX_SYSTIME_CHECK
! extern struct sigevent;
  #endif  /* HPUX_SYSTIME_CHECK */
--- 1,5 ----
  
  
  #ifndef HPUX_SYSTIME_CHECK
! struct sigevent;
  #endif  /* HPUX_SYSTIME_CHECK */
*** inc/sys/types.h
--- res/sys/types.h
***************
*** 1,6 ****
  
  
  #ifndef IRIX_MULTILINE_CMNT_CHECK
! /* we check the type of the result
! // of the sizeof something.  This is a bad test :-( */
  #endif  /* IRIX_MULTILINE_CMNT_CHECK */
--- 1,6 ----
  
  
  #ifndef IRIX_MULTILINE_CMNT_CHECK
! /* we check the type of the result */
! // /* of the sizeof something.  This is a bad test :-( */
  #endif  /* IRIX_MULTILINE_CMNT_CHECK */
*** inc/sys/wait.h
--- res/sys/wait.h
***************
*** 2,7 ****
--- 2,8 ----
  
  #ifndef AIX_SYSWAIT_CHECK
  /* bos325, */
+ struct rusage;
  extern pid_t wait3();
  /* pid_t wait3(int *, int, struct rusage *); */
  #endif  /* AIX_SYSWAIT_CHECK */
*** inc/testing.h
--- res/testing.h
***************
*** 1,33 ****
  
  
  #ifndef CTRL_QUOTES_DEF_CHECK
! #define BSD43_CTRL(n, x) (('n'<<8)+x)
  #endif  /* CTRL_QUOTES_DEF_CHECK */
  
  
  #ifndef CTRL_QUOTES_USE_CHECK
! #define TIOCFOO BSD43_CTRL(T, 1)
  #endif  /* CTRL_QUOTES_USE_CHECK */
  
  
  #ifndef IO_QUOTES_DEF_CHECK
! #define BSD43__IOWR(n, x) (('n'<<8)+x)
  #endif  /* IO_QUOTES_DEF_CHECK */
  
  
  #ifndef IO_QUOTES_USE_CHECK
! #define TIOCFOO BSD43__IOWR(T, 1)
  #endif  /* IO_QUOTES_USE_CHECK */
  
  
  #ifndef MACHINE_NAME_CHECK
! #ifdef i386 /* no uniform machine_name test, so
                 this only works on i?86 machines */
  #endif  /* MACHINE_NAME_CHECK */
  
  
  #ifndef UNDEFINE_NULL_CHECK
  #define NULL 0UL
  #define NULL	((void*)0)
  
  #endif  /* UNDEFINE_NULL_CHECK */
--- 1,37 ----
  
  
  #ifndef CTRL_QUOTES_DEF_CHECK
! #define BSD43_CTRL(n, x) ((n<<8)+x)
  #endif  /* CTRL_QUOTES_DEF_CHECK */
  
  
  #ifndef CTRL_QUOTES_USE_CHECK
! #define TIOCFOO BSD43_CTRL('T', 1)
  #endif  /* CTRL_QUOTES_USE_CHECK */
  
  
  #ifndef IO_QUOTES_DEF_CHECK
! #define BSD43__IOWR(n, x) ((n<<8)+x)
  #endif  /* IO_QUOTES_DEF_CHECK */
  
  
  #ifndef IO_QUOTES_USE_CHECK
! #define TIOCFOO BSD43__IOWR('T', 1)
  #endif  /* IO_QUOTES_USE_CHECK */
  
  
  #ifndef MACHINE_NAME_CHECK
! #ifdef __i386__ /* no uniform machine_name test, so
                 this only works on i?86 machines */
  #endif  /* MACHINE_NAME_CHECK */
  
  
  #ifndef UNDEFINE_NULL_CHECK
+ #ifndef NULL
  #define NULL 0UL
+ #endif
+ #ifndef NULL
  #define NULL	((void*)0)
+ #endif
  
  #endif  /* UNDEFINE_NULL_CHECK */
*** inc/time.h
--- res/time.h
***************
*** 1,5 ****
  
  
  #ifndef VXWORKS_NEEDS_VXTYPES_CHECK
! uint_t	_clocks_per_sec;
  #endif  /* VXWORKS_NEEDS_VXTYPES_CHECK */
--- 1,5 ----
  
  
  #ifndef VXWORKS_NEEDS_VXTYPES_CHECK
! unsigned int	_clocks_per_sec;
  #endif  /* VXWORKS_NEEDS_VXTYPES_CHECK */
*** inc/unistd.h
--- res/unistd.h
***************
*** 1,5 ****
  
  
  #ifndef ALPHA_SBRK_CHECK
! extern char* sbrk(ptrdiff_t increment);
  #endif  /* ALPHA_SBRK_CHECK */
--- 1,5 ----
  
  
  #ifndef ALPHA_SBRK_CHECK
! extern void *sbrk(ptrdiff_t increment);
  #endif  /* ALPHA_SBRK_CHECK */
