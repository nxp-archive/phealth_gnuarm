/* This file contains the definitions of the GIMPLE IR tuples used in GCC.

   Copyright (C) 2007 Free Software Foundation, Inc.
   Contributed by Aldy Hernandez <aldyh@redhat.com>

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2, or (at your option) any later
version.

GCC is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with GCC; see the file COPYING.  If not, write to the Free
Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA
02110-1301, USA.  */

/* The format of this file is
   DEFGSCODE(GIMPLE_symbol, printable name).

   Where symbol is the enumeration name without the ``GIMPLE_''.  */

DEFGSCODE(GIMPLE_BASE, "gimple_base")
DEFGSCODE(GIMPLE_WITH_OPS, "gimple_with_ops")

/* Do not rearrange the codes between GIMPLE_ASSIGN and GIMPLE_RETURN.
   It's exposed by GIMPLE_RANGE_CHECK calls.  These are all the GIMPLE
   statements with register operands.  */
DEFGSCODE(GIMPLE_ASSIGN, "gimple_assign")
DEFGSCODE(GIMPLE_COND, "gimple_cond")
DEFGSCODE(GIMPLE_GOTO, "gimple_goto")
DEFGSCODE(GIMPLE_LABEL, "gimple_label")
DEFGSCODE(GIMPLE_SWITCH, "gimple_switch")

/* Do not rearrange the codes between GIMPLE_ASM and
   GIMPLE_WITH_MEM_OPS.  It's exposed by GIMPLE_RANGE_CHECK calls.
   These are all the GIMPLE statements with memory and register
   operands.  */
DEFGSCODE(GIMPLE_ASM, "gimple_asm")
DEFGSCODE(GIMPLE_CALL, "gimple_call")
DEFGSCODE(GIMPLE_RETURN, "gimple_return")
DEFGSCODE(GIMPLE_WITH_MEM_OPS, "gimple_with_mem_ops")

DEFGSCODE(GIMPLE_OMP, "gimple_omp")
DEFGSCODE(GIMPLE_BIND, "gimple_bind")
DEFGSCODE(GIMPLE_CATCH, "gimple_catch")
DEFGSCODE(GIMPLE_EH_FILTER, "gimple_eh_filter")
DEFGSCODE(GIMPLE_PHI, "gimple_phi")
DEFGSCODE(GIMPLE_RESX, "gimple_resx")
DEFGSCODE(GIMPLE_TRY, "gimple_try")

/*  This node represents a cleanup expression.  It is ONLY USED INTERNALLY
    by the gimplifier as a placeholder for cleanups, and its uses will be
    cleaned up by the time gimplification is done.
    
    This tuples should not exist outside of the gimplifier proper.  */
DEFGSCODE(GIMPLE_WITH_CLEANUP_EXPR, "gimple_with_cleanup_expr")

DEFGSCODE(GIMPLE_NOP, "gimple_nop")
DEFGSCODE(GIMPLE_OMP_CONTINUE, "gimple_omp_continue")
DEFGSCODE(GIMPLE_OMP_CRITICAL, "gimple_omp_critical")
DEFGSCODE(GIMPLE_OMP_FOR, "gimple_omp_for")
DEFGSCODE(GIMPLE_OMP_MASTER, "gimple_omp_master")
DEFGSCODE(GIMPLE_OMP_ORDERED, "gimple_omp_ordered")
DEFGSCODE(GIMPLE_OMP_PARALLEL, "gimple_omp_parallel")
DEFGSCODE(GIMPLE_OMP_RETURN, "gimple_omp_return")
DEFGSCODE(GIMPLE_OMP_SECTION, "gimple_omp_section")
DEFGSCODE(GIMPLE_OMP_SECTIONS, "gimple_omp_sections")
DEFGSCODE(GIMPLE_OMP_SINGLE, "gimple_omp_single")
