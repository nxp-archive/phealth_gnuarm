2005-09-26  Daniel Berlin  <dberlin@dberlin.org>

	* print-tree.c (print_node): Update to check for decl_common structure.
	* tree-dfa.c (add_referenced_var): Tag's don't have DECL_INITIAL.
	* tree-dump.c (dequeue_and_dump): Check for decl_common structure
	before accessing DECL_ARTIFICIAL. 
	Handle new tree codes.
	* tree-flow-inline.h (clear_call_clobbered): Update for tag
	changes.
	(unmodifiable_var_p): Ditto.
	* tree-flow.h (mem_tag_kind): Remove.
	(struct var_ann_d): Remove mem_tag_kind member.
	* tree-gimple.c (is_gimple_reg): Tags are not gimple registers.
	* tree-pretty-print.c (dump_generic_node): Handle tags.
	* tree-ssa-alias.c (tag_marked_global): Update for tags.
	(mark_tag_global): Ditto.
	(init_transitive_clobber_worklist): Ditto.
	(mark_aliases_call_clobbered): Ditto.
	(compute_tag_properties): Ditto.
	(init_alias_info): Ditto.
	(group_aliases): Ditto.
	(setup_pointers_and_addressables): Ditto.
	(may_alias_p): Ditto.
	(create_tag_raw): New function.
	(create_memory_tag): Use it.
	(dump_alias_info): Update for tags.
	(may_be_aliased): Ditto.
	(add_type_alias): Ditto.
	(new_type_alias): Ditto.
	(create_sft): Ditto.
	(create_structure_vars): Ditto.
	* tree-ssa-ccp.c (get_default_value): Ditto.
	* tree-ssa-operands.c (get_expr_operands): Ditto.
	(add_stmt_operand): Ditto.
	(add_call_clobber_ops): Remove duplicated condition.
	* tree-ssa.c (verify_flow_insensitive_alias_info): Update for
	tags.
	* tree-tailcall.c (suitable_for_tail_opt_p): Ditto.
	* tree-vect-transform.c (vect_create_data_ref_ptr): Ditto.
	* tree.c (init_ttree): Update structures for new tree codes.
	(tree_code_size): Update sizes for new tree codes.
	(make_node_stat): Don't try to set common things on minimal
	structures.
	(tree_node_structure): Update for tags.
	(is_global_var): Ditto.
	* tree.def: Add new tree codes.
	* tree.h (MTAG_P): New macro.
	(TREE_MEMORY_TAG_CHECK): Ditto.
	(SSA_VAR_P): Update for tags.
	(struct tree_memory_tag): New structure.
	(MTAG_GLOBAL): New macro.
	(union tree_node): Add memory tag member.
	* treestruct.def (TS_MEMORY_TAG): New.
	
2005-09-22  Daniel Berlin  <dberlin@dberlin.org>
	    Jan Hubicka <jh@suse.cz>
	
	* Makefile.in (ipa-callees.o): New.
	
	* ipa-reference.c (check_operand): Handle FUNCTION_DECL.
	(look_for_address_of): Ditto.
	(ipa_init): Add static functions to all_module_statics.
	(static_execute): Don't touch readonly on FUNCTION_DECL.
	
	* cgraph.c (cgraph_create_node): Add to uid array.
	(cgraph_remove_node): Remove from uid array.
	(cgraph_node_by_uid): New function.
	* cgraph.h (cgraph_node_by_uid): Prototype.
	* cgraphunit.c (verify_cgraph_node): Make sure uid array doesn't
	get corrupted.

	* ipa-callees.c: New file.

	* passes.c: (init_optimization_passes): Add pass_ipa_callees.
	* timevar.def (TV_IPA_CALLEES): New.
	* tree-dfa.c (add_referenced_var): Stop call clobbering on add.
	* tree-flow-inline.h (is_call_clobbered): Remove is_global_var.
	* tree-flow.h (struct var_ann_d): Add callees bitmap.
	* tree-pass.h (pass_ipa_callees): New.
	* tree-ssa-alias.c (mark_aliases_call_clobbered): Don't mark
	unmodifiable vars call clobbered.
	(set_initial_properties): Mark global but not unmodiifable vars
	call clobbered here.
	Check for unmodifiable var before call clobbering.
	(create_global_var): This global var is call clobbered.
	* tree-ssa-operands.c (add_call_clobber_ops): Remove
	unmodifiable_var check, and rewrite into assert.
	* tree-ssa-structalias.c (update_alias_info): Don't call clobber
	unmodifiable vars.
	
2005-09-14  Daniel Berlin  <dberlin@dberlin.org>

	* tree-flow-inline (mark_call_clobbered): Don't auto-set
	DECL_EXTERNAL on tags.
	* tree-ssa-alias.c (tag_marked_global): New function.
	(mark_tag_global): Ditto.
	(sort_tags_by_id): New function.
	(compute_tag_properties): Renamed from mark_global_tags.
	Change to iteration and compute tag globalness properly as well.
	(set_initial_properties): Renamed from set_initial_clobbers.
	Set initial globalness as well.
	(compute_call_properties): Call newly renamed functions.
	(compute_may_aliases): Group aliases before clobbering.
	(group_aliases): Don't deal with clobbering.
	(setup_pointers_and_addressables): Ditto.
	(get_nmt_for): Ditto.					  
	
2005-09-11  Daniel Berlin  <dberlin@dberlin.org>

	* tree-ssa-alias.c (mark_global_tags): Don't touch SFT's here. 

2005-09-11  Daniel Berlin  <dberlin@dberlin.org>

	* tree-ssa-alias.c (set_initial_clobbers): Use
	mark_bitmap_call_clobbered.  
	(group_aliases): Ditto.
	* tree-flow-inline.h (mark_bitmap_call_clobbered): New function.
	* tree-flow.h: Declare mark_bitmap_call_clobbered.

2005-09-11  Daniel Berlin  <dberlin@dberlin.org>

	* tree-ssa-alias.c (init_transitive_clobber_worklist): New
	function.
	(add_to_worklist): Ditto.
	(mark_aliases_call_clobbered): Ditto.
	(mark_global_tags): Ditto.
	(set_initial_clobbers): Ditto.
	(compute_call_clobbered): Ditto.
	(compute_may_alias): Call compute_call_clobbered, and
	group_aliases.
	(compute_flow_sensitive_aliasing): Remove call clobbering code.
	(compute_flow_insensitive_aliasing): Don't group here.
	(group_aliases): Fix call clobbering on grouping.
	(add_may_alias): Don't deal with call clobbering here.
	(replace_may_alias): Ditto.
	
2005-09-07  Richard Guenther  <rguenther@suse.de>

	PR tree-optimization/22555
	* tree-dfa.c (okay_component_ref_for_subvars): Do not give up,
	if one structure field is an array.
	* tree-ssa-alias.c (create_overlap_variables_for): Likewise.
	* tree-ssa-structalias.c (create_variable_info_for): Likewise.
	(get_constraint_for_component_ref): Do not assert we can not
	only be accessing padding if we deal with an ARRAY_REF.
	* tree-ssa-loop-ivopts.c (rewrite_use): Mark new vars in stmt
	for renaming.
	* tree-ssa-loop.c (pass_iv_optimize): Schedule TODO_update_ssa.
	* tree-ssa-operands.c (get_expr_operands): Continue scanning
	operands even if we found a subvar, but ignore VOPs in this
	case.
