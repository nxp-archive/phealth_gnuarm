2004-12-15  Dorit Naishlos  <dorit@il.ibm.com>

	* tree-vectorizer.h (same_align_refs): New field in struct 
	_stmt_vec_info.
	(STMT_VINFO_SAME_ALIGN_REFS): New macro to access above new field.
	(unknown_alignment_for_access_p): Replaced by 
	known_alignment_for_access_p.
	(known_alignment_for_access_p): New.
	(do_peeling_for_alignment): Field made int instead of bool and renamed
	to peeling_for_alignment.
	(LOOP_DO_PEELING_FOR_ALIGNMENT): Renamed to LOOP_PEELING_FOR_ALIGNMENT.

	* tree-vectorizer.c (vect_determine_vectorization_factor): New. This
	functionality used to be in vect_analyze_operations.
	(vect_analyze_operations): Code to determine vectorization factor was
	moved to vect_determine_vectorization_factor.
	(vect_gen_niters_for_prolog_loop): Handle known alignment case more
	efficiently. Use LOOP_PEELING_FOR_ALIGNMENT.
	(vect_do_peeling_for_alignment): Use fold.
	(vect_transform_loop): Use new name of LOOP_DO_PEELING_FOR_ALIGNMENT.
	
	(vect_enhance_data_refs_alignment): Function made bool instead of void.
	Documentation moved before the function. Consider datarefs with same
	alignment. Update to correct alignment when it is known instead of -1.
	Set peeling factor in LOOP_PEELING_FOR_ALIGNMENT.
	Check if there remain unsupported datarefs  - this was moved from
	vect_analyze_data_refs_alignment.
	(vect_analyze_data_refs_alignment): Some of the functionality moved to
	vect_enhance_data_refs_alignment.
	(new_stmt_vec_info): Initialize same_align_datarefs varray.
	(destroy_loop_vec_info): Clear same_align_datarefs varray.
	(vect_analyze_data_ref_dependence): Push drs into the 
	same_align_datarefs varray in case the dependence distance is 0.

	(vect_analyze_loop): Call vect_determine_vectorization_factor (used to
	be part of vect_analyze_operations).  
	Call vect_enhance_data_refs_alignment (used to be in 
	vect_analyze_data_refs_alignment).
	
	(vect_update_inits_of_dr): Renamed to vect_update_init_of_dr.
	(vect_update_inits_of_drs): Use new name of vect_update_inits_of_dr.
	(vectorizable_store): Fix assertion to use == instead of =.
	(vect_do_peeling_for_loop_bound, vect_analyze_loop): Change debug 
	printing.
	

2004-12-15  Daniel Berlin  <dberlin@dberlin.org>

	* Makefile.in (tree-chrec.o): Add cfgloop.h

	* tree-chrec.c: Add cfgloop.h, tree-flow.h.
	(evolution_function_is_invariant_p): New function.
	(evolution_function_is_affine_multivariate_p): Use
	evolution_function_is_invariant_p instead of
	evolution_function_is_constant_p.

	* tree-chrec.h: Add prototype for
	evolution_function_is_invariant_p.
	(evolution_function_is_affine_p): Use
	evolution_function_is_invariant_p. 

	* tree-data-ref.c (analyze_overlapping_iterations): chrecs that
	are equal overlap on every iteration.
	
2004-12-14  Ira Rosen  <irar@il.ibm.com>

	PR tree-optimization/18179
	* tree-vectorizer.h (struct _stmt_vec_info): Add new fields:
	initial_offset, step, misalignment and base_aligned_p and macros
	to access them.
	* tree-vectorizer.c (vect_analyze_offset_expr): New function.
	(new_stmt_vec_info): Initialize the new fields of stmt_vec_info.
	(vect_create_data_ref_ptr): Fix printings.
	(vect_get_base_and_offset): Call get_inner_reference and
	vect_analyze_offset_expr. Renamed (previous name
	vect_get_base_and_bit_offset).
	(vect_create_addr_base_for_vector_ref): Build address_base by
	combining base and initial_offset fields of vect_stmt_info.
	(vect_update_inits_of_dr): Update offset of data-ref instead of its
	access-fn. Remove argument.
	(vect_update_inits_of_drs): Call vect_update_inits_of_dr with new
	arguments.
	(vect_compute_data_ref_alignment): Check misalignment info in
	vect_stmt_info. Remove argument.
	(vect_compute_data_refs_alignment): Call
	vect_compute_data_ref_alignment with correct argument.
	(vect_analyze_data_ref_access): Check access info in vect_stmt_info.
	(vect_analyze_pointer_ref_access): Update step and initial_offset
	fields of vect_stmt_info.
	(vect_get_memtag_and_dr): Call vect_get_base_and_offset and set the
	fields of stmt_vec_info. Reorganize. Add memtag retrieval. Renamed
	(previous name vect_get_symb_and_dr).
	(vect_analyze_data_refs): Find vectype and pass it to
	vect_get_memtag_and_dr. Remove memtag retrieval.
	(vect_get_first_index): Remove.
	(vect_compute_array_base_alignment): Remove.
	(vect_compute_array_ref_alignment): Remove.

2004-12-14  Dorit Naishlos  <dorit@il.ibm.com>

	Merge from mainline (autovect-merge-20041213).

2004-12-13  Dorit Naishlos  <dorit@il.ibm.com>

	* tree.def (SAT_MINUS_EXPR): New tree code.
	* expr.c (expand_expr_real_1): Add SAT_MINUS_EXPR case.
	* tree-pretty-print.c (dump_generic_node): Likewise.
	(op_prio, op_symbol): Likewise.
	* optabs.c (optab_for_tree_code): Likewise.
	(init_optabs): Initializae ssat_sub_optab, usat_sub_optab.
	* optabs.h (OTI_ssat_sub, OTI_usat_sub): New.
	(ssat_sub_optab, usat_sub_optab): New.
	* genopinit.c (ssat_sub_optab, usat_sub_optab): New optabs.
	* tree-vectorizer.c (vect_pattern_recog): New function.
	(vect_pattern_recog_1): New function.
	(vect_recog_unsigned_subsat_pattern): New function.
	(new_stmt_vec_info): Initialize new fields IN_PATTERN_P and RELATED_STMT.
	(vectorizable_operation): Handle the case that the stmt to be vectorized is a
	new stmt that was added to replace a pattern.
	(vect_mark_relevant): Hanlde stmts that are marked as IN_PATTERN.
	(vect_mark_stmts_to_be_vectorized): Don't reset to 0.
	(vect_analyze_loop): Call vect_pattern_recog.
	* tree-vectorizer.h (in_pattern_p, related_stmt): New fields in struct
	_stmt_vec_info.
	(TMT_VINFO_IN_PATTERN_P, STMT_VINFO_RELATED_STMT): New macros to access the
	new fields.
	(vect_pattern_recog_func): New array of pattern recognition functions.
	* config/rs6000/altivec.md (usat_subv16qi3, usat_subv8hi3, usat_subv4si3): New.

2004-12-08 Devang Patel  <dpatel@apple.com>

        * tree-ssa-forwprop.c (cast_conversion_assignment_p): New.
        (replace_use_in_cond_expr): New.
        (all_uses_are_replacable): New.
        (eliminate_unnecessary_casts): New.
        (tree_ssa_forward_propagate_single_use_var): Eliminate unnecessary
        casts.

2004-12-08 Devang Patel  <dpatel@apple.com>

        * config/rs6000/rs6000.c (rs6000_emit_vector_select): Adjust
        vector select insn parameters.

2004-12-06  Keith Besaw  <kbesaw@us.ibm.com>

	* tree-vectorizer.c (update_vuses_to_preheader): New, fixup VUSEs for
	loads added to loop preheader block.
	(vect_create_data_ref_ptr): Remove code which sets the bitmap
	vars_to_rename.
	(vectorizable_store): Call copy_virtual_operands to copy V_MAY_DEFs
	from array element store to vector store and then update the statements
	defining the virtual SSA_NAMES.
	(vectorizable_load): Call copy_virtual_operands to copy VUSEs from
	array element load to vector load.  Call update_vuses_to_preheader for
	loads inserted into loop preheader block.
	(vect_do_peeling_for_alignment): Add need_loop_closed_rewrite parm.
	(vect_transform_loop): Add need_loop_closed_rewrite_parm.
	(vectorize_loops): Eliminate call to rewrite_into_ssa, only call
	rewrite_into_loop_closed_ssa if tree_duplicate_loop_to_edge has been
	called in vect_do_peeling_for_alignment or vect_transform_loop.
	* rs6000.c (altivect_init_builtins): Add the "const" attribute to
	__builtin_altivec_mask_for_store and 
	__builtin_altivec_mask_for_load.

2004-11-29  Daniel Berlin  <dberlin@dberlin.org>

	* tree-data-ref.c (dependence_stats): New structure.
	(analyze_indirect_ref): New function.
	(analyze_ziv_subscript): Track ziv tests using dependence_stats.
	(get_number_of_iters_for_loop): New function.
	Replace repeated idiom to get number of real/estimated iterations
	in loop with this function.
	(analyze_siv_subscript_cst_affine): Track siv stats using
	dependence_stats.
	No dependence exists if first overlap is outside of the loop.
	(analyze_subscript_affine_affine): No dependence exists if first
	overlap of either variable is outside of the loop.
	(analyze_siv_subscript): Track siv stats using dependence_stats.
	(analyze_miv_subscript): Ditto for miv.
	(analyze_overlapping_iterations): Track total number of tests
	using dependence_stats.
	(compute_affine_dependence): Print out failing reference if affine
	test is unusable.
	(find_data_references_in_loop): Rewrite to handle indirect_ref as
	well using analyze_indirect_ref.
	(compute_data_dependences_for_loop): Initialize stats structure,
	print out stats if request.
	
2004-11-22  Daniel Berlin <dberlin@dberlin.org>

	* tree-ssa-loop.c (pass_vectorize): Require PROP_align.
	
2004-11-22  Devang Patel  <dpatel@apple.com>

	Backport from Mainline.
	2004-11-22  Devang Patel  <dpatel@apple.com>

        * tree-if-conv.c (clean_predicate_lists): Clean all basic blocks. 

2004-11-17  Daniel Berlin  <dberlin@dberlin.org>

	* Makefile.in (OBJS-common): Add tree-ssa-align.o
	(tree-ssa-align.o): Add.
	* tree-flow.h (struct alignment_d): New.
	(dump_align_info): Add proto.
	(debug_align_info): Add proto.
	* tree-optimize.c (init_tree_optimization_passes): Add
	pass_align_info. 
	* tree-pass.h (PROP_align): New.
	(pass_align_analysis): New.
	* tree-ssa-align.c: New file.
	* tree-vectorizer.c (vect_get_ptr_offset): Copy code from
	lno-branch, written by Ira Rosen (irar@il.ibm.com).
	
2004-11-12  Devang Patel  <dpatel@apple.com>

	* optabs.c (vector_compare_rtx): Use tcc_comparison.

2004-11-12  Devang Patel  <dpatel@apple.com>

	Backport from Mainline.

	2004-11-12  Sebastian Pop  <pop@cri.ensmp.fr>

        * tree-data-ref.c (analyze_subscript_affine_affine): Correctly
        compute the first overlapping iterations.

2004-11-12  Devang Patel  <dpatel@apple.com>
	
	* tree-data-ref.c (compute_subscript_distance): Make externally visible.
	(build_class_dist_vector): Same.
	* tree-data-ref.h (compute_subscript_distance): New external decl.
	(build_class_dist_vector): Same.
	* tree-vectorizer.c (loops_num): New variable.
	(vect_build_dist_vector): New function.
	(vect_analyze_data_ref_dependence): Use distance vector to determine
	dependence.
	(vect_analyze_data_ref_dependences): Remove local variable loop.
	(vect_analyze_loop): Analyze operations before data dependences
	(vectorize_loops): Remove local variable loops_num.

2004-11-12  Devang Patel  <dpatel@apple.com>

	* tree-vectorizer.c (vectorizable_select): New function.
	(vect_is_simple_cond): New function.
	(vect_analyze_operations): Handle conditional expr.
	* tree-vectorizer.h (stmt_vec_info_type): New member, select_vec_info_type.

