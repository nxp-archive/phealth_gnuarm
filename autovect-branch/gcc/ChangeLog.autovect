2005-01-31  Dorit Naishlos  <dorit@il.ibm.com>

	Merge from mainline (autovect-merge-20050127).

2005-01-19 Mostafa Hagog <mustafa@il.ibm.com>

	* cfg.c (clear_bb_flags): Don't clear BB_DISABLE_SCHEDULE.
	* cfgloop.h (doloop_valid_p): Make external.
	(rtl_loop_copy_header): New.
	* common.opt (frtl-loop-hc): New.
	* ddg.c (create_ddg_dependence): Ignore register ANTI_DEP.
	* loop-doloop.c (doloop_valid_p): Make external.
	* loop-unroll.c (SIMPLE_LOOP_P, rtl_loop_single_full_bb_p,
	rtl_loop_ch_appropriate_p, cfg_duplicate_sese_region,
	rtl_loop_copy_header) : New.
	* modulo-sched.c: Many changes to use loop info and work in
	cfg-layout mode and updates to the scheduling algorithm.
	* params.def (PARAM_LOOP_CH_MAX_SIZE): New.
	* params.h (LOOP_CH_MAX_SIZE): New.
        * passes.c (rest_of_handle_sms): Call cfg_layout_initialize and
	cfg_layout_finalize.
	(rest_of_handle_loop2): Call rtl_loop_copy_header.

2005-01-14  Sebastian Pop  <pop@cri.ensmp.fr>

	* tree-data-ref.c (analyze_subscript_affine_affine): Implement a 
	solution for the FIXME concerning the symbolic affine
	dependence testing; remove the FIXME.
	(can_use_analyze_subscript_affine_affine): New function.
	(analyze_siv_subscript): Use it.

2005-01-13  Sebastian Pop  <pop@cri.ensmp.fr>

	* tree-scalar-evolution.c (already_unified): New bitmap.
	(follow_ssa_edge): Include a comment for the return value.
	(unify_peeled_chrec): New function...
	(analyze_evolution_in_loop): ... called from here.
	(scev_initialize): Initialize already_unified.
	(scev_finalize): Free already_unified.
	* tree-ssa-loop-ivopts.c (find_bivs): Allow the scev analyzer
	to remove or add loop phi nodes in the analyzed loop.

2005-01-13  Sebastian Pop  <pop@cri.ensmp.fr>

	* tree-data-ref.c (analyze_subscript_affine_affine): Clarify
	function's comment.  Include a FIXME note for the symbolic case.
	(analyze_siv_subscript, analyze_miv_subscript): Ensure that no 
	symbolic evolution is passed to analyze_subscript_affine_affine.

2005-01-12  Ira Rosen  <irar@il.ibm.com>
	    Dorit Naishlos  <dorit@il.ibm.com>

	Merged from mainline
	* tree-vectorizer.c (vect_analyze_offset_expr): Use 
	expr_invariant_in_loop_p.  Initialize outputs first thing in the 
	function.
	(vect_update_ivs_after_vectorizer): Call initial_condition_in_loop_num.
	(vect_is_simple_iv_evolution): Call initial_condition_in_loop_num.
	(vect_analyze_pointer_ref_access): Check that the initial condition of 
	the access function is loop invariant.

2005-01-11 Mostafa Hagog <mustafa@il.ibm.com>

	* basic-block.h (extract_true_false_edges_from_block): Declare.
	* cfg.c (extract_true_false_edges_from_block): Move to here.
	* cfghooks.c (lv_flush_pending_stmts, loop_version_call_back):
	New.
	* cfghooks.h (loop_version_call_back, flush_pending_stmts): New
	in cfg_hooks.
	(lv_flush_pending_stmts, loop_version_call_back): Declare.
	* cfgloop.h (create_preheader): Make extern.
	(duplicate_loop_to_header_edge): Change return type to bool.
	(loop_version): Declare.
	* cfgloopmanip.c (cfghooks.h): Include.
	(duplicate_loop_to_header_edge): Change return type to bool.
	(create_preheader): Make external.
	(loop_version): Move here.
	* cfgrtl.c (cfgloop.h): Include.
	(rtl_verify_flow_info_1): Fix.
	(rtl_lv_add_condition_to_bb, rtl_lv_adjust_loop_entry_edge,
	rtl_loop_version_call_back): New.
	(rtl_cfg_hooks, cfg_layout_rtl_cfg_hook): Add two new hooks.
	* tree-cfg.c (lv_adjust_loop_header_phi,
	tree_lv_add_condition_to_bb, tree_lv_adjust_loop_entry_edge):
	Move here and rename.
	(tree_loop_version_call_back): New.
	(tree_cfg_hooks): Add two new hooks.
	(extract_true_false_edges_from_block): Remove from here.
	* tree-flow.h (extract_true_false_edges_from_block): Remove from
	here.
	* tree-ssa-loop-manip.c (lv_adjust_loop_header_phi,
	lv_adjust_loop_entry_edge, tree_ssa_loop_version): Remove from
	here.

2005-01-06  Dorit Naishlos  <dorit@il.ibm.com>

	* tree-vectorizer.h: (peeling_for_alignment): Fix spelling in comment
	for this field.

	(vect_recog_unsigned_subsat_pattern): Argument changed from varray_type
	to varray_type*.
	(_recog_func_ptr): Argument changed from varray_type to varray_type*.
	* tree-vectorizer.c (vect_pattern_recog_1): Argument changed from
	varray_type to varray_type*. Pass &stmt_list instead of stmt_list
	when calling pattern_recog_func.
	(vect_recog_unsigned_subsat_pattern): Argument changed from varray_type
	to varray_type*.
	(vect_pattern_recog): pattern_recog_func takes varray_type* instead of
	varray_type.

	(vect_enhance_data_refs_alignment): Fix DR_MISALIGNMENT setting to
	value in bytes.

	(new_loop_vec_info): Initialize LOOP_PEELING_FOR_ALIGNMENT with 0
	instead of false.
	(vect_enhance_data_refs_alignment): Avoid 80 column overflow.

	Merged from mainline:
	* tree-vectorizer.c (vect_mark_relevant) First argument changed from
	varray_type to varray_type*. 
	(vect_mark_stmts_to_be_vectorized): Pass &worklist instead of worklist
	when calling vect_mark_relevant.

2005-01-06  Ira Rosen  <irar@il.ibm.com>

	* tree-vectorizer.c (vect_get_ptr_offset): Return value in bytes.
	(vect_analyze_offset_expr): Use size arithmetics. Reorganize the code.
	(vect_get_base_and_offset): Use size arithmetics. Call
	handled_component_p.
	(vect_create_addr_base_for_vector_ref): Add comment.
	(vect_create_data_ref_ptr): Use TYPE_SIZE_UNIT.
	(vectorizable_load): Use size arithmetics.
	(vect_gen_niters_for_prolog_loop): Test for INTEGER_CST.
	(vect_compute_data_ref_alignment): Use size arithmetics.
	(vect_analyze_data_ref_access): Use tree_int_cst_compare and
	TYPE_SIZE_UNIT.
	(vect_analyze_pointer_ref_access): Use size arithmetics.
	(vect_get_memtag_and_dr): Use size arithmetics.

2004-12-30  Sebastian Pop  <pop@cri.ensmp.fr>

	* version.c (version_string): Automatically update the name of 
	the branch.

2004-12-27  Zdenek Dvorak  <dvorakz@suse.cz>

	* tree-ssa-loop-niter.c (tree_simplify_using_condition): Expand simple
	definitions of ssa names in condition.  Split recusive part to ...
	(tree_simplify_using_condition_1): New function.
	(expand_simple_operations): New function.

2004-12-20  Sebastian Pop  <pop@cri.ensmp.fr>

	* tree-chrec.c (eq_evolutions_p): New.
	* tree-chrec.h (eq_evolutions_p): Declared.
	* tree-data-ref.c (analyze_overlapping_iterations): Use eq_evolutions_p.

2004-12-20  Sebastian Pop  <pop@cri.ensmp.fr>

	* Makefile.in (OBJS-common): Add tree-elim-check.o.
	(tree-elim-check.o): New.
	* common.opt (ftree-elim-checks): New.
	* timevar.def (TV_TREE_ELIM_CHECKS): New.
	* tree-flow.h (eliminate_redundant_checks): Declared.
	* tree-optimize.c (init_tree_optimization_passes): Execute 
	pass_elim_checks.
	* tree-pass.h (pass_elim_checks): Declare.
	* tree-ssa-loop-niter.c (number_of_iterations_exit): Handle a 
	special case of EQ_EXPR.
	* tree-ssa-loop.c (tree_elim_checks, gate_tree_elim_checks): New.
	(pass_elim_checks): Defined.
	* doc/invoke.texi (-ftree-elim-checks): Document the flag.
	* tree-elim-check.c: New file, adapted from LNO-branch.

2004-12-16  Devang Patel  <dpatel@apple.com>

	* tree-ssa-forwprop.c (replacable_use_in_cond_expr): Add SSA_NAME check
	for operands.

2004-12-15  Dorit Naishlos  <dorit@il.ibm.com>

	* tree-vectorizer.h (same_align_refs): New field in struct 
	_stmt_vec_info.
	(STMT_VINFO_SAME_ALIGN_REFS): New macro to access above new field.
	(unknown_alignment_for_access_p): Replaced by 
	known_alignment_for_access_p.
	(known_alignment_for_access_p): New.
	(do_peeling_for_alignment): Field made int instead of bool and renamed
	to peeling_for_alignment.
	(LOOP_DO_PEELING_FOR_ALIGNMENT): Renamed to LOOP_PEELING_FOR_ALIGNMENT.

	* tree-vectorizer.c (vect_determine_vectorization_factor): New. This
	functionality used to be in vect_analyze_operations.
	(vect_analyze_operations): Code to determine vectorization factor was
	moved to vect_determine_vectorization_factor.
	(vect_gen_niters_for_prolog_loop): Handle known alignment case more
	efficiently. Use LOOP_PEELING_FOR_ALIGNMENT.
	(vect_do_peeling_for_alignment): Use fold.
	(vect_transform_loop): Use new name of LOOP_DO_PEELING_FOR_ALIGNMENT.
	
	(vect_enhance_data_refs_alignment): Function made bool instead of void.
	Documentation moved before the function. Consider datarefs with same
	alignment. Update to correct alignment when it is known instead of -1.
	Set peeling factor in LOOP_PEELING_FOR_ALIGNMENT.
	Check if there remain unsupported datarefs  - this was moved from
	vect_analyze_data_refs_alignment.
	(vect_analyze_data_refs_alignment): Some of the functionality moved to
	vect_enhance_data_refs_alignment.
	(new_stmt_vec_info): Initialize same_align_datarefs varray.
	(destroy_loop_vec_info): Clear same_align_datarefs varray.
	(vect_analyze_data_ref_dependence): Push drs into the 
	same_align_datarefs varray in case the dependence distance is 0.

	(vect_analyze_loop): Call vect_determine_vectorization_factor (used to
	be part of vect_analyze_operations).  
	Call vect_enhance_data_refs_alignment (used to be in 
	vect_analyze_data_refs_alignment).
	
	(vect_update_inits_of_dr): Renamed to vect_update_init_of_dr.
	(vect_update_inits_of_drs): Use new name of vect_update_inits_of_dr.
	(vectorizable_store): Fix assertion to use == instead of =.
	(vect_do_peeling_for_loop_bound, vect_analyze_loop): Change debug 
	printing.
	

2004-12-15  Daniel Berlin  <dberlin@dberlin.org>

	* Makefile.in (tree-chrec.o): Add cfgloop.h

	* tree-chrec.c: Add cfgloop.h, tree-flow.h.
	(evolution_function_is_invariant_p): New function.
	(evolution_function_is_affine_multivariate_p): Use
	evolution_function_is_invariant_p instead of
	evolution_function_is_constant_p.

	* tree-chrec.h: Add prototype for
	evolution_function_is_invariant_p.
	(evolution_function_is_affine_p): Use
	evolution_function_is_invariant_p. 

	* tree-data-ref.c (analyze_overlapping_iterations): chrecs that
	are equal overlap on every iteration.
	
2004-12-14  Ira Rosen  <irar@il.ibm.com>

	PR tree-optimization/18179
	* tree-vectorizer.h (struct _stmt_vec_info): Add new fields:
	initial_offset, step, misalignment and base_aligned_p and macros
	to access them.
	* tree-vectorizer.c (vect_analyze_offset_expr): New function.
	(new_stmt_vec_info): Initialize the new fields of stmt_vec_info.
	(vect_create_data_ref_ptr): Fix printings.
	(vect_get_base_and_offset): Call get_inner_reference and
	vect_analyze_offset_expr. Renamed (previous name
	vect_get_base_and_bit_offset).
	(vect_create_addr_base_for_vector_ref): Build address_base by
	combining base and initial_offset fields of vect_stmt_info.
	(vect_update_inits_of_dr): Update offset of data-ref instead of its
	access-fn. Remove argument.
	(vect_update_inits_of_drs): Call vect_update_inits_of_dr with new
	arguments.
	(vect_compute_data_ref_alignment): Check misalignment info in
	vect_stmt_info. Remove argument.
	(vect_compute_data_refs_alignment): Call
	vect_compute_data_ref_alignment with correct argument.
	(vect_analyze_data_ref_access): Check access info in vect_stmt_info.
	(vect_analyze_pointer_ref_access): Update step and initial_offset
	fields of vect_stmt_info.
	(vect_get_memtag_and_dr): Call vect_get_base_and_offset and set the
	fields of stmt_vec_info. Reorganize. Add memtag retrieval. Renamed
	(previous name vect_get_symb_and_dr).
	(vect_analyze_data_refs): Find vectype and pass it to
	vect_get_memtag_and_dr. Remove memtag retrieval.
	(vect_get_first_index): Remove.
	(vect_compute_array_base_alignment): Remove.
	(vect_compute_array_ref_alignment): Remove.

2004-12-14  Dorit Naishlos  <dorit@il.ibm.com>

	Merge from mainline (autovect-merge-20041213).

2004-12-13  Dorit Naishlos  <dorit@il.ibm.com>

	* tree.def (SAT_MINUS_EXPR): New tree code.
	* expr.c (expand_expr_real_1): Add SAT_MINUS_EXPR case.
	* tree-pretty-print.c (dump_generic_node): Likewise.
	(op_prio, op_symbol): Likewise.
	* optabs.c (optab_for_tree_code): Likewise.
	(init_optabs): Initializae ssat_sub_optab, usat_sub_optab.
	* optabs.h (OTI_ssat_sub, OTI_usat_sub): New.
	(ssat_sub_optab, usat_sub_optab): New.
	* genopinit.c (ssat_sub_optab, usat_sub_optab): New optabs.
	* tree-vectorizer.c (vect_pattern_recog): New function.
	(vect_pattern_recog_1): New function.
	(vect_recog_unsigned_subsat_pattern): New function.
	(new_stmt_vec_info): Initialize new fields IN_PATTERN_P and RELATED_STMT.
	(vectorizable_operation): Handle the case that the stmt to be vectorized is a
	new stmt that was added to replace a pattern.
	(vect_mark_relevant): Hanlde stmts that are marked as IN_PATTERN.
	(vect_mark_stmts_to_be_vectorized): Don't reset to 0.
	(vect_analyze_loop): Call vect_pattern_recog.
	* tree-vectorizer.h (in_pattern_p, related_stmt): New fields in struct
	_stmt_vec_info.
	(TMT_VINFO_IN_PATTERN_P, STMT_VINFO_RELATED_STMT): New macros to access the
	new fields.
	(vect_pattern_recog_func): New array of pattern recognition functions.
	* config/rs6000/altivec.md (usat_subv16qi3, usat_subv8hi3, usat_subv4si3): New.

2004-12-08 Devang Patel  <dpatel@apple.com>

        * tree-ssa-forwprop.c (cast_conversion_assignment_p): New.
        (replace_use_in_cond_expr): New.
        (all_uses_are_replacable): New.
        (eliminate_unnecessary_casts): New.
        (tree_ssa_forward_propagate_single_use_var): Eliminate unnecessary
        casts.

2004-12-08 Devang Patel  <dpatel@apple.com>

        * config/rs6000/rs6000.c (rs6000_emit_vector_select): Adjust
        vector select insn parameters.

2004-12-06  Keith Besaw  <kbesaw@us.ibm.com>

	* tree-vectorizer.c (update_vuses_to_preheader): New, fixup VUSEs for
	loads added to loop preheader block.
	(vect_create_data_ref_ptr): Remove code which sets the bitmap
	vars_to_rename.
	(vectorizable_store): Call copy_virtual_operands to copy V_MAY_DEFs
	from array element store to vector store and then update the statements
	defining the virtual SSA_NAMES.
	(vectorizable_load): Call copy_virtual_operands to copy VUSEs from
	array element load to vector load.  Call update_vuses_to_preheader for
	loads inserted into loop preheader block.
	(vect_do_peeling_for_alignment): Add need_loop_closed_rewrite parm.
	(vect_transform_loop): Add need_loop_closed_rewrite_parm.
	(vectorize_loops): Eliminate call to rewrite_into_ssa, only call
	rewrite_into_loop_closed_ssa if tree_duplicate_loop_to_edge has been
	called in vect_do_peeling_for_alignment or vect_transform_loop.
	* rs6000.c (altivect_init_builtins): Add the "const" attribute to
	__builtin_altivec_mask_for_store and 
	__builtin_altivec_mask_for_load.

2004-11-29  Daniel Berlin  <dberlin@dberlin.org>

	* tree-data-ref.c (dependence_stats): New structure.
	(analyze_indirect_ref): New function.
	(analyze_ziv_subscript): Track ziv tests using dependence_stats.
	(get_number_of_iters_for_loop): New function.
	Replace repeated idiom to get number of real/estimated iterations
	in loop with this function.
	(analyze_siv_subscript_cst_affine): Track siv stats using
	dependence_stats.
	No dependence exists if first overlap is outside of the loop.
	(analyze_subscript_affine_affine): No dependence exists if first
	overlap of either variable is outside of the loop.
	(analyze_siv_subscript): Track siv stats using dependence_stats.
	(analyze_miv_subscript): Ditto for miv.
	(analyze_overlapping_iterations): Track total number of tests
	using dependence_stats.
	(compute_affine_dependence): Print out failing reference if affine
	test is unusable.
	(find_data_references_in_loop): Rewrite to handle indirect_ref as
	well using analyze_indirect_ref.
	(compute_data_dependences_for_loop): Initialize stats structure,
	print out stats if request.
	
2004-11-22  Daniel Berlin <dberlin@dberlin.org>

	* tree-ssa-loop.c (pass_vectorize): Require PROP_align.
	
2004-11-22  Devang Patel  <dpatel@apple.com>

	Backport from Mainline.
	2004-11-22  Devang Patel  <dpatel@apple.com>

        * tree-if-conv.c (clean_predicate_lists): Clean all basic blocks. 

2004-11-17  Daniel Berlin  <dberlin@dberlin.org>

	* Makefile.in (OBJS-common): Add tree-ssa-align.o
	(tree-ssa-align.o): Add.
	* tree-flow.h (struct alignment_d): New.
	(dump_align_info): Add proto.
	(debug_align_info): Add proto.
	* tree-optimize.c (init_tree_optimization_passes): Add
	pass_align_info. 
	* tree-pass.h (PROP_align): New.
	(pass_align_analysis): New.
	* tree-ssa-align.c: New file.
	* tree-vectorizer.c (vect_get_ptr_offset): Copy code from
	lno-branch, written by Ira Rosen (irar@il.ibm.com).
	
2004-11-12  Devang Patel  <dpatel@apple.com>

	* optabs.c (vector_compare_rtx): Use tcc_comparison.

2004-11-12  Devang Patel  <dpatel@apple.com>

	Backport from Mainline.

	2004-11-12  Sebastian Pop  <pop@cri.ensmp.fr>

        * tree-data-ref.c (analyze_subscript_affine_affine): Correctly
        compute the first overlapping iterations.

2004-11-12  Devang Patel  <dpatel@apple.com>
	
	* tree-data-ref.c (compute_subscript_distance): Make externally visible.
	(build_class_dist_vector): Same.
	* tree-data-ref.h (compute_subscript_distance): New external decl.
	(build_class_dist_vector): Same.
	* tree-vectorizer.c (loops_num): New variable.
	(vect_build_dist_vector): New function.
	(vect_analyze_data_ref_dependence): Use distance vector to determine
	dependence.
	(vect_analyze_data_ref_dependences): Remove local variable loop.
	(vect_analyze_loop): Analyze operations before data dependences
	(vectorize_loops): Remove local variable loops_num.

2004-11-12  Devang Patel  <dpatel@apple.com>

	* tree-vectorizer.c (vectorizable_select): New function.
	(vect_is_simple_cond): New function.
	(vect_analyze_operations): Handle conditional expr.
	* tree-vectorizer.h (stmt_vec_info_type): New member, select_vec_info_type.

