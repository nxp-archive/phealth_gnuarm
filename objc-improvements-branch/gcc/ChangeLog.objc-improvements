<<<<<<< ChangeLog
2004-08-19  Ziemowit Laski  <zlaski@apple.com>

	* c-parse.in (methodtype): Specify %type; remove (explicit) semantic
	actions.
	(objc_inherit_code, objc_public_flag): Remove.
	(primary): Call objc_is_public() instead of is_public(),
	objc_build_message_expr() instead of build_message_expr(),
	objc_build_selector_expr() instead of build_selector_expr(),
	objc_build_protocol_expr() instead of build_protocol_expr(),
	objc_build_encode_expr() instead of build_encode_expr(),
	objc_build_string_object() instead of build_objc_string_object().
	(typespec_nonreserved_nonattr): Call objc_get_static_reference()
	instead of get_static_reference(), objc_get_object_reference()
	instead of get_object_reference().
	(component_decl_list2): Call objc_get_class_ivars() instead of
	get_class_ivars_from_name().
	(objcdef): Move semantic action to objc_finish_implementation(),
	and call it.
	(classdef): Move semantic actions to objc_start_class_interface(),
	objc_continue_interface(), objc_finish_interface(),
	objc_start_class_implementation(), objc_continue_implementation(),
	objc_start_category_interface() and objc_start_category_implementation()
	and call them.
	(protocoldef): Move semantic actions to objc_start_protocol() and
	objc_finish_interface() and call them.
	(visibility_spec): Move semantic actions to objc_set_visibility() and
	call it.
	* c-parse.in (OBJC_TYPE_QUAL): New %token.
	(ivars, ivar_declarator): Remove nonterminals and their associated
	productions.
	(objc_quals, objc_qual, objc_typename, optparms, optellipsis): New
	nonterminals.
	(ivar_decl): Use component_decl; adjust call to
	objc_add_instance_variable().
	(opt_semi): New nonterminal, with a pedantic-mode warning.
	(objc_catch_prefix): Call grokparm() before calling
	objc_begin_catch_clause().
	(methoddef): Move semantic actions to objc_set_method_type() and
	objc_start_method_definition(), objc_continue_method_definition()
	and objc_finish_method_definition() and call them.
	(methodproto): Move semantic actions to objc_set_method_type() and
	objc_add_method_declaration() and call them.
	(methoddecl): Call objc_build_method_signature() instead of
	build_method_decl(); use objc_typename instead of typename.
	(optparmlist): Call objc_method_ellipsis().
	(keyworddecl): Call objc_build_keyword_decl() instead of
	build_keyword_decl(); use objc_typename instead of typename.
	(receiver): Call objc_get_class_reference() instead of 
	get_class_reference().
	(rid_to_yy): Mark RID_IN, RID_OUT, RID_INOUT, RID_BYCOPY, RID_BYREF 
	and RID_ONEWAY as returning OBJC_TYPE_QUAL to yyparse().
	(yylexname): Call objc_is_class_name() instead of is_class_name().
	* stub-objc.c (lookup_interface): Remove stub.
	(is_class_name): Rename to objc_is_class_name.
	(lookup_objc_ivar): Rename to objc_lookup_ivar.
	(objc_is_reserved_word, objc_declare_alias, objc_declare_class,
	objc_declare_protocols, objc_start_protocol, objc_is_id,
	objc_start_class_interface, objc_start_category_interface,
	objc_continue_interface, objc_finish_interface,
	objc_add_instance_variable, objc_set_visibility,
	objc_set_method_type, objc_start_class_implementation,
	objc_start_category_implementation, objc_continue_implementation,
	objc_finish_implementation, objc_add_method_declaration,
	objc_start_method_definition, objc_get_protocol_qualified_type,
	objc_finish_method_definition, objc_build_keyword_decl,
	objc_build_method_signature, objc_build_encode_expr,
	objc_build_protocol_expr, objc_static_init_needed_p,
	objc_build_selector_expr, objc_build_message_expr,
	objc_build_string_object, objc_get_class_reference,
	objc_generate_static_init_call): New stubs.

2004-08-19  Ziemowit Laski  <zlaski@apple.com>

	* Makefile.in (c-parse.o): Depend on $(C_COMMON_H).
	* c-common.h (lookup_interface): Remove prototype.
	(is_class_name): Rename to objc_is_class_name.
	(lookup_objc_ivar): Rename to objc_lookup_ivar.
	(get_current_scope): Rename to objc_get_current_scope.
	(objc_is_reserved_word, objc_lookup_ivar, objc_declare_alias,
	objc_declare_class, objc_declare_protocols, objc_method_ellipsis,
	objc_is_public, objc_build_message_expr, objc_finish_message_expr,
	objc_build_selector_expr, objc_build_protocol_expr,
	objc_build_encode_expr, objc_build_string_object, 
	objc_get_static_reference, objc_get_object_reference,
	objc_get_class_reference, objc_get_class_ivars,
	objc_start_class_interface, objc_start_category_interface,
	objc_start_protocol, objc_continue_interface, 
	objc_finish_interface, objc_start_class_implementation,
	objc_start_category_implementation, objc_continue_implementation,
	objc_finish_implementation, objc_set_visibility,
	objc_set_method_type, objc_build_method_signature,
	objc_add_method_declaration, objc_start_method_definition,
	objc_continue_method_definition, objc_finish_method_definition,
	objc_add_instance_variable, objc_clear_super_receiver,
	objc_build_keyword_decl, objc_build_throw_stmt, 
	objc_build_try_prologue, objc_build_try_epilogue,
	objc_build_catch_stmt, objc_build_catch_epilogue,
	objc_build_finally_prologue, objc_build_synchronized_prologue,
	objc_build_synchronized_epilogue,
	objc_build_try_catch_finally_stmt): New prototypes.
	* c-decl.c (get_current_scope): Rename to objc_get_current_scope.
	(groktypename_in_parm_context): Remove.
	(grokparm): New function.
	(build_cdtor): Call ObjC metadata initializer before all other
	static constructors.
	* c-lex.c (c_lex_with_flags): Call objc_is_reserved_word()
	instead of using macros.
	* c-parse.in: Include c-common.h instead of objc-act.h.
	(OBJC_TYPE_QUAL): New %token.
	* c-tree.h (groktypename_in_parm_context, get_current_scope,
	objc_mark_locals_volatile): Remove prototypes.
	(grokparm): New prototype.
	* c-typeck.c (build_component_ref): Check for ObjC-ness before
	calling objc_is_public().
	(build_external_ref): Call objc_lookup_ivar() instead of
	lookup_objc_ivar().
	(build_c_cast): Preserve the cast if casting to an ObjC type.
	* expr.c (categorize_ctor_elements_1): Check for existence of
	designated initializer before grokking it.
	* gcc.c (default_compilers): Add info about ".mm", ".M" and ".mii"
	Objective-C++ extensions.
	* gengtype.c (get_file_basename): Match entire subdirectory name
	('cp', 'objc', 'objcp') rather than just its suffix.
	(get_output_file_with_visibility): Add more special cases for headers
	used by more than one front-end.
	
=======
2004-08-06  Ziemowit Laski  <zlaski@apple.com>

	* doc/frontends.texi: Mention Objective-C++ in addition to
	Objective-C.
	* doc/install.texi: Add 'obj-c++' to list of configurable
	languages.
	* doc/invoke.texi: Rename Objective-C option headings to
	indicate they also apply to Objective-C++.  List file
	extensions for Objective-C++ sources.  Mention that
	ObjC and ObjC++ compilations may also use C and C++ options,
	respectively.  Point users to doc/standards.texi for
	further info on ObjC and ObjC++.
	* doc/sourcebuild.texi: Mention the objcp/ directory and
	the Objective-C++ sources it contains.
	* doc/standards.texi: Update link to Apple ObjC site;
	add link to gcc readings.html WWW doc.

2004-07-30  Ziemowit Laski  <zlaski@apple.com>

	* c-common.h (objc_is_type_qualifier): Remove prototype.
	(objc_add_instance_variable): Adjust prototype to accept 1 parameter
	and return void.
	* c-parse.in (OBJC_TYPE_QUAL): New %token.
	(ivars, ivar_declarator): Remove nonterminals and their associated
	productions.
	(objc_quals, objc_qual, objc_typename, optellipsis): New nonterminals.
	(ivar_decl): Use component_decl; adjust call to
	objc_add_instance_variable().
	(opt_semi): Add a pedantic-mode warning.
	(objc_catch_prefix): Call grokparm() before calling
	objc_begin_catch_clause().
	(methoddecl, keyworddecl): Use objc_typename instead of typename.
	(optparms): Chain parameters via tree lists, rather than directly.
	(rid_to_yy): Mark RID_IN, RID_OUT, RID_INOUT, RID_BYCOPY, RID_BYREF 
	and RID_ONEWAY as returning OBJC_TYPE_QUAL to yyparse().
	* c-typeck.c (build_component_ref): Check for ObjC-ness before
	calling objc_is_public().
	(build_c_cast): Retrieve main variant of type before casting to it.
	* stub-objc.c (objc_is_type_qualifier): Remove stub.
	(objc_add_instance_variable): Adjust stub to accept 1 parameter and
	return void.
	(objc_is_public): New stub.

2004-06-25  Ziemowit Laski  <zlaski@apple.com>

	* c-common.h (objc_static_init_needed_p,
	objc_generate_static_init_call): New prototypes.
	* c-objc-common.c (build_cdtor): If present, call the Objective-C
	static initializer before all others.
	* c-parse.in (opt_semi): New nonterminal.
	(methoddef): Allow for an optional semicolon in method definitions.
	* stub-objc.c (objc_static_init_needed_p, 
        objc_generate_static_init_call): New stubs.

2004-06-23  Ziemowit Laski  <zlaski@apple.com>

	* c-common.h (objc_is_id, objc_get_protocol_qualified_type): New
	prototypes.
	(objc_method_ellipsis, objc_get_static_reference,
	objc_get_object_reference, objc_continue_method_definition):
	Remove prototypes.
	* c-parse.in (optparms, optellipsis): New nonterminals.
	(myparms, myparm, myxdecls, mydecls, mydecl, optarglist): Remove.
	(typespec_nonreserved_nonattr): Call objc_get_protocol_qualified_type()
	instead of objc_get_static_reference() or objc_get_object_reference().
	* c-typeck.c (build_c_cast): Preserve the NOP_EXPR when casting
	to an Objective-C type.
	* expr.c (categorize_ctor_elements_1): Check for presence of 
	designated initializer before checking its TREE_CODE.
	* stub_objc.c (objc_is_id, objc_get_protocol_qualified_type): New
	stub functions.
	(objc_method_ellipsis, objc_get_static_reference,
	objc_get_object_reference, objc_continue_method_definition):
	Remove stub functions.

2004-06-09  Ziemowit Laski  <zlaski@apple.com>

	* c-common.h (objc_is_type_qualifier): New prototype.
	* stub-objc.c (objc_is_type_qualifier, objc_clear_super_receiver):
	New stubs.

2004-03-04  Ziemowit Laski  <zlaski@apple.com>

	* Makefile.in (c-parse.o): Depend on $(C_COMMON_H).
	* c-common.h (lookup_interface): Remove prototype.
	(is_class_name): Rename to objc_is_class_name.
	(lookup_objc_ivar): Rename to objc_lookup_ivar.
	(get_current_scope): Rename to objc_get_current_scope.
	(objc_is_reserved_word, objc_lookup_ivar, objc_declare_alias,
	objc_declare_class, objc_declare_protocols, objc_method_ellipsis,
	objc_is_public, objc_build_message_expr, objc_finish_message_expr,
	objc_build_selector_expr, objc_build_protocol_expr,
	objc_build_encode_expr, objc_build_string_object, 
	objc_get_static_reference, objc_get_object_reference,
	objc_get_class_reference, objc_get_class_ivars,
	objc_start_class_interface, objc_start_category_interface,
	objc_start_protocol, objc_continue_interface, 
	objc_finish_interface, objc_start_class_implementation,
	objc_start_category_implementation, objc_continue_implementation,
	objc_finish_implementation, objc_set_visibility,
	objc_set_method_type, objc_build_method_signature,
	objc_add_method_declaration, objc_start_method_definition,
	objc_continue_method_definition, objc_finish_method_definition,
	objc_add_instance_variable, objc_clear_super_receiver,
	objc_build_keyword_decl, objc_build_throw_stmt, 
	objc_build_try_prologue, objc_build_try_epilogue,
	objc_build_catch_stmt, objc_build_catch_epilogue,
	objc_build_finally_prologue, objc_build_synchronized_prologue,
	objc_build_synchronized_epilogue,
	objc_build_try_catch_finally_stmt): New prototypes.
	* c-decl.c (get_current_scope): Rename to objc_get_current_scope.
	* c-lex.c (c_lex_with_flags): Call objc_is_reserved_word()
	instead of using macros.
	* c-parse.in: Include c-common.h instead of objc-act.h.
	(methodtype): Specify %type; remove (explicit) semantic actions.
	(objc_inherit_code, objc_public_flag): Remove.
	(primary): Call objc_is_public() instead of is_public(),
	objc_build_message_expr() instead of build_message_expr(),
	objc_build_selector_expr() instead of build_selector_expr(),
	objc_build_protocol_expr() instead of build_protocol_expr(),
	objc_build_encode_expr() instead of build_encode_expr(),
	objc_build_string_object() instead of build_objc_string_object().
	(typespec_nonreserved_nonattr): Call objc_get_static_reference()
	instead of get_static_reference(), objc_get_object_reference()
	instead of get_object_reference().
	(component_decl_list2): Call objc_get_class_ivars() instead of
	get_class_ivars_from_name().
	(objcdef): Move semantic action to objc_finish_implementation(),
	and call it.
	(classdef): Move semantic actions to objc_start_class_interface(),
	objc_continue_interface(), objc_finish_interface(),
	objc_start_class_implementation(), objc_continue_implementation(),
	objc_start_category_interface() and objc_start_category_implementation()
	and call them.
	(protocoldef): Move semantic actions to objc_start_protocol() and
	objc_finish_interface() and call them.
	(visibility_spec): Move semantic actions to objc_set_visibility() and
	call it.
	(ivar_declarator): Call objc_add_instance_variable() instead of
	add_instance_variable().
	(methoddef): Move semantic actions to objc_set_method_type() and
	objc_start_method_definition(), objc_continue_method_definition()
	and objc_finish_method_definition() and call them.
	(methodproto): Move semantic actions to objc_set_method_type() and
	objc_add_method_declaration() and call them.
	(methoddecl): Call objc_build_method_signature() instead of
	build_method_decl().
	(optparmlist): Call objc_method_ellipsis().
	(keyworddecl): Call objc_build_keyword_decl() instead of
	build_keyword_decl().
	(receiver): Call objc_get_class_reference() instead of 
	get_class_reference().
	(yylexname): Call objc_is_class_name() instead of is_class_name().
	* c-typeck.c (build_external_ref): Call objc_lookup_ivar() instead of
	lookup_objc_ivar().
	* gengtype.c (get_file_basename): Actually check lang subdirectory
	name instead of merely its length.
	* stub-objc.c (lookup_interface): Remove stub.
	(is_class_name): Rename to objc_is_class_name.
	(lookup_objc_ivar): Rename to objc_lookup_ivar.
	(objc_is_reserved_word, objc_declare_alias, objc_declare_class,
	objc_declare_protocols, objc_start_protocol, objc_method_ellipsis,
	objc_start_class_interface, objc_start_category_interface,
	objc_continue_interface, objc_finish_interface,
	objc_add_instance_variable, objc_set_visibility,
	objc_set_method_type, objc_start_class_implementation,
	objc_start_category_implementation, objc_continue_implementation,
	objc_finish_implementation, objc_add_method_declaration,
	objc_start_method_definition, objc_continue_method_definition,
	objc_finish_method_definition, objc_build_keyword_decl,
	objc_build_method_signature, objc_build_encode_expr, objc_build_protocol_expr,
	objc_build_selector_expr, objc_build_message_expr,
	objc_build_string_object, objc_get_class_reference, objc_get_object_reference,
	objc_get_static_reference): New stubs.

2004-03-02  Ziemowit Laski  <zlaski@apple.com>

	* gengtype.c (get_base_file_bitmap): Allow for file found
	in a language subdirectory to also be used by other languages.

2004-01-30  Ziemowit Laski  <zlaski@apple.com>

	* Makefile.in (C_PRETTY_PRINT_H): Add c-pretty-print.h.
	(C_AND_OBJC_OBJS): Add c-pretty-print.o.
	(C_OBJC): Remove c-pretty-print.o.
	(c-lang.o): Depend on c-objc-common.h.
	(c-objc-common.o): Depend on $(C_PRETTY_PRINT_H) and 
	c-objc-common.h; remove duplicate $(C_TREE_H) dependency.
	* c-decl.c (groktypename_in_parm_context): Remove.
	* c-lang.c: Include c-objc-common.h.
	(LANG_HOOKS_FINISH, LANG_HOOKS_INIT_OPTIONS,
	LANG_HOOKS_INITIALIZE_DIAGNOSTICS, LANG_HOOKS_HANDLE_OPTION,
	LANG_HOOKS_MISSING_ARGUMENT, LANG_HOOKS_POST_OPTIONS,
	LANG_HOOKS_GET_ALIAS_SET, LANG_HOOKS_SAFE_FROM_P, 
	LANG_HOOKS_EXPAND_EXPR, LANG_HOOKS_MARK_ADDRESSABLE, 
	LANG_HOOKS_PARSE_FILE, LANG_HOOKS_TRUTHVALUE_CONVERSION,
	LANG_HOOKS_FINISH_INCOMPLETE_DECL, LANG_HOOKS_UNSAFE_FOR_REEVAL,
	LANG_HOOKS_STATICP, LANG_HOOKS_SET_DECL_ASSEMBLER_NAME, 
	LANG_HOOKS_NO_BODY_BLOCKS, LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL,
	LANG_HOOKS_PRINT_IDENTIFIER, LANG_HOOKS_FUNCTION_ENTER_NESTED,
	LANG_HOOKS_FUNCTION_LEAVE_NESTED, LANG_HOOKS_DUP_LANG_SPECIFIC_DECL,
	LANG_HOOKS_DECL_UNINIT, LANG_HOOKS_RTL_EXPAND_STMT,
	LANG_HOOKS_COMMON_ATTRIBUTE_TABLE, LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE,
	LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN,
	LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS,
	LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P,
	LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING,
	LANG_HOOKS_TREE_INLINING_ESTIMATE_NUM_INSNS,
	LANG_HOOKS_TREE_DUMP_DUMP_TREE_FN,
	LANG_HOOKS_CALLGRAPH_EXPAND_FUNCTION, LANG_HOOKS_TYPE_FOR_MODE,
	LANG_HOOKS_TYPE_FOR_SIZE, LANG_HOOKS_SIGNED_TYPE,
	LANG_HOOKS_UNSIGNED_TYPE, LANG_HOOKS_SIGNED_OR_UNSIGNED_TYPE,
	LANG_HOOKS_INCOMPLETE_TYPE_ERROR, LANG_HOOKS_TYPE_PROMOTES_TO,
	LANG_HOOKS_REGISTER_BUILTIN_TYPE, LANG_HOOKS_WRITE_GLOBALS):
	Move to c-objc-common.h.
	(c_initialize_diagnostics): Move to c-objc-common.c.
	* c-objc-common.c: Include c-pretty-print.h and c-objc-common.h.
	(c_tree_printer): Use pp_base_string() macro instead of pp_string().
	(c_initialize_diagnostics): Moved from c-lang.c.
	* c-objc-common.h: New file.
	* c-tree.h (groktypename_in_parm_context, get_current_scope,
	objc_mark_locals_volatile): Remove prototypes.
	* doc/invoke.texi (-x option): Rename 'cpp-output' and 'objc-cpp-output'
	to 'c-cpp-output' and 'objective-c-cpp-output', respectively.  Add
	'objective-c++', 'objective-c++-header' and 'objective-c++-cpp-output'.
	* gcc.c (default_compilers): Add info about ".mm", ".M" and ".mii"
	Objective-C++ extensions; rename 'cpp-output' to 'c-cpp-output'.
	* gengtype.c (get_file_basename): Match entire subdirectory name
	(e.g., 'cp', 'objc', 'objcp') rather than just its suffix.
	(get_base_file_bitmap): Allow a file to be used by more than one
	front-end.
	(get_output_file_with_visibility): Add more special cases for headers
	used by more than one front-end.
	* doc/invoke.texi: Change '-x cpp-output' to '-x c-cpp-output' in
	example.

