2000-04-25  Richard Henderson  <rth@cygnus.com>

	* condexec.c (noce_try_cmove_arith): Also fail if no insn_a.

2000-04-25  Richard Henderson  <rth@cygnus.com>

	* condexec.c (noce_process_if_block): Reject insn_b from test_bb
	if X is referenced by the condition.  Make sure set_b is initialized.
	(dead_or_predicable): Squeeze notes out of the sequence we move.
	* flow.c (tidy_fallthru_edge): Automatically remove simplejump_p,
	not condjump_p.

2000-04-25  Richard Henderson  <rth@cygnus.com>

	* basic-block.h (life_analysis): Declare here ...
	* output.h: ... not here.

	* cse.c (cse_insn): Emit barrier after unconditional jump.

	* condexec.c: Include hard-reg-set.h.
	(noce_try_store_flag_constants): Fix thinko in operand ordering
	for arbitrary constants case.
	(noce_process_if_block): Check for no insn_b.
	(merge_if_block): Update global_live_at_start/end for the
	affected blocks.
	(dead_or_predicable): Don't return before freeing regsets.
	Fail merge if we extend hard reg lifetimes on SMALL_REGISTER_CLASSES.
	(if_convert): Extend reg info if we allocated new pseudos.

	* flow.c (life_analysis): Take prop flags not remove_dead_code.
	Don't take nregs.  Remove SSA check.  Only init alias analysis if
	we're deleting insns.  Don't allocate all_blocks.  
	(update_life_info): Accept null BLOCK as univeral set.
	(calculate_global_regs_live): Likewise.  Force stack pointer live.
	(allocate_reg_life_data): Set max_regno.
	(mark_set_1): Clear reg_live bits after emitting REG_UNUSED.
	(mark_used_reg): Only set REG_N_DEATHS with PROP_REG_INFO.
	(count_reg_sets_1, count_reg_sets): Remove.
	(count_reg_references): Remove.
	(recompute_reg_usage): Implement with update_life_info.
	Resize the reg info array.

	* reg-stack.c (reg_to_stack): Update call to life_analysis.
	* ssa.c (convert_to_ssa, convert_from_ssa): Likewise.

	* toplev.c (DFI_ce): New.
	(dump_file): Update.  Document remaining letters.
	(rest_of_compilation): Update call to life_analysis.  Don't
	run if_convert after cse1.  Set cse_not_expected after cse2.
	Set no_new_pseudos after last register update, not before flow1.
	Rebuild the CFG after jump after combine.  Run if_convert after
	combine.

2000-04-24  Richard Henderson  <rth@cygnus.com>

	* condexec.c (noce_try_store_flag_constants): Pass normalize to
	emit_store_flag.
	(noce_try_store_flag_mask): Fix thinko in operand ordering.

2000-04-23  Richard Henderson  <rth@cygnus.com>

	* flow.c (propagate_one_insn): Call mark_set_1, not mark_set_reg.
	(mark_set_1): New argument `flags'.  Update all callers.  Alter
	hard subregs.  Merge most of mark_set_reg back in.  Reorg and 
	simplify flags testing.
	(mark_set_reg): Remove.
	(mark_regno_cond_dead): Broken out from mark_set_reg.

2000-04-22  Richard Henderson  <rth@cygnus.com>

	* basic-block.h (propagate_block): Declare.
	(propagate_one_insn, init_propagate_block_info): Declare.
	(free_propagate_block_info): Declare.
	* flow.c (propagate_one_insn): Break out of propagate_block.
	(init_propagate_block_info): Likewise.
	(free_propagate_block_info): Likewise.
	(propagate_block): Use them.  Export.
	(find_auto_inc): Use pbi->bb instead of BLOCK_FOR_INSN.
	(mark_used_reg): Update reg_live after emitting death notes.

	* condexec.c (dop_validate_life): Remove.
	(find_memory): New.
	(dead_or_predicable): Use propagate_one_insn and company to 
	collect live & set regsets; test regsets rather than calling
	dop_validate_life.  Use find_memory.  Update JUMP_LABEL.

	* graph.c (node_data): Use GET_NOTE_INSN_NAME instead of local array.

2000-04-20  Richard Henderson  <rth@cygnus.com>

	* condexec.c (cond_exec_process_insns): Test whole insn for
	modification, not just the pattern.
	(cond_exec_process_if_block): Skip branch and use at end of THEN.
	Fix thinko in call to cancel_changes.
	(merge_if_block): Also check for return insn in assertion.
	(find_if_header): Don't try find_if_case_1 or find_if_case_2 
	before reload if HAVE_conditional_execution.
	(find_if_block): Don't allow non-adjacent JOIN if no ELSE.
	(dead_or_predicable): Fix search for first real insn.  Fix thinkos
	in calls to cond_exec_process_insns and cancel_changes.

	* flow.c (propagate_block): Initialize reg_cond_dead with data
	from a conditional branch's successor blocks.

	* config/d30v/d30v.c (d30v_expand_epilogue): Don't use
	gen_return_internal.
	* config/d30v/d30v.h (EPILOGUE_USES): New.
	* config/d30v/d30v.md (return): Change to expander.
	(*return_internal): Hide.  Don't reference link reg in rtl.
	(*cond_return_true, *cond_return_false): New.
	(*cond_exec_si_neg): Put the whole parallel under the cond_exec.
	(*cond_exec_si_addsub): Likewise.
	(*cond_exec_call_internal, *cond_exec_call_value_internal): New.

2000-04-20  Richard Henderson  <rth@cygnus.com>

	* basic-block.h (flow_delete_block): Declare.
	* flow.c (flow_delete_block): Renamed from delete_block.  Export.

	* flow.c (calculate_loop_depth): Remove.
	* output.h (calculate_loop_depth): Remove decl.
	* bb-reorder.c (reorder_basic_blocks): Don't call estimate_probability.
	* toplev.c (DFI_ce2): New.
	(dump_file): Add ce2.
	(rest_of_compilation): Add argument to if_convert.  Explode 
	calculate_loop_depth inline.  Call estimate_probability at the
	same time.  Break final if_convert into it's own dump file.

	* condexec.c (AUX_UPDATE_LIFE): Remove.
	(num_modified_insns): Remove.
	(post_dominators): New.
	(SET_ORIG_INDEX, ORIG_INDEX): New.
	(SET_UPDATE_LIFE, UPDATE_LIFE): New.
	(cond_exec_process_insns): Remove undo buffer; accrue changes in
	the change set instead.  Replace call_ok with mod_ok.  Don't check
	for calls explicitly.
	(cond_exec_unprocess_insns): Remove.
	(cond_exec_get_condition): New.
	(cond_exec_process_if_block): Use it.  Update for
	cond_exec_process_insns changes.
	(noce_get_condition): New.
	(noce_process_if_block): Use it.
	(find_if_header): Break out from find_if_block.
	(find_if_block): Look for triangles and diamonds only.  Relax
	adjacent join block test.
	(find_if_case_1, find_if_case_2): New.
	(struct dop_validate_life_info, dop_validate_life): New.
	(dead_or_predicable): New.
	(if_convert): New argument life_data_ok.  Compute post_dominators.
	Record original block numbers.

	* jump.c (redirect_exp_1): Rework from old redirect_exp.  Never
	commit change group changes.
	(invert_exp_1): Similarly.
	(redirect_exp, invert_exp): Use them.
	(redirect_jump_1): New.
	(invert_jump_1): New.
	(jump_optimize_1): Remove code subsumed by condexec.c.
	* rtl.h (invert_jump_1, redirect_jump_1): Declare.

	* config/alpha/alpha.c (alpha_emit_floatuns): Emit missing barrier.

2000-04-17  Richard Henderson  <rth@cygnus.com>

	* condexec.c (HAVE_conditional_execution): Default to 0.
	(HAVE_conditional_move, HAVE_incscc, HAVE_decscc): Likewise.
	Don't conditionally compile anything.
	(noce_try_store_flag_inc): Break out from noce_try_store_flag_arith.
	(noce_try_store_flag_constants): Likewise.
	(noce_try_store_flag_mask): Likewise.
	(noce_try_store_flag_arith): Remove.
	(noce_process_if_block): Call them.
	* genconfig.c (main): Set all HAVE_foo to 1.

	* flow.c (mark_set_1): A modified but not killed register is in
	fact dead if it wasn't used before.
	(flush_reg_cond_reg_1): Make regno unsigned.  Fix merge error.
	(find_auto_inc): Fix merge error.
	
2000-04-15  Richard Henderson  <rth@cygnus.com>

	* flow.c (struct propagate_block_info): Replace new_dead and
	new_live with new_set.
	(propagate_block): Initialize it.  Don't merge into reg_live.
	(mark_set_1): Take code parameter; update all callers.  Don't
	kill registers that don't die.
	(mark_set_reg): Take code parameter; update callers.  Mark
	new_set for regs not clobbered.  Update reg_live not new_dead.
	(flush_reg_cond_reg): Unset reg_cond_dead for the regno we
	just flushed.
	(mark_used_reg): Update reg_live not new_live.  Rely on new_set
	for determining if we don't need a death note.

	* rtlanal.c (dead_or_set_regno_p): Use find_regno_note.

	* toplev.c (rest_of_compilation): Fix merge errors in calling
	of find_basic_blocks.

2000-04-06  Richard Henderson  <rth@cygnus.com>

	* condexec.c (cond_exec_process_insns): Don't split insns.
	* toplev.c (rest_of_compilation): Always split after reload
	when optimizing.

	* reload.c (find_equiv_reg): Handle COND_EXEC.
	* rtlanal.c (reg_referenced_p): Likewise.
	(note_stores): Likewise.
	(reg_overlap_mentioned_p): Rewrite to use a switch.

	* flow.c (struct propagate_block_info): Rename reg_cond_live
	to reg_cond_dead.  Update all uses.
	(mark_set_reg): Add to reg_cond_dead not remove from reg_cond_live.
	(mark_used_reg): Similarly, remove from reg_cond_dead.

	* genrecog.c (*): Rename _last_insn to last_insn.
	(make_insn_sequence): Set the position of the peephole2 C test
	to be at the last insn.

	* jump.c (jump_optimize_1): Disable the "if (p) x=a; else x=b" to
	"x=b; if (p) x=a" optimization.

	* config/d30v/d30v.c (d30v_expand_epilogue): Properly track
	stack adjustment for d30v_eh_epilogue_sp_ofs.
	* config/d30v/d30v.md: Rewrite peepholes to peephole2s.
	(*bra_reg_true, *bra_reg_false): New.

2000-04-05  Richard Henderson  <rth@cygnus.com>

	* flow.c (mark_set_reg): Don't free condition expr twice.
	(free_reg_cond_life_info): Fix typos.
	(flush_reg_cond_reg_1): Adjust for splay_tree_value being a
	reg_cond_life_info, not an rtx.
	(nand_reg_cond): Return const0_rtx for false.
	(mark_used_reg): Wrap naked condition in an EXPR_LIST.

	* ggc.h (struct rtx_def): Forward declare.

Wed Apr  5 16:13:54 2000  Michael Meissner  <meissner@cygnus.com>
			  Richard Henderson  <rth@cygnus.com>

	Conditional execution support:

	* Makefile.in (OBJS): Add condexec.o.
	(condexec.o): New target.
	* condexec.c: New file.

	* rtl.def (COND_EXEC): New.
	* rtl.h (COND_EXEC_TEST, COND_EXEC_CODE): New.

	* basic-block.h (merge_blocks_nomove): Declare.
	(tidy_fallthru_edge): Declare.
	* flow.c (loop_depth): Remove.
	(reg_next_use, cc0_live, mem_set_list): Replace with ...
	(struct reg_cond_life_info, struct propagate_block_info): New.
	(merge_blocks_nomove): Document as merging into previous blocks.
	Remove cruft from between blocks; remove all edges out of A.
	(tidy_fallthru_edge): Export.
	(life_analysis): Don't allocate reg_next_use.
	(propagate_block_delete_insn): Break out of propagate_block.
	(propagate_block_delete_libcall): Likewise.
	(propagate_block): Create a propagate_block_info struct to pass
	to subroutines.  Allocate one not two temporary regsets.
	(mark_set_regs): Recognize COND_EXEC.
	(mark_set_reg): Break out of mark_set_1.  Handle conditional kills.
	(free_reg_cond_life_info): New.
	(flush_reg_cond_reg_1, flush_reg_cond_reg): New.
	(ior_reg_cond, not_reg_cond, nand_reg_cond): New.
	(mark_used_reg): Break out of mark_used_regs.  Handle conditional life.
	(mark_used_regs): Recognize COND_EXEC.
	(insn_dead_p): Use propagate_block_info struct.
	(libcall_dead_p, invalidate_mems_from_autoinc): Likewise.
	(find_auto_inc, try_pre_increment_1): Likewise.
	(print_rtl_with_bb): Dump regs live at end too.
	(count_reg_sets_1): Pass in loop_depth.
	(count_reg_sets, count_reg_references): Likewise.
	(recompute_reg_usage): Provide it.

	* genconfig.c (have_cond_arith_flag): Remove.
	(have_cond_exec_flag): New.
	(walk_insn_part): Detect COND_EXEC, not arithmetic in IF_THEN_ELSE.
	(main): Print HAVE_conditional_execution.
	* tm.texi (MAX_CONDITIONAL_EXECUTE): Document.

	* haifa-sched.c (haifa_classify_insn): Recognize COND_EXEC.
	(sched_analyze_insn, print_pattern): Likewise.
	(schedule_insns): Don't do count_or_remove_death_notes check
	for HAVE_conditional_execution.

	* gcse.c (gcse_main): Don't rebuild the CFG here.
	(delete_null_pointer_checks): Likewise.
	* ssa.c (convert_to_ssa): Likewise.
	* toplev.c (rest_of_compilation): Do it here instead.  Call
	if_convert after doing so.

	* jump.c (jump_optimize_1): Remove all store_flag, conditional move,
	and conditional arithmetic code.
	(find_insert_position): Remove.

	* print-rtl.c (debug_rtx_range): New.

	* rtlanal.c (dead_or_set_regno_p): Handle COND_EXEC.

	* varray.h (VARRAY_ACTIVE_SIZE, VARRAY_POP_ALL): New.

	* config/alpha/alpha.c (alpha_emit_conditional_move): Fail
	if we discover we need a pseudo and no_new_pseudos is true.
	* config/alpha/alpha.md (ne:DI insn): New.
	(trunctfsf2, sne): Emit NE instead of non-canonical LTU.

	* config/d30v/abi: New.
	* config/d30v/d30v-protos.h: New.
	* config/d30v/d30v.c: New.
	* config/d30v/d30v.h: New.
	* config/d30v/d30v.md: New.
	* config/d30v/libgcc1.asm: New.
	* config/d30v/t-d30v: New.
	* config/d30v/xm-d30v.h: New.
