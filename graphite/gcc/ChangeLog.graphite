2007-05-09  Sebastian Pop  <sebastian.pop@inria.fr>

	* tree-data-ref.c: Don't include graphite.h.
	Comment out the code for printing data reference's scop.
	(build_access_matrix_with_af): Moved...
	* tree-data-ref.h (build_access_matrix_with_af): Removed declaration.
	* graphite.c (build_access_matrix_with_af): ... here.  Now static.
	(print_graphite_bb): Print basic block's schedule.
	(print_scop): Don't print the schedule, call cloog's pretty printer.
	(bb_in_scop_p): A basic block is in a scop only if it is both
	dominated and postdominated by the scop's entry and exit basic blocks.
	(function_parameter_p): New.
	(invariant_in_scop_p): Use function_parameter_p.
	(new_scop, save_scop): New.
	(end_scop, test_for_scop_bound, build_scops): Use new_scop, and 
	save_scop.
	(scan_tree_for_params): Directly build the constraint as CloogMatrix.
	(loop_in_scop_p): New.
	(scop_record_loop): Use loop_in_scop_p.
	(build_scop_domain): Renamed build_scop_iteration_domain.
	(setup_cloog_loop, initialize_cloog_names, find_scop_parameters,
	nb_params_in_scop, build_scop_context, first_loop_in_scop, 
	setup_cloog_loop, dot_scop_1, dot_scop): New.
	* graphite.h (GBB_LOOP, SCOP_PROG, dot_scop): New.
	(struct scop): Add a pointer to cloog's representation of a program.

2007-04-14  Sebastian Pop  <sebastian.pop@inria.fr>

	* doc/invoke.texi (-ftree-check-verbose): Renamed -ftree-checks-verbose.
	* common.opt (flag_tree_check_verbose): Renamed flag_tree_checks_verbose.
	* tree-check.c (tree_check_warning): Use flag_tree_checks_verbose.

2007-04-14  Sebastian Pop  <sebastian.pop@inria.fr>

	* configure: Regenerated.
	* config.in: Regenerated.
	* tree-ssa-loop.c (graphite_transforms): Execute graphite_transform_loops
	only when HAVE_cloog.
	* configure.ac (HAVE_polylib, HAVE_cloog, GRAPHITE): Defined.
	* graphite.c: Include polylibgmp.h and cloog.h.
	(graphite_transform_loops): Removed loops parameter.
	* tree-flow.h (graphite_transform_loops): Update declaration.
	* Makefile.in (POLYLIBLIBS, POLYLIBINC, CLOOGLIBS, CLOOGINC): New.
	(LIBS): Depend on CLOOGLIBS and on POLYLIBLIBS.
	(INCLUDES): Depend on POLYLIBINC and on CLOOGINC.
	(OBJS-common): Remove dependence on graphite.o.
	(BACKEND): Depend on @GRAPHITE@.

2007-04-13  Sebastian Pop  <sebastian.pop@inria.fr>

	* doc/invoke.texi (-ftree-check-verbose): Documented.
	* testsuite/gcc.dg/tree-checker/tree-checks-1.c: New.
	* testsuite/gcc.dg/tree-checker/tree-checks-2.c: New.
	* testsuite/gcc.dg/tree-checker/tree-checks-3.c: New.
	* testsuite/gcc.dg/tree-checker/tree-checks-4.c: New.
	* testsuite/gcc.dg/tree-checker/tree-checks.exp: New.
	* testsuite/gcc.dg/tree-checker/condates.crp: New.
	* common.opt (ftree-checks-verbose): New.
	* tree-check.c (tree_check_warning): Move extra stderr output under control
	of flag_tree_check_verbose.

2007-04-12  Sebastian Pop  <sebastian.pop@inria.fr>

	* tree-match.c: Fix comments formatting.
	* tree-match.h: Fix comments formatting.
	* tree-check.c: Fix comments formatting.
	(tree_check_init): Restructure.

2007-04-12  Nic Volanschi  <nic.volanschi@free.fr>

	* doc/invoke.texi (-ftree-check, -ftree-checks): Documented.

2007-04-10  Sebastian Pop  <sebastian.pop@inria.fr>

	* Merge from mainline (r120733:123693).

2007-03-20  Nic Volanschi  <nic.volanschi@free.fr>

	* condate.y: New file.
	* tree-match.h (struct patt_info_s): New field sign.
	(struct condate_s): New field msg.
	(normalize_condate, name_condate, add_condate): New.
	(conds[], condate_parse): Made extern.
	* tree-check.c (tree_check_warning): First arg changed to cond; warning reformatted.
	(tree_check_init): Reset the TREE_VISITED bit on every CFG node.
	(tree_scan): New.
	(tree_check): Process trivial condates.
	(read_delimited_string): Removed.
	(print_cond): Print name and msg.
	(conds[]): Made extern.
	(parse_tree_check_file_once): Rewritten to use the parser in condate.y.
	Processing of option --tree_check_string moved to tree_scan().
	* Makefile.in: Added condate.y

2007-03-12  Sebastian Pop  <sebastian.pop@inria.fr>

	* tree-pretty-print.c (dump_generic_bb_buff, lazy_dump_generic_node): 
	Use VECs instead of varrays.
	* diagnostic.h (lazy_dump_generic_node): Update declaration.
	* Makefile.in (pretty-print.o): Depend on vec.h.
	* pretty-print.c: Include tree.h and vec.h.
	(pp_clear_state, pp_write_list_to_stream, pp_base_format, 
	pp_base_format, pp_construct, pp_base_string, pp_lazy_mode,
	new_tree_chunk, pp_add_tree, pp_add_string, pp_add_char, pp_write_list,
	pp_free_list): Use VECs instead of varrays.
	* pretty-print.h: Do not include varray.h.
	(struct tree_chunk_s): Declaration moved before its use.
	(output_buffer): Rename varray field to chunks.
	* tree-match.c (tree_equal, chunk_1st_char, chunks_lookahead, 
	tree_1st_char, match_chunks_pattinfo, match_tree_pattinfo, 
	save_global_holes): Use VECs instead of varrays.
	* tree-match.h: Declare VECs of cfg_node, and hole_p.
	* tree-check.c (scan_cfg_stmts, push_node, print_matching_stmt): Removed.
	(tree_check_instance, push_global_holes_if_new, tree_check,
	execute_tree_check): Use VECs instead of varrays.
	(gate_tree_check): Don't execute the CFG check when basic_block_info
	is not available.

2007-01-12  Sebastian Pop  <sebastian.pop@inria.fr>

	* Merge from mainline (r115016:120733).

2007-01-12  Sebastian Pop  <sebastian.pop@inria.fr>

	* Merge from mainline (r117632:117661).

2007-01-12  Sebastian Pop  <sebastian.pop@inria.fr>

	* tree-dump.c (dump_option_value_in): Add TDF_DEBUG.
	* tree-pass.h (TDF_DEBUG, debug_p): New.
	* tree-scalar-evolution.c (set_scalar_evolution, get_scalar_evolution, 
	get_scalar_evolution, add_to_evolution, set_nb_iterations_in_loop, 
	get_loop_exit_condition, analyze_evolution_in_loop,
	analyze_initial_condition, analyze_scalar_evolution,
	instantiate_parameters, number_of_latch_executions): Use debug_p.
	* tree-chrec.c (chrec_apply): Use debug_p.
	* tree-data-ref.c: Include graphite.h.
	(dump_data_reference): Print also the access matrix.
	(analyze_array, analyze_indirect_ref, init_data_ref, 
	analyze_offset_expr, address_analysis, object_analysis,
	create_data_ref, finalize_ddr_dependent, 
	non_affine_dependence_relation, analyze_ziv_subscript,
	analyze_siv_subscript_cst_affine, 
	compute_overlap_steps_for_affine_1_2, analyze_subscript_affine_affine,
	can_use_analyze_subscript_affine_affine, analyze_siv_subscript,
	analyze_miv_subscript, analyze_overlapping_iterations, 
	build_classic_dist_vector, subscript_dependence_tester, 
	compute_affine_dependence, analyze_all_data_dependences): Use debug_p.
	(build_access_matrix_with_af): No longer static.
	* tree-data-ref.h (scop_p): ... declaration here.
	(data_reference.scop): New field.
	(DR_SCOP, DR_ACCESS_MATRIX): New.
	(build_access_matrix_with_af, dr_num_subscripts): Declared.
	* graphite.c (print_graphite_bb): Call dump_data_references.
	(print_scop): Use scop_nb_loops and scop_dim_domain.
	(test_for_scop_bound): Use debug_p.
	(scan_tree_for_params): Use scop_nb_loops, scop_nb_loops and
	scop_nb_params.
	(scop_loop_index): Moved...
	(scop_record_loop): New.
	(build_scop_loop_nests): Use scop_record_loop.
	(build_scop_domain): Use scop_dim_domain.
	(build_access_matrix): Implemented.
	(build_scop_canonical_schedules): Use scop_nb_loops.
	(build_graphite_bb): Initialize GBB_SCOP.
	* graphite.h (scop_p): Moved...
	(graphite_bb.scop): New field.
	(graphite_bb.iteration_domain, GBB_DOMAIN, scop.nb_params,
	scop.nb_loops, scop.dim_domain, SCOP_NB_LOOPS, SCOP_NB_PARAMS,
	SCOP_DIM_DOMAIN, SCOP_STMTS): Removed.
	(scop_nb_params, scop_nb_loops, scop_dim_domain, gbb_dim_domain,
	scop_loop_index): New.
	* Makefile.in (tree-data-ref.o): Depends on graphite.h.

2007-01-05  Sebastian Pop  <sebastian.pop@inria.fr>

	* Merge from mainline (r117661:120450).

2006-10-12  Sebastian Pop  <sebastian.pop@inria.fr>

	* tree-scalar-evolution.c (instantiate_parameters_1): Don't stop
	at the first declaration outside the varying loop, instantiate as
	far as possible.
	* tree-chrec.c (for_each_scev_op): New.
	* tree-chrec.h (for_each_scev_op): Declared.
	* tree-ssa-loop.c (pass_graphite_trans): Don't dump the function.
	* tree-data-ref.c (get_references_in_stmt, 
	find_data_references_in_stmt): New, from trunk.
	(find_data_references_in_loop): Use get_references_in_stmt
	and find_data_references_in_loop, modified as in trunk.
	(build_access_matrix_with_af): New.
	* tree-data-ref.h (data_reference): Add a field access_matrix.
	(data_ref_loc): New, as in trunk.
	* graphite.c (print_graphite_bb, bb_in_scop_p, stmt_in_scop_p,
	invariant_in_scop_p, param_index, scan_tree_for_params, 
	scop_loop_index, build_scop_loop_nests, build_scop_domain, irp_data,
	idx_record_param, idx_record_params, build_access_matrix, 
	build_scop_data_accesses, build_scop_canonical_schedules, 
	build_graphite_bb, build_scop_bbs, find_params_in_bb, 
	build_scop_params): New.
	* graphite.h (graphite_bb): New.
	(scop): Add fields static_schedule, params, loop_nest,
	iteration_domain.
	* lambda.h: Declare vecs of lambda_matrix.
	* tree-flow.h (print_loop_ir_bb): Declared.
	* tree-cfg.c (print_loop_ir_bb): New.
	(print_loop): Use print_loop_ir_bb.

2006-10-12  Sebastian Pop  <pop@cri.ensmp.fr>

	* Merge from mainline (r115016:117632).

2006-10-11  Sebastian Pop  <pop@cri.ensmp.fr>

	* graphite.c (debug_scops): Adjust definition for avoiding a bootstrap
	break due to a warning.

2006-10-10  Sebastian Pop  <pop@cri.ensmp.fr>

	* graphite.c (print_scops, debug_scops): New.
	(graphite_transform): Renamed graphite_find_transform.
	* graphite.h (debug_scops): Declared.

2006-08-17  Sebastian Pop  <pop@cri.ensmp.fr>

	* tree-match.c: Reformat following the GNU style.
	* tree-match.h: Reformat following the GNU style.
	* tree-pattern.h: Removed empty file.
	* Makefile.in: Remove references to tree-pattern.h.
	* tree-check.c: Reformat following the GNU style.
	(execute_tree_check): Move gate condition code to...
	(gate_tree_check): ...here.  New function.
	(pass_check): Use the gate function.

2006-07-04  Nic Volanschi <nic.volanschi@free.fr>

	* tree-pattern.h: New. Tree pattern matching and checking using 
	concrete syntax.
	* tree-check.c: New. Tree/CFG checking pass.
	* tree-match.c: New. Library for tree pattern matching.
	* opts.c, common.opt: Add options --ftree-check & --ftree-checks.
	* toplev.c, flags.h: Add globals for tree-check pass.
	* Makefile.in: Integrate the files in tree-check pass.
	* timevar.def, tree-optimize.c, tree-pass.h: Register tree-check pass.
	* pretty-print.c, pretty-print.h, tree-pretty-print.c, diagnostic.h: 
	Introduce a "lazy" pretty-print mode.
	* tree.c, tree.h: Add tree_name.

2006-07-04  Sebastian Pop  <pop@cri.ensmp.fr>

	* doc/invoke.texi (-fgraphite): Correct typo.
	* tree-scalar-evolution.c (number_of_iterations_for_all_loops): Update use
	of print_loop_ir.
	* testsuite/gcc.dg/graphite/scop-1.c: New.
	* testsuite/gcc.dg/graphite/scop-2.c: New.
	* testsuite/gcc.dg/graphite/graphite.exp: New.
	* graphite.c: Include domwalk.h.
	(print_scop): Print only the entry and exit blocks.
	(debug_scop): No longer static.
	(affine_expr): Fix formating.  Return also true when the expression is
	constant.
	(stmt_simple_for_scop_p): Fix formating.
	(build_scops): Use domwalk.
	(get_loop_start, end_scop, test_for_scop_bound): New.
	(graphite_transform_loops): Avoid printing on stderr.
	* graphite.h (debug_scop): Declared.
	* tree-flow.h (debug_loop_ir, print_loop_ir): Update declarations.
	* Makefile.in (graphite.o): Depend on domwalk.h.
	* tree-cfg.c (print_loop, print_pred_bbs, print_succ_bbs): Remove 
	declarations for static functions.
	(print_loop, print_loop_ir, debug_loop_ir): Use an extra parameter for
	controlling output verbosity.

2006-06-26  Sebastian Pop  <pop@cri.ensmp.fr>
	    Plesco Alexandru  <shurikx@gmail.com>

	* doc/invoke.texi (-fgraphite): Document.
	* tree-pass.h (pass_graphite_transforms): Declared.
	* timevar.def (TV_GRAPHITE_TRANSFORMS): New.
	* tree-ssa-loop.c (graphite_transforms, gate_graphite_transforms): New.
	(pass_graphite_transforms): Defined.
	* tree-data-ref.c (free_data_ref, data_reference): Extern.
	* tree-data-ref.h (free_data_ref, data_reference): Declared.
	* graphite.c, graphite.h: New.
	* common.opt (fgraphite): Declared.
	* tree-flow.h (graphite_transform_loops): Declared.
	* Makefile.in (OBJS-common): Add graphite.o.
	(graphite.o): New rule.
	* passes.c (pass_graphite_transforms): Scheduled.

