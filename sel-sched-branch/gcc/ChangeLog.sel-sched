2007-06-16  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>

	Merge revisions 121417-125587 from trunk.

2007-06-14  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>

	Initialized merge tracking via "svnmerge" with revisions "1-121416"
	from svn+ssh://gcc.gnu.org/svn/gcc/trunk.

2007-06-14  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>

	Extend support for ia64 speculation to generate branchy checks.
	Move data sets to per basic block data structures.
	
	* sched-ebb.c (begin_schedule_ready): Update.
	
	* rtlanal.c (may_trap_p_1): Fix bug.
	
	* cfghooks.c (get_cfg_hooks, set_cfg_hooks): New functions.
	
	* cfghooks.h (get_cfg_hooks, set_cfg_hooks): Declare.
	
	* haifa-sched.c (restore_other_notes): Fix bug.
	(haifa_sched_init): Initialize hooks.
	(haifa_sched_finish): Finalize hooks.
	(init_before_recovery): Update.
	(create_recovery_block): Make global.  Rename to
	sched_create_recovery_block ().  Update.
	(sched_create_recovery_edges): Separate cfg manipulation code from
	create_check_block_twin () into new function.
	(create_check_block_twin): Update.
	(sched_speculate_insn): Handle be-in speculations.
	(insn_luid): New debug function.
	(sched_init_only_bb): New hook.
	(haifa_init_only_bb): Make static.
	(sched_split_block): New hook.
	(sched_split_block_1): New function.
	(sched_create_empty_bb): New hook.
	(sched_create_empty_bb_1): New function.
	
	* sel-sched.c (old_create_basic_block, old_delete_basic_block): Remove.
	(create_insn_rtx_with_rhs, replace_src_with_reg_ok_p): Update.
	(replace_dest_with_reg_ok_p, create_insn_rtx_with_lhs): Ditto.
	(create_speculation_check_insn_rtx): Rename to
	create_speculation_check ().  Rewrite to handle branchy speculation
	checks.
	(apply_spec_to_expr, un_speculate, undo_transformations): Update.
	(compute_av_set, compute_lv_set, update_data_sets): Move data sets
	to per basic block data structures.
	(find_used_regs_1, gen_insn_from_expr_after): Update.
	(generate_bookkeeping_insn, fill_insns, move_op): Ditto.
	(old_rtl_hooks): Remove.
	(sel_region_init): Move initialization of hooks to
	sel_register_rtl_hooks () and sel_register_cfg_hooks ().  Update.
	(sel_region_finish): Make sure lv sets at region entries are valid.
	Update.
	(sel_sched_region_1, sel_global_init, sel_global_finish): Update.
	
	* sel-sched-ir.c (sel_global_bb_info, sel_region_bb_info): New vector
	variables.
	(sel_bb_info): Remove.
	(sel_extend_global_bb_info): New function.
	(extend_region_bb_info, extend_bb_info): New static functions.
	(sel_finish_global_bb_info): New function.
	(finish_region_bb_info): New static functions.
	(init_fences, new_fences_add): Update.
	(nop_vinsn): New static variable.
	(get_nop_from_pool, return_nop_to_pool, free_nop_pool): Update.
	(sel_rtx_equal_p): New static function.
	(vinsn_equal_p): Use it.
	(sel_gen_insn_from_rtx_after): Update.
	(init_insn_force_unique_p): New static variable.
	(sel_gen_recovery_insn_from_rtx_after): New function.
	(vinsns_correlate_as_rhses_p, merge_expr_data, merge_expr): Update.
	(sel_cfg_note_p): Remove.
	(init_global_and_expr_for_bb): New static function.
	(init_global_and_expr_for_insn, sel_init_global_and_expr): Update.
	(finish_global_and_expr_insn_1): Remove.
	(finish_global_and_expr_for_bb): New static function.
	(finish_global_and_expr_insn_2): Rename to
	finish_global_and_expr_insn ().  Update.
	(sel_finish_global_and_expr): Update.
	(has_dependence_note_reg_use): Handle be-in speculations.
	(bookkeeping_can_be_created_if_moved_through): Update.
	(insn_is_the_only_one_in_bb_p): New static function.
	(sched_sel_remove_insn): Rename to sel_remove_insn ().  Update.
	(transfer_data_sets): Remove.
	(get_seqno_of_a_pred): Update.
	(finish_insn): Rename to finish_insns ().
	(sel_rtl_insn_added): Update.
	(orig_rtl_hooks, sel_rtl_hooks): New static variable.
	(sel_register_rtl_hooks, sel_unregister_rtl_hooks): New functions.
	(empty_vinsn): Remove.
	(insn_init_create_new_vinsn_p): New static variable.
	(set_insn_init, init_insn, init_simplejump): Update.
	(insn_init_move_lv_set_if_bb_header): Remove.
	(sel_init_new_insns): Update.
	(init_lv_set_for_insn): Rename to init_lv_set ().  Update.
	(init_lv_sets): Update.
	(release_lv_set_for_insn): Rename to free_lv_set ().  Update.
	(free_lv_sets): Update.
	(init_invalid_lv_set, init_invalid_av_set, init_invalid_data_sets): New
	static functions.
	(free_av_set, free_data_sets, exchange_lv_sets, exchange_av_sets):
	Ditto.
	(exchange_data_sets): Ditto.
	(get_av_set, get_av_level): New functions.
	(sel_bb_header_1): Remove.
	(sel_bb_header): Rename to sel_bb_head ().  Update.
	(sel_bb_header_p): Rename to sel_bb_head_p ().  Update.
	(sel_bb_empty_p_1): Remove.
	(sel_bb_empty_p, sel_bb_end): Update.
	(extend_bb): Remove.
	(sel_init_bbs): Update.
	(num_preds_gt_1): Rename to sel_num_cfg_preds_gt_1 ().  Update.
	(rtx_vec_t): New typedef.
	(bb_note_pool): New vector variable.
	(return_bb_to_pool, get_bb_note_from_pool, free_bb_note_pool): New
	static functions.
	(sel_add_or_remove_bb): Make static.  Update.
	(move_bb_info): New static function.
	(sel_remove_empty_bb): Update.
	(remove_empty_bb): New static function.
	(orig_cfg_hooks): New static variable.
	(sel_init_only_bb): New static function.
	(sel_split_block): Make static.  Update.
	(sel_split_edge): Update.
	(sel_create_empty_bb, sel_create_recovery_block): New static function.
	(sel_redirect_edge_force): Rename to
	sel_redirect_edge_and_branch_force ().  Update.
	(sel_redirect_edge_and_branch): Update.
	(sel_cfg_hooks): New static variable.
	(sel_register_cfg_hooks, sel_unregister_cfg_hooks): New functions.
	(create_insn_rtx_from_pattern_1, create_insn_rtx_from_pattern): Update.
	(create_copy_of_insn_rtx, setup_nop_and_exit_insns): Ditto.
	(setup_empty_vinsn): Rename to setup_nop_vinsn ().  Update.
	(free_empty_vinsn): Rename to free_nop_vinsn.  Update.
	(sel_add_loop_preheader, sel_is_loop_preheader_p): Update.
	(insn_sid): New debug function.
	
	* sel-sched-ir.h: Update.	
	(expr_equal_p): Remove.
	(struct _sel_insn_data: ws_level, spec_checked_ds): New fields.
	(struct _sel_insn_rtx_data: lv): Remove field.
	(struct _sel_global_bb_info, struct _sel_region_bb_info): New types.
	(get_all_loop_exits, _succ_iter_cond, _eligible_successor_edge_p):
	Update.
	
	* sel-sched-dump.c (dump_vinsn_flags, sel_dump_cfg_insn): Update.
	(sel_dump_cfg_2): Ditto.
	
	* sel-sched-dump.h: Update.

	* sched-deps.c (ds_max_merge): Update.

	* sched-int.h: Update.

	* sched-rgn.c (rgn_make_new_region_out_of_new_block): New function.
	(rgn_add_block): Update.

	* sched-rgn.h: Update.

	* config/ia64/ia64.c (insn_can_be_in_speculative_p): New static
	function.
	(ia64_speculate_insn, ia64_needs_block_p): Support branchy checks
	during selective scheduling.

	* cfgrtl.c (create_basic_block_structure): Update.

2007-06-14  Andrey Belevantsev  <abel@ispras.ru>
	    Alexander Monakov  <amonakov@ispras.ru>

	* sel-sched.c (substitue_reg_in_rhs): Fix vertical spacing.
	(un_substitute): Use correct vinsn when fixing expr.
	(identical_copy_p): New function.
	(undo_transformations): Use it when killing from the current av set 
	all exprs that use registers set by an insn.  Do not use 
	expression caches for now.
	(moveup_rhs): Fix spacing.  Add missing line_finish ().

	* sel-sched-ir.c (deps_init_id_finish_insn): When downgrading to USE,
	leave LHS and RHS fields of an expression intact for future use.
	(insn_eligible_for_subst_p): Fix thinko.  Do not consider 'reg=const'
	insns.
	
2007-06-14  Andrey Belevantsev  <abel@ispras.ru>

	* sel-sched.c (moveup_set_rhs): When analyzing an expression,
	first check the caches.  When a hard dependence/no dependence 
	is found, record this in the caches.

	* sel-sched-ir.h (struct sel_insn_data): Reorder fields.
	New fields analyzed_deps, found_deps.
	(INSN_ANALYZED_DEPS, INSN_FOUND_DEPS): New macros.
	
	* sel-sched-ir.c (init_global_and_expr_for_insn, init_insn, 
	init_simplejump): Initialize INSN_ANALYZED_DEPS and 
	INSN_FOUND_DEPS caches.
	(finish_global_and_expr_1): Free them.

2007-06-14  Andrey Belevantsev  <abel@ispras.ru>

        * sel-sched-ir.h (struct _expr): New field changed_on_insns.
        (EXPR_CHANGED_ON_INSNS): New macro.
        (copy_expr_onside): Declare.

        * sel-sched.c: Kill #if 0'd code.
        (undo_transformations): New function.  
        (un_substitute): Adapt for undo_transformations.  Add RHS parameter, 
        rename AV_PTR parameter to NEW_SET_PTR.  Kill #if 0'd code.  Process
        just one RHS instead of looping through the whole av set.
        (un_speculate): Likewise. 
        (moveup_set_rhs): When an expr has been changed, mark this.
        (equal_after_moveup_path_p): Use copy_expr_onside instead of 
        copy_expr.
        (generate_bookkeeping_insns): Likewise.
        (find_used_regs_1): Use undo_transformations.
        (move_op): Likewise.  Also use copy_expr_onside.

        * sel-sched-ir.c (init_expr): Add changed_on parameter.  Use it.
        Update all callers.
        (copy_expr_onside): New function.
        (merge_expr_data): Merge cache bitmaps.
        (clear_expr): Free the cache bitmap.
        (av_set_union_and_clear): Set *FROMP to NULL to mark that it's empty.
        
2007-06-13  Alexander Monakov  <amonakov@ispras.ru>

        * haifa-sched.c (haifa_classify_insn_1): Rename from
        haifa_classify_insn, add COND_EXEC handling, use recursion to analyze
        PARALLEL and COND_EXEC.
        (haifa_classify_insn): New implementation.
        * sel-sched.c (CANT_MOVE_TRAPPING): New macro.
        (moveup_rhs): Use it.

2007-06-13  Andrey Belevantsev  <abel@ispras.ru>

        * common.opt (fsel-sched-substitute-inside-insn-group): New flag.
        * sel-sched.c (moveup_rhs_inside_insn_group): New.
        (moveup_rhs): Add inside_insn_group parameter.  When it is true,
        use the above function.  Kill unneeded comment.
        (moveup_set_rhs): Add inside_insn_group parameter.  Pass it to 
        moveup_rhs.
        (equal_after_moveup_path_p_1): Call moveup_rhs with inside_insn_group
        set to true.
        (compute_av_set): Call moveup_set_rhs with inside_insn_group == false.
        (find_used_regs_1): Tidy.
        (generate_bookkeeping_insn): Kill #if 0'd code.
        (fill_insns): Add to rhs_seq expressions from boundaries' av sets 
        instead of rhs_vliw.  Put correct register in them.  Fix comment.
        Take pattern for the final insn to schedule from rhs_vliw.
        Move comment before 'if'.  Kill unneeded scope.
        (sel_region_init): Enable moveup_set_path when the user requested
        substitution inside insn groups.
        (sel_global_init): Do not pipeline outer loops when the user doesn't
        permit any kind of pipelining.
        * sel-sched-ir.c: Include sel-sched-dump.h.  Use again sel_print_insn
        as a debug hook. 
        (RHS_DEST): New macro.
        * sel-sched-dump.c (sel_print_insn): Resurrect.  Fix it to not 
        segfault, use new macros.
        * sched-vis.c (dump_insn_slim_1): Pass 1 instead of 0 to print_insn.
        * config/ia64/ia64.opt (msched-spec-verbose, msched-prefer-non-data-spec-insns,
        msched-prefer-non-control-spec-insns, msched-count-spec-in-critical-path,
        msel-sched-renaming, msel-sched-substitution, msel-sched-data-spec, 
        msel-sched-control-spec, msel-sched-dont-check-control-spec): Use Target 
        Report Var instead of Common Report Var.

2007-06-06  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>

	Update various pieces of infrastructure.
 	Implement initial support for ia64 data and control speculation.
	
	* sched-ebb.c (n_insns, sched_n_insns): Rename to rgn_n_insns and
	sched_rgn_n_insns respectfully.  Update all uses.
	(ebb_common_sched_info): Move initialization to schedule_ebbs ().
	(add_remove_insn, add_block1, fix_recovery_cfg, ebb_head_or_leaf_p):
	Rename to ebb_add_remove_insn (), ebb_add_block (),
	ebb_fix_recovery_cfg (), ebb_region_head_or_leaf_p () respectfully.
	Update all uses.
	
	* target.h (struct gcc_target: needs_block_p): Change signature.
	Update all uses.
	(struct gcc_target: gen_check): Rename to gen_spec_check.  Change
	signature.  Update all uses.
	(struct gcc_target: get_insn_spec_ds, get_insn_checked_ds):
	New hooks to query speculation information of instruction.
	(struct gcc_target: skip_rtx_p): New hook to identify speculative
	markers of instruction.
	
	* rtlanal.c (may_trap_p_1): Skip through UNSPEC on request of target.

	* haifa-sched.c (vecprim.h): New include.
	(sched_max_uid, sched_last_basic_block, sched_bbs, sched_insns):
	Remove.
	(spec_info): Make global.
	(sched_init, sched_finish, haifa_sched_init, haifa_sched_finish):
	Restructure initialization.
	(haifa_speculate_insn): New static function.
	(try_ready): Use it instead of speculate_insn ().
	(sched_extend_ready_list, sched_finish_ready_list): New functions.
	(extend_ready, haifa_local_init, sched_local_init, sched_insns_init):
	Remove.
	(sched_insns_finish, extend_all): Ditto.
	(haifa_insns_init): Rename to haifa_insns_init.  Update all uses.
	(haifa_luid_for_non_insn): New static function.
	(dep_weak): Move to sched-deps.c.  Rename to ds_weak ().
	(init_before_recovery): Use haifa_init_only_bb () instead of
	add_block ().
	(create_check_block_twin): Update to use new initialization functions.
	(change_pattern): Rename to sched_change_pattern ().  Make global.
	Split haifa-specific functionality into ...
	(haifa_change_pattern): New static function.
	(speculate_insn): Rename to sched_speculate_insn ().  Make global.
	Split haifa-specific functionality into ...
	(haifa_speculate_insn): New static function.
	(sched_bbs_init, add_block, glat_init_1, glat_init, sched_bbs_finish):
	Remove.
	(debug_spec_status): Use get_dep_weak_1 () instead of get_dep_weak ()
	to prevent ICEs on malformed input.
	(extend_bb, init_bb, extend_insn, init_insn, init_insns_in_bb): New
	static functions for walking through scheduling region.
	(sched_scan): New function for walking through scheduling region.
	(sched_extend_bb, sched_init_bb): New static functions.
	(sched_init_bbs, sched_finish_bbs): New functions to init / finalize
	basic block information.
	(attach_life_info1, attach_life_info): Move to the better place.
	(sched_luids): New vector variable to replace uid_to_luid.
	(sched_luid_extend): Rename to luids_extend_insn ().  Update to use
	sched_luids.
	(sched_max_luid): New variable.
	(sched_luid_init): Rename to luids_init_insn ().
	(sched_init_luids, sched_finish_luids): New functions to
	init / finalize logical uids.
	(sched_luid_finish): Remove.
	(sched_insn_extend, sched_insn_init, sched_insn_finish): Remove.
	(sched_extend_target): New function.
	(h_i_d): Make it a vector.
	(extend_h_i_d, init_h_i_d, haifa_init_h_i_d, haifa_finish_h_i_d):
	New functions to initialize / finalize haifa instruction data.
	(haifa_init_insn): New static function.
	(sched_bb_extend, sched_bb_init): Remove.
	(haifa_init_only_bb): New static function.
	(sched_data_update, sched_data_finish): Remove.

	* modulo-sched.c (sms_common_sched_info): Move initialization to ...
	(setup_sched_infos): New static function.
	(sms_schedule): Move initialization of common_sched_info,
	sched_deps_info, current_sched_info to setup_sched_infos ().

	* sel-sched.c (reset_sched_cycles_p): New variable.
	(old_ready_veclen): Rename to max_issue_size.
	(substitute_rhs): Rename to substitute_reg_in_rhs ().  Update to use
	vinsns properly.
	(replace_in_vinsn_using_bitmask): Rename to
	replace_in_rtx_using_bitmask ().  Update to use	vinsns properly.
	(un_substitute): Update to use	vinsns properly.
	(replace_src_with_reg): Rename to create_insn_rtx_with_rhs.  Don't use
	vinsns.
	(replace_dest_with_reg_in_vinsn): Rename to create_insn_rtx_with_lhs.
	Don't use vinsns.
	(replace_dest_with_reg_in_rhs): Update.
	(expr_dest_reg): New static function.
	(rhs_dest_regno): Use expr_dest_reg ().
	(mark_unavailable_hard_regs): Update.
	(choose_best_reg): Add assertion.  Move logic to ...
	(choose_best_reg_1): New static function.
	(choose_best_pseudo_reg): Add output parameter.
	(find_best_reg_for_rhs): Change type of return value.  Update.
	(sel_speculation_p): New static variable.
	(can_overcome_dep_p, create_speculation_check_insn_rtx): New static
	functions.
	(apply_spec_to_expr, speculate_expr, has_spec_dependence_p): Ditto.
	(un_speculate): Ditto.
	(moveup_rhs): Add support for data and control speculation.  Update.
	(moveup_set_rhs, equal_after_moveup_path_p, compute_av_set): Update.
	(propagate_lv_set, compute_live, update_data_sets): Update.
	(get_spec_check_type_for_insn): New static function.
	(find_used_regs_1, find_used_regs, sel_rank_for_schedule): Update to
	support speculation.
	(fill_ready_list, find_best_rhs_and_reg_that_fits): Ditto.
	(gen_insn_from_expr_after): New static function.
	(generate_bookkeeping_insn, fill_insns): Update
	(get_dest_reg_from_orig_ops): New static function.
	(move_op): Update to support speculation.
	(init_seqno): Add parameter.  Update.
	(sel_restore_other_notes): Move to sel-sched-ir.c.
	(is_loop_preheader_p): Move to sel-sched-ir.c.  Rename to
	sel_is_loop_preheader_p ().
	(sel_remove_loop_preheader): Move to sel-sched-ir.c.
	(sel_region_init, sel_region_finish, sel_sched_region_1): Update.
	(sel_global_init, sel_global_finish): Update.
	(selective_scheduling_run): Add .dot dumping.
	(handle_sel_sched): Use debugging parameter to choose scheduler.

	* sel-sched-ir.c (sel_bb_info): Change array to vector.
	(sel_max_uid, lvs, lvs_size): Remove.
	(s_i_r_d): New static vector variable.
	(get_nop_from_pool): Rewrite.
	(free_nop_pool): Update.
	(vinsn_equal_insn_p): Remove.
	(vinsn_separable_p): Rename to lhs_and_rhs_separable_p.  Update.
	(vinsn_init): Update.
	(sel_insn_rtx_cost): New static function.
	(sel_vinsn_cost, sel_gen_insn_from_rtx_after): New functions.
	sel_gen_insn_from_expr_after): Ditto.
	(rhs_equal_p): Rename to vinsn_correlate_as_rhses_p ().  Update.
	(rhs_init): Rename to init_expr ().  Update.
	(rhs_copy): Rename to copy_expr ().
	(merge_expr_data): New function.
	(rhs_merge): Rename to merge_expr ().
	(rhs_equal_insn_p): Remove.
	(clear_expr): New function.
	(av_set_lookup_rhs): Rename to av_set_lookup ().  Update.
	(av_set_loopup_other_equiv_rhs): Update.
	(av_set_remove_rhs_with_insn): Remove.
	(av_set_add_vinsn): Rename to av_set_add ().  Update.
	(av_set_copy): Update.
	(av_set_lookup_insn): Remove.
	(av_set_add_insn): Remove.
	(deps_init_id_start_insn, deps_init_id_finish_insn): Update.
	(deps_init_id_start_lhs, deps_init_id_finish_lhs): Ditto.
	(deps_init_id_start_rhs, deps_init_id_finish_rhs): Ditto.
	(deps_init_id_reset_deps_to_insn): Rename to
	deps_init_id_downgrade_to_use ().
	(deps_init_id_note_reg_set, deps_init_id_note_reg_clobber): Ditto.
	(deps_init_id_note_reg_use, deps_init_id_note_mem_dep): Ditto.
	(sel_cfg_note_p): New static function.
	(init_global_and_expr_for_insn): New static function.
	(sel_init_global_and_expr): New function.
	(finish_global_and_expr_insn_1, finish_global_and_expr_insn_1): New
	static functions.
	(sel_finish_global_and_expr): New function.
	(sel_deps_*): Rename functions to has_dependence_*.  Update.
	(save_deps_info): Remove.
	(setup_has_dependence_sched_deps_info): New static function.
	(has_dependence_p): Update.
	(tick_check_dep_with_dw, tick_check_p): Update.
	(lhs_equals_reg_p): Rename to lhs_of_insn_equals_to_reg_p ().
	(get_vinsn_type_for_insn): Remove.
	(insn_valid_p): Rename to insn_rtx_valid.
	(sel_insn_deffered_init): Remove.
	(copy_insn_out_of_stream, copy_insn_and_insert_before): Remove.
	(set_insn_init): New function.
	(init_insn, init_simplejump, insn_init_move_lv_set_if_bb_header): New
	static functions.
	(sel_init_new_insns, sel_finish_new_insns): New functions.
	(dfa_cost): Rename to vinsn_dfa_cost ().
	(bb_header_p): Rename to sel_bb_header_p ().
	(bb_empty_p): Rename to sel_bb_empty_p ().
	(sel_insn_has_single_succ_p): New function.
	(sel_add_or_remove_bb): Update.
	(sel_create_basic_block_before, sel_merge_blocks): New function.
	(create_insn_rtx_from_pattern_1): New static function.
	(create_insn_rtx_from_pattern, create_vinsn_from_insn_rtx): New
	functions.
	(create_copy_of_insn_rtx, change_vinsn_in_expr): Ditto.

	* sel-sched-ir.h (struct _rhs): Rename to 'struct _expr'.
	(struct _expr: sched_times, spec_done_ds, spec_to_check_ds): New
	fields.
	(struct vinsn_def: sched_cycle, sched_times, separable): Remove fields.
	(struct vinsn_def: cost, may_trap_p): New fields.
	(struct sel_insn_data: sched_cycle): New field.
	(struct _sel_insn_rtx_data): New type.

	* sel-sched-dump.c (dump_insn_rtx, debug_insn_rtx): New functions.
	(dump_vinsn, debug_vinsn, dump_expr, debug_expr): Ditto.
	(dump_insn, debug_insn): Ditto.
	(sel_dump_cfg_2): Update.

	* sel-sched-dump.h (enum _dump_insn_rtx, enum _dump_idata): New enums.
	(enum _dump_vinsn, enum _dump_expr, enum _dump_insn): New enums.

	* emit-rtl.c (emit_insn_after_1): Call hook.

	* sched-deps.c (note_reg_use, note_reg_set, note_reg_clobber): Convert
	macros to functions.
	(note_mem_dep, note_dep): Ditto.
	(sched_analyze_2): Generate control speculative dependencies.
	(deps_analyze_insn): Update.
	(d_i_d): Convert array to vector.
	(deps_extend_d_i_d, deps_finish_d_i_d): New functions.
	(sched_deps_local_init): Update.
	(get_dep_weak): Move logic to ...
	(get_dep_weak_1): New function.
	(ds_merge): Move logic to ...
	(ds_merge_1): New static function.
	(ds_full_merge, ds_max_merge, ds_get_speculation_types): New functions.
	(ds_get_max_dep_weak): New function.

	* sched-deps.h (sched-int.h): New include.
	(struct deps_insn_data: depend): Move field to
	'struct haifa_deps_insn_data'.

	* target-def.h (TARGET_SCHED_GEN_CHECK): Rename to
	TARGET_SCHED_GEN_SPEC_CHECK.
	(TARGET_SCHED_GET_INSN_SPEC_DS, TARGET_SCHED_GET_INSN_CHECKED_DS):
	New macros.
	(TARGET_SCHED_SKIP_RTX_P): New macro.

	* sched-int.h (vecprim.h): New include.
	(bb_vec_t, insn_vec_t): New typedefs.
	(struct sched_scan_info_def): New type.
	(sched_scan_info): Declare variable.
	(sched_scan, sched_init_bbs, sched_finish_bbs, sched_init_luids):
	Declare functions.
	(sched_finish_luids, sched_extend_target, haifa_init_h_i_d): Ditto.
	(haifa_finish_h_i_d, haifa_init_only_bb): Ditto.
	(struct common_sched_info_def): Remove fields which_luid, remove_notes,
	bb_extend, bb_init, bb_finish, insn_extend, insn_init.  Add field
	luid_for_new_insn.
	(struct haifa_insn_data): Add fields reg_weight, priority_known.

	* Makefile.in (SCHED_INT_H, SCHED_DEPS_H): Update.
	(fwprop.o): Fix dependencies.
	(haifa-sched.o, sched-deps.o, sel-sched.o, sel-sched-ir.o): Update
	dependencies.

	* sched-rgn.c (find_single_block_region, haifa_find_rgns): Update.
	(extend_rgns, schedule_region, sched_rgn_finish): Ditto.
	(sched_rgn_local_preinit, sched_rgn_local_init): Ditto.
	(rgn_setup_common_sched_info, rgn_setup_sched_infos): New function.

	* sched-vis.c (dump_insn_slim_1): Update.

	* config/ia64/ia64.opt (msched-ldc): Rename to msched-spec-ldc.
	(msched-control-ldc): Rename to msched-spec-control-ldc.
	(msel-sched-data-spec, msel-sched-control-spec): New flags.
	(msel-sched-dont-check-control-spec): New flag.

	* config/ia64/ia64.c: Rewrite speculation hooks.

	* config/ia64/ia64.md (speculable1, speculable2): New attributes.

	* params.def (PARAM_SELSCHED_MAX_SCHED_TIMES): New parameter.
	(PARAM_ALLOW_START, PARAM_ALLOW_STOP, PARAM_ALLOW_P): Remove.
	(PARAM_SEL1_START, PARAM_SEL1_STOP, PARAM_SEL1_P): New parameters.
	(PARAM_SEL2_START, PARAM_SEL2_STOP, PARAM_SEL2_P): Ditto.

2007-05-23  Alexander Monakov  <amonakov@ispras.ru>

	* target.h (struct gcc_target): Add new parameter to adjust_cost_2
	declaration.
	* haifa-sched.c (dep_cost_1): Add new parameter into declaration, pass
	it to adjust_cost_2.
	(insn_cost1): Update.
	(dep_cost): Add new parameter into declaration, pass it to dep_cost_1.
	* sel-sched-ir.c (tick_check_dep_with_dw): Remove special memory
	dependencies handling.
	* common.opt (fsel-sched-mem-deps-zero-cost): Remove option.
	* sched-int.h (dep_cost): Move declaration.
	* params.def (PARAM_SCHED_MEM_TRUE_DEP_COST): Rename from
	PARAM_SELSCHED_MEM_TRUE_DEP_COST.
	* config/ia64/ia64.opt (msched_fp_mem_deps_zero_cost): New option.
	* config/ia64/ia64.c (ia64_optimization_options): Rename parameter.
	(ia64_adjust_cost_2): Add new parameter into declaration, add special
	memory dependencies handling.

2007-05-23  Alexander Monakov  <amonakov@ispras.ru>

	* sel-sched-ir.c (tick_check_dep_with_dw): Use special higher cost for
	memory dependencies that are likely to alias.
	(tick_check_note_dep, tick_check_note_mem_dep): Pass 0 to
	tick_check_dep_with_dw to indicate non-memory or non-true memory
	dependencies.
	* params.def (PARAM_SELSCHED_MEM_TRUE_DEP_COST): New parameter.
	* config/ia64/ia64.c (ia64_optimization_options): Set it to 4.

2007-05-22  Dmitry Melnik  <dm@ispras.ru>
	    Andrey Belevantsev  <abel@ispras.ru>

	Implement pipelining of outer loops.
	* common.opt (fsel-sched-pipelining-outer-loops): New flag.
	* params.def (PARAM_MAX_PIPELINE_REGION_{BLOCKS, INSNS}): New params.
	(PARAM_INSN_START, PARAM_INSN_STOP, PARAM_INSN_P): New debug params.
	* cfgloop.h (LOOPS_HAVE_FALLTHRU_PREHEADERS): New enum field.
	* loop-init.c (loop_optimizer_init): When LOOPS_HAVE_FALLTHRU_PREHEADERS,
	set CP_FALLTHRU_PREHEADERS when calling create_preheaders.
	(loop_optimizer_finalize): Do not verify flow info after reload.
	* cfgloopmanip.c (create_preheader): Honor CP_FALLTHRU_PREHEADERS.
	Assert that the preheader edge will be fall thru when it is set.
	* cfgloop.c (get_loop_body_in_custom_order): New function.
	* sel-sched-int.h (sel_find_rgns, extend_rgns): Add definition.
	* sel-sched-ir.h: Include cfgloop.h.
	(MARK_LOOP_FOR_PIPELINING, LOOP_MARKEG_FOR_PIPELINING_P,
	LOOP_PREHEADER_BLOCKS, SET_LOOP_PREHEADER_BLOCKS): New macros.
	(current_loop_nest, bbs_pipelined, sel_split_edge, 
	sel_redirect_edge_and_branch, pipeline_outer_loops, 
	pipeline_outer_loops_init, pipeline_outer_loops_finish,
	sel_sched_region, sel_find_rgns, get_loop_nest_for_rgn,
	considered_for_pipelining_p, make_region_from_loop_preheader,
	sel_add_loop_preheader, clear_outdated_rtx_info): Add definitions.
	(succ_iterator): Add bb and loop_exits fields.
	(inner_loop_header_p, get_loop_exit_edges_unique_dests,
	get_all_loop_exits): New static inline functions.
	(SUCCS_SKIP_TO_LOOP_EXITS): New #define.
	(_succ_iter_start, _succ_iter_cond, _succ_iter_next,
	_eligible_succesor_edge_p): Implement skipping to loop exits iterator.
	* sel-sched-ir.c (current_loop_nest, loop_nests, bbs_in_loop_rgns,
	rev_top_order_index, rev_top_ordex_index_len): New static variables. 
	(last_added_block): Change to vector last_added_blocks.
	(sel_add_block_to_region, sel_create_new_region, bb_top_order_comparator,
	make_region_from_loop, make_region_from_loop_preheader, 
	make_regions_from_loop_nest, pipeline_outer_loops_init, 
	pipeline_outer_loops_finish, get_loop_nest_for_rgn, 
	considered_for_pipelining_p, make_regions_from_the_rest,
	sel_find_rgns, sel_add_loop_preheader): New functions.  
	(init_fences): Use SUCCS_SKIP_TO_LOOP_EXITS, adapt to multiple 
	region entries.  
	(tick_check_note_dep, tick_check_note_mem_dep): Fix comment.  Tidy.
	(sel_rtl_insn_added): Assert that we adding an insn to the current region.
	(sel_init_insn_info): When pipelining outer loops, get SEQNO not only
	from preds, but from succs also.  Change asserts accordingly.
	(sel_create_basic_block): Adapt for using a vector of added blocks.
	(sel_add_or_remove_bb): Likewise.
	(sel_split_block, sel_split_edge): Likewise.  Fix loop structures
	in case we've spoiled them.
	(sel_redireect_edge_force, sel_redirect_edge_and_branch): Likewise.
	(cfg_pred_1): Assert that we're walking inside the current region.
	(clear_outdated_rtx_info, find_place_to_insert_bb, 
	recompute_rev_top_order): New functions.
	(sel_add_or_remove_bb_1): Use them.
	* sel-sched.c (compute_av_set): Fix typo in comment.
	(compute_live_below_insn): Use SUCCS_ALL instead of equivalent flag
	combination.
	(extract_new_fences_from): Use SUCCS_SKIP_TO_LOOP_EXITS.
	(generate_bookkeeping_insn): Check that we don't spoil current loop.
	Use sel_redirect_edge_and_branch.  Tidy.
	(fill_insns_run): New global debug variable.
	(fill_insns): Use it.  Move temp_state initialization to proper place.
	Use SUCCS_SKIP_TO_LOOP_EXITS.
	(init_seqno_1): Likewise.  Tidy.
	(is_loop_preheader_p, sel_remove_loop_preheader, 
	split_edges_incoming_to_rgn): New.
	(sel_region_init): Initialize current_loop_nest.  Move loop preheader
	to appropriate region.  Set pipelining_p to true when current_loop_nest
	is not NULL; call split_edges_incoming_to_rgn.
	(sel_region_finish): Do not reschedule and bundle loop preheader.
	Remove it for later inclusion into correct region.
	(sel_sched_region_1): When pipelining outer loops, init fences with 
	a loop header.  Clear outdated info for loop preheader after scheduling.
	(sel_sched_region): Call pipeline_outer_loops_{init,finish}.
	* sel-sched-dump.c (sel_print_insn): Change order of checks.
	* sched-rgn.c (find_rgns): Rename to haifa_find_rgns.  Implement
	new find_rgns function.
	(extend_rgns): Export.
	(sched_rgn_init): Calculate and free dominance info only when 
	we don't pipelining outer loops.
	* config/ia64/ia64.c (scheduled_good_insn): Check INSN_P before
	calling recog_memoized.

2007-05-22  Alexander Monakov  <amonakov@ispras.ru>

	* sel-sched-ir.c (tick_check_dep_with_dw): Rename from
	tick_check_note_dep, ignore cost for true memory dependencies that are
	not likely to alias.
	(tick_check_note_dep): New implementation.
	(tick_check_note_mem_dep): Calculate dependence weight.
	* common.opt (fsel-sched-mem-deps-zero-cost): New option.
	* sched-deps.c (estimate_dep_weak): Remove static qualifier.
	* sched-deps.h (estimate_dep_weak): Declare.

2007-05-22  Dmitry Zhurikhin  <zhur@ispras.ru>

	* config/ia64/ia64.c (scheduled_good_insn): New static helper function.
	(ia64_dfa_new_cycle): Mark that a stop bit should be before current
	insn if there was a cycle advance.
	(final_emit_insn_group_barriers): Emit stop bits before insns starting
	a new cycle.
	* config/ia64/ia64.opt (msched-stop-bits-after-every-cycle): New flag.

2007-03-29  Dmitry Zhurikhin <zhur@ispras.ru>

	* sel-sched.c (generate_bookkeeping_insn): Remove unneeded 
	conditions when checking if bookkeeping insn can be generated in
	existing block and fix coding.
        (init_seqno_1): Remove assert.
        (fill_insns): Remove unneeded moving of boundary. In rare case of
	generating bookkeeping insn at the block above floating bb header
	split this (upper) block after place_to_insert generating new 
	floating bb header that way.
        (sel_sched_region_1): Implement rescheduling of pipelined code.
	* sel-sched-ir.c (sel_split_block): Added second parameter meaning
	instruction, after which basic block should be splitted.
	* sel-sched-ir.h: Correct declaration.
	* sel-sched-dump.c (sel_print_insn): Check if INSN_VI is present
        before referencing VINSN_SCHED_TIMES.
	* common.opt (flag_sel_sched_reschedule_pipelined): New flag to 
	reschedule pipelined code without pipelining after scheduling
	region.
	* sched-deps.c (sched_analyze_insn): Replace TRUE_BARRIER with
	MOVE_BARRIER to generate anti instead of true dependencies for
	JUMP followed with a BARRIER.

2007-03-29  Dmitry Zhurikhin <zhur@ispras.ru>

	* sel-sched.c (generate_bookkeeping_insn): Implement creating of 
	bookkeeping insn in existing block if possible instead of always 
	creating a new basic block for bookkeeping insn.
	(find_best_rhs_and_reg_that_fits): Correct bug with always not 
	scheduling issue_rate-th instruction on current cycle when 
	pipelining is on.
	(fill_insns): Move BND_TO some instructions back if bookkeeping
	insn was inserted between last scheduled insn and BND_TO.

2007-03-29  Andrey Belevantsev  <abel@ispras.ru>

        Allow the selective scheduler to work before reload.
	* common.opt (fselective-scheduling2): New flag. 
	* sel-sched.c (replace_in_vinsn_using_bitmask_1): Call exp_equiv_p
	with FOR_GCSE set to true, not false.
	(count_occurrences_1): Skip subregs of registers we're searching for.
	(replace_src_with_reg): Do not generate the new register; use 
	new_src_reg instead.
	(replace_src_with_reg_ok_p): Change new_src_reg type from int to rtx.
	Adjust the code accordingly.  Do not generate a new register.
	Assert that dest's mode equals to new_src_reg's mode. 
	(replace_dest_with_reg_in_vinsn): Change new_reg type from int 
	to rtx.  Add clone_p parameter.  Don't generate a new register.
	Copy rtx only when clone_p set to true.
	(replace_dest_with_reg_in_rhs): Change new_reg type from int to rtx.
	(replace_dest_with_reg_ok_p): Change reg_num type from int to rtx;
	rename it to new_reg.  Adjust the code accordingly.
	(rhs_dest_regno): Change the return type from int to unsigned.
	Kill a spurious assert.
	(vinsn_writes_one_of_regs_p): Split REGS in used_regs and 
	unavailable_hard_regs.  Check both regsets.
	(mark_unavailable_hard_regs): Fix formatting.  Return early when 
	called for a pseudo.  If before reload, stop after processing 
	frame_regs and stack_regs.
	(choose_best_reg): Change return type to rtx.  Fix comment.
	Check that all original operations have the same mode for dest.
	(choose_best_pseudo_reg): New.
	(find_best_reg_for_rhs): Change return type to rtx.  Kill assert 
	for working only after reload.  Always pass unavailable_hard_regs
	to find_used_regs.  When before reload, don't fill hard_regs_used,
	call choose_best_pseudo_reg instead of choose_best_reg.
	(moveup_rhs): Don't move trapping insns through jumps.  Tidy.
	(sel_rank_for_schedule): Give preference to SCHED_GROUP_P insns.
	Fix comment.
	(fill_ready_list): Don't allow insns from a SCHED_GROUP to be 
	scheduled if their ancestors havn't been scheduled.
	(find_best_rhs_and_reg_that_fits): Change type of best_reg_found 
	to rtx*.  Adjust the code accordingly.  Assert that we choose 
	hard registers after reload.
	(fill_insns): Change type of best_reg to rtx; adjust the code.
	Adjust reg_rename_tick and regs_ever_live only when hard register
	is chosen.  Properly set FENCE_SCHED_NEXT.
	(generate_bookkeeping_insn): Pass true and reg when calling 
	replace_dest_with_reg_in_vinsn.
	(sel_global_init): Set no_new_pseudos to 0 before reload.
	(sel_global_finish): Set it back to 1.
	(gate_handle_sel_sched): Adjust for using flag_selective_scheduling2.
	(handle_sel_sched): Ditto.
	* opts.c (decode_options): Ditto.
	* sel-sched-ir.c (vinsn_separable_p): Don't allow ZERO_EXTEND insns 
	to be separable.
	(sel_finish_insn): Set MAY_TRAP_P.
	* sel-sched-ir.h (RHS_DEST): New macro.
	(bb_next_bb): New function.  Use it instead of bb->next_bb in sel-*.c.
	* sched-deps.c (extebd_deps_reg_info): New function.  
	(sched_analyze_reg): Use it.
	(sched_analyze_insn): Honor sched_emulate_haifa_p when processing 
	libcalls and postcalls.  
	* sched-deps.h (struct deps_insn_data): New bitfield may_trap.
	(MAY_TRAP): New accessor.
	* sched-rgn.c (gate_handle_sched): Honor flag_selective_scheduling.
	* passes.c (init_optimization_passes): Schedule pass_sel_sched 
	also before pass_sched.
	* config/ia64/ia64.c (ia64_reorg): Adjust for 
	flag_selective_scheduling2.

2007-02-28  Andrey Belevantsev  <abel@ispras.ru>

        * sel-sched.c (replace_in_vinsn_using_bitmask): Fix spacing.
        (compute_av_set): Instead of merging two rhs'es, remove one
        first, then add second.
        (fill_ready_list): Do not pipeline USEs and CLOBBERs that were
        already scheduled; bail out early when ready list doesn't contain
        other insns.  Fix thinko with '!'.
        (find_best_rhs_and_reg_that_fits): Kill 's' variable.  Call
        the reorder2 hook too, not only reorder.  Bail out early when
        can_issue_more is 0.  Move the call to variable_issue from ...
        (fill_insns): ... here.  When can_issue_more is 0, set need_stall
        to 1 and bail out.
        (sel_region_init): Initialize scheduling flags earlier.
        * sel-sched-ir.c (av_set_remove_rhs_with_insn): New function.
        * sel-sched-ir.h: Declare it.
        * sel-sched-dump.c (hard_regno_rename_ok): Mark the second
        parameter as unused too.
        * config/rs6000/rs6000.c: Include sched-deps.h.

2007-02-28  Dmitry Melnik  <dm@ispras.ru>

        * sel-sched.c (substitute_rhs): Kill outdated and commented assert.
        (remove_if_has_source): Put under #if 0.
        (un_substitute): Put the call to remove_if_has_source under #if 0.
        Add comment.
        (reg_alloc_tick): Rename to reg_rename_tick.
        (choose_best_reg): Don't modify it when original register is chosen.
        Don't set regs_ever_live.
        (moveup_set_rhs): Use av_set_lookup_other_equiv_rhs.
        (find_best_rhs_and_rtxhat_fits): Rename killing search&replace
        glitch.
        (fill_insns): Update reg_rename_tick here instead of choose_best_reg.
        (sel_region_finish): Change dumping flags.  Put extra parentheses.
        * sel-sched-ir.c (av_set_lookup_other_equiv_rhs): New function.
        * sel-sched-ir.h: Declare it.
        * config/ia64/ia64.opt (mflag_sel_sched_substitution): Define to 1.

2007-02-28  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>

        * config/ia64/ia64.c (ia64_override_options): Initialize
        align_loops and align_functions to 32 and 64, respectively.

2007-02-28  Maxim Kuvyrkov <mkuvyrkov@ispras.ru>

        * haifa-sched.c (schedule_block): Add debugging of insns and their
        costs.  Move debugging of the total scheduling time before updating
        head and tail.
        * sched-ebb.c (schedule_ebb): Kill dead code setting head and tail.
        * sched-dump.c (dump_insn_1): Do not print insn with a verbose flag
        set to one.

2007-01-31  Andrey Belevantsev  <abel@ispras.ru>
	    Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>
	    Dmitry Melnik  <dm@ispras.ru>

	* sel-sched.h, sel-sched-dump.h, sel-sched-ir.h, sel-sched.c,
	sel-sched-dump.c, sel-sched-ir.c, sched-deps.h, 
	sched-rgn.h: New files.

	* cfghooks.h (rtl_delete_block_not_barriers): New prototype.
	* cfgrtl.c (get_last_bb_insn_1): New forward declaration.
	(rtl_delete_block_1): New static function.  Move logic from ...
	(rtl_delete_block): ... here.
	(rtl_delete_block_not_barriers): New function.
	(get_last_bb_insn_1): New static function.  Move logic from ... 
	(get_last_bb_insn): .. here.
	* common.opt (fsel-sched-emulate-haifa, fsel-sched-bookkeeping,
	fsel-sched-pipelining, fsel-sched-pipelining-verbose,
	fsel-sched-renaming, fsel-sched-substitution, fsel-sched-verbose,
	fsel-sched-dump-cfg, fsel-sched-single-block-regions,
	fsel-sched-ebb-regions, fselective-scheduling): New flags.
	* ddg.c: Include sched-deps.h.
	* emit-rtl.c (add_insn, add_insn_after, add_insn_before): Call
	insn_added hook.
	* haifa-sched.c: Include sched-deps.h.
	(issue_rate, sched_verbose_param, note_list, dfa_state_size,
	ready_try, cycle_issued_insns, dfa_lookahead, max_luid): Make global.
	(sched_max_uid, common_sched_info, uid_to_luid, reg_weights,
	sched_bbs, sched_insns, ready): New global variables.
	(glat_start, glat_end): Initialize with NULL.
	(struct ready_list): Move declaration to sched-int.h.
	(ready_p, rgn_n_insns): Initialize.
	(current_sched_info_var): Change type to struct haifa_sched_info.
	(dep_cost_1): New static function.  Prototype it.  Move logic from ... 
	(insn_cost1): ... here. 
	(dep_cost): New static function.
	(priority): Adjust to work with selective scheduling.  Use 
	sched_deps_info instead of current_sched_info.  Process the corner
	case when all dependencies don't contribute to priority.
	(ready_lastpos, ready_element, ready_sort, reemit_notes, move_insn,
	find_fallthru_edge): Make global, remove static prototypes.
	(advance_state): New function.  Move logic from ... 
	(advance_one_cycle): ... here.
	(schedule_insn): Use sched_deps_info instead of current_sched_info.
	(add_to_note_list, concat_note_lists): New functions. 
	(unlink_other_notes): Move logic to add_to_note_list.  Handle
	selective scheduler.
	(rm_other_notes): Make static.  Adjust for selective scheduling.
	(remove_notes, restore_other_notes): New functions.
	(find_insn_reg_weight1): Rename to find_insn_reg_weight.
	(find_insn_reg_weight): Remove.
	(max_issue): Add privileged_n and state parameters.  Use them.
	Add comments.  Move debug dumping to choose_ready.
	(choose_ready): Remove lookahead variable, use dfa_lookahead.
	Remove more_issue, max_points.  Move the code to initialize 
	max_lookahead_tries to max_issue.
	(schedule_block): Remove rgn_n_insns1 parameter.  Don't allocate
	ready.  Adjust uses of move_insn.  Call restore_other_notes.
	(sched_init, sched_finish): Move Haifa-specific initialization/
	finalization to ... 
	(haifa_sched_init, haifa_sched_finish): ... respectively.  
	New functions.
	(extend_h_i_d, init_h_i_d): Remove.
	(haifa_local_init, haifa_local_finish, sched_local_init, 
	sched_local_finish, sched_insns_init, sched_insns_finish): 
	New functions.
	(extend_all, add_to_speculative_block, init_before_recovery,
	create_check_block_twin): Use haifa_insns_init 
	instead of extend_global.
	(sched_bbs_init): New function.  Move logic from ... 
	(extend_bb): ... here.
	(add_block): Use common_sched_info instead of current_sched_info.
	Use sched_bbs_init.  Add stricter asserts.
	(fix_jump_moves, move_block_after_check, attach_life_info1): 
	Use common_sched_info.
	(init_glat): Remove.
	(init_glat_1): Rename to glat_init_1.
	(glat_init, sched_bbs_finish): New functions.
	(check_sched_flags): Use sched_deps_info.
	(sched_luid_extend, sched_luid_init, sched_luid_finish, 
	sched_insn_extend, sched_insn_init, sched_insns_finish,
	sched_bb_extend, sched_bb_init, sched_bb_finish, 
	sched_data_update, sched_data_finish): New functions.
	* lists.c (remove_free_INSN_LIST_node): New function.
	* modulo-sched.c: Include sched-deps.h.
	(issue_rate): Guard with #if 0.
	(sms_sched_info): Rename to sms_common_sched_info.
	(sms_sched_deps_info, sms_sched_info): New.
	(sms_schedule): Initialize them.  Call haifa_sched_init/finish.
	* opts.c (decode_options).  If optimize >=2, turn on selective
	scheduling.
	* params.def (PARAM_SELSCHED_VERBOSE, PARAM_SELSCHED_DUMP_CFG_FLAGS,
	PARAM_SELSCHED_MAX_LOOKAHEAD, PARAM_ALLOW_START, PARAM_ALLOW_STOP,
	PARAM_ALLOW_P, PARAM_REGION_START, PARAM_REGION_STOP, 
	PARAM_REGION_P): New parameters.
	* passes.c (init_optimization_passes): Add sel_sched pass.
	* recog.c (validate_replace_rtx_part): New function.
	* recog.h: Prototype it.
	* rtl.h (remove_free_INSN_LIST_NODE, debug_bb_n_slim, debug_bb_slim,
	print_rtl_slim): Add prototypes.
	(struct rtl_hooks <insn_added>): New RTL hook.
	(insn_added): New macro.
	* rtlhooks-def.h (RTL_HOOKS_INSN_ADDED): Define to NULL.
	Add to RTL_HOOKS_INITIALIZER.
	* sched-deps.c: Include sched-deps.h.
	(sched_deps_info): New.  Update all relevant uses of current_sched_info
	to use it.
	(d_i_d, h_d_i_d): New variables.
	({true, output, anti, spec, forward}_dependency_cache): Initialize 
	to NULL.
	(cur_max_luid, cur_insn, can_start_lhs_rhs_p): New static variables.
	(add_or_update_back_dep_1): Initialize present_dep_type.
	(fixup_sched_groups): Use add_dependence instead of 
	maybe_add_or_update_back_dep.
	(haifa_start_insn, haifa_finish_insn, haifa_note_reg_set,
	haifa_note_reg_clobber, haifa_note_reg_use, haifa_note_mem_dep,
	haifa_note_dep): New functions implementing dependence hooks for 
	the Haifa scheduler.
	(note_reg_use, note_reg_set, note_reg_clobber, note_mem_dep,
	note_dep): New macros.
	(ds_to_dt): New function.
	(sched_analyze_reg, sched_analyze_1, sched_analyze_2, 
	sched_analyze_insn): Update to use dependency hooks infrastructure.
	(deps_analyze_insn): New function.  Move part of logic from ... 
	(sched_analyze): ... here.  Also move some logic to ... 
	(deps_start_bb): ... here.  New function.  
	(add_forw_dep, delete_forw_dep): Guard use of INSN_DEP_COUNT with
	!SEL_SCHED_P.
	(sched_deps_local_init): New function.  Move code from ... 
	(init_dependency_caches): ... here.  
	(sched_deps_local_finish): New function.  Move code from ... 
	(free_dependency_caches): ... here.
	(init_deps_global, finish_deps_global): Adjust for use with 
	selective scheduling.
	(add_dependence): Make static.  Adjust for use of dependency hooks.
	(maybe_add_or_update_back_dep): New.
	(add_or_update_back_dep, add_or_update_back_forw_dep, 
	add_back_forw_dep): Adjust to use with selective scheduling.
	* sched-ebb.c: Include sched-deps.h.
	(debug_ebb_dependencies): New function.
	(init_ready_list): Use it.
	(ebb_print_insn): Indicate when an insn starts a new cycle.
	(contributes_to_priority, compute_jump_reg_dependencies): Add 
	ebb_ prefix to function names.
	(ebb_sched_deps_info, ebb_common_sched_info): New variables.
	(schedule_ebb): Initialize them.  Use remove_notes instead of 
	rm_other_notes.  Use haifa_local_init/finish.  
	(schedule_ebbs): Use haifa_sched_init/finish.
	* sched-int.h: Include basic-block.h.
	(sched_verbose_param, common_sched_info, sched_emulate_haifa_p,
	glat_start, glat_end, sched_max_uid, sched_last_basic_block,
	uid_to_luid, max_luid, sched_blocks, sched_insns): New prototypes.
	Prototype new functions in haifa-sched.c, sched-ebb.c, 
	and sched-vis.c.
	(enum sched_pass_id_t): New enumeration.
	(struct common_sched_info_def): New structure.
	(INSN_NEED_LUID_P, SEL_SCHED_P, INSN_LUID): New macros.
	(deps_t): New typedef.
	(current_sched_info): Change type to ... 
	(struct haifa_sched_info): ... this.  New structure.  Move 
	Haifa-specific fields from struct sched_info.
	(struct haifa_insn_data): Move dependency-related fields to 
	struct deps_insn_data.
	(INSN_PRIORITY, INSN_PRIORITY_KNOWN): Change to use d_i_d.
	(INSN_COST): Adjust for selective scheduling.
	Move sched-deps.c functions to sched-deps.h.
	* sched-rgn.c: Include cselib.h and sched-deps.h.
	(region, candidate, BB_TO_BLOCK, EBB_{FIRST,LAST}_BB, IS_VALID,
	IS_SPECULATIVE): Move to sched-rgn.h.
	(nr_regions, rgn_table, rgn_bb_table, block_to_bb, containing_rgn,
	current_nr_blocks, current_blocks, candidate_table, extend_rgns): 
	Make global.
	(debug_region, bb_in_region_p, dump_region_dot, 
	dump_region_dot_file, sched_rgn_estimate_number_of_insns): 
	New functions.	
	(find_single_block_region): Add ebbs_p parameter.
	(too_large, find_rgns, new_ready): Use comon_sched_info.
	(compute_trg_info): Make global.  Move initialization of 
	candidate_table, bblst_table, and edgelst_table from ... 
	(init_ready_list): ... here.
	(free_trg_info): New function.
	(check_live, update_live, contributes_to_priority): Make global.
	(rgn_common_sched_info, rgn_sched_deps_info,
	rgn_after_reload_sched_deps_info): New variables.
	(region_sched_info): Change type to struct haifa_sched_info.
	(ref_counts): New static variable. 	
	(add_branch_dependences): Use maybe_add_or_update_back_dep instead
	of add_dependence.
	(deps_join): New function.
	(propagate_deps): Use it.  New function.
	(free_rgn_deps, compute_priorities): New function.
	(sched_rgn_init, sched_rgn_finish): New functions.
	(schedule_region): Use them.
	(sched_rgn_local_preinit, sched_rgn_local_init, 
	sched_rgn_local_free, sched_rgn_local_finish): New functions.
	* sched-vis.c (print_value, print_pattern): Make global.
	(dump_insn_slim_1, print_rtl_slim, debug_bb_slim, 
	debug_bb_n_slim): New functions.
	* target-def.h (TARGET_SCHED_ALLOC_SCHED_CONTEXT, 
	TARGET_SCHED_INIT_SCHED_CONTEXT, TARGET_SCHED_SET_SCHED_CONTEXT, 
	TARGET_SCHED_CLEAR_SCHED_CONTEXT, TARGET_SCHED_FREE_SCHED_CONTEXT):
	New target hooks.  Initialize them to 0.
	* target.h (struct gcc_target): Add them.
	* timevar.def (TV_SEL_SCHED): New timevar.
	* tree-pass.h (pass_sel_sched): Prototype it.
	
	* Makefile.in (OBJS-common): Add selective scheduling object
	files. 
	(sel-sched.o, sel-sched-dump.o, sel-sched-ir.o): New entries.
	(SEL_SCHED_IR_H, SEL_SCHED_DUMP_H): New entries.
	(SCHED_INT_H): Add dependency on sched-deps.h.
	(sched-deps.o): Add sched-deps.h.
	(sched-rgn.o): Add $(SCHED_RGN_H).

	* config/ia64/ia64.opt (msel-sched-renaming, 
	msel-sched-substitution): New target-dependent flags.
	* config/ia64/ia64.c: Include sched-deps.h and sel-sched.h.
	(TARGET_SCHED_ALLOC_SCHED_CONTEXT, TARGET_SCHED_INIT_SCHED_CONTEXT,
	TARGET_SCHED_SET_SCHED_CONTEXT, TARGET_SCHED_CLEAR_SCHED_CONTEXT,
	TARGET_SCHED_FREE_SCHED_CONTEXT): Define new target hooks.
	(struct _ia64_sched_context): New structure.
	(ia64_sched_context_t): New typedef.
	(ia64_alloc_sched_context, ia64_init_sched_context, 
	ia64_set_sched_context, ia64_clear_sched_context,
	ia64_free_sched_context): New static functions.  Prototype them.
	(ia64_override_options): Set global selective scheduling flags 
	according to target-dependent flags.
	(dfa_state_size): Remove static declaration.
	(ia64_sched_init): Remove checks for !SCHED_GROUP_P after reload.
	(ia64_dfa_new_cycle): Assert that last_scheduled_insn is set when
	a group barrier is needed.  Fix vertical spacing.  Guard the code
	doing state transition with last_scheduled_insn check.
	(ia64_variable_issue): Change use of current_sched_info to 
	sched_deps_info.  Update comment.
	(ia64_h_i_d_extended): Ditto.	
	(ia64_mode_to_int): Check common_sched_info instead of *flags.
	(ia64_set_sched_flags): Ditto.
	(bundling): When shifting TImode from unimportant insns, ignore 
	also group barriers.  Assert that best state is found before 
	the backward bundling pass.
	(ia64_sched_finish, final_emit_insn_group_barriers): Fix formatting.
	(ia64_reorg): Wen flag_selective_scheduling, run the selective 
	scheduling pass instead of schedule_ebbs.
	* config/ia64/t-ia64 (ia64.o): Add dependency on sel-sched.h.

	* doc/invoke.texi: Document new flags and parameters.
	* doc/tm.texi: Document new target hooks.
