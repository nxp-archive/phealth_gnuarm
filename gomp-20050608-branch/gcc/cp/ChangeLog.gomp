2005-10-19  Richard Henderson  <rth@redhat.com>

	* semantics.c (finish_omp_atomic): Revert to uses_template_parms.

2005-10-19  Richard Henderson  <rth@redhat.com>

	* semantics.c (finish_omp_clauses): Avoid DECL_THREAD_LOCAL_P
	on a PARM_DECL.  Remove some stub asserts guaranteed to fail.

2005-10-19  Richard Henderson  <rth@redhat.com>

	* cp-tree.h (OMP_ATOMIC_DEPENDENT_P, OMP_ATOMIC_CODE): New.
	(finish_omp_clauses, finish_omp_for, finish_omp_atomic): New.
	* parser.c (cp_parser_omp_clause_copyin): Remove.
	(cp_parser_omp_all_clauses): Use cp_parser_omp_var_list instead.
	Call finish_omp_clauses.
	(cp_parser_omp_clause_if): Don't do error checking here.
	(cp_parser_omp_clause_num_threads): Likewise.
	(cp_parser_omp_clause_schedule): Likewise.
	(cp_parser_omp_atomic): Use finish_omp_atomic.
	(cp_parser_omp_for_loop): Don't discard DECL_EXPR.  Don't decompose
	assignment statment here.  Use finish_omp_for.
	* pt.c (tsubst_omp_clauses): New.
	(tsubst_expr): Handle OMP_PARALLEL, OMP_FOR, OMP_SECTIONS,
	OMP_SINGLE, OMP_SECTION, OMP_CRITICAL, OMP_ATOMIC.
	* semantics.c (finish_omp_clauses): New.
	(begin_omp_parallel, finish_omp_parallel): Know Less about the
	internals of the stmt_list stack.
	(finish_omp_for, finish_omp_atomic): New.

2005-10-18  Jakub Jelinek  <jakub@redhat.com>

	* semantics.c (cxx_omp_predetermined_sharing): New function.
	* cp-tree.h (cxx_omp_predetermined_sharing): New prototype.
	* cp-objcp-common.h (LANG_HOOKS_OMP_PREDETERMINED_SHARING): Redefine.

2005-10-18  Richard Henderson  <rth@redhat.com>

	* parser.c (cp_parser_omp_single): Use make_node and accessors
	instead of build.

2005-10-17  Richard Henderson  <rth@redhat.com>

	* parser.c (cp_parser_omp_for_loop): Handle declarations.

2005-10-12  Richard Henderson  <rth@redhat.com>

	* Make-lang.in (CXX_C_OBJS): Add c-omp.o.
	* cp-tree.h (begin_omp_parallel, finish_omp_parallel): Declare.
	(finish_omp_threadprivate): Declare.
	* parser.c (struct cp_lexer): Add in_pragma.
	(cp_lexer_consume_token): Don't consume a PRAGMA_EOL when in_pragma.
	(cp_parser_skip_to_closing_parenthesis): Stop at PRAGMA_EOL.
	(cp_parser_skip_to_end_of_statement): Likewise.
	(cp_parser_skip_to_end_of_block_or_statement): Likewise.
	(cp_parser_skip_to_closing_brace): Likewise.
	(cp_parser_skip_to_pragma_eol): Reset in_pragma.
	(cp_parser_require_pragma_eol): New.
	(cp_parser_statement): Add in_compound argument; update all callers.
	Restart if a non-statement pragma seen outside a compound.
	(cp_parser_statement_seq_opt): Stop at PRAGMA_EOL.
	(cp_parser_declaration_seq_opt): Likewise.
	(cp_parser_member_specification_opt): Likewise.
	(cp_parser_function_definition_after_decl): Likewise.
	(cp_parser_skip_until_found): Likewise.
	(cp_parser_cache_group): Likewise.
	(enum pragma_omp_clause, cp_parser_omp_clause_name,
	check_no_duplicate_clause, cp_parser_omp_var_list_no_open, 
	cp_parser_omp_var_list, cp_parser_omp_clause_copyin,
	cp_parser_omp_clause_default, cp_parser_omp_clause_if,
	cp_parser_omp_clause_nowait, cp_parser_omp_clause_num_threads,
	cp_parser_omp_clause_ordered, cp_parser_omp_clause_reduction,
	cp_parser_omp_clause_schedule, cp_parser_omp_all_clauses,
	cp_parser_omp_structured_block, cp_parser_omp_atomic,
	cp_parser_omp_barrier, cp_parser_omp_critical, cp_parser_omp_flush,
	cp_parser_omp_for_loop, cp_parser_omp_for, cp_parser_omp_master,
	cp_parser_omp_ordered, cp_parser_omp_sections_scope, 
	cp_parser_omp_sections, cp_parser_omp_parallel, cp_parser_omp_single,
	cp_parser_omp_threadprivate, cp_parser_omp_construct): New.
	(cp_parser_pragma): Handle OpenMP pragmas.
	* semantics.c (finish_omp_threadprivate): New.
	(begin_omp_parallel, finish_omp_parallel): New.

2005-10-11  Richard Henderson  <rth@redhat.com>

	* parser.c (struct cp_token): Add pragma_kind.
	(eof_token): Initialize it.
	(cp_lexer_handle_pragma): Remove.
	(cp_parser_initial_pragma): New.
	(cp_lexer_new_main): Use it.
	(cp_lexer_get_preprocessor_token): Initialize pragma_kind.
	(cp_lexer_print_token): Don't handle CPP_PRAGMA.
	(cp_parser_skip_to_pragma_eol): New.
	(cp_parser_error): Use it.
	(pragma_lex): New.

2005-10-09  Richard Henderson  <rth@redhat.com>

	* lex.c (parse_strconst_pragma): Update for c_lex name change.
	(handle_pragma_java_exceptions): Likewise.
	* parser.c (cp_lexer_new_main): Likewise.

2005-10-06  Richard Henderson  <rth@redhat.com>

	* parser.c (cp_lexer_new_main): Comment out defer_pragmas.
	(cp_lexer_handle_pragma): Comment out cpp_handle_deferred_pragma.

2005-10-01  Richard Henderson  <rth@redhat.com>

	* name-lookup.c (lookup_name): Remove prefer_type argument.
	(lookup_name_prefer_type): New function.
	* name-lookup.h (lookup_name_prefer_type): Declare it.
	* decl.c (lookup_and_check_tag): Use it.
	* pt.c (tsubst_friend_class): Likewise. Update for lookup_name change.
	(lookup_template_class, tsubst_copy_and_build): Likewise.
